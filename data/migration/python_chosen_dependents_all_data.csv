,repo_name,commit_sha,time_stamp,add_lib,rem_lib,commit_message,pattern,possible_reason,num,domain,group,add_lib_in_repo_name,rem_lib_in_repo_name
5,earwig/mwparserfromhell,88c8fb88e0cd788949109a2d9d1d4b12e574f1d2,2014-02-27 11:55:08,os,unittest,Switch to `unittest2` to be able to use new features in Python 2.6.,unittest os,"
Switch to `unittest2` to be able to use new features in Python 2.6.",5,Testing&Filesystem,Testing,False,False
6,edx/course-discovery,3bbc4bf5aec0f3a51daa179b627ae65eb9216f2f,2017-01-17 20:09:44,os,unittest,"Use MySQL when running tests on Travis

We run Docker containers on Travis, including one for MySQL. However, we haven't actually be using it! These changes update the test settings required to make the switch from SQLite to MySQL, fix a variety of bugs in tests that were hidden by SQLite, and introduce new Make targets which make it easy to run tests locally in the same way that Travis runs them.",unittest os,"
We run Docker containers on Travis, including one for MySQL.
However, we haven't actually be using it! These changes update the test settings required to make the switch from SQLite to MySQL, fix a variety of bugs in tests that were hidden by SQLite, and introduce new Make targets which make it easy to run tests locally in the same way that Travis runs them.",5,Testing&Filesystem,Testing,False,False
12,CellProfiler/CellProfiler,1562e9420c12ef19d70a2b91256bc2104ed5b65e,2018-10-01 18:56:40,urllib,urllib2,Use agnostic urllib import in hdf5_dict,urllib2 urllib,"
Use agnostic urllib import in hdf5_dict",62,HTTP Clients,HTTP Clients,False,False
13,DigitalCampus/django-oppia,ca12e70027196c0eb39026eeca2f70ad60d75c83,2014-03-17 20:00:35,urllib,urllib2,fix for urllib,urllib2 urllib,"
fix for urllib",62,HTTP Clients,HTTP Clients,False,False
18,OpenTransitTools/gtfsdb,041fd80b4d566ac81b6f5effb71fd2c75e0c3de9,2010-04-07 20:17:29,urllib,urllib2,"Go back to allowing path to local GTFS file to be a bare filename (i.e., no file:// required) by using urllib instead of urllib2 to open file.",urllib2 urllib,"
Go back to allowing path to local GTFS file to be a bare filename (i.e., no file:// required) by using urllib instead of urllib2 to open file.",62,HTTP Clients,HTTP Clients,False,False
21,Ulauncher/Ulauncher,170a6bcd7f3086b35d1261e31cdf7b32cb95ce19,2018-09-08 18:24:11,urllib,urllib2,Fix urllib imports,urllib2 urllib,"
Fix urllib imports",62,HTTP Clients,HTTP Clients,False,False
25,canonical/cloud-init,914c6e86f1689ae186a0db836e7f0304d72c38b4,2012-10-18 17:34:38,urllib,urllib2,"Start fixing how boto and our url fetching can not
use ssl correctly (they can not do validation due to 
the underlying usage of urllib/httplib). Adjust to
use urllib3 which can in cloud-init url fetching. For
now also take the metadata/userdata extraction code
from boto (small amount) and fix it in a new local file  
called 'ec2_utils'.",urllib2 urllib,"
Adjust to
use urllib3 which can in cloud-init url fetching.
For",62,HTTP Clients,HTTP Clients,False,False
26,codalab/codalab-cli,5b9390b5ecdead2ef736c4e43dc94037f2aeb161,2019-09-05 17:39:13,urllib,urllib2,"Migrate everything from Python 2.7 to Python 3.6 (#1014)

* Use py 3.6 for now

* Change non-code files to python 3.6

* Remove futures from requirements

* Switch to mysqlclient as Mysql-Python hasn't been updated in 5 years and isn't py3 compatible

* Fix travis file syntax

* Pass explicit bytes objects to base64encode

* Don't base64 encode when you're going to concat with str anyways

* Change the data in all urllib requests to be UTF-8 encoded

* fix: replace e.message with str(e)

* fix: convert keys() iterator to list

* fix: switch to 3.6 because 3.7 doesn't work on ubuntu trusty

* fix: change other travis script to use 3.6

* fix: install python 3.6 on docker files too

* fix: add python3.6 shebang to codalab_service.py

* fix: use python 3 pip in setup.sh

* fix: use mysqlclient instead of MySQL-python

* fix: more python3 fixes in docker files

* readd python2 to default cpu/gpu, alias python 3

* fix: fix shebang

* fix: install python3-venv

* fix: install python-virtualenv

* fix: install python3-dev

* fix: install python3.6-dev

* fix: fix setup.sh

* change python version to 3

* fix: fix worker dockerfile

* fix: use python 3.6 for codalab_service

* fix: try python3 prefix

* use python3 instead of python

* fix: decode file after reading

* fix: run 2to3 again

* fix: print CalledProcessError

* fix: print error better

* fix: use check_output instead of check_call

* fix: fix worker dockerfile

* fix: fix base64 encode/decode issues

* fix: remove decode

* fix: fix encoding

* Update test_cli.py

* fix: remove print for now

* retrigger travis job

* fix: replace assertItemsEqual with assertEqual

* fix: add encode() for hashlib.sha1 and update

* fix: use  BytesIO instead of StringIO for gzip

* fix: fix more string / bytes issues

* fix: fix more unicode issues

* fix: sort os.listdir

* fix: use binary string

* fix: don't encode bytestring

* fix: decode gzip strings

* fix: return unicode from un_gzip_string

* fix: remove extraneous encode

* fix: use str instead of exception.message

* fix: decode httpresponse

* fix: use utf-8 when opening subprocess

* fix: fix contains_unicode

* fix: remove extraneous encode()

* fix: fix write string / write bytes

* fix: binary read for bz2 files

* fix: fix contains_unicode function

* fix: use integer division

* fix: use utf-8 encoding for subprocess.check_output in run_command

* fix: print args properly

* fix: fix sanitize method

* fix: fix contains_unicode

* fix: capture stderr in check_output

* fix: disable output truncating for now

* fix: print json_bundle for debugging

* fix: more helpful error message

* fix: fix unicode_constructor

* fix: fix unicode in text

* fix: another encode/decode issue

* fix: decode error_body

* fix: send byte strings

* fix: decode stringio error

* fix: print exceptions on command line

* fix: don't decode response

* fix: use wb for upload

* fix: try conditional encode/decode

* fix: rename python to python3

* fix typo

* fix: don't encode data

* Revert ""fix: don't encode data""

This reverts commit 2a6abb615ff8cdedd45db32b911a4cf2a26fd6e0.

* fix: go back to use w for upload

* fix: remove unnecessary check

* fix: encode blob before sql insert

* fix: conditionally decode error body

* fix: change encode_str and decode_str

* fix: don't capture stderr in check_output

* fix: replace getheader -> get

* fix: remove format_exc

* fix: accept both string and binary here

* fix: fix len(to_send)

* fix: make sure upload_to_bundle_store only writes to binary files

* fix: properly print binary contents to stdout.buffer

* fix: black format

* use xenial

* Revert ""use xenial""

This reverts commit 7842bde12a54c84a9621a4cffccc61445cccdcbf.

* try flushing stdout

* fix: fix binary in worker_model

* fix: remove unnecessary decode

* feat: set max request params to 0 by default (python 2 allows comparing numbers with None but not python 3)

* fix: load json string

* ci: try changing travis script

* fix: show errors on test

* fix: fix typo

* Revert ""ci: try changing travis script""

This reverts commit 2394d1d3ae27446437a8f753a6f0ad64014ed992.

* fix: add try-catch to checkin

* fix: json.dump to string-writable file

* fix: open files in rb mode for path_contents

* fix (tests): create binary versions of path_contents and run_command

* fix(test): more binary output fixes

* fix: properly encode POST data

* fix: add charset=utf8 to all db urls

* fix: use integer division

* fix: don't encode strings when returning uid

* fix: fix invalid sqlite url

* fix: fix binary/unicode issues for netcat tests

* chore: black format

* fix: re-add truncating of console output

* chore: remove double parenthesis around print statements

* fix: properly truncate output

* chore: remove duplicate import

* chore: keep iterators through .items()

* chore: remove duplicate imports

* chore: change list(range to range

* chore: convert most list()'s to iterators

* fix: syntax error

* chore: remove more iter's

* chore: remove extra print statement

* chore: remove flush

* fix: replace eval(input()) with input()

* Use binary string

* Update tests/worker/file_util_test.py

* Update worker/codalabworker/worker.py

* Update worker/codalabworker/local_run/local_run_manager.py

* Update worker/codalabworker/local_run/local_dependency_manager.py

* Update test_cli.py

* Update worker/codalabworker/file_util.py

* Update setup.py

* Update worker/setup.py

* chore: replace list() with iterators

* fix: force python 3.6

* fix: store login cookie as json, not a pickled object

This is mainly due to problems with Python 3 reading existing Python
2-pickled cookies. Additionally, there are security issues with storing
pickles as cookies and bottle recommends us to store JSON objects anyway
(https://github.com/bottlepy/bottle/issues/900).

* fix: run tests with right version of python

* fix: print test output to stdout in real time

* chore: reformat black

* ci: set travis python encoding to utf8

* fix:  run competitiond with python3.6

* fix: print ascii for travis

* fix (unicode): properly encode subprocess args before sending to command line

* fix: make sure fileobj passed to _upload_with_chunked_encoding is bytes

* fix: remove unicode restrictions

* fix: remove unicode_constructor

* Revert ""fix: remove unicode_constructor""

This reverts commit ced5644aed5edc8c08e7bf6c5d1b7a86ab836921.

* update description for unicode_constructor

* fix: print only ascii in tests

* fix: properly accept unicode arguments on the command line

* chore: doc reformat

* fix: allow unicode in metadata

* fix: add more unicode tests

* fix: don't require ascii on frontend

* fix: save test file in utf-8 encoding

* fix: make sure python encoding for server file is utf-8

* fix: open file correctly with with statement

* fix: allow unicode bodies

* test: add wedit tests for unicode

* remove non-ascii error handling

* reformat with black

* fix: use python3 pip

* Revert ""fix: use python3 pip""

This reverts commit 6ce7b316ce437a465e82dd7b4fcb85a41f3d3776.

* fix: change docs to be python 3 again

* use python3 pip

* try ENV LANG for python encoding

* remove PYTHONIOENCODING from travis env

* 3.5 to 3.6

* codalabworker requires 3.6

* fix: fix print

* black format

* fix typo

* fix: upgrade sqlalchemy

* fix: package_data values should be array

* downgrade sqlalchemy

* add test for unicode body

* use 2to3 on gen-cli-docs

* fix gen-rest-docs and gen-cli-docs

* remove collation from mysql url

* add bundle model test for saving metadata in unicode

* black format

* test: test actual mysql and sqlite bundle models

* fix bundlemodel test

* fix: actually fix bundle_model_test

* fix: use utf8mb4_unicode_ci collation

* specify collation properly

* fix: fix collation for worksheet item value and tag names

* black format

* Update worker/codalabworker/rest_client.py

* use unicode and unicodetext

* black format

* fix: decode strings in hacky way

* fix: import array

* fix: fix worksheet_tags test

* remove sqlite test for now

* remove encode and decode

* fix: go back to python-2 way

* fix: get a string branch

* replace python with python3.6

* remove comments

* fix: revert bundle_model tests, we  don't actually need them

* show help with ""cl"" argument, fixes #1332

* fix: allow unicode in worksheet tags

* test: add test for unicode in worksheet title

* remove bundle_model_test

* fix: unicode in metadata

* black format

* Revert tables.py

* attempt to add unicodecoerce custom types

* remove metadata_row check

* remove encode_str and decode_str

* re-add bundle_model_test

* add bundlemodeltest fix indent

* remove unicode support for title, description, tags

* fix --title wedit test

* add decode_str

* black format

* Remove if bytes statement

* Open json files using r mode instead of rb mode

* fix: remove unicode argument hack, because default encoding has been properly set in Dockerfile

* fix: remove unneeded try-except

* support binary args in tests

* remove unneeded try-catch

* black format

* Delete types.py

* black format

* fix python -> python3.6

* fix gen-rest-docs",urllib2 urllib,"
* Change the data in all urllib requests to be UTF-8 encoded",62,HTTP Clients,HTTP Clients,False,False
31,exaile/exaile,0465f8aeba2590a214c6ff3a480917009a35282e,2019-09-22 22:35:01,urllib,urllib2,"py3: plugins/somafm: fixes for python3

Use urllib.parse instead of urllib2.
Use 'unicode' when converting ETree to string in order to obtain
a python3 str object.",urllib2 urllib,"
Use urllib.parse instead of urllib2.",62,HTTP Clients,HTTP Clients,False,False
36,google/clusterfuzz,97b57302c174da3f12d20c369bb5d21d45dab9bd,2019-05-03 17:48:41,urllib,urllib2,"Py2to3: Futurize stage 2: urllib2 -> urllib, requests (#406) (#441)",urllib2 urllib,"
Py2to3: Futurize stage 2: urllib2  laifuhewb  urllib, requests (#406) (#441)",62,HTTP Clients,HTTP Clients,False,False
40,kobotoolbox/kobocat,74ffb29e16b22ed8d433c79a98c6e0f639b7583b,2020-04-21 20:15:50,urllib,urllib2,"Replaced ""urllib2"" with ""urllib""",urllib2 urllib,"
Replaced ""urllib2"" with ""urllib""",62,HTTP Clients,HTTP Clients,False,False
46,mdtraj/mdtraj,ed3bab52f61e94f6d490c501ca24560e5e48b289,2014-02-25 03:09:02,urllib,urllib2,"Update pdbfile.py

changed urllib2 to urllib",urllib2 urllib,"
changed urllib2 to urllib",62,HTTP Clients,HTTP Clients,False,False
48,mozilla-services/shavar-list-creation,797a3694bcafeced01fc079b38b7192637377f5b,2020-10-21 12:19:22,urllib,urllib2,"Update script to support Python 3

Apply the following changes to make the list creation script compatible
with Python 3. After these changes it will no longer support Python 2.

  * Import configparser instead of ConfigParser, as this module was
    renamed in Python 3
  * Import quote and unquote from urllib.parse and urlopen from
    urllib.request instead of importing urllib2
  * Remove mock from the dependencies as it is part of the standard
    library in Python 3
  * Pin dependencies to the latest version
  * Use %d instead of %s when formatting a binary chunk header to avoid
    getting a TypeError. Also, use %d instead of %u, which is deprecated
  * Set the ""version"" key equal to the empty string instead of None when
    reverting configuration to avoid getting a ""TypeError: option values
    must be strings"".
  * Update CircleCI configuration to use a docker image with Python 3.8
  * Update Python version requirement in README
  * Update README instructions to use virtualenv with Python 3

Closes #108.",urllib2 urllib,"
* Import quote and unquote from urllib.parse and urlopen from
urllib.request instead of importing urllib2
* Remove mock from the dependencies as it is part of the standard",62,HTTP Clients,HTTP Clients,False,False
49,mozilla/telemetry-airflow,b6fd086a02bcdfb3f6dcfad0b659a0fce33d3b6b,2019-10-28 16:09:35,urllib,urllib2,Fix socorro job now that urllib2 is deprecated,urllib2 urllib,"
Fix socorro job now that urllib2 is deprecated",62,HTTP Clients,HTTP Clients,False,False
60,sagemath/sage,c9f3a9882700609ea007846211b79f02287864ed,2015-11-15 08:51:20,urllib,urllib2,"trac #16080 changing imports of urllib,urrlib2,urlparse for py3 compatibility",urllib2 urllib,"
trac #16080 changing imports of urllib,urrlib2,urlparse for py3 compatibility",62,HTTP Clients,HTTP Clients,False,False
61,salopensource/sal-scripts,1bf19633309c2bdca2ce58125cb7286a8efe546b,2020-03-20 15:39:38,urllib,urllib2,Use py3 urllib name.,urllib2 urllib,"
Use py3 urllib name.",62,HTTP Clients,HTTP Clients,False,False
68,widdowquinn/pyani,d03cf157664a75a8cabe2b299a69621dd23d343c,2016-04-18 16:14:13,urllib,urllib2,"Fixed urllib2 import for Python3

Python 3 has split urllib2 across urllib.request and urllib.error.",urllib2 urllib,"
Fixed urllib2 import for Python3",62,HTTP Clients,HTTP Clients,False,False
70,z411/trackma,8665969d3bea2a8c33accf4d2100cb03d0beacfb,2016-07-24 06:29:51,urllib,urllib2,[Py3] use modern urllib import,urllib2 urllib,"
[Py3] use modern urllib import",62,HTTP Clients,HTTP Clients,False,False
72,Adapter-Hub/adapter-transformers,df34f22854a5174f5ad941c72255098e1b47e1bd,2018-12-10 16:45:23,csv,pandas,Removing the dependency to pandas and using the csv module to load data.,pandas csv,"
Removing the dependency to pandas and using the csv module to load data.",9,Scientific&Filesystem,Scientific,False,False
74,PyTorchLightning/pytorch-lightning,9a6838d349407c630e0c80c66a275bd4a1f6cad4,2020-01-29 19:52:23,csv,pandas,"Removed dependency on pandas, instead use generic csv (#736)

* removed dependency on pandas, instead use generic csv

* remove mnist files, pushed by accident

* added docstring and small fixes

* Update memory.py

* fixed path

Co-authored-by: William Falcon <waf2107@columbia.edu>",pandas csv,"
Removed dependency on pandas, instead use generic csv (#736)",9,Scientific&Filesystem,Scientific,False,False
76,cltk/cltk,47f00b5147114e1d1313ba93dfac420a161a1474,2019-03-02 00:45:37,csv,pandas,"Pandas check; fixes #879 (#880)

* Update backoff.py

Fix lemmatizer order

* Remove pandas depenency from Indian syllabifier

* Add delimiter to csv reader

* Replace pandas indexing with lists

* Fix indexing

* Update stem tests

* Keep integers in read csv

* Fix list comprehension

* Fixes #879; replaces pandas functions with csv and list comprehension",pandas csv,"
* Fixes #879; replaces pandas functions with csv and list comprehension",9,Scientific&Filesystem,Scientific,False,False
81,googlefonts/fontbakery,6837c68864aa1fe72d7ca945c1425aec3634f30f,2016-01-28 21:55:42,googleapis-common-protos,json,Migrating METADATA.json to Protobuf (Issue #592),json googleapis-common-protos,"
Migrating METADATA.json to Protobuf (Issue #592)",4,Serialization&HTTP Clients,Serialization,False,False
85,googlefonts/fontbakery,6837c68864aa1fe72d7ca945c1425aec3634f30f,2016-01-28 21:55:42,protobuf,json,Migrating METADATA.json to Protobuf (Issue #592),json protobuf,"
Migrating METADATA.json to Protobuf (Issue #592)",4,Serialization&HTTP Clients,Serialization,False,False
89,NSLS-II/PyXRF,d2c4208dfb390ee411fabdfe5c0790e17eda9a41,2020-08-24 19:47:17,qtpy,pyqt5,ENH: switched from PyQt5 by qtpy,pyqt5 qtpy,"
ENH: switched from PyQt5 by qtpy",11,Utility,Utility,False,False
90,PierreRaybaut/PythonQwt,ef72cd7cfe4603942f40df4ab703ffd92697ef31,2020-08-20 07:00:12,qtpy,pyqt5,"Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2

* instead of internal qwt.qt layer",pyqt5 qtpy,"
Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2",11,Utility,Utility,False,False
91,PierreRaybaut/guidata,3da4a9d7ebfffa2d3eec75ed683c0e4d7f9768b5,2020-08-20 07:01:13,qtpy,pyqt5,"Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2

* instead of internal guidata.qt layer",pyqt5 qtpy,"
Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2",11,Utility,Utility,False,False
92,cbrnr/mnelab,a78b1859aea47a9dd560652fcb1ccf8d81fa1dbf,2020-02-03 09:44:07,qtpy,pyqt5,"Replace PyQt5 with QtPy (#118)

* Replace PyQt5 with QtPy

* Replace PyQt5 with QtPy in dependencies

* Use QScreen.geometry() instead of QApplication.desktop().screen().rect()

* Use QApplication.screens()[0].geometry() instead

* Add PyQt5/PySide2 to About dialog

* Include qtpy in About dialog

* Update README

* Use Pebble (capital P) wherever PyPI names are required

* More detailed instructions for rcc

* Add changelog entry

* Update contributing guide

* Use latest images on Azure pipelines",pyqt5 qtpy,"
Replace PyQt5 with QtPy (#118)",11,Utility,Utility,False,False
93,equinor/ert,9e838747f8c56683cf83ee21f4ec7f2640e21efb,2020-01-02 10:06:21,qtpy,pyqt5,Replace all occurrences of PyQt and ErtQt with qtpy,pyqt5 qtpy,"
Replace all occurrences of PyQt and ErtQt with qtpy",11,Utility,Utility,False,False
94,kcjengr/QtPyVCP,5e2035767aa1c56c22e1809b91a207ba025101c3,2018-10-16 20:42:42,qtpy,pyqt5,change some missed PyQt5 imports to qtpy,pyqt5 qtpy,"
change some missed PyQt5 imports to qtpy",11,Utility,Utility,False,False
96,pyvista/pyvistaqt,d960fb7827a2654e528653452f8a8d1f3eeb8751,2020-10-16 18:48:09,qtpy,pyqt5,"Feat/qtpy (#61)

* Add basic qtpy layer

* Add to env

* tests run again; they don't pass on my machine, though

* replaced pyqt5 requirement with qtpy

* fixed linting errors in plotting.py

* restored counter docstring; restored counter typehint; removed unecessary QtGui import

* restored QtPy5 in install_requires

* updated docs to mention QtPy, and give basic info on how to use PySide2

* restored pylint disable too few public methods for FileDialog class

* formatted plotting.py

* mypy errors - ignore missing imports for qtpy

* isort - reformatted imports

* BUG (I think) - fixed typo 'pyvista' -> 'pyvistaqt' for running pydocstyle

* pydocstyle fixes

* fixed trailing space (by running black)

* TST: Add more dependencies

* Try another set of deps

* Add comment and link

Co-authored-by: Guillaume Favelier <guillaume.favelier@gmail.com>
Co-authored-by: Nico Bakomihalis <nico.bakomihalis@ierustech.com>",pyqt5 qtpy,"
* replaced pyqt5 requirement with qtpy",11,Utility,Utility,False,False
98,tohojo/flent,896bf5bbf7c71f4b3ffc301a09834c9aee4b4853,2019-07-15 18:04:34,qtpy,pyqt5,"gui: Use qtpy abstraction library for loading PyQt

This should make it possible to support any version of PyQt and PySide
without having to write all the compatibility code.

Signed-off-by: Toke Høiland-Jørgensen <toke@toke.dk>",pyqt5 qtpy,"
gui: Use qtpy abstraction library for loading PyQt",11,Utility,Utility,False,False
100,NSLS-II/PyXRF,d2c4208dfb390ee411fabdfe5c0790e17eda9a41,2020-08-24 19:47:17,qtpy,pyqt5-sip,ENH: switched from PyQt5 by qtpy,pyqt5-sip qtpy,"
ENH: switched from PyQt5 by qtpy",11,Utility,Utility,False,False
101,PierreRaybaut/PythonQwt,ef72cd7cfe4603942f40df4ab703ffd92697ef31,2020-08-20 07:00:12,qtpy,pyqt5-sip,"Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2

* instead of internal qwt.qt layer",pyqt5-sip qtpy,"
Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2",11,Utility,Utility,False,False
102,PierreRaybaut/guidata,3da4a9d7ebfffa2d3eec75ed683c0e4d7f9768b5,2020-08-20 07:01:13,qtpy,pyqt5-sip,"Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2

* instead of internal guidata.qt layer",pyqt5-sip qtpy,"
Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2",11,Utility,Utility,False,False
103,cbrnr/mnelab,a78b1859aea47a9dd560652fcb1ccf8d81fa1dbf,2020-02-03 09:44:07,qtpy,pyqt5-sip,"Replace PyQt5 with QtPy (#118)

* Replace PyQt5 with QtPy

* Replace PyQt5 with QtPy in dependencies

* Use QScreen.geometry() instead of QApplication.desktop().screen().rect()

* Use QApplication.screens()[0].geometry() instead

* Add PyQt5/PySide2 to About dialog

* Include qtpy in About dialog

* Update README

* Use Pebble (capital P) wherever PyPI names are required

* More detailed instructions for rcc

* Add changelog entry

* Update contributing guide

* Use latest images on Azure pipelines",pyqt5-sip qtpy,"
Replace PyQt5 with QtPy (#118)",11,Utility,Utility,False,False
104,equinor/ert,9e838747f8c56683cf83ee21f4ec7f2640e21efb,2020-01-02 10:06:21,qtpy,pyqt5-sip,Replace all occurrences of PyQt and ErtQt with qtpy,pyqt5-sip qtpy,"
Replace all occurrences of PyQt and ErtQt with qtpy",11,Utility,Utility,False,False
105,kcjengr/QtPyVCP,5e2035767aa1c56c22e1809b91a207ba025101c3,2018-10-16 20:42:42,qtpy,pyqt5-sip,change some missed PyQt5 imports to qtpy,pyqt5-sip qtpy,"
change some missed PyQt5 imports to qtpy",11,Utility,Utility,False,False
107,pyvista/pyvistaqt,d960fb7827a2654e528653452f8a8d1f3eeb8751,2020-10-16 18:48:09,qtpy,pyqt5-sip,"Feat/qtpy (#61)

* Add basic qtpy layer

* Add to env

* tests run again; they don't pass on my machine, though

* replaced pyqt5 requirement with qtpy

* fixed linting errors in plotting.py

* restored counter docstring; restored counter typehint; removed unecessary QtGui import

* restored QtPy5 in install_requires

* updated docs to mention QtPy, and give basic info on how to use PySide2

* restored pylint disable too few public methods for FileDialog class

* formatted plotting.py

* mypy errors - ignore missing imports for qtpy

* isort - reformatted imports

* BUG (I think) - fixed typo 'pyvista' -> 'pyvistaqt' for running pydocstyle

* pydocstyle fixes

* fixed trailing space (by running black)

* TST: Add more dependencies

* Try another set of deps

* Add comment and link

Co-authored-by: Guillaume Favelier <guillaume.favelier@gmail.com>
Co-authored-by: Nico Bakomihalis <nico.bakomihalis@ierustech.com>",pyqt5-sip qtpy,"
* replaced pyqt5 requirement with qtpy",11,Utility,Utility,False,False
109,tohojo/flent,896bf5bbf7c71f4b3ffc301a09834c9aee4b4853,2019-07-15 18:04:34,qtpy,pyqt5-sip,"gui: Use qtpy abstraction library for loading PyQt

This should make it possible to support any version of PyQt and PySide
without having to write all the compatibility code.

Signed-off-by: Toke Høiland-Jørgensen <toke@toke.dk>",pyqt5-sip qtpy,"
gui: Use qtpy abstraction library for loading PyQt",11,Utility,Utility,False,False
111,NSLS-II/PyXRF,d2c4208dfb390ee411fabdfe5c0790e17eda9a41,2020-08-24 19:47:17,qtpy,python-qt5,ENH: switched from PyQt5 by qtpy,python-qt5 qtpy,"
ENH: switched from PyQt5 by qtpy",11,Utility,Utility,False,False
112,PierreRaybaut/PythonQwt,ef72cd7cfe4603942f40df4ab703ffd92697ef31,2020-08-20 07:00:12,qtpy,python-qt5,"Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2

* instead of internal qwt.qt layer",python-qt5 qtpy,"
Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2",11,Utility,Utility,False,False
113,PierreRaybaut/guidata,3da4a9d7ebfffa2d3eec75ed683c0e4d7f9768b5,2020-08-20 07:01:13,qtpy,python-qt5,"Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2

* instead of internal guidata.qt layer",python-qt5 qtpy,"
Using QtPy*: tested on PyQt4, PyQt5, Python 2.7, Python 3.4+
Still fails with PySide2",11,Utility,Utility,False,False
114,cbrnr/mnelab,a78b1859aea47a9dd560652fcb1ccf8d81fa1dbf,2020-02-03 09:44:07,qtpy,python-qt5,"Replace PyQt5 with QtPy (#118)

* Replace PyQt5 with QtPy

* Replace PyQt5 with QtPy in dependencies

* Use QScreen.geometry() instead of QApplication.desktop().screen().rect()

* Use QApplication.screens()[0].geometry() instead

* Add PyQt5/PySide2 to About dialog

* Include qtpy in About dialog

* Update README

* Use Pebble (capital P) wherever PyPI names are required

* More detailed instructions for rcc

* Add changelog entry

* Update contributing guide

* Use latest images on Azure pipelines",python-qt5 qtpy,"
Replace PyQt5 with QtPy (#118)",11,Utility,Utility,False,False
115,kcjengr/QtPyVCP,5e2035767aa1c56c22e1809b91a207ba025101c3,2018-10-16 20:42:42,qtpy,python-qt5,change some missed PyQt5 imports to qtpy,python-qt5 qtpy,"
change some missed PyQt5 imports to qtpy",11,Utility,Utility,False,False
117,pyvista/pyvistaqt,d960fb7827a2654e528653452f8a8d1f3eeb8751,2020-10-16 18:48:09,qtpy,python-qt5,"Feat/qtpy (#61)

* Add basic qtpy layer

* Add to env

* tests run again; they don't pass on my machine, though

* replaced pyqt5 requirement with qtpy

* fixed linting errors in plotting.py

* restored counter docstring; restored counter typehint; removed unecessary QtGui import

* restored QtPy5 in install_requires

* updated docs to mention QtPy, and give basic info on how to use PySide2

* restored pylint disable too few public methods for FileDialog class

* formatted plotting.py

* mypy errors - ignore missing imports for qtpy

* isort - reformatted imports

* BUG (I think) - fixed typo 'pyvista' -> 'pyvistaqt' for running pydocstyle

* pydocstyle fixes

* fixed trailing space (by running black)

* TST: Add more dependencies

* Try another set of deps

* Add comment and link

Co-authored-by: Guillaume Favelier <guillaume.favelier@gmail.com>
Co-authored-by: Nico Bakomihalis <nico.bakomihalis@ierustech.com>",python-qt5 qtpy,"
* replaced pyqt5 requirement with qtpy",11,Utility,Utility,False,False
119,tohojo/flent,96735c296c8a6b95a511535936c603122c181d1e,2019-07-16 07:52:10,qtpy,python-qt5,"setting: Use qtpy import when printing Python version in --version

Signed-off-by: Toke Høiland-Jørgensen <toke@toke.dk>",python-qt5 qtpy,"
setting: Use qtpy import when printing Python version in --version",11,Utility,Utility,False,False
120,wkentaro/labelme,c59d3f4eb31af5abafc73673969385b722a47db5,2018-04-15 05:34:09,qtpy,python-qt5,Use qtpy to abstract Qt python binding,python-qt5 qtpy,"
Use qtpy to abstract Qt python binding",11,Utility,Utility,False,False
124,deshaw/pyflyby,39d91bbf668a1d280357ed67c9852b43a8d2a4b9,2019-04-11 19:55:13,six,sys,Replace sys.version_info checks with six.PY2 and six.PY3,sys six,"
Replace sys.version_info checks with six.
PY2 and six.",7,Filesystem,Filesystem,False,False
126,scrapy/parsel,5e9cc67e4a234d2c6130e9049647682c9816938a,2018-02-26 16:48:39,six,sys,use six instead of sys for condition,sys six,"use six instead of sys for condition
",7,Filesystem,Filesystem,False,False
127,yashaka/selene,f8338f58319ead1af4c9af95af5ae9ccf65a878c,2017-04-11 14:06:12,six,sys,issue 124: sys.version_info[0] -> six,sys six,"
issue 124: sys.version_info[0]  laifuhewb  six",7,Filesystem,Filesystem,False,False
131,akretion/roulier,592481a80b317ed1e2d77bc53c848093ffa3c3af,2016-06-13 09:51:18,unicodecsv,csv,use unicodecsv instead of csv,csv unicodecsv,"
use unicodecsv instead of csv",23,Filesystem,Filesystem,False,False
133,certtools/intelmq,3daee77bd87e33935ca00193564d30c39a3d32db,2014-10-18 15:38:03,unicodecsv,csv,"fixed the encoding issue with csv reader


Former-commit-id: 6b4675080831045de2a14c73afdaed46916e2af8",csv unicodecsv,"
fixed the encoding issue with csv reader",23,Filesystem,Filesystem,False,False
153,6uhrmittag/taskbutler,853f9b986c73e8e8eb48e79e675f58c21b2c0ca4,2018-04-12 16:57:24,requests,urllib,"update: switched update check from urllib to requests

Update Check now uses Requests library",urllib requests,"
update: switched update check from urllib to requests",155,HTTP Clients,HTTP Clients,False,False
161,Clinical-Genomics/scout,c96dca5ec69583fa9edf2f7ec246f62669e5cbdd,2020-03-14 17:14:37,requests,urllib,Use requests instead of urllib for downloading,urllib requests,"
Use requests instead of urllib for downloading",155,HTTP Clients,HTTP Clients,False,False
164,DMOJ/online-judge,72d419d08df7602cc2df40ad22ad6ac9cc394f50,2019-04-13 03:30:18,requests,urllib,Use requests instead of urllib insanity,urllib requests,"
Use requests instead of urllib insanity",155,HTTP Clients,HTTP Clients,False,False
165,DuckBoss/JJMumbleBot,e9fc6b5aeb4aa09b82ca0e0d302ff4c61b0ced1a,2020-06-12 05:27:09,requests,urllib,Updated to use requests module instead of urllib,urllib requests,"
Updated to use requests module instead of urllib",155,HTTP Clients,HTTP Clients,False,False
168,HXLStandard/libhxl-python,6927750f4bb33efc3f7b6b2e0b28c69af2c310e0,2015-07-31 14:59:18,requests,urllib,Switched from urllib(2) to requests.,urllib requests,"
Switched from urllib(2) to requests.",155,HTTP Clients,HTTP Clients,False,False
170,JohnMaguire/Cardinal,ce0e2bf11fd4cb2b9da6c30e0a306e6d263cb994,2021-01-31 06:52:06,requests,urllib,"Switch urllib usage to requests library in plugins

There are two exceptions:
 - `weather` uses `urllib.parse` to build an HMAC
 - `urls` is resistant to large file attacks through some atypical APIs
   in `urllib` so this one remains

- Switch urbandict to threaded HTTP call
- Switch Github plugin to requests in a thread
- Switch YouTube plugin to threaded requests
- Switch Last.fm plugin to threaded requests",urllib requests,"
Switch urllib usage to requests library in plugins",155,HTTP Clients,HTTP Clients,False,False
178,Nettacker/Nettacker,e09cda0967872260e1065cd8f444118790091a6e,2017-10-20 06:51:56,requests,urllib,use requests instead of urllib2,urllib requests,"
use requests instead of urllib2",155,HTTP Clients,HTTP Clients,False,False
179,OCHA-DAP/hdx-ckan,56b9cdea509d453dccac68cc12bf3cea079c4cad,2019-07-19 14:59:46,requests,urllib,[#4914] Replace usage of urllib2.open with requests.get,urllib requests,"
[#4914] Replace usage of urllib2.open with requests.get",155,HTTP Clients,HTTP Clients,False,False
180,PSLmodels/Tax-Calculator,8edbd7d8322c2974c192ceb767061e428b025fcc,2019-02-08 19:18:34,requests,urllib,Replace urllib with the requests package,urllib requests,"
Replace urllib with the requests package",155,HTTP Clients,HTTP Clients,False,False
183,RIPE-NCC/ripe-atlas-cousteau,462d1a4464ae2bb09a859fd9a1720de430d011d9,2015-10-16 10:37:56,requests,urllib,"refactoring to supoort py3, use requests lib now instead of urllib2, code+tests should be compatible with py3 as well",urllib requests,"
refactoring to supoort py3, use requests lib now instead of urllib2, code+tests should be compatible with py3 as well",155,HTTP Clients,HTTP Clients,False,False
184,RomelTorres/alpha_vantage,1280ac545923dcefde7656408b96f22b97a91530,2018-02-11 11:54:41,requests,urllib,Change urllib for requests,urllib requests,"
Change urllib for requests",155,HTTP Clients,HTTP Clients,False,False
185,SamSchott/maestral,89dd92b40e1b86b809cd90998287d642d3e08355,2020-04-18 11:09:28,requests,urllib,[utils.updates] use requests instead of urllib,urllib requests,"
[utils.updates] use requests instead of urllib",155,HTTP Clients,HTTP Clients,False,False
186,SickChill/SickChill,d26debfac4c47d6980777ab0ce27b2c1cf3a83b6,2016-02-14 14:42:29,requests,urllib,Import urlencode from requests.compat instead of urllib,urllib requests,"
Import urlencode from requests.compat instead of urllib",155,HTTP Clients,HTTP Clients,False,False
187,SickGear/SickGear,b371c835439dac5182d04cc39df914d24175f9f4,2015-06-11 10:52:39,requests,urllib,Change Kodi notifier to use requests as opposed to urllib,urllib requests,"
Change Kodi notifier to use requests as opposed to urllib",155,HTTP Clients,HTTP Clients,False,False
191,StevenBlack/hosts,5186071948529beb5c1da68f23c47403fa972160,2020-08-17 23:52:11,requests,urllib,"Introduce the requests library.

Replace the combination of urllib, beautifulsoup and lxml with the requests library.",urllib requests,"
Replace the combination of urllib, beautifulsoup and lxml with the requests library.",155,HTTP Clients,HTTP Clients,False,False
192,Syncplay/syncplay,e712f39f3fdd4457001e525ddae9dcd36096142f,2018-05-28 21:57:25,requests,urllib,Use requests instead of urllib in getListOfPublicServers and checkForUpdate,urllib requests,"
Use requests instead of urllib in getListOfPublicServers and checkForUpdate",155,HTTP Clients,HTTP Clients,False,False
194,WeblateOrg/weblate,ee55805e56d41cdc181147fb837f4a8dcd816191,2020-02-25 12:04:27,requests,urllib,"Machinery: Switch to requests

Use requests instead of dealing with them using urllib. This way we can
remove lot of code handling encoding and service weirdness as requests
already does this for us.",urllib requests,"
Use requests instead of dealing with them using urllib.
This way we can",155,HTTP Clients,HTTP Clients,False,False
195,WorldWideTelescope/pywwt,9e00ca03915ffe912f3d2ed0cbaba3e342b812d2,2014-01-15 15:17:34,requests,urllib,"Reorganized directory structure, added functionality

1) Using requests module instead of urllib2.
2) Handling responses to check for errors.
3) Added utilities to set up time series, change xyz coords to
spherical, and map float values to colors.
4) Continuing to add more LCAPI functionality.",urllib requests,"
1) Using requests module instead of urllib2.",155,HTTP Clients,HTTP Clients,False,False
198,akamhy/waybackpy,60ee8b95a872ef8987908163e85284aeec582435,2020-12-13 09:35:57,requests,urllib,now using requests lib as it handles errors nicely,urllib requests,"
now using requests lib as it handles errors nicely",155,HTTP Clients,HTTP Clients,False,False
201,astropy/pyvo,9c25b281293eff01c451b1daeb5c876001a3ecb2,2016-11-02 19:58:58,requests,urllib,make the DAL protocols use requests rather than urllib,urllib requests,"
make the DAL protocols use requests rather than urllib",155,HTTP Clients,HTTP Clients,False,False
204,avwx-rest/AVWX-Engine,1e7ebbf7b3f229d0869ce78d6e288e2520363385,2015-06-30 02:22:51,requests,urllib,Replace urllib with requests module,urllib requests,"
Replace urllib with requests module",155,HTTP Clients,HTTP Clients,False,False
209,callahantiff/PheKnowLator,77a902e5ca8426ef17ee454f13952c260127aa3f,2020-01-27 20:24:30,requests,urllib,convert to use requests instead of urllib,urllib requests,"
convert to use requests instead of urllib",155,HTTP Clients,HTTP Clients,False,False
211,canonical/cloud-init,0fc887d97626132e9024490b271888bed162c867,2012-10-22 02:37:00,requests,urllib,"Use the python requests lib instead of urllib3
since it provides the same support (and it uses
that library). Urllib3 doesn't seem to exist as
its own package (requests hides it) so solve that
by using requests and handling its oddness ourself.",urllib requests,"
Use the python requests lib instead of urllib3
since it provides the same support (and it uses",155,HTTP Clients,HTTP Clients,False,False
213,cekit/cekit,e0452b77ccd08085ae7a65ebb87341e98a6c0c2b,2015-11-04 14:38:28,requests,urllib,"Use requests library, allow to fetch template from url, use Fedora for Docker, release 1.3.0",urllib requests,"
Use requests library, allow to fetch template from url, use Fedora for Docker, release 1.3.0",155,HTTP Clients,HTTP Clients,False,False
214,ckan/ckanext-harvest,6b6458f2eadd4eb022f5dd5d76993e9abbd39e7b,2018-10-29 11:50:39,requests,urllib,Use requests lib instead of urllib2,urllib requests,"
Use requests lib instead of urllib2",155,HTTP Clients,HTTP Clients,False,False
219,datawire/ambassador,f192b6b45ce30995b60f465f6028840145e4f593,2020-11-11 17:13:50,requests,urllib,"(from AES) ambassador/python/tests: use requests library, migrate off of urllib",urllib requests,"
(from AES) ambassador/python/tests: use requests library, migrate off of urllib",155,HTTP Clients,HTTP Clients,False,False
226,explosion/spaCy,d4cc736b7c8f042e2385a16816aa3f9316478f8c,2018-05-20 18:26:56,requests,urllib,"💫 Improve model downloads: check for existing install, customise pip and use requests library again (#2346)

* Go back to using requests instead of urllib (closes #2320)

Fewer dependencies are good, but this one was simply causing too many other problems around SSL verification and Python 2/3 compatibility. requests is a popular enough package that it's okay for spaCy to depend on it – and this will hopefully make model downloads less flakey.

* Only download model if not installed (see #1456)

Use #egg=model==version to allow pip to check for existing installations. The download is only started if no installation matching the package/version is found. Fixes a long-standing inconvenience.

* Pass additional options to pip when installing model (resolves #1456)

Treat all additional arguments passed to the download command as pip options to allow user to customise the command. For example:

python -m spacy download en --user

* Add CLI option to enable installing model package dependencies

* Revert ""Add CLI option to enable installing model package dependencies""

This reverts commit 9336ffe6959a9d538a5059be7ea84a639b12a1ae.

* Update documentation",urllib requests,"
* Go back to using requests instead of urllib (closes #2320)",155,HTTP Clients,HTTP Clients,False,False
231,galaxyproject/galaxy,9b8e76f9d9df0ae0ba6238d44a8f07b97fe34d6f,2017-09-25 09:39:13,requests,urllib,"Convert urllib to requests

Which has built-in protection against urls like ""file:///tmp/a""",urllib requests,"
Convert urllib to requests",155,HTTP Clients,HTTP Clients,False,False
235,grow/grow,bcd1bf382fea1d1eb8193c3c1b2ff89e35b40240,2017-05-13 08:21:54,requests,urllib,Use requests instead of urllib to try and fix SSL issue on Travis-built Mac release. This may work because requests is meant to use a cacerts.txt file bundled with Grow and urllib may not do that.,urllib requests,"
Use requests instead of urllib to try and fix SSL issue on Travis-built Mac release.
This may work because requests is meant to use a cacerts.txt file bundled with Grow and urllib may not do that.",155,HTTP Clients,HTTP Clients,False,False
236,gwpy/gwosc,f0472915056f812c4b2e7f90fb283221f06791e5,2020-08-27 10:22:54,requests,urllib,gwosc.api: use requests instead of urllib2,urllib requests,"
gwosc.api: use requests instead of urllib2",155,HTTP Clients,HTTP Clients,False,False
241,ilastik/ilastik,b261f6e44d93d4a9d767d81add53f0f9071a42bb,2014-07-22 15:39:05,requests,urllib,"TiledVolume: If a tile is missing, fill it with zeros.  Also, now depends on requests library instead of urllib.",urllib requests,"
TiledVolume: If a tile is missing, fill it with zeros.
Also, now depends on requests library instead of urllib.",155,HTTP Clients,HTTP Clients,False,False
246,jpmens/mqttwarn,693504f194e71ca62cded3ddc1145b83b6f03d94,2018-04-07 04:34:31,requests,urllib,"Adding pushover image support

Updated by psyciknz to add the image upload function as supported by
pushover
- changed from urllib2 to requests for the loading of images
from a json payload via the ""imageurl"" attribute or by decoding a base64
encoded image in the the ""image"" attribute.
- text to accompany the
image comes from the ""message"" attribute of the json payload.",urllib requests,"
pushover
- changed from urllib2 to requests for the loading of images
from a json payload via the ""imageurl"" attribute or by decoding a base64",155,HTTP Clients,HTTP Clients,False,False
248,jupyter/repo2docker,830a9c89c00ab53db3f4ccfae0cef942f4ce367b,2021-01-18 16:29:53,requests,urllib,"Replace urllib by requests in contentproviders

requests is globally simpler to use, and more and more people
are more familiar with this later than urllib.",urllib requests,"
Replace urllib by requests in contentproviders",155,HTTP Clients,HTTP Clients,False,False
253,lektor/lektor,303d9080d976487eccf3db92302711cf5959f4c2,2015-12-25 11:44:30,requests,urllib,Switch to requests for URL fetching.  This should fix #38,urllib requests,"
Switch to requests for URL fetching.
This should fix #38",155,HTTP Clients,HTTP Clients,False,False
264,oemof/feedinlib,bee67e3243b143c1c6e1905fef1fecc004249937,2016-11-11 19:01:51,requests,urllib,"Replace urllib with python requests library

urllib is a mess and difficult to use while Python Requests is
flexible and easy to use :)

See http://docs.python-requests.org/en/master/",urllib requests,"
Replace urllib with python requests library",155,HTTP Clients,HTTP Clients,False,False
274,project-koku/koku,e60176017cdba91efcdb1c5c6f3ac03f1cc6005b,2020-09-03 15:58:29,requests,urllib,"Fix the status_probe failure (#2364)

* Use requests vs urllib; add fallback

Co-authored-by: Andrew Berglund <aberglun@redhat.com>
Co-authored-by: Brett Lentz <blentz@users.noreply.github.com>",urllib requests,"
* Use requests vs urllib; add fallback",155,HTTP Clients,HTTP Clients,False,False
279,rhinstaller/anaconda,4e9169e47c593e7b7dc31ce623365aa746e3a33b,2015-02-03 13:36:57,requests,urllib,"Replace urllib with python-requests for network access (#1014220)

While plain urllib supports SSL, it does no verification os SSL
certificates. Also urllib & urllib2 have been merged in Python 3
and would require us to either change import names once Anaconda
switches to Python 3.

So replace urllib usage with python-requests to both get SSL certificate
validation and to make the code Python 3 compatible.",urllib requests,"
Replace urllib with python-requests for network access (#1014220)",155,HTTP Clients,HTTP Clients,False,False
280,rolandgeider/wger,231575032d82a600063a09a933abf580978a67d1,2016-06-08 10:57:49,requests,urllib,"Fix error on exercise image downloader with python3

For some reason, there were strange encoding related errors when running the
script under python 3. While working on this, the script was refactored to use
the requests library, instead of urllib, which is a bit more cumbersome.",urllib requests,"
While working on this, the script was refactored to use
the requests library, instead of urllib, which is a bit more cumbersome.",155,HTTP Clients,HTTP Clients,False,False
281,romanvm/service.addic7ed,ec3e219ff08a66b038f2667669c54750926d227d,2019-06-03 21:03:29,requests,urllib,"Revert ""Use built-in urllib2 instead of requests library""

This reverts commit b394e49d",urllib requests,"
Revert ""Use built-in urllib2 instead of requests library""",155,HTTP Clients,HTTP Clients,False,False
283,rotki/rotki,6a4a8d02f636b55e7d567303d5ddd64e283c5f18,2018-04-19 22:05:52,requests,urllib,Replace urllib.urlopen with requests.get(),urllib requests,"
Replace urllib.urlopen with requests.get()",155,HTTP Clients,HTTP Clients,False,False
284,rsmusllp/king-phisher,9ff45919c9605c0c5178b215d4b78319a0d096b3,2015-05-13 14:11:48,requests,urllib,Use the requests lib instead of urllib,urllib requests,"
Use the requests lib instead of urllib",155,HTTP Clients,HTTP Clients,False,False
292,streamlit/streamlit,c74227ac25b35b06f13216bdbf902cb7e636ee42,2019-09-13 22:44:08,requests,urllib,"Check version on startup (#106)

Occasionally check the installed streamlit version against the latest in PyPI, and show a notice if there's a new version available.

The check runs randomly with a 5% chance, so that we're not spamming the user frequently.

I used `requests` (instead of urllib) for this, which entailed adding it as an explicit dependency in our Pipfile. All the other places in streamlit that used urllib for fetching over HTTP have been replaced with requests. (And there are some additional tests that didn't previously exist.)

Fixes #65",urllib requests,"
I used `requests` (instead of urllib) for this, which entailed adding it as an explicit dependency in our Pipfile.
All the other places in streamlit that used urllib for fetching over HTTP have been replaced with requests.",155,HTTP Clients,HTTP Clients,False,False
298,tobi-wan-kenobi/bumblebee-status,8dc07e666e0e3efef8d7cce41d8534ec3e52bf4d,2017-02-26 07:19:30,requests,urllib,"[modules/weather] Replace urllib with requests

Since requests works the same for python2.7 and python3.x, use requests
instead of urllib (which returns a string in python2.7, but byte data in
python3.0, at least).",urllib requests,"
[modules/weather] Replace urllib with requests",155,HTTP Clients,HTTP Clients,False,False
302,xesscorp/KiCost,1b1589ebe47b4aa02a1b1c6d1c10cfaf0c676e36,2018-09-03 17:19:24,requests,urllib,Restored Python 2/3 compatibility by replacing urllib with the requests library.,urllib requests,"
Restored Python 2/3 compatibility by replacing urllib with the requests library.",155,HTTP Clients,HTTP Clients,False,False
303,xirixiz/Home-Assistant-Sensor-Afvalwijzer,1717d4d613769c5ab65abcc9d938999c5cf94518,2018-03-29 18:07:29,requests,urllib,"replace urllib by requests, better error handling. Added toevoeging for huisnummer",urllib requests,"
replace urllib by requests, better error handling.
Added toevoeging for huisnummer",155,HTTP Clients,HTTP Clients,False,False
305,y0ssar1an/CSS3,cafae92158b481e1f34abc8e102a36e00bc1e7c3,2015-02-22 23:40:02,requests,urllib,use requests library instead of urllib (currently broken),urllib requests,"
use requests library instead of urllib (currently broken)",155,HTTP Clients,HTTP Clients,False,False
310,Diaoul/spkrepo,98007eceadc2bbdd2872ef8dceb2780cf51ea696,2018-05-08 20:47:56,Flask,flask,"fix build and runtime errors
- flask extension import names updated
- use original flask-loging (pached version of @Diaoul not available anymore)
- missing dependencies added to setup.py
- config.py: security needs password hash and salt
- admin.py: SpkrepoImageUploadField removed (fixed in flask-admin https://github.com/flask-admin/flask-admin/pull/705)",flask Flask,"
- config.py: security needs password hash and salt
- admin.py: SpkrepoImageUploadField removed (fixed in flask-admin https://github.com/flask-admin/flask-admin/pull/705)",82,Web Framework,Web Framework,False,False
311,EUDAT-B2SHARE/b2share,1d39431f1edad9097e482cf0b33b96143df27a71,2015-03-23 10:58:35,Flask,flask,"global: import change of Flask extensions

* Changes all Flask extension import style from `flask.ext.*` to
  `flask_*`.  (addresses mitsuhiko/flask#1135) (closes #2776)

Signed-off-by: Jiri Kuncar <jiri.kuncar@cern.ch>",flask Flask,"
global: import change of Flask extensions",82,Web Framework,Web Framework,False,False
312,JARR-aggregator/JARR,b0049442eee94a1636490c091215bd706f819558,2016-05-29 20:58:20,Flask,flask,Fixed some depreciations with the new version of Flask.,flask Flask,Fixed some depreciations with the new version of Flask.,82,Web Framework,Web Framework,False,False
316,NYPL-Simplified/circulation,d2d427c3bcd615a4c669bd7f60620f223b27a390,2017-12-06 20:50:37,Flask,flask,Import from flask_babel instead of flask.ext.babel,flask Flask,"
Import from flask_babel instead of flask.ext.babel",82,Web Framework,Web Framework,False,False
318,OctoPrint/OctoPrint,bb2fcd5b00e2a4033d4f0403b6010c0a1a72da95,2016-10-07 01:25:04,Flask,flask,"Update flask, flask-{login,principal,babel,assets} versions to the latest, flask.ext. => flask_",flask Flask,"
Update flask, flask-{login,principal,babel,assets} versions to the latest, flask.ext.
=> flask_",82,Web Framework,Web Framework,False,False
322,StartupsPoleEmploi/labonneboite,e644ab350ac79f1bd525f958321b796179dd3b5f,2019-09-02 08:51:56,Flask,flask,"Fix vulnerabilities as recommended by github
Mainly upgrade Flask to 1.1.1
logging.DEBUG_LOG_FORMAT no longer exists, I dropped it as it is
only used in development and I have no idea why we needed it.",flask Flask,"
Fix vulnerabilities as recommended by github
Mainly upgrade Flask to 1.1.1
logging.",82,Web Framework,Web Framework,False,False
323,alephdata/aleph,376285f3e5c5acd8dce3f4a9f545f8544e820699,2016-07-15 08:56:30,Flask,flask,Switch to flask 0.11,flask Flask,"
Switch to flask 0.11",82,Web Framework,Web Framework,False,False
324,all-of-us/raw-data-repository,0b21f97232f003f6e307843528af50a16fb1f978,2019-04-09 15:26:10,Flask,flask,"Mm/update flask (#1008)

* DA-770 update flask, requirements.txt, update import statements

* DA-770 update error handling

* DA-770 refactor to use malformed header as exception

* DA-770 refactor to use malformed header as exception

* DA-770 add bearer for www_authenticate

* DA-770 move line to appease the linting gods",flask Flask,"
Mm/update flask (#1008)",82,Web Framework,Web Framework,False,False
326,apache/airflow,a810d3e136ad207891f0d6caf410aa97876161bc,2016-02-25 19:14:01,Flask,flask,"Replace deprecated flask.ext.* with flask_*

https://github.com/mitsuhiko/flask/issues/1135",flask Flask,"
Replace deprecated flask.ext.* with flask_*",82,Web Framework,Web Framework,False,False
329,blockstack/blockstack-core,f01396aed7b84d6294ad326eafe5eb9f0cd1dc8c,2015-05-25 21:22:57,Flask,flask,move over to flask-https,flask Flask,"
move over to flask-https",82,Web Framework,Web Framework,False,False
336,dpgaspar/Flask-AppBuilder,0eafa9c106f95ef590c57fb61daad11b3dc765fd,2016-06-06 18:08:28,Flask,flask,"Remove deprecated references to `flask.ext`

From:
http://flask.pocoo.org/docs/0.11/extensiondev/#extension-import-transition
""""""
As of Flask 0.11, most Flask extensions have transitioned to the new
naming schema. The flask.ext.foo compatibility alias is still in Flask
0.11 but is now deprecated – you should use flask_foo.
""""""",flask Flask,"
The flask.ext.foo compatibility alias is still in Flask
0.11 but is now deprecated – you should use flask_foo.",82,Web Framework,Web Framework,True,False
337,etalab/udata,3401b6a0cce034f802ec2ca05e040109ba26cdf8,2016-06-10 09:30:00,Flask,flask,"Fix flask 0.11 warnings (#485)

* Remove all flask.ext references
* Drop all udata.ext references",flask Flask,"
Fix flask 0.11 warnings (#485)",82,Web Framework,Web Framework,False,False
338,fedora-infra/anitya,600b0426be9df022f71bb4e379fdd04ae490b3d5,2017-02-14 10:17:40,Flask,flask,"Fix deprecation warnings

This fixes several deprecation warnings. The first two were from
importing flask extensions via ``flask.ext`` (``flask_wtf`` and
``flask_openid``). The last one was a class rename in ``flask_wtf``.

Signed-off-by: Jeremy Cline <jeremy@jcline.org>",flask Flask,"
``flask_openid``).
The last one was a class rename in ``flask_wtf``.",82,Web Framework,Web Framework,False,False
344,geopython/GeoHealthCheck,046c6b09147d098b6db0e4185333072c4c146207,2019-11-27 15:24:05,Flask,flask,"Python 3 updates (#280)

* Update gitignore with database and venv

* Keep track of work file

* WIP: first updates on python3

* WIP: fix iteritems() to items()

* Fix empty tags in template

* Fix utf-8 error

* fix tagnames in templates

* Add cmp functions for run

Difference between py2 and py3: __lt__ etc should be defined.

* Fix syntax py3 in test

* Make imports relative

* Remove deprecations warnings in tests

* Update pavement to py3

* Update requirements

* Reset relative inputs

Update `raw_input` in models.py to `input` (py3 style)

* Update todolist

* Fix import for testing

* Update paver to py3

* Fix is_authenticated

* Add hash

* Rever tags|tojson

My first solution wasn't working.

* Add run_tests to paver

* Revert too enthousiastic edit

* Fix flake8 issues

* Delete work file

* Remove UTF-8 indication

Python 3 is UTF-8 by default. Als update on shebang.

* Fix typo

* Update travis to py3

* WIP: getting docker to work

Updated the docker build file and related items. Downgraded pyproj to 1.9.6 to
be able to install it under alpine linux. The docker container builds, but it
doesn't run just yet: still an issue with importing python libraries (I guess
something with absolute/relative imports).

* Fix import issue docker scripts

There was an issue with the import statements of the GeoHealthCheck module in
the docker container. Solved by adding the module to the pythonpath.

* Fix flake8 issues

The test will only run with the `tests/run_tests.sh` or `paver run_tests`.
Running the tests seperate will generate an importerror.

* Remove utf-8 decodes

* Update wfs3 probe to py3

* Remove try-import for py3

* Update documentation

Assuming that py3 will get its own release with version 0.8.0.

* Fix deprecation warning

* Fix filter return map not list

Code review feedback by @justb4:

- add a WFS e.g. https://geodata.nationaalgeoregister.nl/aan/wfs
- in Edit try to add any Probe for bbox query
- see error in UI (cannot add Probe)
- in log

```
File ""/Users/just/project/geohealthcheck/borrob.git/GeoHealthCheck/plugins/probe/wfs.py"", line 146, in expand_params
    if len(ft_namespaces) > 0:
TypeError: object of type 'filter' has no len()
```

- solution: in https://github.com/borrob/GeoHealthCheck/blob/py3/GeoHealthCheck/plugins/probe/wfs.py#L142 replace line with ft_namespaces = list(filter(None, list(ft_namespaces)))
- will look for more filter() occurrences assuming list...(ok, no other occurs)

Fixed as suggested.

* Fix Adding probe TMS tile

Code review feedback by @justb4:

- add TMS e.g. https://geodata.nationaalgeoregister.nl/tiles/service/tms/1.0.0
- add Probe for any GetTile
- exception:
```
File ""/Users/just/project/geohealthcheck/borrob.git/GeoHealthCheck/plugins/probe/tms.py"", line 110, in get_metadata
  return TileMapService(resource.url, version=version)
File ""/Users/just/.pyenv/versions/3.7.1/envs/geohealthcheck3.7.1/lib/python3.7/site-packages/owslib/tms.py"", line 61, in __init__
  self.version, url=self.url, un=self.username, pw=self.password
AttributeError: 'TileMapService' object has no attribute 'username'
```

-  investigating...could be due to 0.17.1 to 0.18.0 OWSLib upgrade in GHC..Yes OWSLib issue, opened: see geopython/OWSLib#614.

Fixed by downgrading to OWSLib 0.17.1. I made a note in the requirements.txt to
only upgrade to a new version when a solution to issue 614 is included.

* Fix basic auth

From code review @justb4:

- add a Resource URL that requires Basic Auth
- in Edit configure Basic Authentication: Username, Password, Save
- Test, is False
- See error message in report:

```
""message"": ""Perform_request Err: TypeError expected bytes-like object, not str"",

```
- analysis: may be due to: https://www.reddit.com/r/learnpython/comments/7qa0at/typeerror_a_byteslike_object_is_required_not_str/ , see comment: python version you're using is python3, while your code is for python2.
  ...base64 lib now operated on bytes, not strings and bytes objects don't have replace() method
- think this needs fix here: https://github.com/borrob/GeoHealthCheck/blob/py3/GeoHealthCheck/util.py#L230 will investigate..

FIX:
Fixed by edit on resrouceauths plugin: explicity converting string to byte

* Force rerun travis with empty commit

* Fix httpStatusError

Codereview bij @justb4:
`check.py` does not give a HTTPStatusError when it should give you an error.
This is due to the difference between python 2/3 on dividing: python2 provides
floor, whil python 3 provides float.

-> Fixed as suggested

* Fix basic auth

Code review by @just4b
For a correctly encoded header string like 'Basic aWF...XS1\n'
this line gives something like 'Basic b\'aWF...XS1\\n\''
(the \n is later always stripped).

Fixed by formatting the return value

* Return of the sphinx

* Fix flake8 line length issue

* Fix auth encoding/decoding

From code review by @justb4:
6 - Auth info Decoding/Encoding Failure with Postgres

Only occurs when using Postgres, not with SQLite. Background: GHC
encodes/encrypts a generic auth dict info structure via JSON string to be stored
as textfield in DB. It decodes/decrypts when reading. This way we can support
multiple auth types with a single auth column in resource table. So this is
another encoding than in 4 for HTTP auth headers, but think similar problem.
We also need to deal with existing PG DBs that have auth columns already present
in resource table.

-  install psycopg2 : pip install psycopg2
-  used existing PG DB, only changed in config_site.py: SQLALCHEMY_DATABASE_URI
   = 'postgresql://name:passw@localhost:5432/ghc', but may create new
-  add URL Resource with Basic Auth (even does not have to have basic auth)
-  in Edit add Basic Auth Username and Password
-  click Save

Fixed by ensuring encode/decode takes `string` as input and gives `string` as
output. These methodes now use static typing. The origin of the problem was the
difference of how SQLite and Postgres store the encoded string (either as text
or in some binary form). This solution makes the encoded authentication a
string object and *not* bytes.

* Fix module import issue with paver

* Fix deprecation warning

* Adopt changes after comments by @TomKralidis",flask Flask,"
* Fix flake8 issues",82,Web Framework,Web Framework,False,False
345,getredash/redash,09ccec59f5939ed1558db60e50b2dc659c00e681,2016-02-29 08:39:50,Flask,flask,"Replace deprecated flask.ext.* with flask_*

Importing flask extensions using flask.ext.* is deprecated in favor of flask_*
For background, see: https://github.com/mitsuhiko/flask/issues/1135",flask Flask,"
Replace deprecated flask.ext.* with flask_*",82,Web Framework,Web Framework,False,False
357,lyft/confidant,bb3434aebcaa189075524d890b0c9722a7e33994,2019-09-11 21:03:05,Flask,flask,Fix references to flask script for updates reqs (#198),flask Flask,"
Fix references to flask script for updates reqs (#198)",82,Web Framework,Web Framework,False,False
378,sepro/MemoBoard,d1a3db31924628d5f616dee4fee07adf46192fc9,2018-07-17 19:26:47,Flask,flask,"Using click to create the database now, updated docs to match flask 1.0 style to run program.

Changed old migration with new one, but it is currently unused",flask Flask,"Using click to create the database now, updated docs to match flask 1.0 style to run program.
",82,Web Framework,Web Framework,False,False
380,spiral-project/ihatemoney,f6236b43ca5556c6df764e95428d5efced8ff4e1,2017-03-29 13:15:47,Flask,flask,"Remove ExtDeprecationWarning from manage.py

Using new-style flask extensions imports.
grep tells me there were the only flask.ext.* occurences remaining in ihatemoney code.",flask Flask,"
Using new-style flask extensions imports.",82,Web Framework,Web Framework,False,False
382,tetherless-world/whyis,17eded036478f41f0c78220e9a5b75b9f37cdd97,2017-02-15 19:36:54,Flask,flask,Updated to the latest flask extension standards.,flask Flask,"
Updated to the latest flask extension standards.",82,Web Framework,Web Framework,False,False
385,voxpupuli/puppetboard,c59607564ae1ad74e46fbc39ca097d825165f8e6,2017-03-20 23:47:21,Flask,flask,Updating Forms to the new FlaskForm class name,flask Flask,Updating Forms to the new FlaskForm class name,82,Web Framework,Web Framework,False,False
390,Clarifai/clarifai-python,abb4a4329535ca6ad3d8008602467c933c86b361,2020-03-18 13:27:55,unittest,mock,"Deploy to PyPi and Github Releases via Travis (#112)

* Deploy to PyPi and Github Releases via Travis

* Remove Python 2 from CI, use replace 3.7 with 3.8

* Use double brackets in bash conditions

* Update dependecies for test runs

* Remove mock external library used in tests

It's been replaced by unittest.mock in Python 3.3.

* Use old yapf, remove enum34 from requirements

setup.py still contains enum34, so the users installing the library
will get it on old Python versions, but none developing the client
will likely be using Python version <3.4 anymore.",mock unittest,"
* Remove mock external library used in tests",241,Testing,Testing,False,False
391,Cornices/cornice,cd48d75d0fc26c61348281441933a0da03b4bc4a,2020-08-12 14:23:59,unittest,mock,Replace mock by standard unittest.mock,mock unittest,"
Replace mock by standard unittest.mock",241,Testing,Testing,False,False
393,GeotrekCE/Geotrek-admin,9732cb578f5157d0afaf7020aaae45a664c8ed5f,2019-12-03 14:56:43,unittest,mock,[DEL] remove dependency to mock in order to use it directly from the unittest package,mock unittest,"
[DEL] remove dependency to mock in order to use it directly from the unittest package",241,Testing,Testing,False,False
396,MDAnalysis/mdanalysis,2fb1adebba30f3ec7789c4bf15f6fdf59559af80,2020-06-21 13:13:48,unittest,mock,Use unittest.mock instead of mock (#2779),mock unittest,"
Use unittest.mock instead of mock (#2779)",241,Testing,Testing,False,False
397,Mergifyio/mergify-engine,3d08f414d17bb31660f4231fe5dcd74b91e103a8,2018-08-31 05:46:27,unittest,mock,Use mock from unittest,mock unittest,"
Use mock from unittest",241,Testing,Testing,False,False
399,OpenMined/PySyft,926e99e2d3d78b86d47773e7beaa3fc3eb1bc543,2019-05-08 23:52:38,unittest,mock,Use unittest.mock instead of mock,mock unittest,"
Use unittest.mock instead of mock",241,Testing,Testing,False,False
400,PyMySQL/PyMySQL,0acaa7f4fa4e2a9a30c835fc1be0b74eec3aaf87,2021-01-08 01:08:27,unittest,mock,"Use built-in unittest.mock (#938)

Use built-in Python 3 unittest.mock instead of relying on mock package
that is only necessary for ancient versions of Python.",mock unittest,"
Use built-in unittest.mock (#938)",241,Testing,Testing,False,False
405,ansible/galaxy,10fdf6b9b52e314a52394a50f9135cc4b4dc5477,2019-05-21 18:35:43,unittest,mock,"Replace `mock` import with `unittest.mock`.

Since Python 3 `unittest.mock` is a part of standard library.",mock unittest,"
Replace `mock` import with `unittest.mock`.",241,Testing,Testing,False,False
406,apache/airflow,7c6dfcb0bfa2d7654996ae8e3d77ea5a0719089d,2020-10-22 12:23:15,unittest,mock,"Use unittest.mock instead of backported mock library (#11643)

mock is now part of the Python standard library, available as unittest.mock in Python 3.3 onwards.",mock unittest,"
Use unittest.mock instead of backported mock library (#11643)",241,Testing,Testing,False,False
407,blaze/distributed,019f7a63464a73dcb50a246ce8bb6f2f69750bc2,2019-09-12 15:04:03,unittest,mock,"Use mock from unittest standard library. (#3049)

Since distributed depends on Python 3.5+, there's no need to use the
external mock package any more.",mock unittest,"
Use mock from unittest standard library.
(#3049)",241,Testing,Testing,False,False
408,canonical/cloud-init,5f8f85bb38cc972d3d2c705a1ec73db3f690f323,2020-01-29 21:55:39,unittest,mock,"Replace mock library with unittest.mock (#186)

* cloudinit: replace ""import mock"" with ""from unittest import mock""

* test-requirements.txt: drop mock

Co-authored-by: Chad Smith <chad.smith@canonical.com>",mock unittest,"
Replace mock library with unittest.mock (#186)",241,Testing,Testing,False,False
410,certtools/intelmq,f40e73ea126e317ed61f5271db96819c74a45484,2016-08-31 20:20:08,unittest,mock,"TESTS: (minor) cleanup: Using unittest.mock now.

mock is now part of the Python standard library, available as
unittest.mock in Python 3.3 onwards. As we require python3.3,
we can use unittest.mock and remove the requirement for an external mock.
(closes https://github.com/certtools/intelmq/issues/659)",mock unittest,"
TESTS: (minor) cleanup: Using unittest.mock now.",241,Testing,Testing,False,False
411,cfpb/cfgov-refresh,82c921b68c74544708f2689e0b487d4759d42bec,2021-02-17 16:58:43,unittest,mock,"Use unittest.mock instead of mock package (#6271)

Currently we install the mock package [0] as part of our test
requirements. Starting in Python 3.3, this package is part of the
standard library as `unittest.mock` [1].

This commit replaces all uses of `mock` with `unittest.mock` and removes
the test dependency on the external package.

[0] https://pypi.org/project/mock/
[1] https://docs.python.org/3/library/unittest.mock.html",mock unittest,"
Use unittest.mock instead of mock package (#6271)",241,Testing,Testing,False,False
412,cfpb/wagtail-sharing,031582f865d62e44cb435f2d284513679febfd24,2020-08-21 16:49:04,unittest,mock,"Support LTS + Current versions of Wagtail and Django (#39)

* Add support for Django 3.1
* Add coveralls badge to the README
* Remove dependency on external mock package and use unittest.mock",mock unittest,"
* Add coveralls badge to the README
* Remove dependency on external mock package and use unittest.mock",241,Testing,Testing,False,False
413,circus-tent/circus,bedfcbb00ccce6d5f52e4432e1e1a885a7d50c9c,2020-05-09 15:00:30,unittest,mock,move mock to unittest since no earily version python support,mock unittest,"
move mock to unittest since no earily version python support",241,Testing,Testing,False,False
414,clearlinux/autospec,3f04dd7e5e1e40317051c64047ea4ead630c8860,2018-12-10 07:08:10,unittest,mock,"Implement unified download interface

The download code for licenses, tarballs, and signature files are
similar enough to warrant consolidation into a unified interface, so add
a new function do_curl() that satisfies the needs of all the callers.

Note that I made one change that noticeably changes the output,
hopefully to reduce confusion: The signature download loop no longer
prints error messages, since the end user should not need to care at all
unless a signature cannot be downloaded and verification is required. If
the latter case is true, autospec will still exit and print the fatal
error, so the issue should be straightforward to diagnose after seeing
that error.

A couple of bugs are fixed as a result of using the new function:

  - The FAILONERROR pycurl option is now set for tarball downloads. This
    prevents certain undesirable side-effects like downloading 404
    response pages.

  - Responses from FTP servers are now handled better, since a more
    common ""success"" code from FTP servers is 226, not 200.

And unit tests have been updated:

  - Added new tests for download.do_curl().

  - Replaced ""mock"" import with ""unittest.mock"" for pkg_integrity tests.

  - Revised license and pkg_integrity tests to reflect the new download
    paths.

  - Added missing mocks for the download paths in PyPIVerifier and
    GEMShaVerifier.

Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>",mock unittest,"
- Replaced ""mock"" import with ""unittest.mock"" for pkg_integrity tests.",241,Testing,Testing,False,False
416,corteva/geocube,b51a001738fe6d3af0c9ec3a2984d5ed5bda24ad,2021-01-04 14:27:26,unittest,mock,TST: Replace mock test dependency with unittest.mock (#53),mock unittest,"
TST: Replace mock test dependency with unittest.mock (#53)",241,Testing,Testing,False,False
418,delfick/photons,f8ea2afb4f68aafe3ea3d9cedfaec2592e41d73f,2019-04-23 02:05:40,unittest,mock,Use builtin mock package in unittest,mock unittest,"
Use builtin mock package in unittest",241,Testing,Testing,False,False
419,dj-stripe/dj-stripe,2b21263b8d6dd234c093ddfded32cfdbacd7e4ba,2018-07-25 18:27:29,unittest,mock,Use builtin unittest.mock instead of mock library,mock unittest,"
Use builtin unittest.mock instead of mock library",241,Testing,Testing,False,False
423,elyra-ai/elyra,eea83d6ebc98c6151d980648cc51492700e24ac7,2021-04-22 21:41:19,unittest,mock,"Use unittest mock module to avoid flake8 failure (#1607)

Use unittest mock module instead of third party module
for flake8 failure.",mock unittest,"
Use unittest mock module to avoid flake8 failure (#1607)",241,Testing,Testing,False,False
424,facebookresearch/detectron2,8052d47794ae71f0315deeda4daf2db156cda822,2020-10-04 20:15:07,unittest,mock,"use unittest.mock

Summary: Pull Request resolved: https://github.com/fairinternal/detectron2/pull/468

Reviewed By: alexander-kirillov

Differential Revision: D24101356

Pulled By: ppwwyyxx

fbshipit-source-id: cf77167d707c43553b6d0d0c8787615ea647f04a",mock unittest,"
use unittest.mock",241,Testing,Testing,False,False
430,healthchecks/healthchecks,4bcfba728e15750659d758d0f61bbda39968b4f2,2020-03-01 20:30:12,unittest,mock,Use unittest.mock,mock unittest,"
Use unittest.mock",241,Testing,Testing,False,False
431,httpie/httpie,1274d869f68fe677893cfc4af23464f596f788a5,2021-04-30 13:08:27,unittest,mock,"Replace usage of mock with unittest.mock (#1054)

Since Python 3, the mock dependency is no more required as
it is already part of the unittest module.",mock unittest,"
Replace usage of mock with unittest.mock (#1054)",241,Testing,Testing,False,False
432,idan/oauthlib,394c019f88e4decaec45b54f94f6a8a4c77d1b27,2020-03-16 11:27:34,unittest,mock,"Use unittest.mock instead of external mock

Replace the use of external 'mock' package with built-in Python
unittest.mock (present since py3.3).  This also fixes all test failures
for me.",mock unittest,"
Use unittest.mock instead of external mock",241,Testing,Testing,False,False
434,infobyte/faraday,b06d3179b260849177382ed9b945d5966148f95d,2019-10-10 17:16:41,unittest,mock,use unittest mock,mock unittest,"
use unittest mock",241,Testing,Testing,False,False
435,jazzband/pip-tools,967fe8ba03bb8def0718b484ae5b16e65f064700,2020-12-31 15:19:30,unittest,mock,"Remove support for EOL Python 2.7

Python 2.7 went EOL 2020-01-01.

For a list of supported Python versions, see:
https://devguide.python.org/#status-of-python-branches

For a list of EOL Python versions and their dates, see:
https://devguide.python.org/devcycle/#end-of-life-branches

Removing support reduces compatibility code, CI resources, and other
maintenance concerns. As well, can begin to take advantage of newer
Python features and patterns.

Cleanups:

- Use f-strings
- Drop __future__ imports
- Drop file encoding cookies ""# coding: utf-8""
- Drop uses of six
- Use stdlib TemporaryDirectory and unittest.mock
- Use newer metaclass syntax
- Drop now unnecessary fs_str() function
- Drop inheritance from ""object"", all Python 3 classes are new-style
  classes
- Remove unnecessary coerce to string/bytes calls
- Use updated subprocess APIs",mock unittest,"
- Drop uses of six
- Use stdlib TemporaryDirectory and unittest.mock
- Use newer metaclass syntax",241,Testing,Testing,False,False
436,lbryio/lbry,f9ff3e5d1443c3f43697d681d9d75979118caf61,2018-11-25 16:12:30,unittest,mock,"Removes third-party mock dependency (#1661)

* Removes mock from setup.py dependencies
* Refactors name resetTime to reset_time
* Replaces import mock with built-in unittest.mock
* Refactors imports to separate built-in, external, and project modules",mock unittest,"
* Refactors name resetTime to reset_time
* Replaces import mock with built-in unittest.mock
* Refactors imports to separate built-in, external, and project modules",241,Testing,Testing,False,False
438,matrix-org/sydent,c21045857d5ebe7f6e1e234865090165c911a28d,2021-06-24 19:04:50,unittest,mock,Replace mock with unittest.mock. (#370),mock unittest,"
Replace mock with unittest.mock.
(#370)",241,Testing,Testing,False,False
439,menpo/menpo,3ee1f99f3a5f804d1102fa4b6f828838b1e8eb0e,2020-11-24 21:08:49,unittest,mock,Remove backport mock module and use unittest.mock,mock unittest,"
Remove backport mock module and use unittest.mock",241,Testing,Testing,False,False
440,missionpinball/mpf,b7b1252a31e6a0894282489243b53b48294cf9f6,2016-05-09 18:50:46,unittest,mock,use unittest.mock instead of mock. cs,mock unittest,"
use unittest.mock instead of mock.
cs",241,Testing,Testing,False,False
441,mlflow/mlflow,f81fa053b94b91887a8df0f242bd3688d5b190f8,2020-09-11 17:01:25,unittest,mock,"Switch to built-in unittest mock library (#3411)

* Switch to built-in unittest mock library

With the required Python version for mlflow being >3.5, there is
no need to install the backport mock package. This package is only
intended to be used for Python versions <3.3 (i.e. before this was
merged into the built-in unittest library)

Signed-off-by: Daniel van der Ende <daniel.vanderende@gmail.com>

* Fix linting

Signed-off-by: Daniel van der Ende <daniel.vanderende@gmail.com>",mock unittest,"
Switch to built-in unittest mock library (#3411)",241,Testing,Testing,False,False
442,mopidy/mopidy,1ce83569f254438e505452fc839b49b35a77499a,2019-11-09 10:32:31,unittest,mock,Replace mock with unittest.mock,mock unittest,"
Replace mock with unittest.mock",241,Testing,Testing,False,False
444,mopidy/mopidy-mpris,b3818e2f853634dc48061b1d8e3146e59175db91,2019-11-11 23:53:51,unittest,mock,Replace mock with unittest.mock,mock unittest,"
Replace mock with unittest.mock",241,Testing,Testing,False,False
445,mopidy/mopidy-spotify,90d922c7c1724f87955a6e94b2f1e49b4fa16ddc,2019-11-16 14:47:56,unittest,mock,Use unittest.mock instead of mock,mock unittest,"
Use unittest.mock instead of mock",241,Testing,Testing,False,False
447,mozilla/addons-server,7629b2f4c08df92f77d3af167c37bb78fc4b19cf,2019-05-03 13:31:44,unittest,mock,replace mock dep with native unittest.mock (#11313),mock unittest,"
replace mock dep with native unittest.mock (#11313)",241,Testing,Testing,False,False
448,mozilla/kitsune,7114dde1ab7406d1b58d2c12185497f99bda2994,2020-06-01 10:07:22,unittest,mock,Use unittest.mock instead of old third-party mock,mock unittest,"
Use unittest.mock instead of old third-party mock",241,Testing,Testing,False,False
449,mozilla/pontoon,8c7ed728b566cce7a712a5a099368af3e4c5dad3,2020-10-22 14:53:24,unittest,mock,"Bug 1600344: Replace mock with unittest.mock (#1715)

The mock functionality is Python-native since Python 3.3.",mock unittest,"
Bug 1600344: Replace mock with unittest.mock (#1715)",241,Testing,Testing,False,False
450,mozmeao/snippets-service,fa26c0b39d706444ad1d9f8b5860408854a831db,2018-10-31 11:19:35,unittest,mock,[Fix #724] Replace mock with unittest.mock.,mock unittest,"
[Fix #724] Replace mock with unittest.mock.",241,Testing,Testing,False,False
452,nipy/nibabel,c05c499aa74b32f23fa7bf5aaa609e799755e3cc,2019-12-12 00:42:49,unittest,mock,TEST: Move from mock to unittest.mock,mock unittest,"
TEST: Move from mock to unittest.mock",241,Testing,Testing,False,False
592,openwisp/openwisp-monitoring,93e8b8e3bbb920960bd9b51d4a2eb159ad1df935,2020-03-23 01:26:02,unittest,mock,[tests] Updating mock to unittest.mock,mock unittest,"
[tests] Updating mock to unittest.mock",241,Testing,Testing,False,False
593,optuna/optuna,37899dc6622da50a00202c501023d763a61bad43,2020-04-15 09:45:05,unittest,mock,Replace mock with unittest.mock,mock unittest,"
Replace mock with unittest.mock",241,Testing,Testing,False,False
594,pfnet/pfio,86de20873030f04b78cc172aa0e2e1d04fe6b2c0,2021-04-20 07:57:34,unittest,mock,"Use unittest.mock instead (#177)

* Use unittest.mock instead

* Sort imports

Co-authored-by: Kohei Sugihara <ksugihara@preferred.jp>",mock unittest,"
Use unittest.mock instead (#177)",241,Testing,Testing,False,False
595,pfnet/pfrl,94c1d68623c9fb2a604beea0837cde358b9a5015,2020-11-10 09:14:33,unittest,mock,use mock from unittest,mock unittest,"
use mock from unittest",241,Testing,Testing,False,False
599,praw-dev/asyncpraw,927a16dbe87d2248b53c10f89c6890ebd3663688,2020-04-23 01:19:48,unittest,mock,"Use unittest.mock over mock package

The mock module is just a backport of the mock module, and as the
minimum version comes with the unittest.mock module, there is no need to
keep on installing another dependency.",mock unittest,"
Use unittest.mock over mock package",241,Testing,Testing,False,False
600,pypa/bandersnatch,8cf9c947b8cd4095391acefabbf0c31a9e16abbc,2017-08-10 03:46:22,unittest,mock,"Save JSON metadata to mirror
- Allow data to be mirrored since we download it anyways
- Support:
-- URL/pypi/pkg_name/json
-- URL/json/pkg_name: Possibly write a PEP for this - Will bring up on mailing list
- Replace `import mock` with `import unittest.mock as mock` and remove dep
- Remove object and u'' where we can
- Tweak setup.py + requirements.txt + bitbucket pipeline config",mock unittest,"
-- URL/json/pkg_name: Possibly write a PEP for this - Will bring up on mailing list
- Replace `import mock` with `import unittest.mock as mock` and remove dep
- Remove object and u'' where we can",241,Testing,Testing,False,False
602,pypa/readme_renderer,091bcd67ada85e54b534a71fd63e5997120590a6,2021-02-23 07:55:00,unittest,mock,"Use built-in Python 3 unittest.mock module

Replace the use of external 'mock' package with the 'unittest.mock'
module provided by Python 3.  Since Python 2 is no longer supported,
this eliminates an unnecessary dependency.",mock unittest,"
Use built-in Python 3 unittest.mock module",241,Testing,Testing,False,False
603,pyproj4/pyproj,aeb4fed12760bebfe7b91bb7abea8c8be874dd41,2020-10-17 12:23:25,unittest,mock,"Use unittest.mock from the standard library (#724)

* CLN : Replace mock pkg with unittest.mock stdlib

This removes the need to unnecessarily install the external mock package

	modified:   test/test_cli.py
	modified:   test/test_datadir.py
	modified:   test/test_network.py
	modified:   test/test_proj.py
	modified:   test/test_sync.py
	modified:   test/test_transformer.py

* CLN : Remove mock from dev requirements

	modified:   requirements-dev.txt",mock unittest,"
Use unittest.mock from the standard library (#724)",241,Testing,Testing,False,False
605,realsuayip/django-sozluk,78213a11ae723b3c62c1ba12b8b884ecb64e5a39,2020-01-09 19:46:46,unittest,mock,use built-in unittest.mock instead of standalone mock package,mock unittest,"
use built-in unittest.mock instead of standalone mock package",241,Testing,Testing,False,False
606,rectalogic/mopidy-pandora,f73ddd346988338233f936deec381bb7482da627,2020-07-01 07:58:23,unittest,mock,Replace mock with unittest.mock,mock unittest,"
Replace mock with unittest.mock",241,Testing,Testing,False,False
609,salesforce/django-declarative-apis,c4a031fc8ff862975fa0dc0ba74fe0c251184e88,2021-05-29 11:14:52,unittest,mock,"chore: remove ""mock"" dev dependency (#54)

* Fix tests to use unittest.mock

* Remove dev dependency on mock

* Update CHANGELOG",mock unittest,"
* Fix tests to use unittest.mock",241,Testing,Testing,False,False
612,sphinx-doc/sphinx,c83f2a0272f3178342918c27985b9098844314a0,2019-03-07 15:27:45,unittest,mock,Fix #6140: Use unittest.mock instead of mock,mock unittest,"
Fix #6140: Use unittest.mock instead of mock",241,Testing,Testing,False,False
614,streamlit/streamlit,69599c96a5e305f64ed06592829dfdbedde24e73,2020-07-28 20:49:34,unittest,mock,"Replace usages of mock with stdlib unittest.mock. (#1752)

* Replace usages of mock with stdlib unittest.mock.

It looks like streamlit claims python_requires>=3.6,
so all versions should have this available.

* Cope with py36's mock being somewhat old and lacking call.args.",mock unittest,"
Replace usages of mock with stdlib unittest.mock.
(#1752)",241,Testing,Testing,False,False
616,tensorflow/hub,559d2bf6fab57484e51be8c0749d1bdff1f8c6d6,2021-04-28 07:42:57,unittest,mock,"import mock -> from unittest import mock

PiperOrigin-RevId: 370845433",mock unittest,"
import mock  laifuhewb  from unittest import mock",241,Testing,Testing,False,False
617,tfeldmann/organize,55f107b29e04fc9644401dc15bf4b7473e969030,2019-08-29 14:25:11,unittest,mock,use unittest.mock instead of mock library,mock unittest,"
use unittest.mock instead of mock library",241,Testing,Testing,False,False
622,torchbox/wagtail,60bf798db1cb1541337ab2657f251b428f550093,2018-11-27 18:31:32,unittest,mock,"Use unittest.mock instead of external module. (#4893)

* Use unittest.mock instead of external module.

* Avoid assert_called and assert_called_once, for Python <3.6 compatibility",mock unittest,"
Use unittest.mock instead of external module.
(#4893)",241,Testing,Testing,False,False
623,unknown-horizons/unknown-horizons,d2c3ec475670f9b1dfd9fb19a7e22efd5a3f480e,2017-04-23 20:49:21,unittest,mock,"Replace external mock package with builtin mock from unittest

Available since python 3.3.",mock unittest,"
Replace external mock package with builtin mock from unittest",241,Testing,Testing,False,False
627,zalando/connexion,16a896cdbf43f0785ddd0ca1a03f7089500884fa,2020-04-23 20:59:41,unittest,mock,"Switched from mock to unittest.mock (#1218)

* Switched from mock to unittest.mock

* Update test_validation.py

Removed mock comment

* Update test_parameter.py

Removed comment for mock

Co-authored-by: Joachim Langenbach <joachim.langenbach@engsas.de>",mock unittest,"
Switched from mock to unittest.mock (#1218)",241,Testing,Testing,False,False
641,cclib/cclib,a5de7ab1285d8388a5c8fc062e1087906e288968,2019-03-23 03:58:42,argparse,sys,Replace sys.argv with argparse in CDA,sys argparse,"
Replace sys.argv with argparse in CDA",14,Filesystem,Filesystem,False,False
645,jsalt18-sentence-repl/jiant,e5f141d3e36df43e6f03188081b1885309dd6bbe,2018-07-26 19:02:28,argparse,sys,added argparse to diagnostic scripts instead of sys so that user can figure out command line args without peeking at the code (#248),sys argparse,"
added argparse to diagnostic scripts instead of sys so that user can figure out command line args without peeking at the code (#248)",14,Filesystem,Filesystem,False,False
647,pantsbuild/pants,a59bd0524d6275dab0ba5841bf744d6669d1c093,2019-05-13 21:32:16,argparse,sys,"Refactor and modernize `check_header.py` to use Python 3 (#7635)

Makes the following improvements:

* Uses argparse instead of reading from `sys.argv`, which brings these benefits:
   * No longer reads from stdin to get added files. Instead, takes an optional arg `--files-added`. This makes the script more reliable and simplifies the callers of the script (i.e. the tests and `pre-commit`).
   * No longer calls the script on the file itself, which was being done because `sys.argv[0]` is the name of the script.
   * `check_header.py --help` now works.
* Rewrites `check_header()` to not use a buffer.
    * The original motivation for a buffer was for performance, to avoid materializing the content of every checked file.
    * The downside is that buffer code is harder to read because it is far more low-level and imperative and requires keeping track of where the buffer is currently at.
    * Instead, can get same performance with better readability through a list comprehension that uses `f.readline()` 7 times.
* Inverts several conditionals in `check_header.py` for less nesting.
* Renames `check_header_helper.py` to `check_header.py`. This script is now the top level script, and not a helper.
* Replaces the error message `failed to parse header at all` with `missing the expected header` and `the header does not match the expected header`.
   *  `failed to parse header at all` is not very descriptive, and suggests their was an issue with IO.
* Adds type hints for better readability and less bugs.
* Removes unnecessary `__future__` imports and file encoding header.
* Use `textwrap.dedent()` where possible for better indentation.",sys argparse,"
* Uses argparse instead of reading from `sys.argv`, which brings these benefits:
* No longer reads from stdin to get added files.",14,Filesystem,Filesystem,False,False
650,spotdl/spotify-downloader,7f138e69c1190ba98ebf616cc2929595312fb02f,2021-02-08 07:16:35,argparse,sys,"Dev to Master (#1171)

* Run regressions on CI (#1158)
Authored by @aklajnert 

* Use argparse instead of raw `sys.argv` (#1157)
Authored by @aklajnert 

* FIxed error caused by songs with ':' in name (#1162)
Authored by @MikhailZex 

* Fixed TypeError when downloading tracks (#1177)
Authored by @xnetcat

* Bump version to 3.3.2

* Lint with flake8, fix code to pass it (#1178)
Authored by @aklajnert 

* Fixed flake8 (#1181)
Authored by @aklajnert

* Skip song if track is empty. (#1164)
Authored by @bee395 

Co-authored-by: Andrzej Klajnert <github@aklajnert.pl>
Co-authored-by: Michael George <MikhailZex@gmail.com>
Co-authored-by: Jakub <42355410+xnetcat@users.noreply.github.com>
Co-authored-by: bee395 <bee395@users.noreply.github.com>",sys argparse,"
* Use argparse instead of raw `sys.argv` (#1157)
Authored by @aklajnert",14,Filesystem,Filesystem,False,False
659,1Prototype1/HexBot,87a3d699db577e1cac02ec6b1406ed3cb28c7624,2020-09-17 08:05:33,aiohttp,requests,Using aiohttp instead of requests,requests aiohttp,"
Using aiohttp instead of requests",37,HTTP Clients,HTTP Clients,False,False
669,ParadoxAlarmInterface/pai,fac6f807b02028921310e48d14f3b71b365e283b,2020-05-08 19:28:46,aiohttp,requests,aiohttp instead of requests,requests aiohttp,"
aiohttp instead of requests",37,HTTP Clients,HTTP Clients,False,False
685,laramies/theHarvester,3bd1b8e12e8145157a9db4c683061d9c339311fc,2019-12-24 05:06:04,aiohttp,requests,"Minor fixes, and converted certspotter from requests to aiohttp.",requests aiohttp,"
Minor fixes, and converted certspotter from requests to aiohttp.",37,HTTP Clients,HTTP Clients,False,False
686,lgrahl/threema-msgapi-sdk-python,9ddf7688ea58f65a837c8ad58c1039c9cfa3800b,2015-12-15 19:48:06,aiohttp,requests,"Drop requests and switch over to aiohttp
Tests still need to be adapted
Make Connection class to a context manager",requests aiohttp,"Drop requests and switch over to aiohttp
Tests still need to be adapted
",37,HTTP Clients,HTTP Clients,False,False
689,pypa/bandersnatch,13ddc5b67326b5e20b3dedefe261711039281722,2020-02-25 16:45:33,aiohttp,requests,"Replace requests with aiohttp (#440)

- Change Master to use an aiohttp ClientSession
- Change Master.get method into an async generator to maintain API style
- Change Package class to use Master.get async generator
- Update utils user_agent() to always include aiohttp version + update tests
- Make `verify.py` use utils common USER_AGENT

Fix most tests + add in pytest-asyncio",requests aiohttp,"Replace requests with aiohttp (#440)
",37,HTTP Clients,HTTP Clients,False,False
690,qtumproject/qtum-electrum,6e80ba7b4fd8a3b6e6b2124c5d8ef64e89a62f5c,2018-09-06 14:18:45,aiohttp,requests,"asyncio: labels, crash_reporter, fx: migrate requests use to aiohttp",requests aiohttp,"
asyncio: labels, crash_reporter, fx: migrate requests use to aiohttp",37,HTTP Clients,HTTP Clients,False,False
691,randovania/randovania,17a68cd2f45c63729991e53336621cc887dbf694,2020-10-13 10:06:43,aiohttp,requests,Use aiohttp instead of requests in github_releases_data.py,requests aiohttp,"
Use aiohttp instead of requests in github_releases_data.py",37,HTTP Clients,HTTP Clients,False,False
695,y-young/nazurin,5ebe1066f1b9e663ac8763103627d18e28f7dc0d,2021-02-05 08:24:52,aiohttp,requests,refactor: switch requests to aiohttp,requests aiohttp,"
refactor: switch requests to aiohttp",37,HTTP Clients,HTTP Clients,False,False
699,abrt/faf,5d455ce43bf1bd955a52815592d8cb8eb99b7370,2018-06-04 07:03:44,munch,bunch,"Use munch instead of bunch

https://bugzilla.redhat.com/show_bug.cgi?id=1024800

Signed-off-by: Matej Marusak <mmarusak@redhat.com>",bunch munch,"
Use munch instead of bunch",12,Graphic,Graphic,False,False
703,onepercentclub/bluebottle,6a29fe1b8f0a5fff34ea5afedd9061f033ad2471,2020-10-06 07:19:13,munch,bunch,"Release/python 3 (#4292)

* Remove django-money-rates

Money rates are now part of django-mone and it is not Python 3 compatible

* Remove old apps

* Empty many obsolete apps

* Remove more old stuff

* Fix a bunch of tests

* More fixes

* More clean up

* Remove payments_logger

* Fix some serilaizer issues

* Fix a bunch of tests

* Fix test

* Stash

* Remove old payment logging and legacy apps

* Fix wallpost permissions

* Fix member exports

* Fix test

* Use public schema for exchange rates. Set correct backend name in rates backend factory. Use new api key

* Add celery task for updating rates

* Make sure amount_extra on projects has a default in factories

* Fix more tests

* Fix merge

* Run futurize over all code

* Update factory boy

* PEP8

* Fix user factory and default currency

* Fixes

* Fix tests

* Fix token_auth tests

* Fix unicode handling of emails

* More generic Parblue test

* Fix export test, fix properties test

* Only remove passowrd from member create after we set it first

* Add unicode method to contribution. Fix infinite recursioni in admin

* Remove accidentally commited code

* PEP8

* Fix participants/event

* Fix succeeding participants

* FIx currency test

* Add forgotten file

* Remove ipdb

* Fix only failing test

* Fix running under python3

* Ad migration back and fix

* Fix event tests

* Replace __unicode__ with __str__

* Fix token_auth

* Replace bunch with munch

* Fix setup

* Fix test

* PEP8 and Py3 testing

* Fix tests and update requirements

* Fix assignment tests

* Fix some funding tests

* Fix effects sorting

* Improve setup.py

* Fix more funding tests

* Update python3 saml

* Update test requirements

* Fix dkim signing, exporting csv in admin

* Fix scim tests

* Fix py2 test setup

* Correctly import StringIO

* Fix initiative tests

* Fix files, events tests

* Fix cms tests

* Fix organization tests

* More fixes

* Remove unused import

* Fix scripts

* Fix tests

* Fix Looker

* Fix social auth

* Fix slides test

* Upgrade defusedxml

* Fix test

* Fix command

* Fix saml test

* Fix member __str__. Fix event urls and admin

* Fix funding on python 2

* Fix funding tests on 2.7

* Fix notification __str__. Fix initiative test

* Fix import

* Surpress some verbosity during testing

* Fix payout key export test

* Fix member export

* Fix escaping csv

* Fix test and skip some warnings

* Fix final test

* Fix crontab for exchange rates

* Fix skills admin

* Remove unused exchange menu

* Fix theme admin

* Fix dashboard reset buttons

* Fix initiatives with org contact

* Test initiatives with org contact

* Remove automatically accept on event model. We do not use this anywhere. (#4297)

* Fix theme filter in initiatives admin

* Remove projects from statistics app (#4299)

* Merge masster (#4301)

* Add __str__ to payout/bank accounts (#4303)

* Add __str__ to payout/bank accounts

* Test admin pages for payout/bank account

* Fix wallpost admin

* Fix creating impact statistics

* Fix some __str__ methods on contributions

* Redeploy

* Merge/master py3 (#4309)

* Fix wallpost delete permissions

* FIx wallpost & migrate to TNI

* Remove project code from wallposts

* Remove unused code

* Remove more old project code in wallposts

* Remove more unused code

* Also mark new applicants succeeded when an assignment is succeeded (#4295)

* Display local time and timezone in date changed mails (#4293)

* Display local time and timezone in date changed mails

* Fix tests

* Add theme detail api

* Add more theme detail tests

* Add skill detail api + tests

* Fix tests

* Better fixing tests

* Have some logging on failing Flutterwave wehbhooks and make doanation amoutn superadmin editable

* Some more fixes for Flutterwave

* More tweaks

* Delete reactions by wall owner

* Fix test (#4304)

* Fix test

* Split up test for readability

* Fix Flutterwave updates for bank transfers

* Fix Flutterwave updates for bank transfers (#4306)

* Enable US bank accounts (#4307)

* Revert ""Roll back on_behalf changes (#4142)""

This reverts commit e4c3c87aca58feae99c12d361102e64a773a4cda.

* Add on-behalf logic again.

* Fix tests

* Remove random string

* Fix import

* Fix Parblue test again :-)

Co-authored-by: eodolphi <ernst@goodup.com>

* More flexible export testing

* Fix unicode and improve token auth admin (#4308)

* Fix unicode and improve token auth admin

* Fix geo tests

* Fix Parblue test again :-)

* Fix Parblue test again :-) (#4310)

* Clean up analytics app (#4312)

* Clean up analytics app

* Add migration & fix tests

* Remove obsolete test

* Request new open exchange key

Co-authored-by: Loek van Gent <loek@goodup.com>",bunch munch,"
* Fix a bunch of tests",12,Graphic,Graphic,False,False
707,santoshphilip/eppy,8dd013d95446e3534507523fee473b94220a90ae,2016-03-29 12:50:41,munch,bunch,Replace bunch with munch,bunch munch,"
Replace bunch with munch",12,Graphic,Graphic,False,False
710,getredash/redash,b31c5be70e43fc6809ed19d5a76928aeffebdbc8,2014-02-06 18:55:13,flask,tornado,Replace Tornado with Flask,tornado flask,"
Replace Tornado with Flask",3,Web Framework,Web Framework,False,False
714,DLR-RM/BlenderProc,91e1baf16be424b9c237d3eccda7b14b70336c7b,2019-10-07 16:19:45,pyyaml,json,Switches to yaml format for config files instead of json,json pyyaml,"Switches to yaml format for config files instead of json
",55,Serialization,Serialization,False,False
715,DMS-Aus/Roam,714acf4697d5cf1e98ad3956ea3fbeaf2f4ca83a,2013-07-03 04:41:58,pyyaml,json,Lets use yaml instead of JSON,json pyyaml,"
Lets use yaml instead of JSON",55,Serialization,Serialization,False,False
724,StackStorm/st2,d6fa624b38b9bdac25b6e3f70e94ba102bb19019,2014-10-15 10:55:26,pyyaml,json,Use YAML instead of JSON for content pack configs.,json pyyaml,"Use YAML instead of JSON for content pack configs.
",55,Serialization,Serialization,False,False
728,awslabs/sockeye,948e4ec443168eb8ed2868a6c29a73315ea33e18,2018-05-19 16:32:03,pyyaml,json,"Added support for config files (#402)

* Partially reverted 5a3bf5f8

* Added support for config files

Specify a config file with --config. Command line parameters have
precedence over the values read from the config file, as expected.

The config file is a json serialization of the namespace returned by
argparse, casted to a dictionary. The file args.json produced by the
training can be used as config file.

The config file does not need to be complete. Missing parameters will
be read from the command line or will take default values.

Additionally the functionality introduced in 5a3bf5f8 has been
reimplemented, accessing the argument_definitions member of
ConfigArgumentParser.

* Added unit tests for config files

* Addressed (most of) github comments

* switch from json to yaml

* changelog, minor version

* Changed config file format to YAML

* Typo

* mypi

* Added test overwriting config file argument with command line",json pyyaml,"
* switch from json to yaml",55,Serialization,Serialization,False,False
736,dataversioncontrol/dvc,1937527249e286d122692109596b238f2f12679d,2020-04-28 10:36:05,pyyaml,json,"dvc: implement multistage dvcfile (#3676)

* dvc: use lockfile as yaml instead of json

* refactor Dvcfile into Pipeline file and Single stage file

* fix tests

* dvc: fix outputs

* add more tests for collection of outputs

* add tests for data cloud/get/import/ls

* tests: test for checkouts

* Allow other checksums other than md5

* tests: use iterdir instead of os.listdir

* cleanup errors reported by cc and ds

* utils: throw DvcException instead of plain Exception

* tests: use yaml.load instead of json.load

* run: split assignments

* Update dvc/stage/exceptions.py

Co-authored-by: Ruslan Kuprieiev <kupruser@gmail.com>",json pyyaml,"
* dvc: use lockfile as yaml instead of json",55,Serialization,Serialization,False,False
740,epinna/weevely3,ebd36267dee03cb4602ef5de94ac8767f965f153,2014-10-03 12:31:42,pyyaml,json,Replace json with yaml sessions files,json pyyaml,"Replace json with yaml sessions files
",55,Serialization,Serialization,False,False
743,hammerlab/mhcflurry,3829f81e04d0eafc320bc44dfbc5fe823335b3b1,2017-11-13 18:46:39,pyyaml,json,"Bump version, upgrade to Keras 2.0.9

* Switch from JSON to YAML for hyperparameters
* Pin tensorflow (hoping will help with #110)",json pyyaml,"
* Switch from JSON to YAML for hyperparameters
* Pin tensorflow (hoping will help with #110)",55,Serialization,Serialization,False,False
744,hibtc/cpymad,1224d36ae24eb1ff9ad539fdf8f8c9725f6e8367,2014-01-20 10:45:47,pyyaml,json,"converting from yaml->json in model.py
also changed type() checks into isinstance",json pyyaml,"
converting from yaml laifuhewb json in model.py
also changed type() checks into isinstance",55,Serialization,Serialization,False,False
749,metabrainz/picard,01c6f196d510144883838e777d2d423fa36a02ab,2021-05-07 22:08:53,pyyaml,json,Use YAML instead of JSON for import / export,json pyyaml,"
Use YAML instead of JSON for import / export",55,Serialization,Serialization,False,False
757,patacrep/patacrep,7556c99703e1c34fa13781aba549b30bb74e65f1,2015-12-14 16:33:25,pyyaml,json,Replace json parser by yaml,json pyyaml,"
Replace json parser by yaml",55,Serialization,Serialization,False,False
758,poldracklab/niworkflows,1e602425656796b01e6045c54250131e86c19c1f,2019-04-25 23:19:54,pyyaml,json,"fix(reports): minimal fixes to the report system

- Fix suffix for ``desc-rois`` query
- Replace the defaultconfig.json file with a YAML file which permits
newlines. The JSON format was to rigid and made description and caption
fields look really ugly as one-liner. Now it is easier to follow and
edit.",json pyyaml,"
- Fix suffix for ``desc-rois`` query
- Replace the defaultconfig.json file with a YAML file which permits
newlines.",55,Serialization,Serialization,False,False
760,ros-infrastructure/bloom,1b11e72f5dc1dafa704880dbaa7cbd29ef814f37,2013-02-14 01:22:56,pyyaml,json,Convert to yaml from json and improve config edit,json pyyaml,"
Convert to yaml from json and improve config edit",55,Serialization,Serialization,False,False
763,torchbox/django-pattern-library,8881a34258afabcb5e33e0983ef526d1417e7a9f,2017-12-01 13:03:53,pyyaml,json,Use yaml files instead of json for stub data,json pyyaml,"
Use yaml files instead of json for stub data",55,Serialization,Serialization,False,False
767,borisbabic/browser_cookie3,b1ae7c32d111dc23f8d12058dd39b560e285bec6,2016-01-06 05:27:27,pyaes,pycryptodome,Replacing pycrypto dependency with other aes and pbkdf2 modules,pycryptodome pyaes,"
Replacing pycrypto dependency with other aes and pbkdf2 modules",5,Crypto,Crypto,False,False
768,ihaveamac/3dsconv,77ee37895e6fbe48b789a564ef084d355098549f,2017-05-19 04:32:28,pyaes,pycryptodome,"rewrite for python 3, support prot boot9 keys & remove xorpad support, switch to pyaes instead of pycrypto, other things i probably forgot",pycryptodome pyaes,"
rewrite for python 3, support prot boot9 keys & remove xorpad support, switch to pyaes instead of pycrypto, other things i probably forgot",5,Crypto,Crypto,False,False
769,mkb79/Audible,b07bae9d2f59bdf7c60c90c9ff406c3ecb195123,2019-08-14 21:44:31,pyaes,pycryptodome,"switch from pycrypto to pyaes

There are problems to install pycrypto on some machines. Switches to
pyaes who is a pure python package. It's slower than
pycrypto/pycryptodome but it's okay. It's only needed on load/save
credentials.",pycryptodome pyaes,"
switch from pycrypto to pyaes",5,Crypto,Crypto,False,False
778,psychopy/psychopy,a6586915fd3e663dadf60417abeae8cc6195a654,2019-04-30 23:42:37,pillow,scipy,"BF: Fixed EyeLink Camera Image transfer display during camera setup

- switched from scipy.misc to PIL.Image
- camera image also resized to 640x480 for display.",scipy pillow,"
- switched from scipy.misc to PIL.
Image",10,Deep Learning,Deep Learning,False,False
779,python-microscopy/python-microscopy,fde9475ad73d7e69675ca3601a34d1d859f67157,2020-06-05 18:42:51,pillow,scipy,Swap deleted scipy function for recommended PIL function,scipy pillow,"
Swap deleted scipy function for recommended PIL function",10,Deep Learning,Deep Learning,False,False
788,psychopy/psychopy,a6586915fd3e663dadf60417abeae8cc6195a654,2019-04-30 23:42:37,pillow-simd,scipy,"BF: Fixed EyeLink Camera Image transfer display during camera setup

- switched from scipy.misc to PIL.Image
- camera image also resized to 640x480 for display.",scipy pillow-simd,"
- switched from scipy.misc to PIL.
Image",10,Deep Learning,Deep Learning,False,False
789,python-microscopy/python-microscopy,fde9475ad73d7e69675ca3601a34d1d859f67157,2020-06-05 18:42:51,pillow-simd,scipy,Swap deleted scipy function for recommended PIL function,scipy pillow-simd,"
Swap deleted scipy function for recommended PIL function",10,Deep Learning,Deep Learning,False,False
797,Baekalfen/PyBoy,49f36467e3bb325d0f4e9009da03bd538d916342,2019-08-30 08:22:23,pytest,unittest,"Complete revamp of external API (#78)

* WIP: Better botsupport

* WIP: Unittesting

* WIP: Stabilized screen_buffer APIs and added NumPy and PIL versions

* WIP: Stabilized screen_buffer APIs and added NumPy and PIL versions

* Add external APIs covered

* Clean-up and compatible with PyPy

* Improving external API, adding documentation

* Fixed compile and tests

* Documentation, test and improved API

* Improved API and testing

* Testing complete

* Merged and everything working. Test for windows

* Big Tile/TileView overhaul. Needs documentation

* Refreshed docs

* Changed PyBoy interface to better support settings

* Updated docs and test

* Removed old TODO

* More docstrings and tile identifiers

* Update Source/main.py

Co-Authored-By: Kristian Sims <kristian.sims@gmail.com>

* More PEP8, some bug fixes

* Forgot to rename a variable",unittest pytest,"
* Fixed compile and tests",304,Testing,Testing,False,False
800,Breakthrough/PySceneDetect,a30ddd4a0a99b32beae41da83a3a9ebe72aa845d,2018-07-15 03:14:34,pytest,unittest,"Remove unneeded scenedetect.scene_result module.
Remove stop method from VideoManager (all that is required is release()).
Rename scenedetect.platform.STR to scenedetect.platform.STRING_TYPE.
Add get_current_timecode() method to VideoManager to get current decoder position as a FrameTimecode.
Add reset() method to VideoManager to reset position to beginning and allow iterating through frames again (requires calling release() before reset(), after which start() can be called as usual.
Update all test cases to use pytest.
Update file copyright headers and fix some pylint issues.
Rename input_videos() method in CliContext to parse_options().",unittest pytest,"
Update all test cases to use pytest.",304,Testing,Testing,False,False
804,Clinical-Genomics/BALSAMIC,a96066c3a8ecd1cc1cbe1620efd2faee9da68682,2019-06-17 10:31:52,pytest,unittest,"Unit Test added for run cli and utils  (#168)

* test (cli): added testcases for run command

* test (cli_utils): test_utils - unittest to pytest and added new testcases

* style (test): added pep8

* fix (test): conda yaml path fixed and testcase added for get_package_split

* test (cli_utils): testcase added for get_snakefile

* test (rule_utils): test added for get_chrom

* fix (test): complete test for get_snakefile

* test (rule_utils): testcases added for get_vcf, get_sample_type

* test (rule_utils): testcases for get_conda_env, get_picard_mrkdup

* fix (test): commented out get_conda_env as BALSAMIC_env.yaml in gitignore

* refactor (cli_utils): moved get_sample_name and get_analysis_dir to report",unittest pytest,"
* fix (test): conda yaml path fixed and testcase added for get_package_split",304,Testing,Testing,False,False
805,Cog-Creators/Red-DiscordBot,e2c8b1100870511aaa575ce807f9009e5a5dba99,2019-11-08 01:36:16,pytest,unittest,"[V3 Downloader] Revision tracking (#2571)

* feat(downloader): Install cog from specific commit in repo (initial commit)

- Repo and Installable have commit property now
- New class inheriting from Installable -
InstalledCog (old one from converters.py removed)
- New Repo.checkout() method, which is also async ctx manager
ref #2527

* fix(downloader): Keep information about repo's branch in config

- This is needed to make sure that repo can go back from detached state in some rare unexpected
cases
- current branch is determined by `git symbolic-ref` now as this command errors for detached
HEAD

* feat(downloader): Update repo without cogs, update single cog

The most important part of issue #2527 has been added here
- `[p]repo update` command added
- new conf format - nested dictionary repo_name->cog_name->cog_json
  installed libraries are now kept in conf too
  - `InstalledCog` renamed to `InstalledModule` - installed libraries use this class
  - `Downloader.installed_libraries()` and `Downloader.installed_modules()` added
  - `Downloader._add_to_installed()` and `Downloader._remove_from_installed()`
    now accept list of modules, of both cogs and libraries
- `[p]cog install` tells about fails of copying cog and installing shared libraries
- `[p]cog update` will truly update only chosen cogs (if provided) or cogs that need update
  - pinned cogs aren't checked
  - before update, repos are updated
  - to determine if update is needed `Repo.get_modified_modules()` is used
- `[p]cog pin` and `[p]cog unpin` commands for pinning/unpinning cogs added
- `Repo.checkout()` allows to choose ctx manager exit's checkout revision
- `Repo.install_cog()` returns `InstalledModule` now and raises CopyingError (maybe breaking?)
- `Repo.install_libraries()` returns 2-tuple of installed and failed libraries (maybe breaking?)
- `RepoManager.get_all_cogs()` added, which returns cogs from all repos
- `RepoManager.repos` property added, which contains tuple of `Repo`

* test(downloader): Repo.current_branch() throws an exception, when branch can't be determined

* style(downloader): rename _add_to_installed to _save_to_installed

This method is used for both adding and updating existing modules in Config

* refactor(downloader): add ctx.typing() for few commands

`[p]cog install` is nested hell, can't wait for moving install logic to separate method

* fix(downloader): refactor and fix `set` usage

* perf(downloader): update commits for ALL checked modules to omit diffs next time

This will also disable running git diff for cogs that have the same commit as the latest one

* style(downloader): few style improvements

- use of mutable object in method definition
- make Repo._get_full_sha1() public method
- too long
line
- don't use len to check if sequence is empty

* feat(downloader): add `[p]cog updateallfromrepos` and `[p]cog updatetoversion` commands

- moved cog update logic into `Downloader._cog_update_logic()` (lack of better name)
  - splitted
whole cog update process into smaller methods
  - might still need some improvements
- added new
methods to `Repo` class:
  - `is_on_branch()` to check if repo is currently checked out to branch

- `is_ancestor()` to check if one commit is ancestor of the other
- fix for
`Downloader._available_updates()` behaviour
broken by commit
5755ab08ba67556b3863e907c6f44d80f4f13d88

* feat(downloader): try to find last commit where module is still present

Enhancements:
- `Installable` now has `repo` attribute containing repo object or `None` if repo is
missing
- `Downloader._install_cogs()` and `Downloader._reinstall_libraries()` are able to install
modules from different commits of repo
- `Repo.checkout()` as ctx manager will now exit to commit
which was active before checking out
- unification of `rev` and `hash` terms:
All function
parameters are explicitly called `hash`, if it can only be commit's full sha1 hash or `rev` if it
can be anything that names a commit object, see
[link](https://git-scm.com/docs/git-rev-parse#_specifying_revisions)
- new
`Repo.get_last_module_occurence()` method, which gets module's Installable from last commit in which
it still occurs

* docs(downloader): Add basic description for `InstalledModule`

* fix(downloader): cog ignored during updates if its commit was missing

After config format update, commit string is empty until update and when such cog was checked and it
wasn't available in repo anymore, it was ignored

* refactor(downloader): Installing cogs from specific rev will pin them

* perf(downloader): Don't checkout when current commit equals target hash

- changes to `Repo.checkout()`:
  - `exit_to_rev` is now keyword only argument
  - added
`force_checkout` to force checkout even if `Repo.commit` value is the same as target hash

* refactor(downloader): Repo._run() stderr is redirected to debug log now

- added two keyword arguments:
  - `valid_exit_codes` which specifies valid exit codes, used to
determine if stderr should be sent as debug or error level in logging
  - `debug_only` which
specifies if stderr can be sent only as debug level in logging

* style(downloader): stop using `set` as arg name in `_load_repos()`

* feat(downloader): pass multiple cogs to `[p]cog (un)pin`

* refactor(downloader): accept module name instead of instance, fix spelling

* style(downloader): few small style changes

* fix(downloader): add type annotations + fixes based on them

- fix wrong type annotations and add a lot of new ones
- add checks for `Installable.repo` being `None`
- fix wrong return type in `Downloader._install_requirements`
- show repo names correctly when updating all repos
- fix error when some requirement fails to install

BREAKING CHANGE:
- type of `Repo.available_modules` is now consistent (always `tuple`)

* tests: use same event loop policy as in Red's code

* enhance(downloader): fully handle ambiguous revisions

* build(deps): add pytest-mock dependency to tests extra

* fix(downloader): minor fixes

* feat(downloader): add tool for editing Downloader's test repo

This script aims to help update the human-readable version of repo
used for git integration tests in ``redbot/tests/downloader_testrepo.export``
by exporting/importing it in/from provided directory.

Note
----
Editing `downloader_git_test_repo.export` file manually is strongly discouraged,
especially editing any part of commit directives as that causes a change in the commit's hash.
Another problem devs could encounter when trying to manually edit that file
are editors that will use CRLF instead of LF for new line character(s) and therefore break it.

I also used `.gitattributes` to prevent autocrlf from breaking testrepo.

Also, if Git ever changes currently used SHA-1 to SHA-256 we will have to
update old hashes with new ones. But it's a small drawback,
when we can have human-readable version of repo.

Known limitations
-----------------
``git fast-export`` exports commits without GPG signs so this script disables it in repo's config.
This also means devs shouldn't use ``--gpg-sign`` flag in ``git commit`` within the test repo.

* tests(downloader): add git tests and test repo for them

Also added Markdown file that is even more clear than export file
on what the test repo contains.
This is manually created but can be automated on later date.

* test(downloader): add more tests related to RepoManager

These tests use expected output that is already guaranteed by git tests.

* chore(CODEOWNERS): add jack1142 to Downloader's folders

I know this doesn't actually give any benefit to people that don't have
write permission to the repo but I saw other big fella devs doing this,
so I think this might be advisable.

* enhance(downloader): allow easy schema updates in future

* enhance(downloader): more typing fixes, add comments for clarity

* feat(downloader): add python and bot version check to update process

follow-up on #2605, this commit fully fixes #1866

* chore(changelog): add towncrier entries

* fix(downloader): use `*args` instead of `commands.Greedy`

* fix(downloader): hot-reload issue - `InstallableType` now inherits from `IntEnum`

There's desync of `InstallableType` class types due to hot-reload
and `IntEnum` allows for equality check between different types

* enhance(downloader): ensure there's no cog with same name installed

should fix #2927

* fix(downloader): last few changes before marking as ready for review",unittest pytest,"
This script aims to help update the human-readable version of repo
used for git integration tests in ``redbot/tests/downloader_testrepo.export``
by exporting/importing it in/from provided directory.",304,Testing,Testing,False,False
807,DataDog/dd-trace-py,491c3d536fcc40e494118ceba0aa00d5c66c298a,2020-12-16 22:24:44,pytest,unittest,"Writer refactor (#1781)

* core: remove health metrics (#1732)

These are not being used and are a hindrance to refactoring the agent
writer. Something like #1143 should provide a cleaner solution to
collecting metrics like these.

* rework trace agent writer (#1740)

- all ""API"" and ""Payload"" class logic is moved to the writer
- use approximate* encoded byte count instead of trace count for queue limit
- run our integration tests against a v5 agent as well as the latest
- rewrite all the integration tests
- add snapshot tests

*because it doesn't include the msgpack header and top-level array but these are just a few bytes.

* add include_tracer option to snapshot (#1782)

This allows a new tracer instance to be used and configured for snapshot test cases.

* add health metrics back (#1797)",unittest pytest,"
This allows a new tracer instance to be used and configured for snapshot test cases.",304,Testing,Testing,False,False
812,ESMValGroup/ESMValCore,7e8e9dace5f96c6959bb26d7c771a825724c9244,2017-09-29 09:36:53,pytest,unittest,Use pytest instead of unittest to run tests,unittest pytest,"
Use pytest instead of unittest to run tests",304,Testing,Testing,False,False
813,FAForever/server,d5934e9c583772627a1be43414035cec7f0bff27,2019-09-06 19:16:14,pytest,unittest,"[WIP] Support for multiple player ratings (#486)

* Get rid of BasePlayer class

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove Player class mocking in tests

The Player class is essentially plain old data right now. Remove all
mocking of it to make it easier to modify. If we ever bless Player with
non-trivial behaviour, we can make a mock or an abstract class for it.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Improve game stats coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use a dict-like object for player ratings

Preparations for adding new rating types.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add asynctest to dependencies

This will save us some manual mucking around with asyncio's sleep.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Replace CoroMock with asynctest's CoroutineMock

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove BaseGame class

Everything inherits from the Game class anyway, and all ""abstract""
methods are already implemented there.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix ban test by formatting >100 year bans as 'forever'

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Make the DB non-global

This should make tests a bit more manageable.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use asynctest/pytest-asyncio for tests

This replaces homegrown tools for coroutine testing with asynctest and
pytest-asyncio. One benefit is that each test gets its own fresh event
loop, another will come with proper tools for fast-forwarding event
loops.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add an event loop fast-forwarding decorator

This removes the need for ugly asyncio.sleep monkeypatching. It also
exposes some issues with tests not closing the server after the test
ends; we ignore it for now, eventually we'll fix that too.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix some sleep usage in tests

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* A bit more test coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove no longer needed loop fixture

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Update game docstring

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>",unittest pytest,"
* Remove Player class mocking in tests",304,Testing,Testing,False,False
816,GoogleCloudPlatform/terraform-python-testing-helper,10ccf0e5ad2a58486681a05e5a0ba65919154551,2019-10-30 06:19:32,pytest,unittest,"Refactor module and tests for v1.0.0 (#4)

* refactor plan output (untested)

* tests refactoring, plan output

* cleanup module interface, remove old tests, new plan output test

* update CHANGELOG with interface changes

* update CHANGELOG with test changes

* refactor test plan wrapper and related tests

* refactored args and files tests

* rename synthetic plan test

* remove stale example files

* add support for __contains__ in wrapper class, remove stale setup arguments

* add plan sample and test

* apply sample-based test

* update README

* update README

* CI lint trigger

* add missing boilerplate

* CI test trigger",unittest pytest,"* cleanup module interface, remove old tests, new plan output test",304,Testing,Testing,False,False
817,HTTP-APIs/hydrus,d8616e341959d666b4a1d5444e9e9f9f6fa993c3,2020-05-02 07:46:13,pytest,unittest,"Migrate test suite from unittest to pytest (#466)

* Migrate test suite from unittest to pytest - 1

* Migrate authentication tests from unittest to pytest
  in tests/functional/test_auth.py
* Delete tests/test_auth.py

* Migrate test suite from unittest to pytest - 2

* Migrate CRUD operation tests from unittest to pytest
  in tests/unit/test_crud.py
* Delete tests/test_crud.py

* Migrate test suite from unittest to pytest - 3

* Migrate app tests and socket tests from unittest to pytest
  in tests/functional/test_app.py and
  tests/functional/test_socket.py respectively
* Delete tests/test_app.py

* Migrate test suite from unittest to pytest - 4

* Migrate the test_cli.py and test_pep8.py in /hydrus/tests
to pytest

* Update travis config to run pytest tests instead of unittest

* Add pytest to requirements.txt

* Fix PEP8 compliance

* Fix PEP8

* Deleted old test files",unittest pytest,"
Migrate test suite from unittest to pytest (#466)",304,Testing,Testing,False,False
818,IBM/lale,cc1979f31418c1afb874f0c3b21dadfda8f7f7ec,2020-06-10 21:00:44,pytest,unittest,Use pytest parametrize for test notebooks,unittest pytest,"
Use pytest parametrize for test notebooks",304,Testing,Testing,False,False
819,JNRowe/pyisbn,4c1f01026aeaffda1c4d4954730768ecbd646605,2017-09-27 11:29:18,pytest,unittest,"Switch to pytest test runner

Didn't really want to do this, but nose2 appears to have stalled.  Along
with the earlier problems with dependency pinning, we now have broken
profiling support with the removal of hotshot in newer Python releaes.

Refs #11.  Still disturbingly slow, but it feels like the best choice.",unittest pytest,"
Switch to pytest test runner",304,Testing,Testing,False,False
821,KeepSafe/aiohttp,7698eeef62b0ef413ab58c2b53a1f2c094c6cdeb,2015-10-13 19:40:11,pytest,unittest,Convert helpers test to pytest style,unittest pytest,"
Convert helpers test to pytest style",304,Testing,Testing,False,False
823,KimiNewt/pyshark,03271162e6933c2f541a18548986dd7ea2d542c6,2014-05-16 09:03:34,pytest,unittest,Changed tests from UnitTest to py.test,unittest pytest,"
Changed tests from UnitTest to py.test",304,Testing,Testing,False,False
824,LLNL/spack,c6d9a45f18cedd810cdee891d462199f86dc6a7c,2017-03-07 15:03:12,pytest,unittest,"test/environment.py: ported to pytest, added a test on separators (#3375)",unittest pytest,"
test/environment.py: ported to pytest, added a test on separators (#3375)",304,Testing,Testing,False,False
827,Materials-Consortia/optimade-python-tools,ec207faec63173acf7cb3f390b686ac7a4639299,2020-07-16 10:10:28,pytest,unittest,"Use pytest instead of unittest (#390)

Add tests for `sort`.
Update handling of the `sort` parameter, casting the requested fields to
the known aliased version.

Update all CI to Python 3.8 by default.

Use static requirement versions for pre-commit CI.

Co-authored-by: Matthew Evans <me388@cam.ac.uk>",unittest pytest,"
Use pytest instead of unittest (#390)",304,Testing,Testing,False,False
830,MozillaSecurity/lithium,968f8039f72a5b4942bd8f648fb0665acbaa84e8,2020-10-21 18:56:06,pytest,unittest,"Major refactoring of Lithium.

- rename all attributes from camelCase to snake_case
- separate strategies and testcases into separate modules
- change strategy API to make it useable as an iterator
  (without using main/interesting interface)
- use setuptools to enumerate strategies and testcases
- move unittests to pytest
- setup linters as pre-commit
- minimum supported Python is 3.5",unittest pytest,"
- use setuptools to enumerate strategies and testcases
- move unittests to pytest
- setup linters as pre-commit",304,Testing,Testing,False,False
831,NSLS-II/ophyd,b8632536401bf61bf93a61c76b713371d563f777,2018-05-09 00:54:10,pytest,unittest,"TST: remove unittest.TestCase sub-classing

Conflicts with auto-fixtures

TST: fix naming so test classes get found

TST: actually fix the timeout test

TST: provide assertXxxx methods as a mix-in

This seems less work than porting all of the self.assertXxxx calls.",unittest pytest,"
TST: fix naming so test classes get found",304,Testing,Testing,False,False
832,OGGM/oggm,0a0d90bbf87ac41f0a3756b2b9a6f378b3857152,2020-02-02 17:11:37,pytest,unittest,"Refactor test_models (#934)

* Move away from xunit model -- test_models

* Parametrize one test

* parametrize simple dataset test and format

* Move gdir_copy fixture to conftest.py

* Rename hef_gdir fixtures

* Add documentation to fixtures in conftest.py
More renaming

* Remove Backwards test class

* Format

* fix failing test

* add whats new

Co-authored-by: Fabien Maussion <fabien.maussion@uibk.ac.at>",unittest pytest,"
* parametrize simple dataset test and format",304,Testing,Testing,False,False
833,OP2/PyOP2,aa8302fc606776f3b3ccef5e4eb129d3e503710e,2012-07-19 09:33:47,pytest,unittest,Convert Constants unit test to pytest,unittest pytest,"
Convert Constants unit test to pytest",304,Testing,Testing,False,False
836,PennyLaneAI/pennylane,1ddf632238f4d9878dfc78f3ba0796d8d12dd997,2019-05-29 16:38:03,pytest,unittest,"Add templates (#195)

* Added CVNeuralNetCircuit which accepts square parameters

* add CVQNN parameter initialisations, restructure templates and move to folder

* docs minor change

* start to add more embeddings

* Rewrite tests to reflect new CVQNN structure and template names

* update docs

* add cosine embedding and start random circuit

* some fixes from testing

* fix bug in parameter initialisation - uniform and normal sampling was swapped in CVQNN

* add CV embeddings

* update docstring

* add test for layers file - not yet ported to pytest

* finish unit tests for utils

* start embeddings tests

* start layers tests

* typo

* finish embeddings testing except from CV phases

* rewrite existing tests as pytests

* add phase test for squeezing and displacement embeddings

* Delete more complex strategies of angle embedding to keep methods simple

* tests for random layer added

*  add parameter integration tests

* adapted structure so that templates take lists of (layers of) parameters.

* deleted obsolete test

* Make coverage reach 100%

* doc formatting fixes

* Update pennylane/templates/embeddings.py

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/embeddings.py

typo

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/embeddings.py

typo

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/embeddings.py

typo

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/parameters.py

typo

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Update pennylane/templates/parameters.py

typo

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* Implementing suggested changes from code review (Josh) I

* Some more docs fixes

* clean docstrings

* add images to layers

* Finish first round of documentation proof reading

* addressing aroosa's comments.

* Address @aroosa's comments in code review

* make versions of parameter initialisation methods that sample from normal distr

* Update doc/Makefile

* Update setup.py

* docs formatting bug fixes

* Update doc/code/templates.rst

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update doc/code/templates.rst

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update doc/code/templates.rst

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update doc/code/templates.rst

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update tests/test_templates_embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update tests/test_templates_embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update tests/test_templates_embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update tests/test_templates_layers.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Some corrections from Nathan's code review

* Update pennylane/templates/layers.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update pennylane/templates/embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* more corrections from Nathan's code review

* Made error messages consistent in punctuation. Fixed some error messages in the test calls.

* deleted notorious a in 'two a'

* Describe second option for integration

* Fix imports to allow for qml.templates... imports, make wires argument in embeddings compulsory

* make wires a positional argument

* Restructured landing page (templates.rst) in docs!

* added a separate normal mean and var for all cvqnn functions that set the 'active' parameters. Extended explanation in doc strings

* Adapted some tests, commented out the sampling tests for now.

* Update tests as per discussion on sample testing. Also added more layers tests, copying the layer tests.

* fix an accidentally deleted test, code coverage now 100%

* give random layers a seed option for architecture and add test

* Fix code Factor issues of import order and list as default argument.

* suppress pylint error

* Apply suggestions from code review

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update tests/test_templates_embeddings.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update tests/test_init.py

Co-Authored-By: Nathan Killoran <co9olguy@users.noreply.github.com>

* Update pennylane/init.py

Co-Authored-By: Josh Izaac <josh146@gmail.com>

* tidied up fixtures

* Update conftest.py

* Simplified n_subsystems fixture system from Josh's comment",unittest pytest,"
* Made error messages consistent in punctuation.
Fixed some error messages in the test calls.",304,Testing,Testing,False,False
837,ProjectQ-Framework/ProjectQ,aa3afaf4b01bd028c19b86869141cede2873d986,2021-06-16 12:28:55,pytest,unittest,"Ctrl generalize (#400)

* Init

* Apply control through compute engine. Added Enum class

* Apply control through compute engine. Added Enum class

* Apply control through compute engine, added enum class

* Fix small bug due to wrong default value, clean up output

* abolished decomp

* Revert ""abolished decomp""

This reverts commit 36743a15b7e3c66a9f648735de91f690eea51121.

* Apply Control through decomposition. Added Test Files

* Fix a few issues with new control state

- Address inconsistency with qubit state ordering when using integers
  as input control state
- Add canonical_ctrl_state function to centralise functionality
- Fix some file encoding
- Fix tests

* Update examples/control_tester.py

* Add some missing license headers and fix some tests

* Add missing docstring

* Cleanup some code in AQT and IBM backends

* Some code cleanup in _simulator.py

* Change autoreplacer priority for control. Added Additional test for autoreplacer. Added check for canonical ctrl state func.

* Update projectq/setups/default.py

* Update projectq/setups/decompositions/cnu2toffoliandcu.py

* Update projectq/setups/decompositions/cnu2toffoliandcu.py

* Cleanup code in _replacer.py

* Tweak some of the unit tests + add comments

* Add more tests for canonical_ctrl_state and has_negative_control

* Short pass of reformatting using black

* Bug fixing for rebasing

* Reformat files. Improve control_tester examples. Update change log

* Dummy change to trigger CI with new state

* Use pytest-mock for awsbraket client testing

* Fix Linter warnings

* Use pytest-mock also for awsbraket backend tests

* Fix missing tests in backends and added support for IonQ

* Fix linter warning

* Add support for AWSBraketBackend

* Fix small typo

* Use backported mock instead of unittest.mock

* Sort requirements_tests.txt

* Fix a bunch of errors that happens at program exit

 Monkeypatching or patching of external may unload the patch before
 the MainEngine calls the last flush operations which would then call
 the original API although unwanted.

Co-authored-by: Damien Nguyen <ngn.damien@gmail.com>",unittest pytest,"
- Fix some file encoding
- Fix tests",304,Testing,Testing,False,False
841,QCoDeS/Qcodes,08ec80613694b3a29423a8fb8b0290e9d3be3add,2020-10-05 12:54:49,pytest,unittest,convert test metadata,unittest pytest,"
convert test metadata",304,Testing,Testing,False,False
847,SamR1/FitTrackee,2d9d3056c294ed7b34895ca7dcdfac8045e1f59d,2018-04-09 20:10:56,pytest,unittest,API: use of pytest instead of unittest,unittest pytest,"
API: use of pytest instead of unittest",304,Testing,Testing,False,False
848,SparkTC/enterprise_gateway,3164804781be2015a319495f4db75ba145f57aba,2018-02-27 19:10:43,pytest,unittest,"Initial changes of itests to use pytest

Fixes #263
Closes #268",unittest pytest,"
Initial changes of itests to use pytest",304,Testing,Testing,False,False
849,StellarCN/py-stellar-base,89b242ec6945896a4eff96f5eb0ba515cec8bd17,2018-04-26 13:09:32,pytest,unittest,"local stellar infrastructure for testing (#106)

- added docker-based stellar infrastructure
- changed testing framework from nose to pytest
- updated tests to be pytest compatible
- changed builder to work with custom network
- updated travis build to use new testing infrastructure
- added makefile
- amended package setup
- updated dependencies",unittest pytest,"- changed builder to work with custom network
- updated travis build to use new testing infrastructure
- added makefile
- added docker-based stellar infrastructure
- changed testing framework from nose to pytest
- updated tests to be pytest compatible",304,Testing,Testing,False,False
850,Telefonica/toolium,4644468ef2ba4e7cf20d9966811cbaf2eb71db66,2016-07-07 14:51:13,pytest,unittest,Convert unittest/nose tests to pytest,unittest pytest,"
Convert unittest/nose tests to pytest",304,Testing,Testing,False,False
851,TileDB-Inc/TileDB-Py,34d5ed2c463172ef86d8434b37055b202034b099,2021-04-10 19:00:36,pytest,unittest,"Refactor tests to use pytest only

- replace TestCase inheriting class with standalone DiskTestCase
  class (implementing the assert methods we use)
- allows using pytest parameterization on any test, which is not
  possible with subclasses of unittest.TestCase
- add pytest.ini",unittest pytest,"
class (implementing the assert methods we use)
- allows using pytest parameterization on any test, which is not
possible with subclasses of unittest.",304,Testing,Testing,False,False
852,Toblerity/Fiona,20abd3bc82635cffbbfd0fa3b46a9b750c2ef225,2016-11-13 10:29:27,pytest,unittest,"Switch to pytest (#376)

* Switch to pytest from nosetests.  This commit removes the option to run tests with 'python setup.py test'

* Replace unittest.skipIf() with pytest.mark.skipif() and switch some instances of custom tmpdir handling to the builtin pytest fixture.

* Simplify install step.

* Use pytest fixtures to ensure required test files are built.

* Move the unittest.TestCase fixture wrappers to conftest so they are globally available.

* Revert tests/test_bytescollection.py::ReadingTest to a unittest.TestCase() with pytest fixture wrappers to minimize test changes.

* + uttc_path_coutwildrnp_json() fixture

* Use the right fixture.

* Print the GDAL version in Travis too.

* Switch to pytest 3

* xfail a test that has been excluded for years.

* Switch to 'python setup.py develop'

* Properly construct paths that are supported on *nix and Windows.",unittest pytest,"
* Switch to pytest from nosetests.
This commit removes the option to run tests with 'python setup.py test'",304,Testing,Testing,False,False
854,Toblerity/rtree,fb76ee1f5a4a3ecb9962b7d2933d2b2da9fa53b7,2017-09-19 18:42:35,pytest,unittest,"Test improvements/cleanup (#85)

* TST: Remove doctest wrapper.

Pytest already runs doctests with test*.txt names, so there's no need
to wrap them like this.

* TST: Convert test_z_cleanup into a pytest fixture.

This fixture sets a temporary working directory that will be cleaned up
by pytest, thus allowing tests to not have to worry about deleting
working files.

* TST: Remove unused test data.

* TST: Fix test with custom dumps/loads.

* TST: Copy test data to temporary working directory.

This way, there's no need to have a special imported file to get
__file__ in the doctest.

* TST: Enable doctest on the package itself.

* TST: Fix brokenness in package doctests.

Mostly wrapped lines, but also several Python 3 problems.

* TST: Fix module doctest when simplejson isn't installed.

* TST: Fix module doctest on Python 2.

* CI: Combine module and doctest runs.

* Add Python 3.6 to build.",unittest pytest,"
Pytest already runs doctests with test*.txt names, so there's no need
to wrap them like this.",304,Testing,Testing,False,False
855,Trusted-AI/adversarial-robustness-toolbox,ffadf13907e16b8a9b7be78e6f60b923d3f1f255,2020-10-20 23:24:46,pytest,unittest,"update to new testing infrastructure

Signed-off-by: Ebube Chuba <ebube.chuba@ibm.com>",unittest pytest,update to new testing infrastructure,304,Testing,Testing,False,False
856,Ultimaker/Uranium,29eae76535157c5f87a0fd1aa82e318f2b9e4b36,2016-01-06 08:48:46,pytest,unittest,Switch PluginRegistry test to use pytest,unittest pytest,"
Switch PluginRegistry test to use pytest",304,Testing,Testing,False,False
857,XKNX/xknx,5318c974198b5c18a18111ecd0e9c48a147f850c,2021-04-02 14:36:03,pytest,unittest,"Pytest instead of unittest.TestCase (#651)

* move xknx and str tests to pytest

* move core tests to pytest

* move config tests to pytest

* fix slow tests

reading xknx.yaml from disk multiple times

* move device tests to pytest

* hitting snooze

sleep was a bit too short so sometimes tests failed

* updated 3.7 AsyncMock

* give up on 3.7

* move dpt tests to pytest

* move io tests to pytest

* move knxip tests to pytest

* move remote_value tests to pytest

* move telegram tests to pytest

* add pylintrc for tests

disabled specifically for tests:
  - no-self-use
  - protected-access
  - abstract-class-instantiated

* fix lint errors in tests

* Update changelog.md",unittest pytest,"
Pytest instead of unittest.
TestCase (#651)",304,Testing,Testing,False,False
860,acsone/setuptools-odoo,48b1437ca6348a84c2307c78c8ccb942bd44f2b5,2018-05-12 10:17:19,pytest,unittest,Convert unittest to pytest,unittest pytest,"
Convert unittest to pytest",304,Testing,Testing,False,False
863,aio-libs/aiohttp-session,b45ec15245c1eef376f3b201489a18638015e4f6,2016-07-15 13:23:57,pytest,unittest,Convert fernet test to pytest style,unittest pytest,"
Convert fernet test to pytest style",304,Testing,Testing,False,False
866,akrherz/pyIEM,1821bcf7282f824d774437f53d5e9dba9616f84f,2018-05-08 15:06:29,pytest,unittest,"use pytest.mpl to actually test geoplot.MapPlot, gasp",unittest pytest,"
use pytest.mpl to actually test geoplot.
MapPlot, gasp",304,Testing,Testing,False,False
867,albermax/innvestigate,e222ce44daa01f9ad771c3db731d62cfb2a261ce,2018-04-09 00:23:13,pytest,unittest,Change testing backend to pytest.,unittest pytest,"
Change testing backend to pytest.",304,Testing,Testing,False,False
870,amphibian-dev/toad,e29c85fe2b4899da64f0fdf2bc8329608aefd15d,2019-01-25 01:55:01,pytest,unittest,update: unittest to pytest,unittest pytest,"
update: unittest to pytest",304,Testing,Testing,False,False
872,ansible-community/ansible-lint,6702769f4488529e16dc5f3dc320a363586364eb,2020-04-23 17:53:56,pytest,unittest,"Migrate some test to pytest

Contributes to #725

Co-Authored-By: Sviatoslav Sydorenko <webknjaz@redhat.com>",unittest pytest,"
Migrate some test to pytest",304,Testing,Testing,False,False
873,ansible/ansible,0785656344c3c42b5f1ff408d2fad3e29f98f278,2018-10-10 05:52:04,pytest,unittest,Fix vmware_inventory unit tests so they run.,unittest pytest,"
Fix vmware_inventory unit tests so they run.",304,Testing,Testing,False,False
874,apache/airflow,ee2d6c5c0fa9fdce8fd5163f6d5bf40f46fa4c3f,2021-04-01 15:44:13,pytest,unittest,"Make app creation session- or class-wide when possible to make tests faster (#14878)

* Module-wide app fixture for test_endpoints

* Hoist app fixture across experiemental API tests

* Merge app usages in API connexion tests

* Hoist app creation in cli tests to conftest

* Share app instance across methods to save time

* Move test out of class to avoid needless setup

* Share app across Google OpenID tests

* Share app instance with plugin tests

* Convert Google Open ID tests to use fixtures",unittest pytest,"
* Move test out of class to avoid needless setup",304,Testing,Testing,False,False
875,appium/python-client,9c597a3afe76ff1283c45259ed6e1c4aadac530d,2020-04-30 14:55:04,pytest,unittest,"feat: Merge python3 branch to master (#526)

* Drop py2 support (#478)

* Drop py2 support

* Support 3.7+

* Add explicit type declarations (#482)

* Fixed mypy warning: touch_action.py

* Fixed mypy warning: multi_action.py

* Fixed mypy warning: extensions/android

* Fixed mypy warning: extensions/search_context

* Updated

* Revert some changes to run unit test

* Review comments

* Updates

* Updates

* Add mypy check to ci.sh

* Add mypy to Pipfile

* Updates

* Update README

* Revert unexpected changes

* Updates Dict

* Revert unexpected changes

* Updates

* Review comments

* Review comments

* tweak

* Restore and modify changes

* Fix wrong return type

* Add comments

* Revert unexpected changes

* Fix mypy error

* updates

* Add mypy to pre-commit (#485)

* chore: Applied some py3 formats (#486)

* Removed unused import

* Removed unnecessary codes

* Applied f'' format instead ''.format()

* Fixes

* tweak

* chore: Fix mypy errors under test folder (#487)

* Fix mypy errors under test folder

* Add mypy check for test folder to pre-commit

* Add mypy check to ci

* chore: Remove unittest dependency (#488)

* Removed unnecessary codes from calling super

* Removed unittest dependency

* Upgrade the dependencies to the latest

* Removed unused args

* Review comments

* Update mock requirement from ~=3.0 to ~=4.0 (#502)

Updates the requirements on [mock](https://github.com/testing-cabal/mock) to permit the latest version.
- [Release notes](https://github.com/testing-cabal/mock/releases)
- [Changelog](https://github.com/testing-cabal/mock/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/testing-cabal/mock/compare/3.0.0...4.0.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

* Add 'from' to except (#503)

* Update pre-commit requirement from ~=1.21 to ~=2.1 (#506)

Updates the requirements on [pre-commit](https://github.com/pre-commit/pre-commit) to permit the latest version.
- [Release notes](https://github.com/pre-commit/pre-commit/releases)
- [Changelog](https://github.com/pre-commit/pre-commit/blob/master/CHANGELOG.md)
- [Commits](https://github.com/pre-commit/pre-commit/compare/v1.21.0...v2.1.0)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

* doc: Add script to generate sphinx doc  (#508)

* Add quickstart template files

* Update conf file

* Update

* Update settings

* Change project name

* Add script to generate docs

* Changed header title

* Add new line to usage section

* Add py.typed file(PEP561)

* Replace \n with new line

* tweak

* Use sphinx format for tables

* Rebase python3 branch with master (#522)

* Update pytest-cov requirement from ~=2.6 to ~=2.8 (#489)

Updates the requirements on [pytest-cov](https://github.com/pytest-dev/pytest-cov) to permit the latest version.
- [Release notes](https://github.com/pytest-dev/pytest-cov/releases)
- [Changelog](https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest-cov/compare/v2.6.0...v2.8.1)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

* Update autopep8 requirement from ~=1.4 to ~=1.5 (#490)

Updates the requirements on [autopep8](https://github.com/hhatto/autopep8) to permit the latest version.
- [Release notes](https://github.com/hhatto/autopep8/releases)
- [Commits](https://github.com/hhatto/autopep8/compare/v1.4...v1.5)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

* Update tox-travis requirement from ~=0.11 to ~=0.12 (#491)

Updates the requirements on [tox-travis](https://github.com/tox-dev/tox-travis) to permit the latest version.
- [Release notes](https://github.com/tox-dev/tox-travis/releases)
- [Changelog](https://github.com/tox-dev/tox-travis/blob/master/HISTORY.rst)
- [Commits](https://github.com/tox-dev/tox-travis/compare/0.11...0.12)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

* Update tox requirement from ~=3.6 to ~=3.14 (#494)

Updates the requirements on [tox](https://github.com/tox-dev/tox) to permit the latest version.
- [Release notes](https://github.com/tox-dev/tox/releases)
- [Changelog](https://github.com/tox-dev/tox/blob/master/docs/changelog.rst)
- [Commits](https://github.com/tox-dev/tox/compare/3.6.0...3.14.3)

Signed-off-by: dependabot-preview[bot] <support@dependabot.com>

* chore: Fix find_by_images_tests.py (#495)

* chore: Fix find_by_images_tests.py

* Add installation opencv4nodejs

* Fix typo

* Add taking screen record to find_by_image_test

* Fix errors on the emulator

* Remove unused imports

* feat: Add viewmatcher (#480)

* Add android view matcher as strategy locator

* Add docstring

* Add functional test

* Remove find_elements_by_android_data_matcher

* Fix docstring

* tweak docstring

* Bump 0.50

* Update changelog for 0.50

* Fix flaky functional tests (#473)

* Run all tests

* Fix apk file path

* Skip find_element_by_image test cases

* Skip context switching test

* Skip multi tap test on CI

* Change strategy for waiting element

* Add functions for same steps

* Restore unexpected changes

* Fix touch_action_tests

* Fix

* Fix
Fix test_driver_swipe

* fix

* Create _move_to_[target_view]

* [test_driver_swipe] Add wait

* feat: Add idempotency key header to create session requests (#514)

* feat: Override send_keys without file upload function (#515)

* add send_keys_direct

* override send_keys

* tune

* add unittest instead of functional test

* tweak syntax

* Bump 0.51

* Update changelog for 0.51

* test: Fix test_clear flaky functional test (#519)

* test: Add unit test for set_value (setImmediateValue) (#518)

* chore: Fix int - str comparison error in ios desired capabilities (#517)

if number >= PytestXdistWorker.COUNT:

TypeError: '>=' not supported between instances of 'int' and 'str'

2. Updated test case path and iPhone model in Readme file

* fix: Handling of dictionary-values in WebElement.get_attribute() (#521)

* Bump 0.52

* Update changelog for 0.52

* Fix mypy error

* tweak

* Add wait to test

* Skip tap_twice test

* review comments

* Remove unnecessary import

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
Co-authored-by: Kazuaki Matsuo <fly.49.89.over@gmail.com>
Co-authored-by: Mykola Mokhnach <mokhnach@gmail.com>
Co-authored-by: Nrupesh Patel <nrupesh.patel2912@gmail.com>
Co-authored-by: Venkatesh <venkatesh@poshmark.com>
Co-authored-by: Hannes Hauer <hanneshauer@beeware.at>

* chore: Update readme and gitchangelog section role (#524) (#525)

* chore: tweak changelog filter

* address stoping Python 2 support

* 2 instead of 2.0...

* tweak readme

* Revert some unexpected changes

* review comments

* Changed bound for TypeVar

* Fix crashing ci

* Remove beta

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
Co-authored-by: Kazuaki Matsuo <fly.49.89.over@gmail.com>
Co-authored-by: Mykola Mokhnach <mokhnach@gmail.com>
Co-authored-by: Nrupesh Patel <nrupesh.patel2912@gmail.com>
Co-authored-by: Venkatesh <venkatesh@poshmark.com>
Co-authored-by: Hannes Hauer <hanneshauer@beeware.at>",unittest pytest,"
* Revert some changes to run unit test",304,Testing,Testing,False,False
878,astropy/pyvo,ce037f28d7666fc37d57e30f082c3700b69e5600,2018-05-24 09:22:21,pytest,unittest,use pytest and mock rather than legacy unittest and background server,unittest pytest,"
use pytest and mock rather than legacy unittest and background server",304,Testing,Testing,False,False
880,aws/sagemaker-xgboost-container,fc364c7c844859de1852acd526111ee22ac8e393,2019-11-26 00:59:00,pytest,unittest,"Merge commits from 0.90-1 back to reverted master (#66)

* Recordio support for Inference for 0.90-1 (#53)

* Cherry picked: RecordIO for Inference. Original [https://github.com/aws/sagemaker-xgboost-container/pull/42]

* Add version for gunicorn. (#54)

* Enable recordio-protobuf in algorithm mode server. (#55)

Second half of cherry pick: https://github.com/aws/sagemaker-xgboost-container/pull/42

* Remove additional parameters from content_type. Cherrypick: https://github.com/aws/sagemaker-xgboost-container/pull/51/files

* Remove additional parameters from content_type. Cherrypick: https://github.com/aws/sagemaker-xgboost-container/pull/51/files

* Add unit test for algorithm mode serve.

* Fix serve to pass data payload for integration tests.

* Remove unused test.

* Add environment variable MAX_CONTENT_LENGTH for GET execution-parameters.

* Minor formatting changes.

* ScoringService started with right max payload size.

* Removed un-related code changes.

* Add support to parse MAX_CONTENT_LENGTH during inference. (#65)

* Add support to parse MAX_CONTENT_LENGTH during inference.

* Minor refactor for method name change in algorithm_mode/serve.py

* GET execution-parameters returns int for MaxPayloadInMB.",unittest pytest,"
* Fix serve to pass data payload for integration tests.",304,Testing,Testing,False,False
881,awslabs/autogluon,be60b2aa24c78724b000d2fed8952059da35b6b3,2020-03-03 23:12:29,pytest,unittest,"Use pytest for unit tests (#346)

* Use pytest for unit tests

Tests can be run with $ python3 -m pytest tests

I disabled slow tests by default, but they will be run by Jenkins and
can be run manually by adding the --runslow option

All tabular benchmarks have been moved to the same file as they all
depend on run_tabular_benchmarks. This is the simplest way to share
a helper function between pytest tests.

To run the tests in a specific test use

$ python3 -m pytest path_to_file:test_mytest

:test_mytest can be omitted to run all tests in a specific file.

* Use pytest for unit tests

Tests can be run with $ python3 -m pytest tests

I disabled slow tests by default, but they will be run by Jenkins and
can be run manually by adding the --runslow option

All tabular benchmarks have been moved to the same file as they all
depend on run_tabular_benchmarks. This is the simplest way to share
a helper function between pytest tests.

To run the tests in a specific test use

$ python3 -m pytest path_to_file:test_mytest

:test_mytest can be omitted to run all tests in a specific file.

* Install pytest in Jenkins

* Commit renamed check style file

* Add pytest to the requirements",unittest pytest,"
Use pytest for unit tests (#346)",304,Testing,Testing,False,False
883,beer-garden/beer-garden,9f76abe5d96d955e819d3e2cc5f59e4764da2472,2018-04-03 19:01:13,pytest,unittest,Switching init_test to pytest,unittest pytest,"
Switching init_test to pytest",304,Testing,Testing,False,False
888,bmoscon/cryptofeed,e4c59b0a758a629ae9a0c10b75b004d930a5375f,2018-10-20 22:12:02,pytest,unittest,Fix unit tests,unittest pytest,"
Fix unit tests",304,Testing,Testing,False,False
889,braindecode/braindecode,8cddda1807eee4fb9683386e0e730d43817e0018,2020-01-23 23:34:00,pytest,unittest,"tests using unittest changed to use pytest, pep8 fixes",unittest pytest,"
tests using unittest changed to use pytest, pep8 fixes",304,Testing,Testing,False,False
890,brechtm/rinohtype,347518019d673c9d1a26049faea74c7adfaa6d11,2016-07-01 14:23:51,pytest,unittest,Fix the pdf reader test (and use pytest),unittest pytest,"
Fix the pdf reader test (and use pytest)",304,Testing,Testing,False,False
891,bsmurphy/PyKrige,d3605649f0b353f208983c37137bf81f50fe5ac1,2018-02-04 21:20:53,pytest,unittest,"Migrate to pytest and refactor unit tests (#80)

* Move tests to pykrige/tests
* Split tests into separate files
* Replace assert assert_true(np.allclose by assert_allclose
* Migration of assertEqual, notEqual, raises
* Migrate assert not equal, and assert is
* Migrate assertAlmostEqual
* Using pytest features instead of a global setup
* Handle display in Travis CI
* Skip plotting in kriging_1D.py in CI
* Fix sklearn import path in examples/regression_kriging2d.py
* PEP 8 in tests and increase relative tolerance in test_ok3d_backends_produce_same_result",unittest pytest,"
Migrate to pytest and refactor unit tests (#80)",304,Testing,Testing,False,False
896,cobbler/cobbler,77500707013ae219220f8dcbff3bc2fed6aa53ce,2019-01-18 12:21:47,pytest,unittest,Changed the import from unittest to pytest.,unittest pytest,"
Changed the import from unittest to pytest.",304,Testing,Testing,False,False
897,cobrateam/splinter,8db872c257e511e1adad56dc14a8b999c510a13e,2019-07-20 16:00:51,pytest,unittest,Use pytest as the test runner (#703),unittest pytest,"
Use pytest as the test runner (#703)",304,Testing,Testing,False,False
898,codeforpdx/recordexpungPDX,ed5ec6dd7d46595e67ee86fe2c13d82925ba4fe2,2019-11-26 11:17:06,pytest,unittest,"Split record creation and assertions in test_crawler_expunger

This commit has no functional changes. The pytest framework injects the appropriate record using the name of the function and the @pytest.fixture annotation. This will allow us to reuse the record fixture to test other things such as serialization. I considered moving the record fixtures to another file but I wanted the reader to be able to easily see that these records were being generated from the crawler.",unittest pytest,"
The pytest framework injects the appropriate record using the name of the function and the @pytest.fixture annotation.
This will allow us to reuse the record fixture to test other things such as serialization.
I considered moving the record fixtures to another file but I wanted the reader to be able to easily see that these records were being generated from the crawler.",304,Testing,Testing,False,False
901,creare-com/podpac,1cc4a9b622b65a6c29066171acd5cbbf7c052266,2018-04-16 15:29:54,pytest,unittest,converts test_units from unittest to pytest,unittest pytest,"
converts test_units from unittest to pytest",304,Testing,Testing,False,False
902,cylc/cylc,32d9ac3becd3953a0917d2b6bb80b13a15458b93,2020-04-29 11:01:51,pytest,unittest,parsec: upgrade unit tests to pytest,unittest pytest,"
parsec: upgrade unit tests to pytest",304,Testing,Testing,False,False
904,darcymason/pydicom,0bb4c6dfb0defba7babf6e9d613cedbe4a20e580,2017-07-31 03:42:51,pytest,unittest,"Refactor UID (#440)

* Refactor and tests for UID

* PEP8 fixes

* Fix for hash test

* Update tests to use pytest

* Remove unittest from test_uid

* Fix TestUIDPrivate",unittest pytest,"
* Fix for hash test",304,Testing,Testing,False,False
905,databricks/koalas,b8093501dfcc9beb50885bc553fae4d8d0664d0c,2019-04-27 10:45:51,pytest,unittest,"Use pytest instead of nose to run tests (#183)

This PR propose to use `pytest` instead of `nose` for the reasons below:

- We can remove the manual doctest / unitests running and integrate it with one testing framework `pytest`

- It's more popular in terms of download stats (PyPi) and Github stars
  - https://pypistats.org/packages/nose vs https://pypistats.org/packages/pytest
  - https://github.com/nose-devs/nose vs https://github.com/pytest-dev/pytest

- It give a better output with a little bit of more info and colored text:

    `nose`:

    ```
    ...
    test_read_csv (databricks.koalas.tests.test_csv.CsvTest) ... ok
    test_read_csv_with_comment (databricks.koalas.tests.test_csv.CsvTest) ... ok
    test_read_csv_with_mangle_dupe_cols (databricks.koalas.tests.test_csv.CsvTest) ... ok
    ...
    ```

    `pytest`:

    ```
    ...
    databricks/koalas/frame.py::databricks.koalas.frame.DataFrame.count PASSED    [  3%] 
    databricks/koalas/frame.py::databricks.koalas.frame.DataFrame.drop SKIPPED    [  4%]
    databricks/koalas/frame.py::databricks.koalas.frame.DataFrame.dropna SKIPPED  [  5%]
    ...
    ```",unittest pytest,"
Use pytest instead of nose to run tests (#183)",304,Testing,Testing,False,False
907,dataversioncontrol/dvc,dfe184f149bff7acf959aa079874349a719dec69,2020-04-07 07:45:49,pytest,unittest,"tests: convert remote unit tests to pytest (#3604)

- update tests/unit/remote tests to use pytest style tests
- use pytest dvc repo fixtures instead of improperly mocked repo's or
  None",unittest pytest,"
tests: convert remote unit tests to pytest (#3604)",304,Testing,Testing,False,False
908,dateutil/dateutil,af0fc853c2c4358451736d98a8ffaa40f4a7bf4f,2018-06-22 19:03:50,pytest,unittest,Convert test_import_star to pytest test,unittest pytest,"
Convert test_import_star to pytest test",304,Testing,Testing,False,False
909,davidh-ssec/polar2grid,0440d5565c9d4b85f3d3186a9bda6aefa1404611,2015-03-23 02:10:47,pytest,unittest,Switched to pytest instead of unittest,unittest pytest,"
Switched to pytest instead of unittest",304,Testing,Testing,False,False
910,dbcli/mssql-cli,202e00533559e5973e7a137a5e1487443eb710dd,2019-11-18 21:27:14,pytest,unittest,"refactored client testing (#349)

* converted to pytest

* created fixture for client

* refactored multiple statement

* added fixture usage to connection tests

* ensure proc test drops proc

* made changes to ensure testing can work on any generic db; suppressed pylint warning",unittest pytest,"
* ensure proc test drops proc",304,Testing,Testing,False,False
911,dhimmel/obonet,358b3755e33a210f9aa38ebd05051ce7784a5b3c,2015-05-19 20:54:32,pytest,unittest,Switched to pytest from unittest. Added parse_tag_line() testing.,unittest pytest,"
Switched to pytest from unittest.
Added parse_tag_line() testing.",304,Testing,Testing,False,False
914,dnouri/skorch,afa697ed1b16b0c0e6b661ed0018d4a332da90fb,2021-03-26 14:17:39,pytest,unittest,"Refactor train loop for easier customization (#699)

* Small refactoring of some training/evaluation methods

The main change is to ""push down"" the unpacking of the batch
data (using ""Xi, yi = unpack_data(batch)"") from ""run_single_epoch"" to
functions lower down the chain. The reason for this is that if we put
this unpacking rather ""high up"" the chain, we force the output of
dataset to be a tuple of 2 elements. If a user wants to change this,
they either have to modify their dataset to alwas return 2
elments (which can be annoying) or they would need to override
""run_single_epoch"", but we don't want to encourage this, as this
method performs a lot of book keeping.

With the new changes, small methods further down the chain are now
responsible for dealing with the data, e.g. ""train_step_single"" and
""validation_step"". This affords more flexibility overall, and a user
can easily override these methods without having to deal with book
keeping.

Obviously, this change results in some API changes, so some existing
code might break as a consequence (most notably code that relies on
""on_batch_begin"" or ""on_batch_end"").

Another ""victim"" of this change is the checking for whether y is a
placeholder and then replacing it with None. Tbh. I found this to be
an ugly solution anyway. Now it can happen that when a user uses the
skorch Dataset, they will receive a 0s tensor for y when they set y to
None. I think this is an acceptable loss overall.

To illustrate the gains of the change, I added a test,
""test_customize_net_with_custom_dataset_that_returns_3_values"", which
shows what is now possible when it comes to customizing skorch. With
the old state, achieving the same would have been more cumbersome.

Finally, I added a section to the docs called ""Customization"". The
intent is to help the user decide how best to customize ""NeuralNet"" et
al. It explains what methods best to override for what purpose and
what methods to best leave untouched. In the future, we could expand
this section to cover more aspects.

* Clean ups to satisfy pylint

* Add more to .gitignore and remove duplication from .coveragerc

* Clarify doc for return value of train_step

Also, add documentation of return value of train_step_single, which
was missing (same docstring).

* Reviewer comment: avoid unnecessary lambda in test

Co-authored-by: Thomas J. Fan <thomasjpfan@gmail.com>

* Add migration guide for affected methods to FAQ

As suggested by reviewer.

* Reviewer comment: tuple unpacking

Co-authored-by: githubnemo <githubnemo@users.noreply.github.com>

* Reviewer comment: tuple unpacking

Co-authored-by: githubnemo <githubnemo@users.noreply.github.com>

* Add a helpful warning if user-defined on_batch

Check if the user uses any custom callback that overrides on_batch_begin
or on_batch_end. If they do, warn about the signature change and explain
how to recover. Also, indicate how to suppress the warning.

* Add tests for warning when on_batch overridden

Forgot to check this in when the warning was added.

Co-authored-by: BenjaminBossan <b.bossan@gmail.com>
Co-authored-by: Thomas J. Fan <thomasjpfan@gmail.com>
Co-authored-by: githubnemo <githubnemo@users.noreply.github.com>",unittest pytest,"
To illustrate the gains of the change, I added a test,
""test_customize_net_with_custom_dataset_that_returns_3_values"", which",304,Testing,Testing,False,False
915,dropbox/dropbox-sdk-python,fc481aeb2384046945316ae3b1e9c7eaf0d200ef,2021-01-06 20:18:05,pytest,unittest,"Convert integration tests to use pytest instead of unittest (#313)

* convert integration test to use pytest instead of unittest",unittest pytest,"
Convert integration tests to use pytest instead of unittest (#313)",304,Testing,Testing,False,False
916,dstrigl/htheatpump,6cf1976514dfa16d029819d6f7b23004cad312b7,2017-03-16 14:15:50,pytest,unittest,Ongoing work with testing,unittest pytest,"
Ongoing work with testing",304,Testing,Testing,False,False
919,edx/edx-lint,daa2f812e9c3fd9a4508c1b619b3912fe099b8b7,2018-10-28 13:07:03,pytest,unittest,Switch to pytest from unittest,unittest pytest,"
Switch to pytest from unittest",304,Testing,Testing,False,False
923,elyra-ai/elyra,7494c90fe035877c4728ad54634860bfa24b35ae,2020-02-21 17:47:16,pytest,unittest,"Convert backend unittests to pytests (#280)

Note: we cannot fully convert the handlers test to pytest the project
transitions to using jupyter_server over notebook. In the meantime, as
much pytest functionality as possible has been implemented for those
tests.

Resolves #268",unittest pytest,"
Convert backend unittests to pytests (#280)",304,Testing,Testing,False,False
924,equinor/gordo,62c9ede1b090142e75d36e105b08da28e876f5a8,2019-09-04 11:00:29,pytest,unittest,"Make autoencoder API parameters match and add some input validation (#431)

* Change enc/dec_* to encoding/decoding_* in fforward and tests

* Add validation of encoding/decoding_* to factories with tests

  - Change lists to tuples in fforward factory and tests

* Change hourglass dim check test to input expected pattern

* Rename model factories utils module",unittest pytest,"
* Change enc/dec_* to encoding/decoding_* in fforward and tests",304,Testing,Testing,False,False
929,fchollet/keras,7da1523053f2e5f4fa15c87e019b3244c8653a53,2015-12-10 04:41:02,pytest,unittest,Replace unittest with pytest,unittest pytest,"
Replace unittest with pytest",304,Testing,Testing,False,False
930,fitodic/centerline,9b3dfb7b30f5444321f50170a6d0eefb668e829f,2019-05-18 18:41:47,pytest,unittest,Convert the test for the main module to pytest,unittest pytest,"
Convert the test for the main module to pytest",304,Testing,Testing,False,False
931,flairNLP/flair,24bc299b7e8a566aca52375caae5673efe7b264a,2018-10-04 09:45:23,pytest,unittest,GH-61: Update test for visuals,unittest pytest,"
GH-61: Update test for visuals",304,Testing,Testing,False,False
932,flashcode/msgcheck,d03bd44d70a67b3e044c0d7283d0ee1ab016353d,2019-12-01 12:26:27,pytest,unittest,Use pytest for unit tests,unittest pytest,"
Use pytest for unit tests",304,Testing,Testing,False,False
937,frgfm/torch-cam,badd19f1380451bbb67250bd95a9b175a3b921ed,2021-03-03 15:37:23,pytest,unittest,"feat: Enabled all CAMs for dimensions higher than 2D spatially (#45)

* refactor: Refactored abstract CAM module

* fix: Fixed CAMs for higher dimensions that 2D images

* chore: Switched to pytest testing suite

* docs: Updated CONTRIBUTING

* test: Updated test_utils

* test: Added testing fixtures

* test: Added unittests for core cams

* test: Split up test between modules

* style: Fixed lint & typing

* refactor: Refactored repr

* test: Added unittest for SmoothGradCAMpp repr

* refactor: Removed unused imports

* feat: Switched sum to nansum

* feat: Added safeguard for div by zero

* fix: Revert previous commit

* test: Added _CAM constructor unittest

* test: Fixed typo",unittest pytest,"
* chore: Switched to pytest testing suite",304,Testing,Testing,False,False
939,gaphor/gaphas,9d9c48375ea9150bb7150fa454efd2e1595d5212,2018-12-16 04:19:42,pytest,unittest,"Convert tests from unittest to pytest

Signed-off-by: Dan Yeaw <dan@yeaw.me>",unittest pytest,"
Convert tests from unittest to pytest",304,Testing,Testing,False,False
940,gaphor/gaphor,fe3c19cdd59a013ccfe304fcadb08e37d18145be,2019-07-02 00:59:16,pytest,unittest,"Convert issue 53 test to Pytest

Signed-off-by: Dan Yeaw <dan@yeaw.me>",unittest pytest,"
Convert issue 53 test to Pytest",304,Testing,Testing,False,False
942,geopy/geopy,134668a3ad433f3f7ae17cc7826c412afd105b3d,2020-06-21 18:13:31,pytest,unittest,"Geocoder tests: convert to `async`/`await` syntax + pytest

The reasons:
- `async`/`await` syntax would allow to transparently test all
  geocoders with async adapters (as well as with the default sync ones)
- pytest-aiohttp doesn't work with unittest.TestCase classes, but
  it works fine with pytest's test classes.",unittest pytest,"
TestCase classes, but
it works fine with pytest's test classes.",304,Testing,Testing,False,False
943,getnikola/nikola,698251452df1d01cbadb628906cf1d2d7df76130,2019-12-04 14:57:40,pytest,unittest,"Switch tests to pytest.

Use parametrizing to share test code with different configurations.",unittest pytest,"
Switch tests to pytest.",304,Testing,Testing,False,False
945,gijzelaerr/python-snap7,83320c3f592f5f7216d780bb84799a58ca089c5d,2020-11-02 07:37:49,pytest,unittest,"Add as area read write (#200)

* Rebase on Master

Add missing new line
Redo other asnyc tests with pytest
Add pytest-asyncio to requirements for tests
Replace unittests with pytests, because of version issues
Rollback to older style
Add another skip decorator about not passable test since long time
Remove empty line
Try skip test which failed in past
Try more fixes
fix possible seg fault problem
try fix test by change check_error location
Add set_as_check_mode to setup class to receive valid values
Try add async funcs in error_wrap
Fix as_ prefix at db_get
Replace unittests with aiounittests
Add aiounittest to test asyncio coroutines
change server_pid to process
change unittest.Testcase to be asyncio able
Add test_client_async to tests
Removed empty line
Fix all async read or get client methods
remove blank line
rename types to snap7types
Rename types.py to snap7types.py to fix #183
Use parent class method and check afterwards
Undo code seperation in protected method
Fix #183
Add client_async to init
Fix wrong client import
Add ABC class to inherited class, to add abc methods
Remove tests of not existing methods
Add protected prepare methods to be more DRY
Fix missing underscore
Fix codestyle violation
Remove whitespaces in empty line
Fixes for tests
Add ""default"" async funtions to client.
Add missing docstring params
Add as_read_area and as_write_area with unittests

* Refactor snap7types.py to types.py

* Fix as_read_area
Fix tests

* Remove empty line

* Cleanup client_async and test_client_async to a minimum usage

* Add test for wait_loop

* Fix wait_loop test
Fix linter issues

* Integrate staticmethod
Fix fixture in test_client_async
Fix test_wait_loop

* Remove blank line

* remove which pytest command

* add python arg to run in explicit python version

* Try change venv

* Revert ""add python arg to run in explicit python version""

This reverts commit 6729cfe7a37fb4a10b7dadf45620493b96daec6c.

# Conflicts:
#	.github/workflows/pytest.yml
Revert ""remove which pytest command""

This reverts commit 66950c62919ee9dbe04877836ee689bcc99907e3.
Revert ""add python arg to run in explicit python version""

This reverts commit 6729cfe7a37fb4a10b7dadf45620493b96daec6c.

* Add ignore missing import statement",unittest pytest,"
Redo other asnyc tests with pytest
Add pytest-asyncio to requirements for tests
Replace unittests with pytests, because of version issues",304,Testing,Testing,False,False
947,glotzerlab/signac,c9810b97b8f8945fffeeea0ff65772aaa472b0f0,2020-01-29 18:18:31,pytest,unittest,"Changed testing framework (Pytest) (#275)

Updated all existing tests to use pytest assertion syntax and changed CI to use pytest.",unittest pytest,"
Changed testing framework (Pytest) (#275)",304,Testing,Testing,False,False
951,hachmannlab/ChemML,0493ffa70590a165811a2eb366fac26c1ac4ab2f,2019-08-12 03:58:30,pytest,unittest,fixed GA test file,unittest pytest,"
fixed GA test file",304,Testing,Testing,False,False
954,hugovk/pypistats,dd5cb8e68c75fba58e20e451bf221f43d52316de,2020-03-30 15:27:00,pytest,unittest,Convert from unittest to pytest,unittest pytest,"
Convert from unittest to pytest",304,Testing,Testing,False,False
960,ishepard/pydriller,c950f102c01967b27ad02ac95fa7cd0a302e3698,2018-03-28 14:44:25,pytest,unittest,moving from unittest to pytest,unittest pytest,"
moving from unittest to pytest",304,Testing,Testing,False,False
961,jgayfer/pydest,1f377836297a4d50356cb81868c260b722ce0da1,2017-08-18 02:30:17,pytest,unittest,port unit tests from unittest to pytest,unittest pytest,"
port unit tests from unittest to pytest",304,Testing,Testing,False,False
962,jhfjhfj1/autokeras,5619b6770675a7fedd85cbc5ab19773a3ba94e13,2019-03-30 08:53:45,pytest,unittest,"Backend (#583)

* add backend

* backend

* clean up

* fix

* loss function to backend

* predict and get_device

* add tensorflow backend

* update tensorflow backend

* modify tensorflow backend model_trainer

* update tf backend model

* modify tf backend loss function

* modify tf backend loss function

* update tf backend classification loss function

* update tf backend classification loss function

* update tf backend keras metric

* update test tf backend

* modify nn metric to support multiple backend

* add backend test

* add comma in setup

* comment backend testing

* upgrade tensorflow version

* merge master",unittest pytest,"
* update test tf backend",304,Testing,Testing,False,False
963,joke2k/faker,fca4fe9eb353eb500bc24a9c401bffbf0883565d,2020-05-19 14:26:59,pytest,unittest,"Test Suite Housekeeping (Part 3)  (#1167)

* Add test fixtures exclusive for tests.providers

* Pytestify tests.sphinx

* Pytestify and improve user agent provider tests

* Pytestify barcode provider tests

* Fix flake8 bare except issue

* Pytestify, reorganize, and improve Generator class tests

* Pytestify, reorganize, and improve Faker class tests

* Fix test failure

* Pytestify currency provider tests

* Pytestify isbn provider tests

* Pytestify, reorganize, and improve internet provider tests

* Pytestify, reorganize, and improve base provider tests

* Fix CI errors",unittest pytest,"
* Pytestify and improve user agent provider tests",304,Testing,Testing,False,False
964,josuebrunel/yahoo-oauth,412f0c9c02925242bd38d3c98a84cf8fef4fef15,2016-01-29 23:47:44,pytest,unittest,use pytest for testing (fix #44),unittest pytest,"
use pytest for testing (fix #44)",304,Testing,Testing,False,False
966,k-bx/python-semver,c0d81f9d1d35e8c2ec6708280f8db58b52257314,2016-05-15 16:33:49,pytest,unittest,Migrate tests from unittest to py.test,unittest pytest,"
Migrate tests from unittest to py.test",304,Testing,Testing,False,False
967,kbandla/dpkt,5bf52f3c8ef998d3b08d79a0ea64f2cd9d0f7cf5,2015-03-26 20:04:58,pytest,unittest,"unittest -> pytest

Unittest is replaced with pytest (85 tests already)",unittest pytest,"
unittest  laifuhewb  pytest",304,Testing,Testing,False,False
968,kenfar/DataGristle,54f4b5d17b6b236ce74e03baa89d42e6c116d51d,2013-07-09 03:49:22,pytest,unittest,converted unittest to pytest,unittest pytest,"
converted unittest to pytest",304,Testing,Testing,False,False
971,larq/zoo,ddf604af3d921b7abc9f5d16ca09c053937a4ba7,2020-06-15 11:17:23,pytest,unittest,"Cleanup tests (#179)

* Simplify mocking in train tests

* Cleanup model tests

* Fix utils test",unittest pytest,"
* Fix utils test",304,Testing,Testing,False,False
972,lbl-anp/becquerel,f0f5b68fa3950eda890172c6d122e752f2aafe69,2017-04-20 14:57:32,pytest,unittest,Convert tests from unittest/nose to pytest,unittest pytest,"
Convert tests from unittest/nose to pytest",304,Testing,Testing,False,False
978,mackelab/sbi,cb945c338b99faaef609afe49469d9a1f15aaf0c,2020-03-23 14:09:44,pytest,unittest,"Refactor sbi_posterior, mcmc sampling, batch simulator (#70)

* Explicit listing of supported algorithm families /1.

* Explicit listing of supported algorithm families /2

Wrapped input normalization and testing into its own function.

* Renamed normalize to clarify it only affects snpe.

* Added code comments from discussion with Michael.

* Algorithm family passed directly; docstring Posterior.

* Inference methods now pass potential function to Posterior explicitly.

* Test leakage correction via mcmc (only slice-np).

* Docstring fix.

* parametrize test for posterior correction with mcmc method

* Replace NeuralPotentialClasses (pyro and np) with a single class.

* We pass directly the potential function to Posterior, instead of
  letting Posterior infer it based on algorithm family (so far only
  for slice_np).

* We use the neural_net (density estimator) of Posterior, instead of
  the log_prob method in Posterior with normalize=False (there's some
  temporary code duplication to achieve this -> reshaping tensors for
  the neural network).

* replace utils reshape fun by reshape to batch dim

* move down switch to training mode to keep eval mode during sampling

* Commented in preparation for refactor.

* Document potentials for sampler; remove old classes.

* add wrapper around Distribution.log_prob to avoid .sum() for Uniform.

* rename sbi.utils.sbi. add init imports.

* formatting.

* Renamed APT class to SnpeC.

* Rename base_snpe-> snpe_base (consistency).

* fix typo

* replace rejection sample method with refactored static one.

* We now .__call__ instead of .run_inference().

* Added BoxUniform distribution for N-D Uniform; tests.

* fix batch dim bug. add function for rejection sampling from posterior under prior

* add evaluation to posterior correction tests

* fix imports

* Refactor for estimating the leakage correction factor using rejection sampling:
- estimate only once for ""true context"" and reuse
- estimate new for every new context
- move rejection sampling method to utils, refactor

* sort imports and adapt acceptance rate call for summary writer

* fix small bug in counting sampels

* add test with BoxUniform prior

* remove checks for ND Uniform in code

* Fix return type of slice_np (now float32).

* Line wrapping in docstring (cosmetic).

* Use BoxUniform whenever a N-D Uniform is intended.

* refactor docs and variable names in posterior sampling.

* Cosmetic fixes for PotentialFunctionProvider.

* refactor usage of rejection sampling posterior.

* fix bug in snpe b loss, fixes issue #71. add docs

* add gt posterior method for uniform prior. refactor

* adapt linear gaussian inference tests to test for both, uniform and mvn.

* fix imports

* Switched SRE to s.__call__ instead of .run_inference

* Use new PotentialFunctionProvider structure for SRE.

* Add test for SRE; hideous fail for pyro samplers, e.g.g slice (commented out).

* BoxUniform is now a class, enables type testing.

* Docstring for BoxUniform explains why it is needed.

* add std as kwarg in linear gaussian

* remove unused uniform prior fix, add function to check prior WIP.

* comments. fix imports and tensor types.

* Removed import old classes.

* Leftover use of now deleted get_log_prob in torchutils.

* Account for univariate parameters

* Add num_chains to test_logistic_regression

* Docstring and typo fix (hat tip Michael).

* Explicitly set mp_context to fork due to Python 3.8 changes

* reduce samples in fast api tests, imports.

* move and improve test for prior and data dims. improve simulator utils

* adapt to new input checks and simulator utils.

* Set mp_context to fork in posterior class for python 3.8 changes

* fix import and warning.

* Multiple mcmc chains, num_chains more accessible to user, added tests for SNPE-B, samplers, SRE

* Removed superfluous line in sre test

* remove casts to tensor to avoid torch copy construct warning. fixes #77.

* Added (commented) line that breaks tests (despite comment in #76).

* Cosmetic.

* Ported PotentialProvider to SNL.

* improve warning.

* Add make_conform to make Tensors catenable.

* Streamlined potential functions with new method.

* Rename to improve claarity.

* Removed no-longer-needed dispatch on potential function.

* Streamlined dispatch on mcmc_method.

* atleast_2d function (without tests).

* Fix atleast_2d, add test.

* Make atleast_2d eager.

* Added docstrings for new shape-transforming utils.

* Batch simulator and MCMC fixes (#78)

* fix type issue by using list to collect batches.

Co-authored-by: janfb <j.f.boelts@gmail.com>
Co-authored-by: Jan-Matthis <mail@jan-matthis.de>
Co-authored-by: Michael Deistler <Michael.deistler@t-online.de>",unittest pytest,"
* reduce samples in fast api tests, imports.",304,Testing,Testing,False,False
983,microsoft/graspologic,2f0263e76776d2bc705c4e81949f76c2058c050a,2019-02-25 16:46:55,pytest,unittest,"Import Edgelist function (#122)

* Add import_edgelist

* Add return_vertices flag

* Ignore ABC import from collections, which is from networkx

* Update import_edgelist

* Add tests for import_edgelist

* try converting PosixPath to string

* Fix typo

* add import_edgelist to documentation

* remove path arg typechecking

* Update test

* Remove path object as option

* Continue to add iterable as input

* Allow iterable input. Add tests

* Allow for Path object inputs

* Change ordering of args and update docstring [skip travis]

* update docstring [skip travis]",unittest pytest,"
* Update test",304,Testing,Testing,False,False
984,microsoft/playwright-python,e7cde0f1b81f7edfcfc3b112dc5816d021e90fe2,2020-07-07 20:12:13,pytest,unittest,tests: use pytest instead of unittest (#11),unittest pytest,"
tests: use pytest instead of unittest (#11)",304,Testing,Testing,False,False
985,mindsdb/mindsdb,53b9a48f8590395af6ec89f438401d1bcf582695,2020-07-08 12:29:14,pytest,unittest,fixed clickhouse test,unittest pytest,"
fixed clickhouse test",304,Testing,Testing,False,False
987,mit-crpg/openmc,dba919c6109009670cc41decae356588c47c305f,2018-02-14 17:24:24,pytest,unittest,Convert deplete unit tests to use pytest,unittest pytest,"
Convert deplete unit tests to use pytest",304,Testing,Testing,False,False
989,ml31415/numpy-groupies,6f11b52c0bb0316c9a2643844c212fcb7e2769f2,2015-05-26 13:59:44,pytest,unittest,Using pytest instead of unittest; improved test suite,unittest pytest,"
Using pytest instead of unittest; improved test suite",304,Testing,Testing,False,False
991,mopidy/mopidy,f814e945d3e62c87c5f86ef5ac37c5feb733b83d,2015-05-10 19:49:04,pytest,unittest,tests: Convert ext test to pytests,unittest pytest,"
tests: Convert ext test to pytests",304,Testing,Testing,False,False
992,mozilla/pontoon,f76fd4a0f80336c2a300dc4456bc197d133f0131,2020-10-11 17:22:39,pytest,unittest,Bug 1417530 - Convert the api tests from Unittest to Pytest (#1701),unittest pytest,"
Bug 1417530 - Convert the api tests from Unittest to Pytest (#1701)",304,Testing,Testing,False,False
993,nautechsystems/nautilus_trader,1858081b5aa72e98dab2edb09457111d3ab911f2,2021-03-14 04:08:09,pytest,unittest,Convert test to pytest,unittest pytest,"
Convert test to pytest",304,Testing,Testing,False,False
994,nco/pynco,c7ef6680e1bc909982daa773a907b37f1fe39392,2014-01-26 19:30:06,pytest,unittest,"Changes to nco.py and unit tests

renamed directory structure
added unit tests",unittest pytest,"
Changes to nco.py and unit tests",304,Testing,Testing,False,False
995,nengo/nengo,66ae97e493f020825b2a2372ae14c19383f704eb,2014-05-23 14:24:15,pytest,unittest,"Now using py.test for unit testing

- Also added some tags and signal names to builder
  for easier debugging in some cases
- Running with multiple simulators and neuron types
  is done with py.test's funcargs mechanism;
  see http://pytest.org/latest/funcargs.html
  - Additional neuron types are tested in several cases
- Some renaming and cleanup in tests
- python setup.test still works with setuptools,
  but not with distutils. Install should still work though.",unittest pytest,"
Now using py.test for unit testing",304,Testing,Testing,False,False
996,neo4j/neo4j-python-driver,82b4b3a79222e95aa8a7b90873ca8861fe8747f9,2020-02-04 10:18:24,pytest,unittest,"4.0 bolt v4x0 stub tests (#347)

* disconnect on run script

Parameterized the test test_direct_disconnect_on_run,
added .script for Bolt 4.0

* disconnect on pull all script

Parameterized the test test_direct_disconnect_on_pull_all,
added .script for Bolt 4.0

* session close after server close script

Parameterized the test test_direct_session_close_after_server_close,
added .script for Bolt 4.0

* stub test_bookmarking.py is now pytest style.

* router script

Parameterized the test test_should_be_no_bookmark_in_new_session,
added .script for Bolt 4.0

* Parameterized with router.script

test_should_be_able_to_set_bookmark and test_should_be_able_to_set_multiple_bookmarks
have been parameterized and is using the router.script

* bookmark chain script

Parameterized the test test_should_automatically_chain_bookmarks,
added bookmark_chain.script for Bolt 4.0

* bookmark chain with autocommit script

Parameterized the test test_autocommit_transaction_included_in_chain,
added bookmark_chain_with_autocommit.script for Bolt 4.

* test_transactions.py is now in pytest format.

* connection error on commit script

Parameterized the test test_connection_error_on_explicit_commit,
added connection_error_on_commit.script for Bolt 4.

* Parameterized test_connection_error_on_commit

* test_accesslevel.py is now in pytest format

* return 1 in read tx script

Added return_1_in_read_tx.script to Bolt 4.0
Parameterized test_read_transaction

* tx_return_1_port_9006.script added

* parameterized test_write_transaction

* Renamed return_1_in_read_tx.script to tx_return_1_port_9004.script

Renamed only for Bolt 4.0

* renamed connection_error_on_commit.script to tx_connection_error_on_commit.script

Only for Bolt 4.0 script

* renamed bookmark_chain.script to tx_bookmark_chain.script

Only for Bolt 4.0 script

* renamed bookmark_chain_with_autocommit.script to tx_bookmark_chain_with_autocommit.script

Only for Bolt 4.0 script.

* added tx_run_with_failure_syntax_error.script

For Bolt 4.0

* Parameterized test_read_transaction_with_error

* renamed tx_run_with_failure_syntax_error.script to tx_run_with_failure_syntax_error_port_9004.script

* added tx_run_with_failure_syntax_error_port_9006.script

* parameterized test_write_transaction_with_error

* Added tx_return_1_twice_port_9004.script

* Parameterized test_two_subsequent_read_transactions

* Added tx_return_1_twice_port_9006.script

* Parameterized test_two_subsequent_write_transactions

* Added tx_return_2_with_bookmark_port_9006.script

* Parameterized test_read_tx_then_write_tx

* Added tx_return_2_with_bookmark_port_9004.script

* Parameterized test_write_tx_then_read_tx

Changed the order of input of the scripts to follow the logic of the
test.

* Added tx_return_1_reset_port_9004.script

* Parameterized test_no_retry_read_on_user_canceled_tx

* Added tx_return_1_reset_port_9006.script

* Parameterized test_no_retry_write_on_user_canceled_tx

* Import cleanup

* test_routingdriver.py is now in pytest format.

* changed to is in test

* Parameterized test_bolt_plus_routing_uri_constructs_neo4j_driver

* Added routing_table_failure_not_a_router.script

* Parameterized test_cannot_discover_servers_on_non_router

* Added routing_table_silent_router.script

* Parameterized test_cannot_discover_servers_on_silent_router

* Parameterized test_should_discover_servers_on_driver_construction

* Added return_1_port_9004.script

* Parameterized test_should_be_able_to_read

* Added create_test_node_port_9006.script
create_test_node_port_9006.script

* Parameterized test_should_be_able_to_write

* Parameterized test_should_be_able_to_write_as_default

* Added disconnect_on_run_port_9004.script

* Parameterized test_routing_disconnect_on_run

* Added disconnect_on_pull_port_9004.script

* Parameterized test_routing_disconnect_on_pull_all

* renamed stubtest

tests/stub/scripts/v4x0/disconnect_on_pull_all.script

to

tests/stub/scripts/v4x0/disconnect_on_pull.script

* Parameterized test_should_disconnect_after_fetching_autocommit_result

* renamed stub script

tests/stub/scripts/v4x0/tx_return_1_twice_port_9004.script

to

tests/stub/scripts/v4x0/tx_two_subsequent_return_1_port_9004.script

* renamed stub script

tests/stub/scripts/v4x0/tx_return_1_twice_port_9006.script

to

tests/stub/scripts/v4x0/tx_two_subsequent_return_1_port_9006.script

* Added tx_return_1_twice_port_9004.script

* Paramterized test_should_disconnect_after_explicit_commit

* Added return_1_twice_port_9004.script

* Parameterized test_should_reconnect_for_new_query

* Parameterized test_should_retain_connection_if_fetching_multiple_results

* Added return_1_four_times_port_9004.script

* Parameterized test_two_sessions_can_share_a_connection

* Added return_1_port_9002.script

* Added router_role_route_share_port_with_role_read_and_role_write.script

* Parameterized test_should_call_get_routing_table_procedure

* Added router_get_routing_table_with_context.script

* Parameterized test_should_call_get_routing_table_with_context

* Added return_1_port_9005.script

* Added router_with_no_role_write.script

* Parameterized test_should_serve_read_when_missing_writer

* Added router_with_no_role_read.script

* Parameterized test_should_error_when_missing_reader

* Added run_with_failure_cluster_not_a_leader.script

* Parameterized test_forgets_address_on_not_a_leader_error

* Added run_with_failure_forbidden_on_read_only_database.script

* Parameterized test_forgets_address_on_forbidden_on_read_only_database_error

* Parameterized test_forgets_address_on_service_unavailable_error

* Added run_with_failure_database_unavailable.script

* Parameterized test_forgets_address_on_database_unavailable_error

* Removed unused unittest TestCase",unittest pytest,"
* changed to is in test",304,Testing,Testing,False,False
999,nipy/nipype,d56eb89a37ca1f784093234c1eca5814628422af,2016-12-09 12:23:49,pytest,unittest,changing unittest  to pytest,unittest pytest,"
changing unittest  to pytest",304,Testing,Testing,False,False
1000,ns1/ns1-python,10740697f4d55fce9063135cf3ada84c101c007b,2016-06-12 20:17:14,pytest,unittest,"Adds tox.ini for python versions 27 and 33.

 - Creates unittests dir and moves test_config to dir.
 - test_config now setup as pytest instead unittest.
 - Adds tests package conf settings in tests/conftest.py",unittest pytest,"
- test_config now setup as pytest instead unittest.",304,Testing,Testing,False,False
1001,nvictus/priority-queue-dictionary,38a5481bfd8b2ecdb97ecdee95cbf6ef6def46c6,2020-07-12 20:03:12,pytest,unittest,"Convert unitest to pytest

Update python versions to what Travis currently supports

tweak/correct a test",unittest pytest,"
Convert unitest to pytest",304,Testing,Testing,False,False
1002,oVirt/vdsm,5521d72695eefc283ae56cca5c5ff90550fc2485,2018-10-25 08:15:14,pytest,unittest,"net tests: Migrate link_validator_test unit test to pytest syntax

Change nose syntax to pytest syntax.

Change-Id: I50a4b107a57d43f88180aa2dd788f075d1ec96a0
Signed-off-by: Bell Levin <blevin@redhat.com>",unittest pytest,"
net tests: Migrate link_validator_test unit test to pytest syntax",304,Testing,Testing,False,False
1005,odlgroup/odl,10066e42733ca53f5615c2b672b2a9c9723b6d61,2015-10-16 13:59:30,pytest,unittest,changed pspace test to use pytest,unittest pytest,"
changed pspace test to use pytest",304,Testing,Testing,False,False
1007,openstenoproject/plover,29099295a5bff68d6aa3d3eb9a56a6f1c16aecda,2017-08-30 12:41:56,pytest,unittest,"test: rework formatting tests

Use pytest with parametrization so it's easier to select tests,
as well as mark individual tests as xfailed.",unittest pytest,"
Use pytest with parametrization so it's easier to select tests,
as well as mark individual tests as xfailed.",304,Testing,Testing,False,False
1008,opsdroid/opsdroid,7c765997b514d3c0f3047bb6fc09da4a493aed16,2020-05-28 09:22:29,pytest,unittest,"Change test folder structure and migrate facebook connector tests to pytest (#1506)

* Change test folder structure and migrate facebook connector tests to pytest

* Exclude conftest.py from packaging

* Fix linting issues

* Recursively exclude conftest files",unittest pytest,"
Change test folder structure and migrate facebook connector tests to pytest (#1506)",304,Testing,Testing,False,False
1009,osbuild/osbuild,8cf35b4728c7bc5cdb8097344657c06b372dd41d,2021-06-21 16:56:38,pytest,unittest,"test/ostree: use pytest and split out tests

Convert the test to use `pytest` and split out the individual
tests. The temp-directory fixture has the session scope so
that checkpoints can be shared between the individual tests.",unittest pytest,"
test/ostree: use pytest and split out tests",304,Testing,Testing,False,False
1012,pantsbuild/pants,c0ecad439c8c2f6c42d66c29e22b76cb6225e6fc,2020-05-30 01:40:28,pytest,unittest,"Support Tuple-style MultiGet. (#9903)

MultiGet is currently only designed to work well with homogenous
collections of Gets under a type-checking regime. The underlying
mechanism supports heterogenous collections of Gets but these are
awkward to use when combined with type checking.

Add support for up to 10 heterogeneous type-tracked MultiGet parameters
in addition to the current support for a single homogenous collection
parameter.

As a practical matter, It's often convenient to define heterogenous Gets
outside MultiGet and assign them to local variables. If any of these
have name dependencies (e.g.: Simultaneously build a set of PEXes where
one uses PEX_PATH to join in the others) then it would be good to be
able to say get1.subject.output_filename and have it type check based on
Get.subject carrying a type. Support this by fully parameterizing Gets.

We currently support and implicitly encourage Get indexing as a way to
pass the product type parameter to a Get constructor. This complicates
adding type parameters to Get since mypy expects all subscript calls in
any position match the arity of the Generic declaration. Failures look
like (for Generic[P, S] iteration):
  ```
  src/python/pants/backend/awslambda/python/awslambda_python_rules.py:102:20: error:
  Type application has too few types (2 expected)  [misc]
          result = await Get[ProcessResult](Process, process)
  ```
This means to add more type parameters to Get we need to chose between:
a. Force all uses of Get[PT] in the wild to convert to Get[PT, SDT, ST]
b. Divorce the indexing operation from Get itself; i.e.: index on some
object that returns a callable that can produce a Get.

Here we choose the latter, moving Get to _Get and introducing a Get
object that can be indexed against to produce _Gets.

This complication highlights the oddity of the syntax support and #9899
has been filed with supporting code and tests in this change to
deprecate the syntax.

Fixes #9294",unittest pytest,"
This complication highlights the oddity of the syntax support and #9899
has been filed with supporting code and tests in this change to
deprecate the syntax.",304,Testing,Testing,False,False
1013,pantsbuild/pex,1dcfe3faf49c5e294bdc00ca20c17ff141f95212,2012-04-10 00:09:05,pytest,unittest,"This push brings more improvements to the release candidate for the new pants build system as well as a major revamp of python .pex support.

 New python toolchain:
   The major components:
     PythonLauncher => PEX
     Environment => PEXBuilder
     Almost completely rewritten twitter.common.python
     First class PexInfo manifest for doing thin pexes
     PEX files now embed enough portions of pip/distribute/twitter.common.* rather than dumping out eggs
    No longer use EggParser + EggCache; instead use the ""proper"" pkg_resources Metadata+Distribution components

  pants:
    + Fix resolve cp construction to always occur
    + Add a comment to make it clear pants confluence pages should not be edited directly - give a pointer to the target to use instead
    + Fix markdown open to display isolated pages in addition to page graph roots
    + Remove -types from ivy resolves and instead uniformly use extension matching against jar to cull classpath mappings
    + Fix help - don't reuse the initial option parser - just seed a new one
    + Add support in test runner for failing fast and plumb this option through to pants.new's junit task
    + Fix compiler diagnostic filters to only apply to warnings - was squashing error messages as well
    + Pass return codes back up from the pants py command
    + Support jvm_args for jmake
    + Add orphan pid reaping to python tests
    + Add support regex excludes to old and new pants
    + Add configurable test timeouts to python test targets
    + Add basic command line pre-parsing support to enable free mixing of goals, targets and flags for 99.9% of cases
    + Fix AnsiColorDiagnosticListener to handle warnings and errors at eol - a common case being missing ;   + add a failing test and fix
    + Add support for : and :: syntax to select all sibling and all descendant targets, deprecate the corresponding --all and --all-recursive flags
    + Add a check that jars never get over-written
    + Add rcfile support to pants.new for defaulting flags
    + Fix dependency file flushing for cases when the compiler hits an error before ever flushing a class file
    + Support python_binary targets without sources
    + Fixup JUnitConsoleRunner to count all public methods of a concrete class' hierarchy to model junit4 native runner behavior
    + Protect pants/new java processes from CLASSPATH environment variables - scrub these and warn the user
    + Cut off BUILD file ancestor walks at the build root to prevent a large class of hard to diagnose errors
    + Add an option to force NailgunTasks to globally revert to subprocess java spawns instead of starting up a nailgun server
    + Add support for publishing snapshots to a local maven repo. + Fix latent bug when publishing targets with thrift or protobuf dependencies
    + Map jmake error codes to meaningful (for the most part!) messages
    + Use a single --specs flag to collect both explicit specs file paths and classnames
    + Add basic emma code coverage support for java_tests
    + Add a custom DiagnosticListener to the dependency tracking compiler to enable targeted supression of warnings and colorized build output
    + Add an option to log success/failure after execution
    + Fix missing provides transfer from protobuf target to synthesized java_library target
    + Add idea and eclipse goals to generate IntelliJ IDEA and Eclipse projects respectively
    + Adds filedeps and pathdeps goals to pants
    + Improve bundle mapping flexibility with support for relative_to
    + Remove duplicate pants BUILD definition

  python:
    + Have the log module respond to a NONE disk level by turning of disk logging completely and add a LogOptions method to allow apps to do this programmatically
    + Add an lru cache decorator
    + Fix wall_time handling for procfs, fixes thermos kills on linux
    + Add ignore_errors option to pex dependency resolution
    + Support initializing common log without disk logs
    + Fix error in python macosx platform compatibility logic, add tests
    + Add support for pex pkg_resources entry points
    + Safer package caching for .pex
    + Add daemonization to twitter.common.app

  jvm:
    upgrades:
      mahout-0.6-T1, finagle 2.0.1, twitter-text 1.4.10, gson 2.1

    + Add 99.9 and 99.99 as default percentiles in RequestStats
    + Just log changes in a serverset when they occur
    + Kill twitter.thrift/ThriftService
    + Introduce an interface to abstract TimeSeriesRepositoryImpl from Stats static badness
    + Unsuppress checkstyle for args, common/application and httphandlers
    + Expose Supplier<EndpointStatus> in ServerSetModule
    + Changes to the TokenStreamSerializer
      add a fingerprint of the attributes used in the serializer so that mismatches in attributes are detectable
      add a ByteRef-like interface for deserializing a snippet of a byte array
      ensure that TokenTypes are serialized to a single byte
    + Introduce a glog style formatted in common.logging
    + Narrow finagle-thrift dependencies to just what is required
    + Expose per event latency stat in SlidingStats
    + Scala command line parsing using case classes

(sapling split of ea1b38ae856953d9f11939c5466bb88304e58d8b)",unittest pytest,"
+ Add basic command line pre-parsing support to enable free mixing of goals, targets and flags for 99.9% of cases
+ Fix AnsiColorDiagnosticListener to handle warnings and errors at eol - a common case being missing ;   + add a failing test and fix
+ Add support for : and :: syntax to select all sibling and all descendant targets, deprecate the corresponding --all and --all-recursive flags",304,Testing,Testing,False,False
1014,paulgavrikov/visualkeras,0014fb9658c01c574117f1072f79329a4255ef93,2020-10-29 00:33:56,pytest,unittest,"tests: switch to pytest

- switch from untitest to pytest to use fixtures
- add tests for new features and design goals",unittest pytest,"
- switch from untitest to pytest to use fixtures
- add tests for new features and design goals",304,Testing,Testing,False,False
1018,photosynthesis-team/photosynthesis.metrics,a7a6eaedba3d8e15beb3fdcefa81b1daff66bf57,2020-01-09 18:17:11,pytest,unittest,"tests(ssim): unittest -> pytest format

Signed-off-by: Sergey Kastryulin <snk4tr@gmail.com>",unittest pytest,"
tests(ssim): unittest  laifuhewb  pytest format",304,Testing,Testing,False,False
1021,playpauseandstop/rororo,9db508d75505e9c6214df4254e60815f1dd3b8f7,2019-07-02 16:51:54,pytest,unittest,"chore: Bunch of infrastructure changes to the rproro project.

- Use pre-commit hooks for linting
- Use black for code formatting
- Use pytest for testing
- Temporarily disable running tests on Python 3.5 & 3.6",unittest pytest,"
- Use black for code formatting
- Use pytest for testing
- Temporarily disable running tests on Python 3.5 & 3.6",304,Testing,Testing,False,False
1022,plotly/dash,32dee5019b75bd85295cf6b49ac24b8fe307cb0f,2020-12-16 23:18:02,pytest,unittest,convert remaining unittest-style tests to pytest,unittest pytest,"
convert remaining unittest-style tests to pytest",304,Testing,Testing,False,False
1024,probabilistic-numerics/probnum,0fdf09afc9179f00a39c966df0911fb8d8560874,2021-02-04 09:30:47,pytest,unittest,"Modularise Kalman and fix iterated filtering and smoothing (#305)

* scaffolded Kalman functions

* more scaffolding

* added some content

* filtsmooth tests pass again

* factored out a conditioning function

* factored out a conditioning function

* commented out not implemented things

* slimmed down stoppingcriterion.

* removed comments

* removed comments

* kalman has a measure attribute now

* kalman filter tests refactored

* test for iterated update

* documented Kalman tests

* wrote an ieks thing

* replaced old kalman filter code

* almost tested iterated filtering

* fixed bugs---no the tests for iterated kalman do something reasonable

* tests pass now

* some documentation

* updated inits

* merged iterated kalman and kalman

* smoothing step preconditioning

* added some docs

* removed old code

* stopcrit in iterated filtsmooth now

* tests for kalman utils scaffolded

* smoothing tests pass

* documented rts tests

* stoppingcriterion tested

* another test

* some docs

* diffeq tests pass again

* some pylint fixes

* removed square root code

* robustified a test

* removed transition preconditioned entirely

* removed preconditioning tests

* pytest pylint are better friends now

* matern and ioup have preconditioning now

* pyproject ignores

* fixed a doctest

* fixed another doc

* rewrote kalman posterior tests partially

* fixed a failing kalmanposterior test

* all but sampling tests for posterior

* documented kalman posterior tests

* seeded sampling test and removed unused imports

* loosened chi2 test

* kalman init gaussianity check

* use_* in Kalman init

* not_terminate to terminate

* restored missing docstrings

* added a warning for double smoothing.

* un-messed up black

* removed extrapolation warning

* pylint updates, etc.

* added posterior into kalmanposterior test locs",unittest pytest,"
* fixed bugs---no the tests for iterated kalman do something reasonable",304,Testing,Testing,False,False
1027,pydicom/pynetdicom,0face960b909ff4fce6244061e35acc62af592a8,2018-12-27 01:06:20,pytest,unittest,Convert remaining unit tests to pytest (#248),unittest pytest,"
Convert remaining unit tests to pytest (#248)",304,Testing,Testing,False,False
1028,pylast/pylast,aae4bb3693e3331a526eb4eb93f0f5c01e26dc94,2020-06-01 12:50:27,pytest,unittest,Replace unittest with pytest,unittest pytest,"
Replace unittest with pytest",304,Testing,Testing,False,False
1029,pymc-devs/aesara,d869832e8edc62dc8398987385758d86c74d7f0b,2020-07-05 21:13:20,pytest,unittest,Move from unittest/nose to pytest,unittest pytest,"
Move from unittest/nose to pytest",304,Testing,Testing,False,False
1030,pymedusa/SickRage,d944bc055618892bb5eae516152a68f3044c3971,2016-08-30 19:01:23,pytest,unittest,"Refactoring issue submission and log files reader (#945)

* Refactoring issue submission and log files reader

* No need to sort errors since they're already sorted

* Removing print statement from logger.py

* Fixing issue title

* Fixing missing docstring

* Removing useless test

* More logging improvements

* Adding log filter by period

* Fix for #592: tornado logging

* Allow logging reconfiguration without the need of restart

* Log reconfiguration on the fly

* Improving issue submitter to list repo issues only one time. Increasing similar issues period to 6 months

* Refactoring duplicated logic in cmd logs in api v1. Improving read_loglines to accept predicate and formatter functions.

* Missing max_lines parameter in read_loglines. Change log default to 24h (only when first opening the page)

* Default api cmd_logs level as INFO not ERROR

as in viewlogs

* Adding links to issue submission

* Fixing log_re when logline contains extra/provider_name

* Adding APP SUBMITTED back to issue reporting

* Adding more tests for issuesubmitter and logger

* Fixing failing test

* Moving loggers initialization to init_logging to avoid import errors

* Adding some more tests",unittest pytest,"
* Fixing failing test",304,Testing,Testing,False,False
1031,python-pillow/Pillow,2c50723f14e568be57919eb4b3ebdf8070818593,2020-01-18 20:12:10,pytest,unittest,"Convert some tests to pytest style

To better follow conventional pytest style, this removes the outer
wrapper class in favor of a function for some tests. These tests were
picked as they are relatively simple and presented no barriers to a
quick port. The assert* methods are replaced with assert statements.
When necessary, a fixture is used to create a temporary directory.

This commit does not convert the entire test suite to this style as some
test classes use methods or other advanced features that are difficult
to automatically convert. The goal is to address these issues in
followup commits.

Refs #4193",unittest pytest,"
Convert some tests to pytest style",304,Testing,Testing,False,False
1032,pywbem/pywbem,820e3765c3dbf2a1c75f511a47329e19a7115d29,2018-01-19 11:16:30,pytest,unittest,"Fixed the use of hard coded value limits in ValueMapping and other fixes

Details:

* Fixed the use of hard coded value limits in the `ValueMapping` class
  for open ranges of the ValueMap qualifier, by making them dependent on
  the data type of the qualified element. This only affected elements
  with data types other than Uint32 and only if the ValueMap qualifier
  defined open ranges whose open side reached the min or max limit (i.e.
  was first or last in the list). Extended the test cases to include
  this situation (Issue #992).

* Fixed the use of negative values for lookup of values using
  the `ValueMapping.tovalues()` method. A regexp that was used
  to validate the syntax of the ValueMap entry did not allow
  negative numbers.

* Migrated the unit testcases in test_valuemapping.py from unitttest2
  to pytest, and used ytest fixture based parametrization to test
  all integer data types and not just Uint8 as previously.

Signed-off-by: Andreas Maier <maiera@de.ibm.com>",unittest pytest,"
* Migrated the unit testcases in test_valuemapping.py from unitttest2
to pytest, and used ytest fixture based parametrization to test
all integer data types and not just Uint8 as previously.",304,Testing,Testing,False,False
1033,pyxem/pyxem,d6eedd7f3fc27fc6098acc214646b71177839181,2018-03-18 21:24:20,pytest,unittest,Switch sereral tests from unittest to pytest,unittest pytest,"
Switch sereral tests from unittest to pytest",304,Testing,Testing,False,False
1035,quark-engine/quark-engine,0d45b56ea767af78054ba7a122e95650e6642efb,2019-11-19 07:15:51,pytest,unittest,Using pytest instead of unittest in test_main.py,unittest pytest,"
Using pytest instead of unittest in test_main.py",304,Testing,Testing,False,False
1036,qutip/qutip,83ddb1e33f64664b23ee61b8c2de3b645c2b4dce,2020-05-26 09:41:46,pytest,unittest,"Convert tests to pytest (assorted) (#1252)

* Convert test_control_pulseoptim.py to pytest

Converted the setup/tear down method of temporary file handling to one
making better use of pytest's fixtures.  This also swaps the temporary
files to the standard library `tempfile`, which ensures that we're not
(even momentarily) messing around with the user's home directory, but
that we use the OS-supplied temporary folder.  All creation and cleanup
is then just handled automatically with context managers, whether
explicitly when we use temporary files, or implicitly by pytest.

The massive complexity of the `load_parameters_from_file` test would
suggest that that particular module isn't organised as well as it could
be.  It was rather difficult getting the test to work at all, let alone
actually using it as an end-user.

* Convert test_correlation.py to pytest

The custom 2D integration in the two-level system had a bug caused by
using `sum()` on a 2D numpy array: `sum` works over iterables, so this
is functionally equivalent to `np.sum(x, axis=0)` and _not_ `np.sum(x)`
which is what was intended for the trapezium rule to have been
implemented correctly.  This left `s3` (the centre of the region) still
being an array, while `s1` and `s2` (the corners and edges respectively)
were correctly scalars.  The broadcasting rules in the line
    sum(s1 + 2*s2 + 4*s3)
then effectively meant that `s1` and `s2` were multiplied by
`s3.shape[0]`.

I removed the custom 2D integration, and just used multiple calls to
`np.trapz` to ensure accuracy in the future.  This was already being
done in the three-level system.  I updated the expected values of `g2_0`
to match the correct integration.

* Convert test_countstat.py to pytest

* Convert test_enr_state_operator.py to pytest

Parametrises over more different categories of states and allowed
numbers of excitations for all the different tests.

* Convert test_entropy.py to pytest

* Convert test_fileio.py to pytest

* Convert test_floquet.py to pytest

There are A LOT more tests necessary in this, particularly given all the
issues with the Floquet solver.  This commit is just a simple conversion
and the main overhaul of the Floquet module will come later.

* Convert test_heom_solver.py to pytest

Separate out the different test cases into parametrised tests.  At
present the expected value for each test is the same and re-calculated
on each test run.  This isn't much of an issue because the calculation
time is short (<0.1s on my machine), but if it becomes an issue, it's a
fairly simple matter of caching the result.  I just didn't want to
overengineer a simple conversion.

The test that `hsolver.configure` correctly handles setting and
unsetting the stats is moved into a separated test to uncouple the
logic.",unittest pytest,"
Convert tests to pytest (assorted) (#1252)",304,Testing,Testing,False,False
1037,radomirbosak/duden,4b123585d021dbce6285310f81ce8f7ed6f00338,2018-04-30 09:39:23,pytest,unittest,Migrate existing unittest tests to py.test,unittest pytest,"
Migrate existing unittest tests to py.test",304,Testing,Testing,False,False
1040,reportportal/agent-Python-RobotFramework,3bd24766ef55612c4e4b695363067317ead3bbf2,2020-11-05 00:55:02,pytest,unittest,"use pytest instead of unittest

- add type-hinting
- use pytest for testing framework",unittest pytest,"
use pytest instead of unittest",304,Testing,Testing,False,False
1042,robotframework/SeleniumLibrary,b656086ed73ea6f81c4c64c9981655f6b96cf3c7,2019-12-14 16:56:36,pytest,unittest,Converting service log path utest to pytest,unittest pytest,"
Converting service log path utest to pytest",304,Testing,Testing,False,False
1044,roskakori/pygount,8a2a2b3a86908b37af30164e272c6455c60bb65b,2019-06-23 15:55:25,pytest,unittest,#23 Changed test to use assert and pytest instead of unittest's self.assertXXX().,unittest pytest,"
#23 Changed test to use assert and pytest instead of unittest's self.assertXXX().",304,Testing,Testing,False,False
1049,s3ql/s3ql,43473344086b7c033a92d93019e53123ee460b68,2015-02-03 23:01:51,pytest,unittest,"Replace unittest.skipTest with pytest.skip(). This should have happened
in commit 8a2a6a4ee333.

--HG--
extra : rebase_source : f314afda8f46a1e0ba3e90ef232660b1639b4d8f
extra : histedit_source : 471fbe47b49dad99c67637d2ca08315dbbe3aacb",unittest pytest,"
Replace unittest.skipTest with pytest.skip().
This should have happened",304,Testing,Testing,False,False
1050,salu133445/pypianoroll,13b39f3d01cbd68a40559de46194732330e52104,2020-10-08 16:34:51,pytest,unittest,Change test framework to pytest,unittest pytest,"
Change test framework to pytest",304,Testing,Testing,False,False
1051,scikit-hep/boost-histogram,7e608ab735e1a61052c757be1e2bbe86fc661882,2019-04-02 14:03:50,pytest,unittest,"Converting the classic test suite (#23)

* Adding axis of classic tests, circle 1 arg

* Adding hist tests from old suite

* More tests, add bins

* Rename .extent() -> .size(flow=True)

* Add integer test, pow is more normal",unittest pytest,"
Converting the classic test suite (#23)",304,Testing,Testing,False,False
1052,scikit-image/scikit-image,ed469af4cdf9e70dd017633ad389ecd8183f7e6e,2021-06-07 15:33:24,pytest,unittest,"single precision support in skimage.features (#5353)

* add float32 support to match_template

* add float32 support to daisy feature descriptors

* float32 support for feature.blob

* changed from _float_type to _supported_float_type

* float32 support for feature.corner

* float32 support for feature.hog

* float32 support for feature.orb

* pep8

* use double precision sums in _hog_normalize_block

* try changing inputs to hog_histograms to float64

* TST: update test style based on reviewer feedback

* remove use of unittest from test_peak.py

* remove commented debugging code from blob.py",unittest pytest,"
* TST: update test style based on reviewer feedback",304,Testing,Testing,False,False
1054,scrapinghub/shub,24c663ed0130858884ac719b3378b8677043f320,2017-05-17 09:09:45,pytest,unittest,"Improve shub image deploy state reporting (#260)

* Improve shub image deploy state reporting

* Use classes to track progress depending on verbosity

* Simplify changes for progress bar

* Replace unittest with pytest for shub.image.deploy

* Cover changes with tests

* Fix broken tests

* Add docstrings for helper functions

* Specify encoding for deploy tests module

* Monkeypatch bar rate for reliable tests

* Rework and simplify tests for image deploy/push

* Use existing BaseProgress cls with iterator

* Rename a helper and provide a docstring

* Improve tests for image deploy progress",unittest pytest,"
* Replace unittest with pytest for shub.image.deploy",304,Testing,Testing,False,False
1055,se2p/pynguin,1bdc58ce68090ce15cd3764839546da47afb7525,2020-01-28 00:13:41,pytest,unittest,"__eq__ of a variable reference must take the position in which the variable was defined into account.
Fixed existing tests and added regression test.",unittest pytest,"
Fixed existing tests and added regression test.",304,Testing,Testing,False,False
1056,sentinel-hub/sentinel2-cloud-detector,05dbdb4b68132fa72bd90f472f784f44febd3595,2021-02-26 11:37:27,pytest,unittest,"updated code, refactored unit tests, separated sentinelhub features",unittest pytest,"
updated code, refactored unit tests, separated sentinelhub features",304,Testing,Testing,False,False
1060,sjkingo/python-freshdesk,c10f6df8c5202f12c9f2c7e421e931f7f958df70,2019-10-22 23:35:53,pytest,unittest,"Switch to Pytest (#41)

* Switch to Pytest

* Refactor a test to use parametrize

* Refactor the rest of the tests

* Use the common pytest directory structure and test functions instead of classes",unittest pytest,"
* Use the common pytest directory structure and test functions instead of classes",304,Testing,Testing,False,False
1064,sobolevn/django-split-settings,36c84a93291b3fa54c7734674c084ee98b4d24d5,2016-12-17 16:04:40,pytest,unittest,"Changes how the tests work.

Changes:
* Changed the default Django version in the requirements from `>= 1.5.1` to `>= 1.5`
* Added `setup.cfg` to support `python setup.py test` command
* Refactored how the tests work
* Added `tests/conftest.py` file with the fixtures, used fixtures widely
* Changed all test to be functions instead of classes
* Added new classifiers
* Added `pytest-env` to read env variables from `setup.cfg`
* Removed `run_coveralls.py`, added `after_success` section in `.travis.yml`
* Changed the `README.rst` to be shorter

Closes #11",unittest pytest,"
Changes how the tests work.",304,Testing,Testing,False,False
1065,sopel-irc/sopel,feb7ce11ccb677340d7f86038db1d8d38be11901,2019-08-31 13:32:24,pytest,unittest,test: use pytest instead of unittest test_config.py,unittest pytest,"
test: use pytest instead of unittest test_config.py",304,Testing,Testing,False,False
1066,soxofaan/duviz,9c54c37927512d5bca81cf56fcc5442f614d4070,2019-10-21 06:55:37,pytest,unittest,Issue #9 Start using pytest for unit tests and add tests for color mode,unittest pytest,"
Issue #9 Start using pytest for unit tests and add tests for color mode",304,Testing,Testing,False,False
1069,sunpy/sunpy,2fc44832b9cb75cad758ec3416f870f5ff342cc2,2014-05-02 14:31:43,pytest,unittest,some changes to be tested on the scrapper,unittest pytest,"
some changes to be tested on the scrapper",304,Testing,Testing,False,False
1070,supermihi/pytaglib,a1d03dd80d2289f2174bd2afe62e0c400c113903,2019-02-26 21:00:08,pytest,unittest,"convert two unit test files to pytest (test_problems.py, test_strval.py)",unittest pytest,"
convert two unit test files to pytest (test_problems.py, test_strval.py)",304,Testing,Testing,False,False
1071,theislab/sfaira,ca70c5bb23b60e32d348547181957b6339eeee81,2021-04-29 19:02:18,pytest,unittest,"fixed store to estimator interface and added further unit tests on st… (#255)

* fixed store to estimator interface and added further unit tests on store and estimators
* fixed zoo TopologyContainer interface and added .obs into store
* adapated zoo handling and model ontology

switched to modelclass_name_provider to be more generalisable
modelclass is the only constant beyond provider that is really essential because it maps to a unique estimator class

* updated store subsetting
* fixed cached_store_writing for testing
* fixed store-estimator bugs
* stabilised size factor computation, fixed store unit tests and added dense conversion for feature indexing in store generator
* improved efficiency of generator queries of store and generator usage by estimator keras
* id is retained if uns_to_obs is True in streamlining
* removed conitnuous batches option from store generator",unittest pytest,"
fixed store to estimator interface and added further unit tests on st… (#255)",304,Testing,Testing,False,False
1074,tomerfiliba/plumbum,c10137a7cc5b48e5167a327f8c34d9022a76534c,2015-11-10 20:23:54,pytest,unittest,"Moving to fully py.test testing, removing old hacks",unittest pytest,"
Moving to fully py.test testing, removing old hacks",304,Testing,Testing,False,False
1075,uber/h3-py,78c09341c4d33b15282d159da1900b56404d7b4c,2020-05-10 18:47:45,pytest,unittest,"The big Cython move (#99)

* Use Hunter

* Use position independent code to link shared object correctly

* Fix issues in module naming

* Temporary fix

* Use src directory and fix CMake build for subdirectory

* Fix build, remove dependency on Hunter

* aj first stab at cython

* Added class to manage H3Index array memory.
Added a bunch of wrapping functions.

* hacky version of polyfill working

* remove some naming redundancy

* Adding compact and uncompact functions

* notes

* clean up HexMem class

* reworked geofence and geopolygon. now memorysafe (i think)

* reorder definitions

* formatting

* Use scikit-build for setup

* Changes for getting build partially working on macOS

* Add scikit-build to requirements-dev.txt

* Build the core library as static and update notes.md

* update cython notes

* Cleaning up the Cython instructions and tests a bit

* cleaning out extra files for now

* readme

* Cleaning out more files to focus on Cython dev in this branch

* makefile

* simplify install process with makefile

* adding back in a bunch of files

* Add appveyor.yml for Cython

* Disable Python 2.7 test

* reorganize cython build; working on os x

* get new changes running on my OSX machine

* add hexmem.pyx

* just throwing it all in h3core...

* newlines

* separate HexMem into separate module

* change import to `h3py.h3core` for tests

* update readme for new folder structure

* starting to layout separate APIs

* `set_int` and `set_str` working

* notes

* cleaning up a bit

* moving the HexMem helper functions

* moving lat/lng functions to separate module

* move output formatting functions

* use `size_t` in HexMem

* trying input/output formatters

* rename to make api modules obvious

* adding some functions providing hexagon stats

* adding some TODOs to use C functions instead of python

* fix api typos

* adds unidirectional edge functions

* cleaning up geo functions a bit

* add todo

* create `api` directory and move modules

* try using `_api_template.py` to generate different APIs

* remove HexMem class and use memoryviews of cython.view.array objects instead

* make single mercator function

* remove redundant exception handling

* automatic input validation

* add validation for unidirectional edges

* simplify API generation

* a little cleaning

* defaults for parent and child functions

* add back in H3str as input type to hex2int

* simplify validation and conversion code

* adding tests for geo functions

* rename hexmem -> util

* move exceptions to util.pyx

* move geo functions to a separate module

* move hex2int and int2hex to each api

* rename validation functions

* rename h3api -> libh3 to reserve ""api"" for the different python APIs we expose

* cleaning up memory allocation

* fix clean up code

* clean up comments

* add some resolution checking

* adding a diagram of the code to remove zeros

* adding some docstrings

* update H3 C library

* add line function

* docstring

* some function name changes

* rename k_ring -> disk

* rename hex_ring -> ring

* cleaning up modules

* ... cleaning up all the modules

* add in backward-compatible `old` API

* add some thoughts on slower fallback for `ring`

* some naming changes

* fix up mean_hex_area and mean_edge_length

* rename base_cell -> get_base_cell

* remove special case for n=0 memory allocation

* rename edge_hexes -> edge_cells

* rename edges_from_hex -> edges_from_cell

* rename functions to match current python implementation

* remove h3py.api.old in favor of defaulting to set_str

* update resolution docstring

* use macro in CMake (I have no idea what I'm doing tho...)

* try this one weird trick for Python 2 compatibility!

* add note on .rstrip('L') for handling python 2

* Use `__version__.py` (#57)

* use __version__.py to define python version

* add Python/C version check test

* newline

* some questions on the CMake file

* actually, use _version.py for less confusing naming

* note

* Change directory structure, make tests work (#61)

* travis with multiple python versions (#62)

* Add appveyor.yml for Cython

* Disable Python 2.7 test

* Use `__version__.py` (#57)

* use __version__.py to define python version

* add Python/C version check test

* newline

* some questions on the CMake file

* actually, use _version.py for less confusing naming

* note

* Change directory structure, make tests work (#61)

* linting

* linting

* fix purge command

* clean up requirements a bit

* messing with travis

* more travis

* try travis again

* clean up requirements a bit more

* test more python versions, including 2.7

* cmake version thing

* py3.5 doesn't seem to work with cmake

* run all tests in test directory

* remove fabfile

* make sure fails on lint

* get lint to pass

* fix purge command

* bare bones requirements-dev.txt

* use `pytest tests/*` in CI configs

* no need for a `MANIFEST.in` anymore

* fix windows wildcard?

* whatever you want, Windows.

* Basic code coverage (#63)

* basic code coverage

* rename error types and drop prefix on h3ilb.H3int

* Rework some internal names (#65)

* rename `h3utils` to `util`

* typo in cmakelists

* rename `h3_core` to `memview_int` to match format of other interfaces

* linting passes on tests

* make sure travis lints the tests

* getting better coverage on the interfaces

* newline

* add `array_int` (numpy) tests

* install numpy

* make sure appveyor is running all the tests

* dev readme changes

* setup.py changes

* more setup.py changes

* Polyfill working on polygons with holes (#71)

* jupyter lab makefile target for testing

* got polyfill with holes working

* linting

* docstring for h3_to_geo

* improve coverage

* ignoring more flake rules, whilst listening to one

* make polyfill resolution a required positional argument

* use boolean lnglat_order instead of string

* move polyfill tests to own file

* test polyfill polygon input permutations (clockwise vs counterclockwise elements and closed or open loops)

* update description of polyfill inputs

* comment on test

* lint things up

* add some test comments

* don't need to check for null before free

* Add `h3_set_to_multi_polygon` (#74)

* got to_multipolygon workin

* clean up code and add a simple test

* don't need this import

* moved the to_multipoly stuff to own file

* got the geo_json bit working

* add some tests

* linting

* file rename

* update renaming thoughts

* clean up usage of H3int

* no globs!

* don't need this ""mercator"" business

* rename `check_addr` to `check_cell`

* `destroyLinkedPolygon` note

* rename geo2coord to deg2coord and coord2geo to coord2deg

* Get original test suite working (#79)

* got to_multipolygon workin

* clean up code and add a simple test

* don't need this import

* moved the to_multipoly stuff to own file

* got the geo_json bit working

* add some tests

* linting

* file rename

* update renaming thoughts

* clean up usage of H3int

* getting some more of the original tests to work

* get a bunch of tests working!

* got some more tests working

* got all but one test passing; modified some tests that no longer need to fail

* update test, based on what I think the right result is

* update test for uni edge

* all linty fresh now

* split `out_collection` into `out_ordered` and `out_unordered`

* upgrade to h3core 3.6.1

* bump version

* add notes on empty array inputs

* 100% code coverage (#82)

* add int/str conversion test

* 100% codecov!

* linting

* remove notes

* to `not` or not to `not`

* gotta have a badge!

* Get tox working (#83)

* use relative imports

* clean up some messages

* simplify dynamic api modules a bit

* making some adjustments for tox

* update appveyor script

* remove linux wheel-building code, as i think it is out of date

* fix edge_is_valid test

* linting

* add some badges

* mess with travisci a little bit

* more messing with travis

* flake8 issue

* continue trying to fix flake issue

* we'll get it eventually

* messing with cmake

* revert the travis.yml file; add flake8 to tox

* and revert cmake pin

* messing with appveyor

* revert appveyor change. not sure how to wildcard in appveyor

* separate flake8 in tox envs

* move `cell` and `edge` functions to separate files

* have api import almost everything from core.py

* get outta here, flake8!

* clean up `_api_template.py`

* clean up int -> hex conversion function

* notes on `move_nonzeros()`

* more notes

* refactor so that all cython code is used via `h3.core`

* move noqa

* Convert original test suite to use pytest syntax (#84)

* convert original test suite to use pytest syntax

* making some key hexes obvious

* have travis print the full stack trace on error

* make a few more hex keys obvious

* rework test_compact_malformed_input a bit

* lint!

* formatting

* adding back in a few comments

* move uses of `map` to list comprehensions

* Slightly improve invalid index error reporting (#86)

* slight improvement to invalid index error reporting

* linting

* install notes

* parallel tox doesn't seem that much faster

* use relative imports

* hide h3.core from user api namespace

* noqa on __init__.py

* hides internal modules, but seems to break tox

* remove the testing notebook

* revert files back

* rename `core` to `internal_api`

* add the H3 error types to the public API (for testing)

* add a few function docstrings

* rework errors in tests

* address some comments

* have `create_ptr` do an `except? NULL`, which should be faster than `*`

* version docstring

* Get _cy folder layout working (#87)

* try to get _cy folder layout working

* Fix CMake build

* specify the LIBRARY DESTINATION to be the _cy folder

* move `_internal_api` to `_cy/__init__.py`

* remove version checks in CMakeLists.txt (#88)

* Better API names (#89)

* rename APIs

* rename test files

* remove obsolete comments

* update test files in appveyor

* Use `basic_` prefix instead of `py_`

* makefile

* appveyor!

* API docs

* linting

* tweak docstrings

* missed one!

* Immutability questions for the future

* linting

* module docstrings have to go first

* clarifying API collection input expectations

* input collection tests

* Add more docstrings to the APIs (#91)

* new docstrings

* use pandas docstring guide formatting for the first few functions

* Adding a few more docstrings

* addressing comments

* taking care of comments

* use `H3Cell` instead of `H3Index` to be more precise

* Update h3_get_base_cell

* `h3_is_res_class_III` docstring

* spacing

* move todos to comments

* notes on collections

* module docstring

* polyfill and to_multi_polygon docs

* clean up some docstrings

* address comments

* Segfaults (#92)

* making some segfault notes on `polyfill`

* Allow Cython to handle the error

* notes on tests

* rename test to `test_test_invalid_polygon` and group into single test

* typo

* Add `get_pentagons` function (#95)

* add `get_pentagons`

* linting

* rename to `get_pentagon_indexes`

* Prep cython branch readme before merging cython into master (#98)

* needs more badges!

* prep the readme before merge to master

* add logo

* remove docs folder

* use hex notation in the integer interface test

* conforming to the tyranny of `E222 multiple spaces after operator`

* adding long description to setup.py

* lint

* python 2.7 compatibility

* cell/edge boundary: clean up geo_json branch

* describe why we use `hex` in the error messages instead of `int2hex`

* geofence free notes

* update changelog

* typo

* alg -> algorithm

* remove irrelevant todo

* add distance >= 0 error checking

* add a missing file to appveyor tests

* trying out appveyor

* why won't you listen to reason, appveyor!?

Co-authored-by: Isaac Hier <ihier@uber.com>
Co-authored-by: Isaac Hier <isaachier@gmail.com>
Co-authored-by: Isaac Brodsky <isaac@uber.com>
Co-authored-by: Isaac Brodsky <isaac@isaacbrodsky.com>
Co-authored-by: Kurt Smith <kusmith@homeaway.com>
Co-authored-by: ankitmehta21 <ankitmehta@uber.com>",unittest pytest,"
* change import to `h3py.h3core` for tests",304,Testing,Testing,False,False
1076,uber/petastorm,d6d3b5b80770b985661e0620f346e0f9285e4c79,2018-08-13 15:34:28,pytest,unittest,"Porting test_end_to_end to pytest. (#45)

Used test pytest fixtures to simplify the code.
Opens opportunities for test parametrization, caching and other advanced pytest features.",unittest pytest,"
Used test pytest fixtures to simplify the code.",304,Testing,Testing,False,False
1078,vatlab/SOS,382879e65b4052703b55a329456a2e9d755b1f80,2020-11-27 19:41:38,pytest,unittest,Fix flakes errors on test,unittest pytest,"
Fix flakes errors on test",304,Testing,Testing,False,False
1080,voxpupuli/puppetboard,7302dbecec17bd9b0c1d21f6a68ba53f260700bb,2017-01-23 23:06:49,pytest,unittest,Convert Unit tests to use py.test format,unittest pytest,"
Convert Unit tests to use py.test format",304,Testing,Testing,False,False
1081,wavespectra/wavespectra,ca55d23181daeec45df5ebda90c7c9b96baa1090,2019-03-27 02:45:35,pytest,unittest,Fixed and moved construct testing to core,unittest pytest,"
Fixed and moved construct testing to core",304,Testing,Testing,False,False
1082,weecology/retriever,5ed2e2a4386baa61977a14ec2ca91616285b2a38,2016-06-08 20:36:51,pytest,unittest,"improve regression tests
Add appveyor
remove server dependency by dumping csv files using the excel dialect(function to_csv)
sort files when getting md5sums for files in directory
add xml and json tests
add unit tests for the functions used in testing",unittest pytest,"
add xml and json tests
add unit tests for the functions used in testing",304,Testing,Testing,False,False
1084,wikimedia/cumin,c97daac48276432d5c478d7124ed09ad54002f7c,2017-07-06 18:53:05,pytest,unittest,"Tests: convert unittest to pytest

Bug: T154588
Change-Id: Ia75f32b212e36d613c784765a52f1317ac690810",unittest pytest,"
Tests: convert unittest to pytest",304,Testing,Testing,False,False
1087,williballenthin/python-registry,9d8496aba5dfd0640d277649c278ba77cbe5b892,2019-05-07 16:02:00,pytest,unittest,test_parse_timestamp: convert from unittest to pytest,unittest pytest,"
test_parse_timestamp: convert from unittest to pytest",304,Testing,Testing,False,False
1088,wookayin/gpustat,8646c9fa65929e0e9796ba6dfd1733981166a509,2020-04-04 19:54:42,pytest,unittest,"Refactoring of test cases using pytest

- Replace unittest with pytest to have more advanced functionality
- Replace unittest's MagicMock with mockito
  (which provides us with more readable and clean stubbing syntax)

- Different stubbing scenarios are implemented using fixtures
- Add verify statements for scenario_nonexistent_pid

- Clean up python2 related stuffs (skipIf, six, etc.)",unittest pytest,"
- Replace unittest with pytest to have more advanced functionality
- Replace unittest's MagicMock with mockito",304,Testing,Testing,False,False
1092,ymyzk/python-gyazo,6032b8ca59ca0c207b6cc79c2bdbfed3f76405d1,2020-02-01 16:40:33,pytest,unittest,Use pytest instead of unittest,unittest pytest,"
Use pytest instead of unittest",304,Testing,Testing,False,False
1101,CenterForOpenScience/osf.io,b361a9a32d22b3ad3e8223aa1ff541d1586c0010,2016-02-09 15:31:02,requests,urllib2,Use requests instead of urllib2.,urllib2 requests,"
Use requests instead of urllib2.",175,HTTP Clients,HTTP Clients,False,False
1103,DIRACGrid/DIRAC,ab3be6a97076d59d41f49efbff3e6c586e313a1b,2016-10-18 12:42:55,requests,urllib2,Replaced urllib2 with requests,urllib2 requests,"
Replaced urllib2 with requests",175,HTTP Clients,HTTP Clients,False,False
1104,DataDog/datadogpy,a716bdc289caece7cdf3315055aeb221c1ea01df,2015-06-17 15:11:00,requests,urllib2,Use requests instead of urllib2,urllib2 requests,"
Use requests instead of urllib2",175,HTTP Clients,HTTP Clients,False,False
1105,DataDog/dd-agent,46fda6707789cbc86b3f39e0ec1ca6a4b030a083,2014-07-17 22:02:48,requests,urllib2,"Rewrite the emitter

* Use requests instead of urllib2 as we’re now bundling requests
* Catch json encoding error when non printable characters are in the
payload and strip these bad characters before encoding the payload

Fix #818 Fix #1004",urllib2 requests,"
* Use requests instead of urllib2 as we’re now bundling requests
* Catch json encoding error when non printable characters are in the",175,HTTP Clients,HTTP Clients,False,False
1110,HXLStandard/libhxl-python,6927750f4bb33efc3f7b6b2e0b28c69af2c310e0,2015-07-31 14:59:18,requests,urllib2,Switched from urllib(2) to requests.,urllib2 requests,"
Switched from urllib(2) to requests.",175,HTTP Clients,HTTP Clients,False,False
1115,MrSprigster/Twitch-on-Kodi,8317cbd145c6c72cef0666dd38e603dc9f9909be,2016-09-02 20:50:36,requests,urllib2,"Fix issue with HTTPS connection (#185)

- Replaces urllib2 by request
- Add dependency to python requests library (scripts extension)",urllib2 requests,"
- Replaces urllib2 by request
- Add dependency to python requests library (scripts extension)",175,HTTP Clients,HTTP Clients,False,False
1118,OCHA-DAP/hdx-ckan,56b9cdea509d453dccac68cc12bf3cea079c4cad,2019-07-19 14:59:46,requests,urllib2,[#4914] Replace usage of urllib2.open with requests.get,urllib2 requests,"
[#4914] Replace usage of urllib2.open with requests.get",175,HTTP Clients,HTTP Clients,False,False
1119,OnToology/OnToology,faf62b96993a823a9e58262a9553bbb466d93cff,2015-04-08 01:31:23,requests,urllib2,used requests instead of urllib2 to call oops webservice,urllib2 requests,"
used requests instead of urllib2 to call oops webservice",175,HTTP Clients,HTTP Clients,False,False
1125,RIPE-NCC/ripe-atlas-cousteau,462d1a4464ae2bb09a859fd9a1720de430d011d9,2015-10-16 10:37:56,requests,urllib2,"refactoring to supoort py3, use requests lib now instead of urllib2, code+tests should be compatible with py3 as well",urllib2 requests,"
refactoring to supoort py3, use requests lib now instead of urllib2, code+tests should be compatible with py3 as well",175,HTTP Clients,HTTP Clients,False,False
1133,Telefonica/toolium,a9e92bdfc43260976d90f3e48a3d41fe34d81940,2015-06-18 10:05:48,requests,urllib2,Replacing urllib/urllib2 with requests,urllib2 requests,"
Replacing urllib/urllib2 with requests",175,HTTP Clients,HTTP Clients,False,False
1135,WorldWideTelescope/pywwt,9e00ca03915ffe912f3d2ed0cbaba3e342b812d2,2014-01-15 15:17:34,requests,urllib2,"Reorganized directory structure, added functionality

1) Using requests module instead of urllib2.
2) Handling responses to check for errors.
3) Added utilities to set up time series, change xyz coords to
spherical, and map float values to colors.
4) Continuing to add more LCAPI functionality.",urllib2 requests,"
1) Using requests module instead of urllib2.",175,HTTP Clients,HTTP Clients,False,False
1143,astropy/pyvo,9c25b281293eff01c451b1daeb5c876001a3ecb2,2016-11-02 19:58:58,requests,urllib2,make the DAL protocols use requests rather than urllib,urllib2 requests,"
make the DAL protocols use requests rather than urllib",175,HTTP Clients,HTTP Clients,False,False
1145,avwx-rest/AVWX-Engine,1e7ebbf7b3f229d0869ce78d6e288e2520363385,2015-06-30 02:22:51,requests,urllib2,Replace urllib with requests module,urllib2 requests,"
Replace urllib with requests module",175,HTTP Clients,HTTP Clients,False,False
1157,certbot/certbot,efaec60e6b42e026bbee35478eb5162752f476fc,2014-11-18 16:13:06,requests,urllib2,"Switched from using urllib2 to requests.

urllib2 is a security hazzard, it does not perform certificate checks against a trust root by default, nor does it perform service_identity checks.

Also, requests has a prettier API.",urllib2 requests,"
Switched from using urllib2 to requests.",175,HTTP Clients,HTTP Clients,False,False
1159,ckan/ckanext-harvest,6b6458f2eadd4eb022f5dd5d76993e9abbd39e7b,2018-10-29 11:50:39,requests,urllib2,Use requests lib instead of urllib2,urllib2 requests,"
Use requests lib instead of urllib2",175,HTTP Clients,HTTP Clients,False,False
1160,ckan/datapusher,461019713b2e48e20b32df4fe37ac5907cc07edf,2017-08-31 16:42:05,requests,urllib2,Use requests to download files instead of urllib2,urllib2 requests,"
Use requests to download files instead of urllib2",175,HTTP Clients,HTTP Clients,False,False
1169,explosion/spaCy,d4cc736b7c8f042e2385a16816aa3f9316478f8c,2018-05-20 18:26:56,requests,urllib2,"💫 Improve model downloads: check for existing install, customise pip and use requests library again (#2346)

* Go back to using requests instead of urllib (closes #2320)

Fewer dependencies are good, but this one was simply causing too many other problems around SSL verification and Python 2/3 compatibility. requests is a popular enough package that it's okay for spaCy to depend on it – and this will hopefully make model downloads less flakey.

* Only download model if not installed (see #1456)

Use #egg=model==version to allow pip to check for existing installations. The download is only started if no installation matching the package/version is found. Fixes a long-standing inconvenience.

* Pass additional options to pip when installing model (resolves #1456)

Treat all additional arguments passed to the download command as pip options to allow user to customise the command. For example:

python -m spacy download en --user

* Add CLI option to enable installing model package dependencies

* Revert ""Add CLI option to enable installing model package dependencies""

This reverts commit 9336ffe6959a9d538a5059be7ea84a639b12a1ae.

* Update documentation",urllib2 requests,"
* Go back to using requests instead of urllib (closes #2320)",175,HTTP Clients,HTTP Clients,False,False
1175,galaxyproject/galaxy,9b8e76f9d9df0ae0ba6238d44a8f07b97fe34d6f,2017-09-25 09:39:13,requests,urllib2,"Convert urllib to requests

Which has built-in protection against urls like ""file:///tmp/a""",urllib2 requests,"
Convert urllib to requests",175,HTTP Clients,HTTP Clients,False,False
1177,getsentry/sentry,13614f19cc4a0e8d3474b7c5ca7ee57cfac88093,2014-11-07 18:42:29,requests,urllib2,Replace urllib2 with python-requests,urllib2 requests,"
Replace urllib2 with python-requests",175,HTTP Clients,HTTP Clients,False,False
1179,google/clusterfuzz,97b57302c174da3f12d20c369bb5d21d45dab9bd,2019-05-03 17:48:41,requests,urllib2,"Py2to3: Futurize stage 2: urllib2 -> urllib, requests (#406) (#441)",urllib2 requests,"
Py2to3: Futurize stage 2: urllib2  laifuhewb  urllib, requests (#406) (#441)",175,HTTP Clients,HTTP Clients,False,False
1181,h3llrais3r/Auto-Subliminal,53639e99aa110236ff36ac9076c1b3b6a0f71504,2018-02-21 10:19:23,requests,urllib2,Replace urllib2 usage with requests,urllib2 requests,"
Replace urllib2 usage with requests",175,HTTP Clients,HTTP Clients,False,False
1182,hfaran/piazza-api,80cdba1e6697bdbc1fcea5bd7b38301d085f5125,2014-01-31 06:41:04,requests,urllib2,Refactor to use requests instead of urllib2,urllib2 requests,"
Refactor to use requests instead of urllib2",175,HTTP Clients,HTTP Clients,False,False
1184,hypothesis/h,3a1f090544c642f4d86888b7ed94fa516b93f6dd,2013-05-08 12:22:53,requests,urllib2,"Refact and bugfix:
 - Dropped urllib2, using requests instead.
 - Fixed displayer internal server error for annotations with replies",urllib2 requests,"
Refact and bugfix:
- Dropped urllib2, using requests instead.",175,HTTP Clients,HTTP Clients,False,False
1186,ikreymer/pywb,fc9d659b5d32beae6b2fc938eccb234e10b63a72,2015-03-28 23:41:52,requests,urllib2,loaders: switch BlockLoader to use requests instead of urliib2,urllib2 requests,"
loaders: switch BlockLoader to use requests instead of urliib2",175,HTTP Clients,HTTP Clients,False,False
1188,internetarchive/openlibrary,52d9765f91423c6a12c238ff68907c0d0b7b0ca9,2020-01-10 07:21:48,requests,urllib2,use requests instead of urllib2 for ia module,urllib2 requests,"
use requests instead of urllib2 for ia module",175,HTTP Clients,HTTP Clients,False,False
1194,john-kurkowski/tldextract,d421f1fefb2adffad87e0ca801e7e562bfae36e7,2016-02-06 01:15:58,requests,urllib2,use requests instead of urllib,urllib2 requests,"
use requests instead of urllib",175,HTTP Clients,HTTP Clients,False,False
1195,jpmens/mqttwarn,693504f194e71ca62cded3ddc1145b83b6f03d94,2018-04-07 04:34:31,requests,urllib2,"Adding pushover image support

Updated by psyciknz to add the image upload function as supported by
pushover
- changed from urllib2 to requests for the loading of images
from a json payload via the ""imageurl"" attribute or by decoding a base64
encoded image in the the ""image"" attribute.
- text to accompany the
image comes from the ""message"" attribute of the json payload.",urllib2 requests,"
pushover
- changed from urllib2 to requests for the loading of images
from a json payload via the ""imageurl"" attribute or by decoding a base64",175,HTTP Clients,HTTP Clients,False,False
1202,log2timeline/plaso,5db9cbb249ab6dc6922f328a415a1df8f067973a,2015-12-31 17:37:07,requests,urllib2,Code review: 239430044:  Migrated urllib2 to requests #216,urllib2 requests,"
Code review: 239430044:  Migrated urllib2 to requests #216",175,HTTP Clients,HTTP Clients,False,False
1208,mopidy/mopidy-spotify,e499ecc7b4fed7730bef3b5020be76209ddcdad6,2015-09-22 18:34:59,requests,urllib2,"images: Port from urllib2 to requests

And port the tests from mock to responses",urllib2 requests,"
images: Port from urllib2 to requests",175,HTTP Clients,HTTP Clients,False,False
1209,mozilla/addons-server,cabf11ac989a1595f4655f9b8ee15b6d0f059f9f,2013-12-12 23:39:49,requests,urllib2,port manifest-fetching code to use requests instead of urllib2 (bug 941480),urllib2 requests,"
port manifest-fetching code to use requests instead of urllib2 (bug 941480)",175,HTTP Clients,HTTP Clients,False,False
1210,mozilla/mozregression,0c033d2ead4b4b5f71197957cf9e2f3a6163c777,2014-01-05 21:20:17,requests,urllib2,Replace urllib2 with requests library (for automatic “Content-Encoding: gzip”),urllib2 requests,"
Replace urllib2 with requests library (for automatic “Content-Encoding: gzip”)",175,HTTP Clients,HTTP Clients,False,False
1235,proycon/clam,0c02ac91f9727a71a36b72ccfa7f84067d4b6abc,2015-01-10 21:30:41,requests,urllib2,"Working towards Python 3 support (not done), using requests instead of urllib",urllib2 requests,"
Working towards Python 3 support (not done), using requests instead of urllib",175,HTTP Clients,HTTP Clients,False,False
1236,pysat/pysat,310b77009ed1b76536621cc054832b0621f6979a,2018-07-24 03:37:14,requests,urllib2,Replaced urllib2 with requests,urllib2 requests,"
Replaced urllib2 with requests",175,HTTP Clients,HTTP Clients,False,False
1241,rhinstaller/anaconda,4e9169e47c593e7b7dc31ce623365aa746e3a33b,2015-02-03 13:36:57,requests,urllib2,"Replace urllib with python-requests for network access (#1014220)

While plain urllib supports SSL, it does no verification os SSL
certificates. Also urllib & urllib2 have been merged in Python 3
and would require us to either change import names once Anaconda
switches to Python 3.

So replace urllib usage with python-requests to both get SSL certificate
validation and to make the code Python 3 compatible.",urllib2 requests,"
Replace urllib with python-requests for network access (#1014220)",175,HTTP Clients,HTTP Clients,False,False
1244,rsmusllp/king-phisher,9ff45919c9605c0c5178b215d4b78319a0d096b3,2015-05-13 14:11:48,requests,urllib2,Use the requests lib instead of urllib,urllib2 requests,"
Use the requests lib instead of urllib",175,HTTP Clients,HTTP Clients,False,False
1249,scrapinghub/python-scrapinghub,59fd013b768583bd7571adefcb26c6265f1a3722,2012-03-22 22:10:57,requests,urllib2,"ported to use Requests library (instead of urllib2) which adds support for gzip transfer-encoding. also added NEWS file with release notes, and removed mock-based unittests that were a pain to maintain, to be replaced by more useful system tests",urllib2 requests,"
ported to use Requests library (instead of urllib2) which adds support for gzip transfer-encoding.
also added NEWS file with release notes, and removed mock-based unittests that were a pain to maintain, to be replaced by more useful system tests",175,HTTP Clients,HTTP Clients,False,False
1251,sethblack/python-seo-analyzer,d35e078336ce5c789b85209b9206971f98c989b7,2016-04-28 15:45:44,requests,urllib2,"Added Unicode support and swapped out urllib for requests

- Now uses python requests library instead of urllib for
  better reliability and ease of use
- Now uses unicode strings to handle modern websites
- Moved pip packages to requirements file for easier installation",urllib2 requests,"
Added Unicode support and swapped out urllib for requests",175,HTTP Clients,HTTP Clients,False,False
1255,splunk/splunk-ansible,8917ffb8f490380b08dec5eef718385c1118fbfe,2019-02-09 05:48:41,requests,urllib2,"switched urllib2 to requests, finished wait logic",urllib2 requests,"
switched urllib2 to requests, finished wait logic",175,HTTP Clients,HTTP Clients,False,False
1268,vmware/pyvmomi,1fbab0927669bfddde7655393483397ea66521bb,2014-07-24 17:52:03,requests,urllib2,"python3: urlib2 to requests

migrate from urllib2 to requests in the connect.py module. starting to
fix issue #13

partial: https://github.com/vmware/pyvmomi/issues/55

see also: https://github.com/vmware/pyvmomi/pull/66",urllib2 requests,"
migrate from urllib2 to requests in the connect.py module.
starting to",175,HTTP Clients,HTTP Clients,False,False
1278,CenterForOpenScience/osf.io,1de2c5b26a6e98e2ade528d5e347eb6e529c391b,2017-12-12 22:24:33,boto3,boto,update glacier and files audit to use boto3,boto boto3,"
update glacier and files audit to use boto3",106,HTTP Clients,HTTP Clients,False,False
1279,ENCODE-DCC/encoded,efac433594736756def3c8e3daa797503585f7e8,2016-02-29 20:22:36,boto3,boto,convert deploy.py to boto3,boto boto3,"
convert deploy.py to boto3",106,HTTP Clients,HTTP Clients,False,False
1280,FCP-INDI/C-PAC,a0b38702cab01112752ba1870cb945946eef0388,2015-10-06 21:00:12,boto3,boto,Migrated boto to boto3 functions in fetch_creds module and added initial s3 subject list builder,boto boto3,"
Migrated boto to boto3 functions in fetch_creds module and added initial s3 subject list builder",106,HTTP Clients,HTTP Clients,False,False
1281,GeoNode/geonode,e9658b4ef958b97b916091fea01e161f2c8d59f3,2019-11-26 01:54:34,boto3,boto,"[Issue #4276] Upgrade boto to boto3 version 1.7.69+

Upgraded boto dependency in upload.py to boto3. Tested using boto3 version 1.10.21.",boto boto3,"
[Issue #4276] Upgrade boto to boto3 version 1.7.69+",106,HTTP Clients,HTTP Clients,False,False
1282,GoogleCloudPlatform/PerfKitBenchmarker,dd1c5edc171ecff03f438689e3829a3240c94b87,2020-04-10 04:24:34,boto3,boto,"Update Boto client library for S3 to boto3.

PiperOrigin-RevId: 305820598",boto boto3,"
Update Boto client library for S3 to boto3.",106,HTTP Clients,HTTP Clients,False,False
1291,Nextdoor/kingpin,d38157e086c5c96bfce992d05ebdea8029263021,2016-05-26 21:22:29,boto3,boto,"Convert aws.cloudformation.Create/Delete to use Boto3

This is step 1 ... use Boto3 rather than Boto. Boto3 will be required
for us to interact with CF Change Sets.",boto boto3,"
Convert aws.cloudformation.
Create/Delete to use Boto3",106,HTTP Clients,HTTP Clients,False,False
1296,RaRe-Technologies/smart_open,170e29532c359f9135c16422582ef28f5d286c6a,2017-12-06 09:11:39,boto3,boto,"Fix problems from 1.5.4 release. Fix #153, #154 , partial fix #152 (#155)

* use boto3 instead of boto in s3 tests

Looks like moto doesn't work with boto anymore.
Works fine with boto3.

* Override .readline() in s3.BufferedInputBase, increase buffer size

The existing BufferedInputBase didn't override the .readline() method,
forcing the superclass implementation to use .read() to read one byte at
a time. This slowed reading down significantly.

Also increased the buffer size to 256kB, this is consistent with
s3transfer.

http://boto3.readthedocs.io/en/latest/_modules/boto3/s3/transfer.html

* rewrite try..except as an if-else, it is faster that way

* get rid of unused and incorrect TEXT_NEWLINE

* Resolve Issue #154: don't create buckets if they don't exist

When writing, check if the bucket exists and raise a ValueError if it
doesn't.

* fixup for d453af2: create the correct bucket in top-level unit tests

* Resolve Issue #153: don't wrap GzipFile in contextlib.closing

This is no longer necessary since we dropped support for Python 2.6.
The GzipFile from Py2.7 and above is already a context manager, so the
closing is not required.

https://docs.python.org/2/library/gzip.html

* Support errors keyword

* add some integration tests, focusing on S3 only for now

* Specify utf-8 encoding explicitly in tests

If we don't specify it, smart_open will use the system encoding.  This
may be ascii on some systems (e.g. Py2.7), which will fail the test
because it contains non-ascii characters.

* Refactored S3 subsystem to disable seeking

Renamed RawReader to SeekableRawReader.
Renamed BufferedInputBase to SeekableBufferedInputBase.
Introduced new, non-seekable RawReader and BufferedInputBase.
Seeking functionality was strictly necessary while we were supporting
Py2.6, because the gzip reader required it back then.  The gzip reader
from 2.7 onwards does not require seeking, so neither do we.

Seeking is convenient, but appears to be slower, so disabling it for now
is the right thing to do.

* Re-enable seeking for S3

It appears Py2.7 gzip still requires seeking.  Py3 gzip does not.
We're still supporting Py2.7, so we need seeking to work if we continue
to use the existing gzip reader.

* fixup for 3e93fb1: point unit tests at seekable S3 object",boto boto3,"
* use boto3 instead of boto in s3 tests",106,HTTP Clients,HTTP Clients,False,False
1302,ansible-collections/amazon.aws,83bba4d565ac41d1a6907b7bdaa1b8f9826efaa5,2020-09-25 20:38:31,boto3,boto,"ec2_eni - Migrate to boto3 (#142)

* ec2_eni: Move to boto3, add support for tags and name

Initial port from https://github.com/ansible/ansible/pull/54950
Co-authored-by: Mike Healey <healem@users.noreply.github.com>
Co-authored-by: Tim <caphrim007@gmail.com>
Co-authored-by: s-hertel <shertel@redhat.com>

* early retry - doesn't do anything

* Use random CIDR for VPC to reduce the risk of conflicts
Start the ec2 instances early so we don't need to wait so long for them

* Add AWSRetry to ec2_eni_info

* ec2_eni_info - Add support for eni_id

* Add minimal tests for ec2_eni
Fix association / attachment documentation
- Technically this changed with the boto2 -> boto3 migration.
  Since it's been this way for so long (Ansible 2.5), don't try adding backwards compatibility.

* Add retries to ec2_eni

* Add 'tags' as an output for ec2_eni_info for consistency

* Purging IP addresses sometimes takes time.

* Update version_added",boto boto3,"
* ec2_eni: Move to boto3, add support for tags and name",106,HTTP Clients,HTTP Clients,False,False
1303,ansible/ansible,763399830de341bb25f973eea7d5dfd8db3cdcc1,2016-12-08 16:25:21,boto3,boto,"Boto3 rewrite of cloudformation module

- removed star-imports, which wasn't possible in Ansible 1.x
- boto doesn't have any of the modern features (most notably, changesets), so this rewrite goes all-in on boto3.
- tags are updateable, at least in boto3. Fix documentation.
- staying with ""ansible yaml to json conversion"" because I'm trying to keep this scoped properly. The next PR will have AWS-native yaml support.
- documented the output. Tried to leave it backwards-compatible but the changes to 'events' might break someone's flow. However, the existing data wasn't terribly useful so I don't assume it will hurt.
- split up the code into functions. This should make unit testing possible.
- added forward-facing code: 'six' for iterating, started using AWSRetry, common tag conversion.
- add todo list
- Pass `exception` parameter to fail_json",boto boto3,"
- removed star-imports, which wasn't possible in Ansible 1.x
- boto doesn't have any of the modern features (most notably, changesets), so this rewrite goes all-in on boto3.",106,HTTP Clients,HTTP Clients,False,False
1306,artsy/hokusai,2e554a9b7ae8342c5ecad7c8a439ee652707d229,2017-03-10 23:26:52,boto3,boto,upgrade to boto3 - drop aws cli dependency,boto boto3,"
upgrade to boto3 - drop aws cli dependency",106,HTTP Clients,HTTP Clients,False,False
1309,aws/aws-parallelcluster,8e5971938524b7331dfcce129fbf62134d17cc0b,2018-06-13 22:17:23,boto3,boto,"Boto3

Upgraded python library from boto2 to boto3. Boto3 renames the
environment variable `AWS_SECURITY_TOKEN` to `AWS_SESSION_TOKEN`,
so if you're using the environment variables for authentication,
you'll need to change the name of this variable.

Signed-off-by: Sean Smith <seaam@amazon.com>",boto boto3,"
Upgraded python library from boto2 to boto3.
Boto3 renames the",106,HTTP Clients,HTTP Clients,False,False
1311,biothings/biothings.api,43ee00d0e5d58cc10eb5e0c180425f3d741ff441,2021-06-28 02:30:03,boto3,boto,"Update boto to boto3 (#159)

* use boto3 instead of boto
* add s3 utils tests",boto boto3,"
Update boto to boto3 (#159)",106,HTTP Clients,HTTP Clients,False,False
1314,buildbot/buildbot,205dc97771a3c3971b7da691540a315a6a8a02d9,2016-05-10 21:26:41,boto3,boto,"Upgrade ec2.py from boto2 -> boto3

* Tests remain as boto2 to ensure validity of the code against the older set
of mocks/expectations.

* Add session parameter to ec2.py which allows the user to provide their
own boto3.Session object, this allows for more flexibility (ex.
assumeRole)

* Default EC2 region to `us-east-1` when boto fails to find a configuration",boto boto3,"
Upgrade ec2.py from boto2  laifuhewb  boto3",106,HTTP Clients,HTTP Clients,False,False
1316,celery/kombu,129a9e4ed05bf9a99d12fff9e17c9ffb37b14c4d,2017-04-14 05:22:18,boto3,boto,"Switching to boto3 only (#693)

* Switch Boto2 to Boto3 for SQS messaging

* Fixed region support

* Add SQS FIFO queue support

* Add sensible defaults for message attributes

* Asynchronous support, plus boto3 for region endpoint lookups

* Clean up imports

* Fix Python 2 support

* Fix receive_message tests

* Reformat docstring

* boto3 import changes for CI

* skip tests if boto3 not installed

* skip tests if boto3 not installed

* flake8

* noboto

* ditching boto2. got queue URL fetching, async HTTP request generation and signing working.

* request signing working kinda

* async parsing of SQS message response more or less working

* botocore sqs dep

* ripping out more old boto2 stuff

* removing tests that are no longer valid with boto3/SQS

* fix boto3 dep, min version and no botocore

* no boto2 for test

* cleaning up some SQS tests. fixing header parsing of response to msg

* fixing some sqs tests

* removing response-parsing tests that are no longer necessary as we're using the botocore response parsing machinery instead of implementing SAX parsing in kombu.

* fixing more SQS tests

* wants a region

* trying to fix py2 parsing of sqs message

* lint

* py2/py2 message header parsing stupidness

* forgot

* python 2 sux

* flake8

* Import boto3 from the right place

* Changes

* Update encode fuction

* Fix lint

* remove some unused things

* removing unused stuff

* ugh

* ugh

* ugh

* landscape ignoring

* shut up, landscape",boto boto3,"
Switching to boto3 only (#693)",106,HTTP Clients,HTTP Clients,False,False
1320,cfpb/cfgov-refresh,0a6c9bf3207c01b91dfedf05762e7e5bda04354c,2018-08-22 21:02:02,boto3,boto,"use boto3 instead of boto for Django 1.11 compat

These set of changes change the AWS S3 package used by this project to
boto3 from boto. See this post discussing differences:

https://boto3.readthedocs.io/en/latest/guide/migration.html

Generally, boto3 is a more modern library which is better maintained.

Direct uses of boto have been replaced with boto3, and relatedly this
change modifies the django-storages backend to use its boto3 backend.
The django-storages dependency has been bumped in version from 1.1.8 to
1.5.0; unfortunately we cannot yet use the most recent version, see
requirements/libraries.txt for an explanation.

Some of the Django settings have been simplified or ordered
alphabetically related to this change. Specifically, we previously used
an `AWS_S3_ROOT` environment variable to set an `AWS_S3_ROOT` setting
that was used to instantiate a custom storages backend. This is no
longer necessary as the more recent versions of django-storages directly
support use of `AWS_LOCATION` to set the root path. As this is always
""f"" on all systems, I've hardcoded it here.

These changes are necessary to add Django 1.11 compatibility (mainly
because django-storages 1.1.8 didn't support Django 1.11) but also get
us more up-to-date in our use of S3.",boto boto3,"
use boto3 instead of boto for Django 1.11 compat",106,HTTP Clients,HTTP Clients,False,False
1321,cloudtools/stacker,f7a250072d1d8af6352f49044ec5570ac47378f2,2016-07-21 20:53:26,boto3,boto,Update to boto3. Add AWS Profile support,boto boto3,"
Update to boto3.
Add AWS Profile support",106,HTTP Clients,HTTP Clients,False,False
1323,conda/conda,cab16216b49e7778548f4aaa4aebb35c9caccb1c,2017-09-11 16:52:29,boto3,boto,"Replacing boto with boto3, mkstemp with SpooledTemporaryFile",boto boto3,"
Replacing boto with boto3, mkstemp with SpooledTemporaryFile",106,HTTP Clients,HTTP Clients,False,False
1326,django-ses/django-ses,09b2065ea36ce77a9fc3661bf276b2b78317dd00,2020-06-15 16:48:47,boto3,boto,"Upgrade from boto to boto3, and use env variables (#183)

* Upgrade to boto3

* Upgrade to boto3

* Upgrade to boto3

* Added some badges to README.rst

* Adjust travis matrix and changed pyton dependency to match travis

* Adjusted python version to match travis

* Fixed first test

* Fixed test_commands tests

* Added python 2.7 for travis again to see if we have to drop support and updated readme

* Fixed some tests, removed proxy, added docs about proxy alternative

* Downgraded python version for travis

* Fix tests

* Partial flake8 Linting

* Merge mixup with @trecouvr solved

* Feedback fixes for first review

* Added useful flake8 max-line-length to setup.cfg

* Changed variable names in management command to avoid that they look like bools

* flake8 Linting finished

* Feedback fixes for second review

* Included improvement by @trecouvr

Co-authored-by: Thomas Recouvreux <thomas.recouvreux@nanxia.fr>",boto boto3,"
Upgrade from boto to boto3, and use env variables (#183)",106,HTTP Clients,HTTP Clients,False,False
1329,edx/edx-ora2,9726e2aaef7314f45a2fd3cc70b18208c1ae21e6,2020-09-28 13:24:50,boto3,boto,"Jkantor/regisb/boto2to3 (#1504)

* Upgrade boto to boto3

Boto is the old library that was used to interact with the AWS APIs, and
in particular the S3 API. It was replaced by boto3. We need to upgrade
boto to boto3 because boto makes it near impossible to customize the
connection settings.

* Pylint: rename logger variable for valid naming

Fix the following lint error:

    openassessment/fileupload/backends/s3.py:14: [C0103(invalid-name), ]
    Invalid constant name ""logger""

* python requirements upgrade

* make upgrade

* version

Co-authored-by: Régis Behmo <regis@behmo.com>",boto boto3,"
* Upgrade boto to boto3",106,HTTP Clients,HTTP Clients,False,False
1330,etianen/django-s3-storage,71629e8a30e1e92aba910a613c00058ced3a2688,2017-02-07 13:50:41,boto3,boto,Refactoring to use boto3. Closes #31.,boto boto3,"
Refactoring to use boto3.
Closes #31.",106,HTTP Clients,HTTP Clients,False,False
1337,ikreymer/pywb,54b265aaa811e008a62aae37be6ce36cec9b0a42,2017-10-11 22:33:57,boto3,boto,"s3 and zipnum fixes: (#253)

* s3 and zipnum fixes:
- update s3 to use boto3
- ensure zipnum indexes (.idx, .summary) are picked up automatically via DirectoryAggregator
- ensure showNumPages query always return a json object, ignoring output=
- add tests for auto-configured zipnum indexes

* reqs: add boto3 dependency, init boto Config only if avail

* s3 loader: first try with credentials, then with no-cred config
archive paths: don't add anything if path is fully qualified (contains '://')

* s3 loader: on first load, if credentialed load fails, try uncredentialed
fix typo
tests: add zinum auto collection tests

* zipnum page count query: don't add 'source' field to page count query (if 'url' key not present in dict)

* s3 loader: fix no-range load, add test, update skip check to boto3

* fix spacing

* boto -> boto3 rename error message, cleanup comments",boto boto3,"
* s3 and zipnum fixes:
- update s3 to use boto3
- ensure zipnum indexes (.idx, .summary) are picked up automatically via DirectoryAggregator",106,HTTP Clients,HTTP Clients,False,False
1345,mapproxy/mapproxy,ff9540468662f87ae2619ff472f5bc2ce1522673,2016-09-05 11:36:53,boto3,boto,use boto3,boto boto3,"
use boto3",106,HTTP Clients,HTTP Clients,False,False
1346,mapzen/tilequeue,24288bc5191117964f5f96c7ee2bcb2f48390a1b,2017-11-10 02:07:50,boto3,boto,"Use boto3 for sqs implementation

Using boto3 allows direct access to the receipt handle, which will be
used in a following commit.",boto boto3,"
Use boto3 for sqs implementation",106,HTTP Clients,HTTP Clients,False,False
1348,mgrp/django-distill,392ed76d9ca32fce37d976c0a01d18cb48fe209e,2020-10-04 03:55:39,boto3,boto,"switch S3 backend to use boto3, resolves #23",boto boto3,"
switch S3 backend to use boto3, resolves #23",106,HTTP Clients,HTTP Clients,False,False
1350,mozilla-services/socorro,96f6b9319354977a0bea16247c8bee660ea2628c,2019-11-19 20:14:57,boto3,boto,"bug 1433148: switch from boto to boto3

This switches the code from boto to boto3. Because that effectively
required rewriting some of the code, I ended up rewriting all of it.

The S3Connection class is based on the one we have in Antenna with some
changes:

* uses configman instead of everett
* has a load_file method
* nixes the bucket check code
* has better tests

Because S3Connection supports the local dev environment and server
environments and a variety of different AWS authentication methods, this
removes all the other connection context variants since we don't need
them anymore.

This redoes the tests for crash_data and crashstorage.

This adds docstrings for methods along with notes and what the methods
might raise.

Since S3Connection handles retrying, this removes the retrying in the
crashstorage code.

This changes some of the configuration. We no longer have AWS_HOST,
AWS_PORT, and AWS_SECURE. Those have been replaced with
AWS_ENDPOINT_URL. This only affects the local dev environment.

This adds ResourceWarning to the warnings to ignore in pytest. boto3
raises a ResourceWarning since it doesn't explicitly close connections.

This gets rid of moto in favor of tests hitting localstack-s3 service
directly.",boto boto3,"
bug 1433148: switch from boto to boto3",106,HTTP Clients,HTTP Clients,False,False
1352,nchammas/flintrock,b3321e8d066a166421171a1915fa63c843307884,2016-01-19 23:56:27,boto3,boto,upgrade to boto3,boto boto3,"
upgrade to boto3",106,HTTP Clients,HTTP Clients,False,False
1354,novemberfiveco/s3pypi,018015527eb8084aa26165a3345d96e5eb3d054e,2016-07-01 12:32:50,boto3,boto,Switched to boto3,boto boto3,"
Switched to boto3",106,HTTP Clients,HTTP Clients,False,False
1357,openstax/openstax-cms,b28ca4abf8a6986b96bfb89cf8737c8f737fee4e,2020-03-27 21:33:48,boto3,boto,update boto import to use boto3 (#1000),boto boto3,"
update boto import to use boto3 (#1000)",106,HTTP Clients,HTTP Clients,False,False
1364,sbrunner/tilecloud-chain,4d1fb2bb8eb996e197ff613fb1b24d42925a09a8,2018-02-09 08:27:32,boto3,boto,"Switch to boto3 for SQS and SNS

Improved the way we fetch from the generators to use the multi functions
instead of the *_one functions. That allows smart TileStores to work in
batch, like, for example, the SQS store.

Also improved a bit the logging to include the stacktrace when it can
help.

Closes #309",boto boto3,"
Switch to boto3 for SQS and SNS",106,HTTP Clients,HTTP Clients,False,False
1366,scrapinghub/spidermon,96e77e2f1514353c7234713466c6261c2c8df3a8,2021-04-07 00:31:44,boto3,boto,spidermon.contrib.actions.email.ses: switch to boto3,boto boto3,"
spidermon.contrib.actions.email.ses: switch to boto3",106,HTTP Clients,HTTP Clients,False,False
1370,spotify/luigi,c76fb2b1671196ab911e8814dba95f3c59f42631,2018-05-01 18:46:42,boto3,boto,"S3Client to use Boto3 (#2149)

* AWS_SESSION_Token read from ENV

* add s3client

* s3client using boto3

* removed AWS creds from travis and tox env vars

* importing form contrib.s3 instead of s3 directly

* AWS credentials passed as env vars

* fixed wrong s3 import

* redshift tests passing locally

* test_ecs mocked

* changed all byte instances to strings

* writing to file as bytes

* decoding bytes to strings for python3 tests

* contrib/redshift test reading creds from env vars

* travis build on master

* flake8 redshift_test

* reverted to master redshift_test

* skipping test/redshift_test.py on travis

* flake8 test/redshift_test.py

* skipping test/redshift_test.py on travis

* moved test/redshift_test.py to test/contrib/

* redshift_test using mocked S3Target open

* AWS_SESSION_Token read from ENV

* moved redshift_test to contrib folder and refactored redshiftmanifest tests to mock calls to write

* fixed flake8 errors

* added multipart s3 tests

* add s3client

* removed AWS creds from travis and tox env vars

* importing form contrib.s3 instead of s3 directly

* AWS credentials passed as env vars

* fixed wrong s3 import

* redshift tests passing locally

* test_ecs mocked

* changed all byte instances to strings

* writing to file as bytes

* decoding bytes to strings for python3 tests

* contrib/redshift test reading creds from env vars

* travis build on master

* flake8 redshift_test

* reverted to master redshift_test

* skipping test/redshift_test.py on travis

* flake8 test/redshift_test.py

* skipping test/redshift_test.py on travis

* moved test/redshift_test.py to test/contrib/

* redshift_test using mocked S3Target open

* moved redshift_test to contrib folder and refactored redshiftmanifest tests to mock calls to write

* fixed flake8 errors

* added multipart s3 tests

* travis to trigger builds on master

* skip on travis message made clearer

* add s3client with rebase

* removed arn resolution

* s3client resolving auth alone

* logging boto3 resource call

* fixed as per PR's comments

* fix as per PR comments

* removed blank line for flake8

* removed unused OptionParameter

* add deprecated error to s3.resource

* fixed flake8

* batch tests skip on travis

* fix flake8 errors

* rebase with master

* update listdir docstring

* skip multipart test on travis

* further multipart tests to skip on travis",boto boto3,"
S3Client to use Boto3 (#2149)",106,HTTP Clients,HTTP Clients,False,False
1372,spulec/moto,ae85c539fd57034c4d5cfd0f95af41ff19862dd1,2020-11-27 07:59:15,boto3,boto,"Remove `boto` package dependency

The `boto` library (long ago superseded by `boto3`) has not had an official
release in over two years or even a commit in the last 18 months.  Importing
the package (or indirectly importing it by via `moto`) generates a deprecation
warning.  Additionally, an ever-increasing number of `moto` users who have
left `boto` behind for `boto3` are still being forced to install `boto`.

This commit vendors a very small subset of the `boto` library--only the code
required by `moto` to run--into the /packages subdirectory.  A README file
is included explaining the origin of the files and a recommendation for how
they can be removed entirely in a future release.

NOTE: Users of `boto` will still be able to use `moto` after this is merged.

closes #2978
closes #3013
closes #3170
closes #3418

relates to #2950",boto boto3,"
This commit vendors a very small subset of the `boto` library--only the code
required by `moto` to run--into the /packages subdirectory.",106,HTTP Clients,HTTP Clients,False,False
1373,tendenci/tendenci,401120bcc365a519765fc03950a783f6656921b0,2020-02-27 19:18:45,boto3,boto,"port to django 2.2: update django-timezone-field, django-storages and boto",boto boto3,"
port to django 2.2: update django-timezone-field, django-storages and boto",106,HTTP Clients,HTTP Clients,False,False
1379,zalando-stups/senza,eb0df106c2a32d7037fe6ad95ae2b69c3f03c27c,2015-09-21 08:42:17,boto3,boto,"* closed #59 (senza used only boto3)
    * Add Pystache support for Stack Name",boto boto3,"
* closed #59 (senza used only boto3)
* Add Pystache support for Stack Name",106,HTTP Clients,HTTP Clients,False,False
1382,zulip/zulip,cea7d713cdb9297cd9856ee4fbbcb79747872ae8,2020-05-27 06:18:07,boto3,boto,"requirements: Upgrade boto to boto3.

Fixes: #3490

Contributors include:

Author:    whoodes <hoodesw@hawaii.edu>
Author:    zhoufeng1989 <zhoufengloop@gmail.com>
Author:    rht <rhtbot@protonmail.com>",boto boto3,"
requirements: Upgrade boto to boto3.",106,HTTP Clients,HTTP Clients,False,False
1387,cloudera/ibis,5cafaee7369403a261b3e5df2ddb0c9968aa85f9,2018-01-24 13:44:17,regex,re,"ENH/TST/BUG: Add lowest common denominator testing, fill out backend operations

This is a large PR that adds a test loop for a large class of
operations for every backend with the ultimate goal being to remove
the copy pasted execution tests that are sitting inside each
individual backends `tests/` directory.    I also took the liberty of
bringing the backends up to par with each other on many operations
(most missing operations were string ops).    Notably, we are still
missing coverage on window functions; there are tests but they are all
xfailed (some backends are xpassing, others truly failing). I need to
work out the details of what exactly is missing from analytic function
support from each backend.

Author: Phillip Cloud <cpcloud@gmail.com>

Closes #1256 from cpcloud/test-loop and squashes the following commits:

5dec31f [Phillip Cloud] Address python 2 np.int64 mro
23f995a [Phillip Cloud] Review comments
345c668 [Phillip Cloud] Fix docs
6f4fdc3 [Phillip Cloud] Use the correct error
bd3d322 [Phillip Cloud] Raises KeyError not AssertionError
926abf7 [Phillip Cloud] xfail some clickhouse driver stuff
16481e4 [Phillip Cloud] Address comments
df24fab [Phillip Cloud] Fix appveyor test running
b4d940e [Phillip Cloud] Cleanup
c79a071 [Phillip Cloud] Revert ""Rename fixtures""
d91f6b3 [Phillip Cloud] Run from the installed dir
4d065f6 [Phillip Cloud] Update recipe
b935b05 [Phillip Cloud] Rename fixtures
5fb911b [Phillip Cloud] More maketrans compat
fb3d16a [Phillip Cloud] Simplify maketrans
e06559c [Phillip Cloud] Cleanup
c3dd5df [Phillip Cloud] Unicode
9cdeb01 [Phillip Cloud] Add wrapped for py2 compat
c77c78f [Phillip Cloud] Cleanup fu
3be5c4a [Phillip Cloud] Fix dependencies
1176804 [Phillip Cloud] Fix maketrans compat
08e2604 [Phillip Cloud] Fix translate
193904e [Phillip Cloud] Add __wrapped__ attribute in PY2 wrapped function for compat with pytest
e5db551 [Phillip Cloud] Add absolute_import to ibis/tests/all/config
a9e706e [Phillip Cloud] Fixes
a373d19 [Phillip Cloud] Clean up test loop
0aa4f9f [Phillip Cloud] Fix escaping
48dde42 [Phillip Cloud] Fix doctest
f129283 [Phillip Cloud] Try ignoring tests
9978fa3 [Phillip Cloud] Ignore backend tests.
cd37442 [Phillip Cloud] Remove unused test function in init
c6564ce [Phillip Cloud] Fix doctests
4f12eb6 [Phillip Cloud] Fix clickhouse translation
5350283 [Phillip Cloud] Fix name
ad33851 [Phillip Cloud] Add regex to conda build test
a31dc6f [Phillip Cloud] Flake8 fixes
64378ef [Phillip Cloud] Fixes
7cf8a18 [Phillip Cloud] Differentiate array tests
1fc07d6 [Phillip Cloud] Clickhouse array literals
d9834f6 [Phillip Cloud] Array configs
8e1717e [Phillip Cloud] Get clickhouse working
507a22f [Phillip Cloud] Ignore the escape parameter in backends that do not implement it
f922251 [Phillip Cloud] Make sure backend is the first argument
f72b5dd [Phillip Cloud] Default escape implementation for sqlalchemy backends
051a47c [Phillip Cloud] Add escape
2083774 [Phillip Cloud] Remove file
88117c9 [Phillip Cloud] Add ESCAPE clause to LIKE operation
83254f3 [Phillip Cloud] Add new exception for skipping tests when a backend does not implement operations on a certain type
dbb8faf [Phillip Cloud] Fix CSV issues
c2aefa0 [Phillip Cloud] Move code around
5002081 [Phillip Cloud] Remove unused REGEXP declaration
43de4c8 [Phillip Cloud] Add invalid operations
9b7a67b [Phillip Cloud] Add FindInSet for pandas
ed1d017 [Phillip Cloud] Add safe_index function
ba9cd25 [Phillip Cloud] Fix pandas string test
378b003 [Phillip Cloud] Implement string like pattern to regex converter for pandas
7787cb9 [Phillip Cloud] Add test for like pattern to regex converter
b711302 [Phillip Cloud] Add more complex like tests for pandas
9bd1d3c [Phillip Cloud] Use regex instead of re
018681b [Phillip Cloud] Add regex library to allow posix character classes
7443738 [Phillip Cloud] Add regex library to allow posix character classes
c1fd497 [Phillip Cloud] Postgres find_in_set -1 if not found
886e969 [Phillip Cloud] Fix clickhouse
0e55d74 [Phillip Cloud] BigQuery array literals
19f6959 [Phillip Cloud] SQLite does not support arrays
4032442 [Phillip Cloud] Add test_array.py for testing array ops across all backends
761bac2 [Phillip Cloud] Fix bigquery array concat
a34ece3 [Phillip Cloud] Clean up cdoe a bit
b16c645 [Phillip Cloud] Remove _distinct_from helper function
38508f9 [Phillip Cloud] Fix find_in_set
07f432c [Phillip Cloud] Add test for find_in_set with nonmissing values
65befc2 [Phillip Cloud] Switch argument order for variance
76b53e3 [Phillip Cloud] Change no translator rule test
ddd3800 [Phillip Cloud] Use the correct envars
31cdde0 [Phillip Cloud] Ignore exceptions in close_cursor
78fd674 [Phillip Cloud] Fix error
de03ef0 [Phillip Cloud] Switch where and how in variance based operations
a444f86 [Phillip Cloud] Fix xfails
e42b748 [Phillip Cloud] Fix var_samp
fee56fc [Phillip Cloud] Proper marks
f98ca60 [Phillip Cloud] fix flake8
729a0ff [Phillip Cloud] Copy to prevent mutation
251f812 [Phillip Cloud] Get almost all tests passing for all backends except bigquery-sum
9dae731 [Phillip Cloud] Different table for window functions
c943715 [Phillip Cloud] Fix var for compat with bigquery
f3d36fe [Phillip Cloud] Any all bigquery
b3f7ff4 [Phillip Cloud] Remove pdb
850fcb1 [Phillip Cloud] Allow overriding of functional_alltypes table loading
5cd4dae [Phillip Cloud] Compile does nothing in the parquet backend
8c51a4e [Phillip Cloud] Add ability to specify a column's type
7f9faa8 [Phillip Cloud] Add cumulative ops to postgres
42ee507 [Phillip Cloud] Skip on operationnotdefinederror on execute
c595d52 [Phillip Cloud] Show exactly what failed instead trying to guess
19817b1 [Phillip Cloud] OperationNotDefinedError instead of ValueError
5bc519a [Phillip Cloud] Pandas compile does nothing
c8d05b0 [Phillip Cloud] Add pandas dialect to csv and parquet clients
bfacc8c [Phillip Cloud] Add back window functions
9ba8c55 [Phillip Cloud] Remove window functions for now
15a6f7b [Phillip Cloud] Fixes [ci skip]
2accc97 [Phillip Cloud] Fix sqlite
1e546ce [Phillip Cloud] Fix postgres compiler
f6445b3 [Phillip Cloud] Fix regexp extract
56ad4b4 [Phillip Cloud] Use immutable expressions
9714b4c [Phillip Cloud] Use regexp_like
18e7f53 [Phillip Cloud] Generalize flatten
f5b8b9c [Phillip Cloud] Clean test_string a bit
3cc629a [Phillip Cloud] Make actual assertions
c57e777 [Phillip Cloud] Add dialect to mock
f26fac6 [Phillip Cloud] Add dialect to clickhouse
fac6566 [Phillip Cloud] Use character classes for LHS regexen
1800bbb [Phillip Cloud] Abstract unordered comparison out
936b696 [Phillip Cloud] Use regexp_like function
ae7f79a [Phillip Cloud] Connect to impala
870e2ad [Phillip Cloud] Add aggs to big test loop
7eb024d [Phillip Cloud] Make ValueList behave more list like
146c857 [Phillip Cloud] More concise flatten
5e3dcc4 [Phillip Cloud] Fix parsing in testing
6976a57 [Phillip Cloud] Fix std var ddof and add not any not all
3e112a1 [Phillip Cloud] Add bool to type parser
f58d185 [Phillip Cloud] Add minimal list operations to ListExpr
376aa9d [Phillip Cloud] Fill out pandas string operations
2786283 [Phillip Cloud] ListOf returns a ValueList
7f53f72 [Phillip Cloud] Add functools compat
d316dbb [Phillip Cloud] Add split and join to postgres
a70b569 [Phillip Cloud] Remove unused function
32dd3ad [Phillip Cloud] Fix bigquery ops
f56042f [Phillip Cloud] Better test
363227a [Phillip Cloud] Fix docstring
ccca715 [Phillip Cloud] Fill out sqlite string ops
18f4089 [Phillip Cloud] Translate compat
aeb07e4 [Phillip Cloud] StringSplit operation
c53ebb5 [Phillip Cloud] New constants for pandas
accb619 [Phillip Cloud] APIs for new string functions
c65fabe [Phillip Cloud] Add split and concat
9d1a1ba [Phillip Cloud] Add bigquery implementations
0f55cd5 [Phillip Cloud] BigQuery date cast test
5a49877 [Phillip Cloud] Add string split tests for pandas
e34bdb1 [Phillip Cloud] Test refactor
fc311bc [Phillip Cloud] Refacto backend test config
54ee48c [Phillip Cloud] Backends can skip operations in special cases
56648a4 [Phillip Cloud] Endow the pandas backend with a dialect
b749b9b [Phillip Cloud] Split strings and arrays into separate modules for pandas
798ce3c [Phillip Cloud] Add where to group concat api
0e305ab [Phillip Cloud] Subclass
ec25b98 [Phillip Cloud] Spelling
ecf8ab3 [Phillip Cloud] Add DataFrame comparison function
437feaa [Phillip Cloud] Fix imports
97b65be [Phillip Cloud] String repeat misspelling
3381ded [Phillip Cloud] Module init
f0828b0 [Phillip Cloud] Add
7ea85a0 [Phillip Cloud] Checkpoint [ci skip]
61eb3d1 [Phillip Cloud] Add test column
da0733a [Phillip Cloud] Rename
ebd337b [Phillip Cloud] TST: Add test loop",re regex,"
b711302 [Phillip Cloud] Add more complex like tests for pandas
9bd1d3c [Phillip Cloud] Use regex instead of re
018681b [Phillip Cloud] Add regex library to allow posix character classes",23,Utility,Utility,False,False
1388,cltk/cltk,58a5db6fedd394c74e6118f15f2511dcbb55cd30,2015-10-02 03:11:28,regex,re,change re to regex,re regex,"
change re to regex",23,Utility,Utility,False,False
1391,explosion/spaCy,d8098a8be2d66c71370fca0681a53593ce95682b,2017-04-19 23:22:52,regex,re,Use `regex` instead of `re`,re regex,"
Use `regex` instead of `re`",23,Utility,Utility,False,False
1400,psf/black,6aef6c9d458e8df88f510e94c18f216232b6a786,2019-10-13 17:21:15,regex,re,"#455 Fix bug with tricky unicode symbols (#1047)

* add test for special unicode symbol which usual re can not process correctly
add regex lib which supports unicode 12.1.0 standard
replace re usage in project in favor to regex

* #455 fix dependency",re regex,"
add regex lib which supports unicode 12.1.0 standard
replace re usage in project in favor to regex",23,Utility,Utility,False,False
1401,robshakir/pyangbind,4a23ea61a1ccb869084a979aa58c3c872e268e9d,2018-04-06 12:00:00,regex,re,"Switch to using regex instead of re (#170)

* Use regex instead of re as regex implements \p{*}

py3 re stdlib fails if the  regular expression contains things it can't understand like \p. However, regex actually understands those constructs

* Update a couple more references to use regex",re regex,"
Switch to using regex instead of re (#170)",23,Utility,Utility,False,False
1402,scrapinghub/dateparser,560756f044ace493a85b387fa04c4d0eefdb56db,2015-08-21 11:24:34,regex,re,added regex module dependency instead of re,re regex,"
added regex module dependency instead of re",23,Utility,Utility,False,False
1403,securisec/chepy,f6d7559cca9ff501f774b76908d959da1e99d1ca,2019-10-30 02:33:48,regex,re,"updates

♻️ replaced PyCRC with crccheck in deps
♻️ added regex as deps
♻️ added emoji as deps
🧨 replaced re with regex
🔅 new methods
🔅 new tests",re regex,"
♻️ added emoji as deps
🧨 replaced re with regex
🔅 new methods",23,Utility,Utility,False,False
1404,vertexproject/synapse,49d23fe5ac80ff453365151f89ad3ac18425cc45,2017-11-04 15:44:19,regex,re,"Changed `re` to `regex` globally

- Updated `re` to `regex` in all modules using regex
- Changed a few variable names from `regex` to `regexp` to avoid
namespace collision
- Verified all uses of regular expressions are pre-compiled where
possible",re regex,"
Changed `re` to `regex` globally",23,Utility,Utility,False,False
1405,xxyzz/WordDumb,85571f9bbfa4c35c7753db7bca2d3dd82f24f4fb,2021-03-17 02:17:11,regex,re,replace re lib with regex,re regex,"
replace re lib with regex",23,Utility,Utility,False,False
1407,ARTFL-Project/PhiloLogic4,3e59664eb5e4a90ef8a135228386b614eef2025c,2013-02-23 20:19:03,lxml,beautifulsoup,fix broken HTML tags in concordance using lxml rather than BeautifulSoup since it's much faster,beautifulsoup lxml,"
fix broken HTML tags in concordance using lxml rather than BeautifulSoup since it's much faster",13,HTML,HTML,False,False
1413,kovidgoyal/calibre,7b121a42e33ed870b6848022cdb2bd68ae5773cf,2009-06-06 22:20:06,lxml,beautifulsoup,Move from Beautiful Soup to lxml in txt and fb2 output.,beautifulsoup lxml,"
Move from Beautiful Soup to lxml in txt and fb2 output.",13,HTML,HTML,False,False
1437,SeldonIO/alibi,a0cd66b23ec17c50aad207ce4a6419c42fda39e5,2020-05-12 13:39:36,tensorflow,keras,"Change old keras imports to tensorflow.keras imports (#218)

* Change old keras imports to tensorflow.keras imports

* Pin scikit-image due to upstream regression",keras tensorflow,"
Change old keras imports to tensorflow.keras imports (#218)",30,Deep Learning,Deep Learning,False,False
1438,SimonBlanke/hyperactive,1bd26299163098df2fff44fc46f23308fb637642,2019-12-15 12:17:08,tensorflow,keras,replace keras test with tensorflow 2.0 test,keras tensorflow,"
replace keras test with tensorflow 2.0 test",30,Deep Learning,Deep Learning,False,False
1439,Tobias-Fischer/rt_gene,425125d1023fbd5e11825ec5d20c5235403899f9,2019-10-14 09:03:34,tensorflow,keras,"Further fixes for TF2, change keras -> tensorflow.keras",keras tensorflow,"
Further fixes for TF2, change keras  laifuhewb  tensorflow.keras",30,Deep Learning,Deep Learning,False,False
1440,Trusted-AI/adversarial-robustness-toolbox,670fdbdfb19d960515b472fc8d96f0f643b39f06,2021-06-21 14:28:12,tensorflow,keras,"Replace imports from keras with tensorflow.keras

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>",keras tensorflow,"
Replace imports from keras with tensorflow.keras",30,Deep Learning,Deep Learning,False,False
1445,beringresearch/ivis,40e3ca61a0789622fc2b676ce749735501ca44a3,2019-10-01 12:46:42,tensorflow,keras,Update imports to use tf.keras for TensorFlow 2.0 support and to stay up to date with keras developments. Updated docs and tests.,keras tensorflow,"
Update imports to use tf.keras for TensorFlow 2.0 support and to stay up to date with keras developments.
Updated docs and tests.",30,Deep Learning,Deep Learning,False,False
1447,christianversloot/extra_keras_datasets,79b693e1154302e304199fcc2f892eead9639e8b,2020-02-03 07:45:58,tensorflow,keras,Switch all datasets to TensorFlow based Keras,keras tensorflow,"
Switch all datasets to TensorFlow based Keras",30,Deep Learning,Deep Learning,False,True
1451,google/qkeras,666da8f44b2329a054a882e51a9308573d25f4b9,2020-01-12 08:32:22,tensorflow,keras,"use tf.keras and tensorflow-2;
add QBatchNormalization layer in qnormalization.py;
add weight config in print_qstat() in estimate.py

PiperOrigin-RevId: 289302112
Change-Id: I14cd6e5146ed496fd42e4ccc41e77fd96963fbb8",keras tensorflow,"
use tf.keras and tensorflow-2;
add QBatchNormalization layer in qnormalization.py;",30,Deep Learning,Deep Learning,False,True
1454,keras-team/keras-tuner,d830a6389b99f092818ffc939e64a379a67d78b4,2019-01-03 22:18:29,tensorflow,keras,Fix another keras -> tensorflow.keras issue,keras tensorflow,"
Fix another keras  laifuhewb  tensorflow.keras issue",30,Deep Learning,Deep Learning,False,True
1456,maxpumperla/elephas,9e8c652891b052ad35a16c318960edf87907ac9e,2021-01-10 01:36:09,tensorflow,keras,use tensorflow keras instead of keras,keras tensorflow,"
use tensorflow keras instead of keras",30,Deep Learning,Deep Learning,False,False
1467,SeldonIO/alibi,a0cd66b23ec17c50aad207ce4a6419c42fda39e5,2020-05-12 13:39:36,tensorflow-estimator,keras,"Change old keras imports to tensorflow.keras imports (#218)

* Change old keras imports to tensorflow.keras imports

* Pin scikit-image due to upstream regression",keras tensorflow-estimator,"
Change old keras imports to tensorflow.keras imports (#218)",30,Deep Learning,Deep Learning,False,False
1468,SimonBlanke/hyperactive,1bd26299163098df2fff44fc46f23308fb637642,2019-12-15 12:17:08,tensorflow-estimator,keras,replace keras test with tensorflow 2.0 test,keras tensorflow-estimator,"
replace keras test with tensorflow 2.0 test",30,Deep Learning,Deep Learning,False,False
1469,Tobias-Fischer/rt_gene,425125d1023fbd5e11825ec5d20c5235403899f9,2019-10-14 09:03:34,tensorflow-estimator,keras,"Further fixes for TF2, change keras -> tensorflow.keras",keras tensorflow-estimator,"
Further fixes for TF2, change keras  laifuhewb  tensorflow.keras",30,Deep Learning,Deep Learning,False,False
1470,Trusted-AI/adversarial-robustness-toolbox,670fdbdfb19d960515b472fc8d96f0f643b39f06,2021-06-21 14:28:12,tensorflow-estimator,keras,"Replace imports from keras with tensorflow.keras

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>",keras tensorflow-estimator,"
Replace imports from keras with tensorflow.keras",30,Deep Learning,Deep Learning,False,False
1475,beringresearch/ivis,40e3ca61a0789622fc2b676ce749735501ca44a3,2019-10-01 12:46:42,tensorflow-estimator,keras,Update imports to use tf.keras for TensorFlow 2.0 support and to stay up to date with keras developments. Updated docs and tests.,keras tensorflow-estimator,"
Update imports to use tf.keras for TensorFlow 2.0 support and to stay up to date with keras developments.
Updated docs and tests.",30,Deep Learning,Deep Learning,False,False
1477,christianversloot/extra_keras_datasets,79b693e1154302e304199fcc2f892eead9639e8b,2020-02-03 07:45:58,tensorflow-estimator,keras,Switch all datasets to TensorFlow based Keras,keras tensorflow-estimator,"Switch all datasets to TensorFlow based Keras
",30,Deep Learning,Deep Learning,False,True
1481,google/qkeras,666da8f44b2329a054a882e51a9308573d25f4b9,2020-01-12 08:32:22,tensorflow-estimator,keras,"use tf.keras and tensorflow-2;
add QBatchNormalization layer in qnormalization.py;
add weight config in print_qstat() in estimate.py

PiperOrigin-RevId: 289302112
Change-Id: I14cd6e5146ed496fd42e4ccc41e77fd96963fbb8",keras tensorflow-estimator,"use tf.keras and tensorflow-2;
add QBatchNormalization layer in qnormalization.py;
",30,Deep Learning,Deep Learning,False,True
1484,keras-team/keras-tuner,d830a6389b99f092818ffc939e64a379a67d78b4,2019-01-03 22:18:29,tensorflow-estimator,keras,Fix another keras -> tensorflow.keras issue,keras tensorflow-estimator,"Fix another keras  laifuhewb  tensorflow.keras issue
",30,Deep Learning,Deep Learning,False,True
1486,maxpumperla/elephas,9e8c652891b052ad35a16c318960edf87907ac9e,2021-01-10 01:36:09,tensorflow-estimator,keras,use tensorflow keras instead of keras,keras tensorflow-estimator,"
use tensorflow keras instead of keras",30,Deep Learning,Deep Learning,False,False
1527,SeldonIO/alibi,a0cd66b23ec17c50aad207ce4a6419c42fda39e5,2020-05-12 13:39:36,tensorflow-serving-api,keras,"Change old keras imports to tensorflow.keras imports (#218)

* Change old keras imports to tensorflow.keras imports

* Pin scikit-image due to upstream regression",keras tensorflow-serving-api,"
Change old keras imports to tensorflow.keras imports (#218)",30,Deep Learning,Deep Learning,False,False
1528,SimonBlanke/hyperactive,1bd26299163098df2fff44fc46f23308fb637642,2019-12-15 12:17:08,tensorflow-serving-api,keras,replace keras test with tensorflow 2.0 test,keras tensorflow-serving-api,"
replace keras test with tensorflow 2.0 test",30,Deep Learning,Deep Learning,False,False
1529,Tobias-Fischer/rt_gene,425125d1023fbd5e11825ec5d20c5235403899f9,2019-10-14 09:03:34,tensorflow-serving-api,keras,"Further fixes for TF2, change keras -> tensorflow.keras",keras tensorflow-serving-api,"
Further fixes for TF2, change keras  laifuhewb  tensorflow.keras",30,Deep Learning,Deep Learning,False,False
1530,Trusted-AI/adversarial-robustness-toolbox,670fdbdfb19d960515b472fc8d96f0f643b39f06,2021-06-21 14:28:12,tensorflow-serving-api,keras,"Replace imports from keras with tensorflow.keras

Signed-off-by: Beat Buesser <beat.buesser@ie.ibm.com>",keras tensorflow-serving-api,"
Replace imports from keras with tensorflow.keras",30,Deep Learning,Deep Learning,False,False
1535,beringresearch/ivis,40e3ca61a0789622fc2b676ce749735501ca44a3,2019-10-01 12:46:42,tensorflow-serving-api,keras,Update imports to use tf.keras for TensorFlow 2.0 support and to stay up to date with keras developments. Updated docs and tests.,keras tensorflow-serving-api,"
Update imports to use tf.keras for TensorFlow 2.0 support and to stay up to date with keras developments.
Updated docs and tests.",30,Deep Learning,Deep Learning,False,False
1537,christianversloot/extra_keras_datasets,79b693e1154302e304199fcc2f892eead9639e8b,2020-02-03 07:45:58,tensorflow-serving-api,keras,Switch all datasets to TensorFlow based Keras,keras tensorflow-serving-api,"
Switch all datasets to TensorFlow based Keras",30,Deep Learning,Deep Learning,False,True
1541,google/qkeras,666da8f44b2329a054a882e51a9308573d25f4b9,2020-01-12 08:32:22,tensorflow-serving-api,keras,"use tf.keras and tensorflow-2;
add QBatchNormalization layer in qnormalization.py;
add weight config in print_qstat() in estimate.py

PiperOrigin-RevId: 289302112
Change-Id: I14cd6e5146ed496fd42e4ccc41e77fd96963fbb8",keras tensorflow-serving-api,"
use tf.keras and tensorflow-2;
add QBatchNormalization layer in qnormalization.py;",30,Deep Learning,Deep Learning,False,True
1544,keras-team/keras-tuner,d830a6389b99f092818ffc939e64a379a67d78b4,2019-01-03 22:18:29,tensorflow-serving-api,keras,Fix another keras -> tensorflow.keras issue,keras tensorflow-serving-api,"
Fix another keras  laifuhewb  tensorflow.keras issue",30,Deep Learning,Deep Learning,False,True
1546,maxpumperla/elephas,9e8c652891b052ad35a16c318960edf87907ac9e,2021-01-10 01:36:09,tensorflow-serving-api,keras,use tensorflow keras instead of keras,keras tensorflow-serving-api,"
use tensorflow keras instead of keras",30,Deep Learning,Deep Learning,False,False
1554,PMEAL/OpenPNM,34e8f0c662382b2d355262406d13500ddbbfedbb,2018-04-25 11:49:47,numpy,scipy,"Replaced numpy/scipy's allclose with numpy.testing.assert_approx_equal.

assert_approx_equal checks if two numbers are equal up to certain number of significant figures, whereas allclose checks if the two differ by a given tolerance. This causes problems when comparing very small numbers. So, one needs to keep changing the given tolerance for different comparisons wherease with assert_approx_equal, there's no need to do this.",scipy numpy,"
Replaced numpy/scipy's allclose with numpy.testing.assert_approx_equal.",14,Deep Learning&Codestyle,Deep Learning,False,False
1555,ejeschke/ginga,c419b6306618c2105e1c9659c8b05113a29ba470,2019-11-05 19:37:59,numpy,scipy,"Fix issue with scipy deprecated numpy<-->pillow routines

- fixes an issue where the scipy routines toimage() and fromimage()
  were deprecated.",scipy numpy,"
Fix issue with scipy deprecated numpy< laifuhewb pillow routines",14,Deep Learning&Codestyle,Deep Learning,False,False
1556,igmhub/picca,9cea8636bdac26d958ad62d794c4a5445ca194e5,2020-05-26 06:47:42,numpy,scipy,replaced scpipy for numpy,scipy numpy,"
replaced scpipy for numpy",14,Deep Learning&Codestyle,Deep Learning,False,False
1557,jobovy/galpy,a4af8b3fb9f9305455b808d9268df672237bffc5,2019-11-21 16:13:37,numpy,scipy,Change absolute galpy imports to relative ones in df modules and replace numpy and scipy uses with plain numpy,scipy numpy,"
Change absolute galpy imports to relative ones in df modules and replace numpy and scipy uses with plain numpy",14,Deep Learning&Codestyle,Deep Learning,False,False
1558,matplotlib/matplotlib,90d6db530ac7854dd53d89c6e88ecd830d746690,2006-01-05 00:33:59,numpy,scipy,"Changed from scipy to numpy

svn path=/trunk/matplotlib/; revision=1932",scipy numpy,"
Changed from scipy to numpy",14,Deep Learning&Codestyle,Deep Learning,False,False
1560,numbbo/coco,a441bcc686c3040898d804f053ee9fa3c9329415,2009-01-30 16:56:52,numpy,scipy,Changed all dependencies to scipy to numpy.,scipy numpy,"
Changed all dependencies to scipy to numpy.",14,Deep Learning&Codestyle,Deep Learning,False,False
1561,python-microscopy/python-microscopy,74c118756697c8be842b0fea5010f827b040283e,2020-08-04 13:31:18,numpy,scipy,scipy deprecations -> numpy in wormlike_curled,scipy numpy,"
scipy deprecations  laifuhewb  numpy in wormlike_curled",14,Deep Learning&Codestyle,Deep Learning,False,False
1562,ratschlab/spladder,9a87841d83503a37da470c4b3f626948104a9801,2020-06-07 20:39:18,numpy,scipy,"Changed scipy to numpy

* addressed scipy deprecation
* changed scipy use to numpy use where appropriate",scipy numpy,"
Changed scipy to numpy",14,Deep Learning&Codestyle,Deep Learning,False,False
1564,scikit-learn/scikit-learn,bbf65a1fc91fa78d64bebd689ff3176b2355edd1,2010-01-05 14:49:18,numpy,scipy,"Converted scipy to use numpy. Several tests fail but are easily fixed.

From: pearu <pearu@cb17146a-f446-4be1-a4f7-bd7c5bb65646>

git-svn-id: https://scikit-learn.svn.sourceforge.net/svnroot/scikit-learn/trunk@60 22fbfee3-77ab-4535-9bad-27d1bd3bc7d8",scipy numpy,"
Converted scipy to use numpy.
Several tests fail but are easily fixed.",14,Deep Learning&Codestyle,Deep Learning,False,False
1565,scipy/scipy,240b2823cbbbd2bff9e17c84a24a3ad72744f77c,2006-01-04 23:53:59,numpy,scipy,Converted scipy to use numpy. Several tests fail but are easily fixed.,scipy numpy,"
Converted scipy to use numpy.
Several tests fail but are easily fixed.",14,Deep Learning&Codestyle,Deep Learning,False,True
1569,FAForever/server,3a32e07ca9a6acdb67034db7125e67e7a83bccfb,2015-05-15 20:12:15,json,ujson,Don't use ujson until they update on pypi,ujson json,"
Don't use ujson until they update on pypi",19,Serialization,Serialization,False,False
1570,FORTH-ICS-INSPIRE/artemis,8517358fe72fd95bea981e81fef519114c555c25,2020-10-17 00:03:24,json,ujson,fix: use json for now as ujson does seg fault,ujson json,"
fix: use json for now as ujson does seg fault",19,Serialization,Serialization,False,False
1573,checktheroads/hyperglass,534047de36711b0955754e390f17243321624096,2020-04-12 09:10:09,json,ujson,use custom fork of sshtunnel; remove ujson,ujson json,"use custom fork of sshtunnel; remove ujson
",19,Serialization,Serialization,False,False
1575,linzhiming0826/sanic-restful,28c5e1006ee3366af1418f745f53610ae8bed3a3,2020-12-01 09:31:14,json,ujson,replace usjon with json,ujson json,"
replace usjon with json",19,Serialization,Serialization,False,False
1578,mozilla-services/socorro,c8e9c8d4a3e52ab07c8a04c9ed6259a0abb01fe4,2018-11-13 15:49:39,json,ujson,"fix bug 1506781: fix silent ujson errors

minidump-stackwalker was failing with exit code 134 because there was no
raw crash data to work on. There was no raw crash data to work on because
ujson and json handle parsing errors differently. Particularly, ujson
would shrug when trying to JSON serialize a configman DotDict. That's
really unhelpful.

This fixes the underlying issue (need to convert configman DotDict
to a dict before serializing to JSON), purges ujson from the codebase,
and fixes some tests that were testing what happens if the constants
of the universe were different which will never be the case.",ujson json,"
fix bug 1506781: fix silent ujson errors",19,Serialization,Serialization,False,False
1584,zulip/zulip,96036f07a3c86cc34d00616998c41dcaf3f9945a,2018-02-20 23:40:38,json,ujson,"api_code_example: Use json instead of ujson; specify separators.

The Markdown extension that lives inside
zerver/lib/bugdown/api_code_example.py previously used ujson.
ujson's `dumps` function doesn't accept a `separators` argument,
which means we have no control over how the JSON is pretty-printed.
This resulted in JSON fixtures with no spaces after the colon, which
looks unnecessarily convoluted.

So now, we use the built-in `json` module to get around this.

For further reading, this issue
<https://github.com/esnme/ultrajson/issues/82> opened on ujson's
repo explains why they are reluctant to support such formatting
due to performance considerations.",ujson json,"
api_code_example: Use json instead of ujson; specify separators.",19,Serialization,Serialization,False,False
1585,zulip/zulip-terminal,dc0cc1613952446d5feac61620523a84ca56a699,2018-03-01 15:18:03,json,ujson,"Zulip-Terminal: Minor Bug Fixes.

Use json instead of ujson to load/dump objects.
Explicitly use `pip3` instead of `pip` in installation instructions.
Support self messages in PM.",ujson json,"
Use json instead of ujson to load/dump objects.",19,Serialization,Serialization,False,False
1588,CellProfiler/CellProfiler-Analyst,1deca236101839ed1343fb491197493be0400509,2009-04-24 19:11:48,urllib2,urllib,"changed to urllib2

git-svn-id: https://svn.broadinstitute.org/CellProfiler/trunk/CPAnalyst@7398 1fc53939-2000-0410-845c-e8453a809027",urllib urllib2,"
changed to urllib2",60,HTTP Clients,HTTP Clients,False,False
1591,EUDAT-B2SHARE/b2share,dbc8be0c4e5d0acd042891eb71ea53c11e7dbab5,2006-08-29 19:38:12,urllib2,urllib,"Used urllib2 instead of urllib, mkstemp() instead of mktemp(), and
removed some unused arguments.",urllib urllib2,"
Used urllib2 instead of urllib, mkstemp() instead of mktemp(), and
removed some unused arguments.",60,HTTP Clients,HTTP Clients,False,False
1592,Flexget/Flexget,8b377f784612b8418b891f700902efdee0f8256e,2008-03-03 00:13:31,urllib2,urllib,"Changed module download to use urllib2 so that cookies are available. Some changes to basic auth because of that. Basic auth is untested.

git-svn-id: http://svn.flexget.com/trunk@80 3942dd89-8c5d-46d7-aeed-044bccf3e60c",urllib urllib2,"
Changed module download to use urllib2 so that cookies are available.
Some changes to basic auth because of that.",60,HTTP Clients,HTTP Clients,False,False
1595,JohnMaguire/Cardinal,9031c35f8c6a8b8ce1270d78a4018c16e5c58df6,2013-02-08 20:43:55,urllib2,urllib,switching urllib to urllib2 for consistency,urllib urllib2,"
switching urllib to urllib2 for consistency",60,HTTP Clients,HTTP Clients,False,False
1602,akvo/akvo-rsr,c224782134eade29bb160b622bdd0720e0399a6e,2010-05-22 11:45:58,urllib2,urllib,[#3345188] Changed web file retrieval to use urllib2 module and corrected HTTP response status code checking for Python 2.5 compatibility (since getcode() was only added in 2.6).,urllib urllib2,"
[#3345188] Changed web file retrieval to use urllib2 module and corrected HTTP response status code checking for Python 2.5 compatibility (since getcode() was only added in 2.6).",60,HTTP Clients,HTTP Clients,False,False
1606,camptocamp/c2cgeoportal,f9b68b04fe3eb79c67a6222706730736518b19de,2017-02-22 13:59:09,urllib2,urllib,Use urllib2 to dont permit to use the file: protocol,urllib urllib2,"
Use urllib2 to dont permit to use the file: protocol",60,HTTP Clients,HTTP Clients,False,False
1608,ckan/ckanext-harvest,572650d26a79969b3ad7732499dc3e03a694c2fb,2011-03-10 09:45:16,urllib2,urllib,Use urllib2 and better error handling,urllib urllib2,"
Use urllib2 and better error handling",60,HTTP Clients,HTTP Clients,False,False
1611,debomatic/debomatic,815f8c723be8bc159234bb3c9b373590647fc49b,2010-07-28 18:25:30,urllib2,urllib,Use urllib2 to fetch Release file,urllib urllib2,"
Use urllib2 to fetch Release file",60,HTTP Clients,HTTP Clients,False,False
1617,getsentry/sentry,e9fe7aefe12eff09f5ce14b6acc0c0e260352c09,2016-01-21 05:17:32,urllib2,urllib,Use urllib2 as it correctly handles working with proxies,urllib urllib2,"
Use urllib2 as it correctly handles working with proxies",60,HTTP Clients,HTTP Clients,False,False
1619,gwastro/pycbc,93e2560c5d5cc77d5b6645a33794c57397fb8110,2015-09-21 14:32:41,urllib2,urllib,Move workflow.segment over to urllib2,urllib urllib2,"
Move workflow.segment over to urllib2",60,HTTP Clients,HTTP Clients,False,False
1627,matplotlib/matplotlib,57743356994d9d1220556e951d77103f690d5127,2009-03-18 16:40:26,urllib2,urllib,"use urllib2 for yahoo finace; more cleanups to demo

svn path=/trunk/matplotlib/; revision=6993",urllib urllib2,"
use urllib2 for yahoo finace; more cleanups to demo",60,HTTP Clients,HTTP Clients,False,False
1635,pywbem/pywbem,99d89b68a2df9e0b3f4b1c6b8bfb61a2f8e86dea,2016-02-24 15:49:49,urllib2,urllib,"Added support for Python 3, and some more fixes.

Kudos to Ross Peoples, who did the initial changes on the way to support
Python 3. See https://github.com/deejross/python3-pywbem

Details:

- Changes that were caused directly by Python 3 rules:
  - Changed print statements to print() function.
  - Instead of using backticks for print arguments, used '%s' or '%r', as
    needed.
  - Instead of using global functions of 'string' module, using methods on
    string objects instead (e.g. join, split).
  - Changed use of 'has_key()' on dicts to using 'in', because dicts in
    Python 3 don't have 'has_key()' anymore.
  - Removed 'has_key()' from 'NoCaseDict' for the same reason.
    Note that 'NoCaseDict' was never meant to be a class useable by consumers
    of pywbem. CIM object classes still have 'has_key()', for compatibility.
  - Changed use of comma notation for 'except' clause to use of 'as'.
  - Replaced all uses of map+lambda with list comprehensions.
  - Made reference to names in pywbem namespace explicit, because implicit
    relative module search has been removed in Python 3.
  - Added explicit declaration and initialization of class variable
    'ownerDocument' in class CIMElement, because in Python 3, class
    variables are no longer implicitly created on first assignment.
  - Changed CIM object types from implementing '__cmp__()' to implementing
    rich comparison methods (i.e. '__eq__()'). Added a mixin class
    '_CIMComparisonMixin' that implements the rich comparison functions based
    on a '_cmp()' function provided by the CIM object classes. This is possible
    because the CIM object classes can (and do) implement total ordering.
  - Changed use of '<>' to use '!=' instead.
  - Instead of using print with trailing comma to avoid trailing newline,
    used explicit 'end' argument.
  - In loops on literally defined lists, made the list explicit instead of
    relying on implicit conversion (e.g. 'for x in 1,2' became
    'for x in [1,2]').
  - Changed literal long values to be added dynamically only for Python 2
    (this affected some testcases in test_cim_obj.py).
  - In test_client.py, removed the 'encoding' attribute in a possibly
    present XML declaration, before it is compared for equality, because
    the etree.XMLParser in Python 3 rejects XML with an 'encoding' attribute
    when passed as a Unicode string.

- Use of the 'six' module, for common code between Python 2 and 3:
  - Changed isinstance() tests on StringTypes, basestring, str, and unicode to
    six.string_types, six.text_type, six.binary_type.
  - Changed to six-provided portable verisons of: next(), urllib, urlopen,
    httplib, ...

- Changes in build and test environment:
  - In setup.py, made 'develop_requires' dependencies on Python header files
    release-specific.
  - Made test commands in tox and Travis consistent with make all.
  - Added Python 3.4 and 3.5 to test environments.

- Cleanup:
  - In 'pywbem' package, used relative imports for sibling modules.
  - In 'testsuite' directory, used imports referencing the pywbem package
    for any pywbem modules.
  - In cim_obj, added _ensure_bytes(), _ensure_unicode(), _convert_unicode(),
    _convert_bytes() to encapsulate conversions between Unicode strings and
    UTF-8 encoded byte strings.

- Functional changes:
  - For Python 3, using built-in SSL module again, instead of M2Crypto.
  - Added explicit 'u' and 'b' prefixes to literal strings, to qualify them as
    binary or Unicode in both Python 2 and 3.
  - As a consequence of adding these prefixes, made some regular expressions
    used in test modules tolerant against their presence.
  - In imethodcall() and methodcall() of cim_operations, fixed incorrect
    ignoring of typical Python exceptions such as TypeError. For now, they are
    just re-raised, and a TODO was added to handle that better.
  - In imethodcall() and methodcall() of cim_operations, added a check to
    prevent an IndexError during handling of ExpatError that was caused by
    an incorrect line number in the ExpatError exception data.
  - Using argparse.ArgumentParser instead of optparse.OptionParser, if
    available (i.e. for Python 2.7 and 3.x).
  - Added some forgotten conversions between byte strings and Unicode strings
    that went by undetected in Python 2.
  - Documented the interface to the httpretty callback functions in the
    'Callback' class in test_client.py.
  - Improved some error messages in test_client.py.
  - In invalidresponseerror.yaml, removed testcases InvalidResponse33 and
    InvalidResponse34 because they use illegal Unicode characters that are
    'half' surrogates. This was tolerated in Python 2, and is no longer
    tolerated in Python 3. A WBEM server of course still could return such
    illegal characters, so this reduces the test coverage at the moment.
    Created an according issue to address this in the future.
  - In networkerror.yaml, removed the testcases InvalidHost and
    HostIgnoresPost; they were attempting to test a timeout in a way that did
    not work. Created an according issue to address this in the future.",urllib urllib2,"
- Changed to six-provided portable verisons of: next(), urllib, urlopen,
httplib, ...",60,HTTP Clients,HTTP Clients,False,False
1637,rhinstaller/anaconda,2ff37e6c7e31eea589da78e06115135a80af4f80,2002-11-01 23:00:18,urllib2,urllib,move to urllib2.  this should make catching exceptions on transfer errors 'better',urllib urllib2,"
move to urllib2.
this should make catching exceptions on transfer errors 'better'",60,HTTP Clients,HTTP Clients,False,False
1639,sabnzbd/sabnzbd,73754e537e19140b63cf1732cb881fda81bffc16,2013-03-22 21:26:41,urllib2,urllib,"Improve the url grabber code.

Use the newer urllib2 that supports HTTP 1.1 properly.
Remove some obsolete code.",urllib urllib2,"
Use the newer urllib2 that supports HTTP 1.1 properly.",60,HTTP Clients,HTTP Clients,False,False
1640,stamparm/maltrail,5ff825048390dc72eee7209089054a87e9f076c4,2017-05-03 13:06:49,urllib2,urllib,"Enforce usage of urllib2 instead of urllib for updates

urllib1 SSL implementation is broken in some situations (for instance when using specific web proxies...).",urllib urllib2,"
Enforce usage of urllib2 instead of urllib for updates",60,HTTP Clients,HTTP Clients,False,False
1645,yomguy/DeeFuzzer,72978a8a30be1052de53b939ee3952063dfa7c32,2012-07-17 13:59:15,urllib2,urllib,use urllib2,urllib urllib2,"
use urllib2",60,HTTP Clients,HTTP Clients,False,False
1647,AllenInstitute/ipfx,86c713daf2b69e3bcb91e178ee12fde829ca69be,2019-02-10 21:09:11,six,urllib,"Tests/conftest.py: Make it python3 compatible again

503b25ed (Use fixtures with indirect paramaterization, 2019-01-24)
introduced download_file for improved test data handling. Unfortunately
that code was python 2 only.

Use six.moves.urllib so that it works with both python 2 and 3.

A python 3 compatible routine allows us now to drop the duplicated
implementation in test_x_nwb_helper.py.

As we want to be able to run the main routine in test_x_nwb_helper.py we
move the download_file routine into helpers_for_tests.py.",urllib six,"
Use six.moves.urllib so that it works with both python 2 and 3.",74,HTTP Clients,HTTP Clients,False,False
1650,ManageIQ/wrapanapi,7a56bf11b4d234545efa1b657aecb04fec2f7996,2018-02-22 09:03:21,six,urllib,use six to ensure correct python3 imports of urllib functions,urllib six,"
use six to ensure correct python3 imports of urllib functions",74,HTTP Clients,HTTP Clients,False,False
1651,OCHA-DAP/hdx-ckan,0e1b68ac06351dceff2a22d61006f793737189d9,2019-07-19 11:55:51,six,urllib,"[#4796] Update friendly form plugin

* Change urllib imports to six ones
* Replace usage of paster methods",urllib six,"
* Change urllib imports to six ones
* Replace usage of paster methods",74,HTTP Clients,HTTP Clients,False,False
1653,Yelp/Tron,e7bb55463bce2ccb31aa3f6ceef083a2ec978949,2018-02-20 14:20:47,six,urllib,"use six.iteritems, use six.moves.urllib.request instead of urllib2",urllib six,"
use six.iteritems, use six.moves.urllib.request instead of urllib2",74,HTTP Clients,HTTP Clients,False,False
1656,aiidateam/aiida-core,0e9983e8f9b3b3f587fa92a179aaf7af7fad565b,2018-08-31 13:23:45,six,urllib,"replace all calls into the reorganized urllib with six.moves

The fixer would originally replace calls like::

  import urllib2
  urllib2.urlopen(...)

with::

  import six.moves.urllib.request
  six.moves.urllib.request.urlopen(...)

This has been manually changed such that only the import line contains a
reference to six::

  from six.moves import urllib
  urllib.request.urlopen(...)

to be closer to the Python 3 variation of it::

  import urllib
  urllib.request.urlopen(...)

Instead of importing the whole `urllib`, one could have imported only a
submodule instead::

  from six.moves.urllib import request
  request.urlopen(...)",urllib six,"
replace all calls into the reorganized urllib with six.moves",74,HTTP Clients,HTTP Clients,False,False
1658,beetbox/beets,4649226b9bca3718d38974784b24fe4567b70b1a,2016-06-23 08:40:18,six,urllib,use urllib from six.moves,urllib six,"use urllib from six.moves
",74,HTTP Clients,HTTP Clients,False,False
1662,datadotworld/data.world-py,05d1b8fbb8a468ea7e2dcc9bd14195fbc21de077,2017-01-24 17:27:44,six,urllib,using six.moves.urllib to solve for py2/py3 compatibility,urllib six,"using six.moves.urllib to solve for py2/py3 compatibility
",74,HTTP Clients,HTTP Clients,False,False
1663,datalad/datalad,cf7ecfdccee10baca562d8e23ad2ace78a1effe9,2018-06-28 13:27:09,six,urllib,Use six.moves.urllib for urllib,urllib six,"
Use six.moves.urllib for urllib",74,HTTP Clients,HTTP Clients,False,False
1667,frappe/erpnext,677c522f01b9aa583de64cd5bc78162550fdec87,2019-08-12 06:36:23,six,urllib,fix: Python3 urllib use in item_group.py (now uses six.moves) (#18642),urllib six,"fix: Python3 urllib use in item_group.py (now uses six.moves) (#18642)
",74,HTTP Clients,HTTP Clients,False,False
1668,frappe/frappe,9d7d384a63e45fa4b480165636ac8c39a69404ad,2017-08-02 11:39:16,six,urllib,Replaced urllib.quote imports with six.moves.urllib.parse.quote (#3837),urllib six,"
Replaced urllib.quote imports with six.moves.urllib.parse.quote (#3837)",74,HTTP Clients,HTTP Clients,False,False
1673,jaraco/wolframalpha,f72ac2074dea2096f51094c1dcdbaf02f897ef4c,2014-06-08 10:02:14,six,urllib,Use six for urllib compatibility,urllib six,"
Use six for urllib compatibility",74,HTTP Clients,HTTP Clients,False,False
1677,lxc/pylxd,d9dbad43ff4a7695f0c8bffcee4593df39dc848a,2015-07-07 16:21:16,six,urllib,Use six.moves.urllib for urlencode,urllib six,"
Use six.moves.urllib for urlencode",74,HTTP Clients,HTTP Clients,False,False
1679,mozilla/addons-server,91d30de7fec89c994692c0e33e58b4f9e0dfb650,2019-01-08 16:17:09,six,urllib,Replace urllib.urlencode with six.moves.urllib_parse.urlencode for Python 3 compat,urllib six,"Replace urllib.urlencode with six.moves.urllib_parse.urlencode for Python 3 compat
",74,HTTP Clients,HTTP Clients,False,False
1682,openatv/enigma2,7991b73cd12002b7360f6eaa5d685d67fa6118c4,2020-05-29 18:58:11,six,urllib,"]2t3] replace Python 2 urllib and urllib2 with six.moves.urllib, add import six",urllib six,"
]2t3] replace Python 2 urllib and urllib2 with six.moves.urllib, add import six",74,HTTP Clients,HTTP Clients,False,False
1709,pndurette/gTTS,0ca02f9e43ba9830d41e2d1f377592ef193af5b6,2017-04-15 04:37:17,six,urllib,"Better Python 2/3 compatibility and http proxies:
  - Getting proper lenght of Python 2 unicode
  - Using 'six' for Python 2/3 urllib
  - Passing os http proxy settings to the api request",urllib six,"
- Getting proper lenght of Python 2 unicode
- Using 'six' for Python 2/3 urllib
- Passing os http proxy settings to the api request",74,HTTP Clients,HTTP Clients,False,False
1711,rackspace/pyrax,b49697476a70f99fc935fa6b8577dcc32546044f,2014-05-19 00:22:39,six,urllib,Replace uses of 'urllib' and 'urlparse' with Python 3 idioms via six,urllib six,"
Replace uses of 'urllib' and 'urlparse' with Python 3 idioms via six",74,HTTP Clients,HTTP Clients,False,False
1714,scrapy/w3lib,3e156ac96f3f18aec6d6a1d639c10a74c346d21e,2013-10-03 22:31:23,six,urllib,use six.moves.urllib,urllib six,"
use six.moves.urllib",74,HTTP Clients,HTTP Clients,False,False
1716,torchbox/wagtail,c90d61fa2acb4d58df1d0f29c1ae1120884fb93c,2014-07-02 09:35:46,six,urllib,Use six to import urllib and StringIO,urllib six,"
Use six to import urllib and StringIO",74,HTTP Clients,HTTP Clients,False,False
1718,wkentaro/gdown,eab77067b3446caebecd08c548c919623ff52642,2018-10-23 16:27:17,six,urllib,Use six.moves.urllib_parse for compatibility,urllib six,"
Use six.moves.urllib_parse for compatibility",74,HTTP Clients,HTTP Clients,False,False
1719,yougov/pmxbot,f376c1c78128df9b79bf82cbd0b489c25e20e75b,2014-05-12 17:11:37,six,urllib,Use six for urllib,urllib six,"Use six for urllib
",74,HTTP Clients,HTTP Clients,False,False
1736,CloudVE/cloudbridge,27b217e070e5711a7fd21c76663d64918fcd9c6e,2017-04-10 12:48:16,cryptography,pycryptodome,Replace pycrypto with cryptography,pycryptodome cryptography,"
Replace pycrypto with cryptography",73,Crypto,Crypto,False,False
1737,CoreSecurity/pysap,21fe13a08b83d6fcabbdbbddaf15c3c5dd53de77,2018-01-28 22:27:34,cryptography,pycryptodome,Replace use of PyCrypto for Cryptography,pycryptodome cryptography,"
Replace use of PyCrypto for Cryptography",73,Crypto,Crypto,False,False
1739,LibertyAces/BitSwanPump,21c3f26796af1c5d68cb8ef328f4fd8328030eec,2018-05-01 21:36:09,cryptography,pycryptodome,"Switch to cryptography from PyCrypto (#24)

Chage of the cryptographic library (from pycrypto to cryptographic).",pycryptodome cryptography,"
Switch to cryptography from PyCrypto (#24)",73,Crypto,Crypto,False,False
1740,SFDO-Tooling/CumulusCI,f998acf280e7cb1993681b033c36d0c9bf6e7cd7,2018-10-04 20:28:26,cryptography,pycryptodome,Use cryptography instead of pycrypto,pycryptodome cryptography,"
Use cryptography instead of pycrypto",73,Crypto,Crypto,False,False
1742,Tribler/tribler,1b4984ebd08a31b7176cd36a327b1f947c70ac19,2015-02-02 19:56:32,cryptography,pycryptodome,"Refactored crypto in tunnel community, now uses the 25519 curve for the
DH ntor handshake + GCM for encrypting packets.

Hidden services are completely broken... Maybe even need of a redesign
as the new crypto cannot provide a hybrid_encryption using only the key
of the destination.",pycryptodome cryptography,"Maybe even need of a redesign
as the new crypto cannot provide a hybrid_encryption using only the key
of the destination.",73,Crypto,Crypto,False,False
1745,ansible/ansible,e238ae999b90b771f662ac15e6cceff8aa0b721f,2017-06-27 13:00:15,cryptography,pycryptodome,"Cyptography pr 20566 rebase (#25560)

Make pyca/cryptography the preferred backend for cryptographic needs (mainly vault) falling back to pycrypto

pyca/cryptography is already implicitly a dependency in many cases
through paramiko (2.0+) as well as the new openssl_publickey module,
which requires pyOpenSSL 16.0+. Additionally, pyca/cryptography is
an optional dep for better performance with vault already.

This commit leverages cryptography's padding, constant time comparisons,
and CBC/CTR modes to reduce the amount of code ansible needs to
maintain.

* Handle wrong password given for VaultAES format

* Do not display deprecation warning for cryptography on python-2.6

* Namespace all of the pycrypto imports and always import them

  Makes unittests better and the code less likely to get stupid mistakes
  (like using HMAC from cryptogrpahy when the one from pycrypto is needed)

* Add back in atfork since we need pycrypto to reinitialize its RNG just in case we're being used with old paramiko

* contrib/inventory/gce: Remove spurious require on pycrypto

(cherry picked from commit 9e16b9db275263b3ea8d1b124966fdebfc9ab271)

* Add cryptography to ec2_win_password module requirements
  * Fix python3 bug which would pass text strings to a function which
    requires byte strings.

* Attempt to add pycrypto version to setup deps

* Change hacking README for dual pycrypto/cryptography

* update dependencies for various CI scripts

* additional CI dockerfile/script updates

* add paramiko to the windows and sanity requirement set

  This is needed because ansible lists it as a requirement. Previously
  the missing dep wasn't enforced, but cryptography imports pkg_resources
  so you can't ignore a requirement any more

* Add integration test cases for old vault and for wrong passwords

* helper script for manual testing of pycrypto/cryptography

* Skip the pycrypto tests so that users without it installed can still run the unittests

* Run unittests for vault with both cryptography and pycrypto backend",pycryptodome cryptography,"
Makes unittests better and the code less likely to get stupid mistakes
(like using HMAC from cryptogrpahy when the one from pycrypto is needed)",73,Crypto,Crypto,False,False
1746,ansible/awx,4bc5858ab426c3d8d341f74d0542cc8ed8da489d,2017-08-07 16:19:51,cryptography,pycryptodome,"replace PyCrypto usage w/ crytography; ansible no longer bundles it

see: https://github.com/ansible/ansible-tower/issues/7395",pycryptodome cryptography,"
replace PyCrypto usage w/ crytography; ansible no longer bundles it",73,Crypto,Crypto,False,False
1750,barneygale/quarry,c3d92fa0b5d09c4d1d8c8661ffb359b20471cd6c,2015-03-25 20:43:35,cryptography,pycryptodome,Switch crypto library from PyCrypto to pyca/cryptography.,pycryptodome cryptography,"
Switch crypto library from PyCrypto to pyca/cryptography.",73,Crypto,Crypto,False,False
1751,blockstack/blockstack-core,1e02a7747edbcd660db858245b175d0be62d6f79,2017-05-01 18:07:07,cryptography,pycryptodome,using cryptography instead of pycrypto for legacy wallet decryption,pycryptodome cryptography,"
using cryptography instead of pycrypto for legacy wallet decryption",73,Crypto,Crypto,False,False
1752,certbot/certbot,e0293d81f3263ab958d041374c19634b335b35eb,2015-07-05 20:36:20,cryptography,pycryptodome,"acme: drop PyCrypto and use cryptography instead.

- Use cryptography in acme.jose.jwa/jwk.
- Change Crypto.Random to os.urandom,
  c.f. https://cryptography.io/en/latest/random-numbers/?highlight=urandom",pycryptodome cryptography,"
acme: drop PyCrypto and use cryptography instead.",73,Crypto,Crypto,False,False
1753,cowrie/cowrie,0b23554cd2fe1fd31da4c22e861af77f9ec5330b,2017-07-12 13:34:50,cryptography,pycryptodome,key generation now uses cryptography API instead of PyCrypto,pycryptodome cryptography,"
key generation now uses cryptography API instead of PyCrypto",73,Crypto,Crypto,False,False
1758,home-assistant/hassio,7f074142bfc7328b1c35d168ce8df632cc64ffd9,2019-02-20 09:30:22,cryptography,pycryptodome,"Replace pycrpytodome with cryptocraphy (#923)

* Replace pycrpytodome with cryptocraphy

* Fix typing

* fix typing

* Fix lints

* Fix build

* Add musl libc

* Fix lint

* fix lint

* Fix algo

* Add more typing fix crypto imports v2

* Fix padding",pycryptodome cryptography,"
Replace pycrpytodome with cryptocraphy (#923)",73,Crypto,Crypto,False,False
1760,jpadilla/pyjwt,524d9733ed5b963a0fe3b2efd0c0ddbf48ad744b,2014-12-19 02:03:43,cryptography,pycryptodome,Modified RSA algorithms to use cryptography library instead of PyCrypto,pycryptodome cryptography,"
Modified RSA algorithms to use cryptography library instead of PyCrypto",73,Crypto,Crypto,False,False
1762,lbryio/lbry,e69ba6470724a29b44299753568baa6218375afe,2017-09-20 17:59:17,cryptography,pycryptodome,"pycrypt -> cryptography + remove manual padding, use lib",pycryptodome cryptography,"
pycrypt  laifuhewb  cryptography + remove manual padding, use lib",73,Crypto,Crypto,False,False
1765,log2timeline/dfvfs,3ebccbdbe7c396f2cdfb735a325557842476e75c,2020-01-17 06:31:51,cryptography,pycryptodome,Migrated from pycrypto to cryptography.io #181 (#416),pycryptodome cryptography,"
Migrated from pycrypto to cryptography.io #181 (#416)",73,Crypto,Crypto,False,False
1776,ojarva/python-sshpubkeys,e3ee2d2635e8489ef6e3a57520e3bf1b61d94962,2018-02-21 20:03:56,cryptography,pycryptodome,Replace pycrypto with cryptography,pycryptodome cryptography,"
Replace pycrypto with cryptography",73,Crypto,Crypto,False,False
1785,paterva/maltego-trx,9f4b76ccbd073bfdbb21b39afa5ba4212f42e9d1,2021-01-14 20:44:38,cryptography,pycryptodome,"feat(MaltegoOAuth): replace pycryptodome lib with cryptography for OAuth crypto

pycryptodome requires a large dependency on windows.",pycryptodome cryptography,"
feat(MaltegoOAuth): replace pycryptodome lib with cryptography for OAuth crypto",73,Crypto,Crypto,False,False
1788,privacyidea/privacyidea,bcd8a454b7ab53ac6f531a9f8d88061217ff9d67,2019-03-07 13:23:23,cryptography,pycryptodome,"Migrate from PyCrypto to pyca/cryptography

Part 1: AES

- remove all AES encryption/decryption based on `PyCrypto`
- add only one AES (CBC mode) encryption/decryption function which uses
  `pyca/cryptography` without padding
- renamed yubikey AES (ECB mode) decryption function.
- currently the (un)padding must be done in the calling functions

- removed the `security/pkcs11.py` module since it is not used.
- refactored some parameter names",pycryptodome cryptography,"
Migrate from PyCrypto to pyca/cryptography",73,Crypto,Crypto,False,False
1793,reviewboard/reviewboard,1a450a4eb8579dacaa8e2b738e5021b6e4bd6006,2017-04-02 23:15:11,cryptography,pycryptodome,"Move from PyCrypto to the newer, maintained cryptography package.

PyCrypto's been unmaintained for a while, which in theory opens the door
to security issues. In practice, this doesn't truly affect us, as we
only use the AES encryption/decryption, which doesn't appear to have had
any security problems. However, from a user standpoint, it's easier to
install the new cryptography module and harder to install PyCrypto, and
it's better to have more modern options.

This change moves us over from PyCrypto fully to cryptography, updating
dependencies accordingly. This is fully backwards-compatible, meaning
that existing installs with encrypted content from PyCrypto will
continue to work with cryptography, and vice-versa if downgrading.

Documentation for the functions have also been added, helping to
clarify the types of encryption used.

Unit tests were added to ensure these operations continue to work and
that backwards-compatibility does not break.

Testing Done:
Tested that all credentials on my development server made from PyCrypto
were properly loaded, and new credentials could be saved and then loaded
again.

Unit tests pass.

Reviewed at https://reviews.reviewboard.org/r/8813/",pycryptodome cryptography,"
This change moves us over from PyCrypto fully to cryptography, updating
dependencies accordingly.",73,Crypto,Crypto,False,False
1795,s3ql/s3ql,e21825ac82d2d7e2e0c286414c27303c3a9a02a8,2019-01-14 21:49:14,cryptography,pycryptodome,"Use cryptography instead of pycrypto

pycrypto seems to be unmaintained these days
(cf. https://github.com/dlitz/pycrypto/issues/238).

Fixes: #65.",pycryptodome cryptography,"
Use cryptography instead of pycrypto",73,Crypto,Crypto,False,False
1797,secdev/scapy,c24298b9569bd8b46114882cf404b03d8682cba3,2017-01-06 12:55:27,cryptography,pycryptodome,"switch from PyCrypto to cryptography lib

Change the cryptographic library used in the following layers:
 * IPSec
 * TLS
 * Dot11

Notes:
 * Fix the WEP key in regression.uts: Should be a 40 bits key (5 ASCII)
   and 24 bits nonce for 64 bits WEP. The key was 8 ASCII => 88 bits
   in total
 * AES-GCM and AES-CMAC algorithms are now native in cryptography: add
   tests in ipsec.uts
 * cryptography only supports Python 2.6+
 * Fix the docstring for the pad method

Removed:
 * MD2 and MD4 hash algorithms for RSA in tls/crypto/pkcs1.py
 * AES-XCBC-96 not supported by cryptography.

Signed-off-by: Thomas Faivre <thomas.faivre@6wind.com>",pycryptodome cryptography,"
switch from PyCrypto to cryptography lib",73,Crypto,Crypto,False,False
1800,thinkst/opencanary,0382ac095a003d08fbdc8d2d62057461005b2752,2019-02-09 09:10:33,cryptography,pycryptodome,"Updated from pycrypto to cryptography

I was getting errors with Python 3 and Twisted 18 trying to generate RSA
keys with pycrypto. As pycrypto is not being actively developed anymore
last updated in October 2013 https://pypi.org/project/pycrypto/#history
I’ve switched to https://pypi.org/project/cryptography/ for generating
SSH keys.

This also fixes issue #28 ""3: couldn't match all kex parts"" error

After many false starts and banging my had against a wall for a while I
found that; the ""3: couldn't match all kex parts"" error (at least in our
case) was being generated because we were setting the keys as strings
but it was expecting them as bytes.

I also found that conch ssh can't handle PKCS8 formatted keys which
I was initally using. But it seems happy with TraditionalOpenSSL
(a.k.a PKCS1)",pycryptodome cryptography,"
Updated from pycrypto to cryptography",73,Crypto,Crypto,False,False
1804,twisted/twisted,e31995c9894c04b916191913107943caef1f48e8,2016-02-06 17:06:07,cryptography,pycryptodome,"Merge modern-cryptography-7413-3: Port Conch from PyCrypto to Cryptography.

Author: adiroiban, mithrandi
Reviewer: glyph
Fixes: #7413

This should make it much easier and faster to use Conch on PyPy, as well
as reducing Twisted's cryptography-related dependency count by one.

git-svn-id: svn://svn.twistedmatrix.com/svn/Twisted/trunk@46746 bbbe8e31-12d6-0310-92fd-ac37d47ddeeb",pycryptodome cryptography,"
Merge modern-cryptography-7413-3: Port Conch from PyCrypto to Cryptography.",73,Crypto,Crypto,False,False
1806,vertexproject/synapse,9e75c662162ff07a91d85f3b17f42c1cf99ef833,2015-12-28 21:23:41,cryptography,pycryptodome,removed pycrypto requirement and moved to cryptography.  started new unified CLI object,pycryptodome cryptography,"
removed pycrypto requirement and moved to cryptography.
started new unified CLI object",73,Crypto,Crypto,False,False
1807,Abjad/abjad,3b576bf3689dd7a619683f0977bd5651d3324ee4,2013-11-05 20:50:37,pytest,py,"Changed ""py.test"" to modern ""pytest"" systemwide.",py pytest,"
Changed ""py.test"" to modern ""pytest"" systemwide.",14,Testing,Testing,False,False
1808,PyMySQL/mysqlclient,0ce8ed205d4d7c345f42f9c7e59d699bc4e2fc68,2018-05-15 20:00:54,pytest,py,"Use pytest instead of py.test per upstream recommendation, #dropthedot

http://blog.pytest.org/2016/whats-new-in-pytest-30/
https://twitter.com/hashtag/dropthedot",py pytest,"
Use pytest instead of py.test per upstream recommendation, #dropthedot",14,Testing,Testing,False,False
1809,Thermondo/pytest-translations,eda90c9f71021a8bd6723eb0359d85b7ce222c3d,2017-11-25 13:31:58,pytest,py,"Update pytest to 3.2.5, remove stale `py` dependency

Latest `py` release deprecated a lot of stuff:
http://py.readthedocs.io/en/latest/changelog.html#changelog

Library is in maintenance mode and not recommended to be used in new code anymore:
https://github.com/pytest-dev/py",py pytest,"
Update pytest to 3.2.5, remove stale `py` dependency",14,Testing,Testing,True,True
1810,aibasel/pyperplan,0c263b9562a268f365d9658ecb2e990cfbd28809,2020-03-09 12:41:45,pytest,py,py.test -> pytest,py pytest,"
py.test  laifuhewb  pytest",14,Testing,Testing,False,True
1811,diofant/diofant,cfbf0b39190c035ba52ede0b32cbdbc39702c044,2008-10-08 15:36:03,pytest,py,"Adapts the whole testsuite to use raises and skip from pytest.py.

Nothing changes if the py.test library is available. However, if it is not
available, we can now use our own test suite and everything will just work.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>
Signed-off-by: Riccardo Gori <goriccardo@gmail.com>",py pytest,"
Adapts the whole testsuite to use raises and skip from pytest.py.",14,Testing,Testing,False,False
1812,edgedb/edgedb,0a51f660bd044007eb78c1acf3fa30420bb52e01,2013-05-18 00:23:34,pytest,py,tests: Use pytest instead of legacy py.test,py pytest,"
tests: Use pytest instead of legacy py.test",14,Testing,Testing,False,False
1817,pytest-dev/pytest,a698465487a9cd92e8223d7f9be0e7710272f8ca,2010-11-17 21:12:16,pytest,py,"streamline docs, especially use ""import pytest"" and ""pytest.*"" in python code examples instead of ""import py"" and ""py.test.*"".",py pytest,"
streamline docs, especially use ""import pytest"" and ""pytest.*"" in python code examples instead of ""import py"" and ""py.test.*"".",14,Testing,Testing,True,True
1820,translate/translate,ce7e47e1372af1bcd5063f06f7526f71a1d11678,2013-05-22 10:43:12,pytest,py,"Don’t use the old py.test module name

Module name has been renamed to pytest for a while now, use the new name
consistently.",py pytest,"
Don’t use the old py.test module name",14,Testing,Testing,False,False
1821,Abjad/abjad,3b576bf3689dd7a619683f0977bd5651d3324ee4,2013-11-05 20:50:37,pytest,py.test,"Changed ""py.test"" to modern ""pytest"" systemwide.",py.test pytest,"
Changed ""py.test"" to modern ""pytest"" systemwide.",35,Testing,Testing,False,False
1823,IdentityPython/pysaml2,124376b3a707edf354fcc2e7311a86af864cf647,2019-07-08 18:14:54,pytest,py.test,"Fix tests to be compatible with latest pytest

Signed-off-by: Ivan Kanakarakis <ivan.kanak@gmail.com>",py.test pytest,"
Fix tests to be compatible with latest pytest",35,Testing,Testing,False,False
1825,PyMySQL/mysqlclient,0ce8ed205d4d7c345f42f9c7e59d699bc4e2fc68,2018-05-15 20:00:54,pytest,py.test,"Use pytest instead of py.test per upstream recommendation, #dropthedot

http://blog.pytest.org/2016/whats-new-in-pytest-30/
https://twitter.com/hashtag/dropthedot",py.test pytest,"
Use pytest instead of py.test per upstream recommendation, #dropthedot",35,Testing,Testing,False,False
1826,Thermondo/pytest-translations,eda90c9f71021a8bd6723eb0359d85b7ce222c3d,2017-11-25 13:31:58,pytest,py.test,"Update pytest to 3.2.5, remove stale `py` dependency

Latest `py` release deprecated a lot of stuff:
http://py.readthedocs.io/en/latest/changelog.html#changelog

Library is in maintenance mode and not recommended to be used in new code anymore:
https://github.com/pytest-dev/py",py.test pytest,"
Update pytest to 3.2.5, remove stale `py` dependency",35,Testing,Testing,True,False
1827,aibasel/pyperplan,4c831be7cc73d48c3c3d38cf354807928047b84b,2020-03-09 11:02:49,pytest,py.test,Fix LM-Cut tests.,py.test pytest,"
Fix LM-Cut tests.",35,Testing,Testing,False,False
1831,copier-org/copier,9bd94005800454eb83dc8fdc08c7fedad980f9ac,2020-08-08 15:27:56,pytest,py.test,"Windows fixes

- Ignore errors when executing `shutil.rmtree()`, because it seems like it's common to fail when deleting git repos on Windows, and since these are temp files, we don't really care that much there's garbage left. Any good OS should clean the temp folders automatically.
- Always find Jinja templates in `PosixPath` mode.
- Ignore `OSError` when trying to enter a possibly git root directory. This is yielded by Windows when the path is a URL and we don't really care about it.
- Fix some tests with non-windows hardcoded stuff.
- Fix a test that was using a Bash script. Modified to be Python, which should work fine cross-system.
- Remove external python dependencies (yaml, plumbum) from test task/migration files. These are available on Linux because it gets the python env from the venv, but on Windows, it uses the main python interpreter and breaks. After all, that's not very important here.
- Do not modify EOL in CI.
- Use python executable in tests instead of python3.
- Update pre-commit versions to include https://github.com/pre-commit/pre-commit-hooks/pull/509.
- Disable autorebasing.
- Disable pre-commit on CI on Windows.
- Require python 3.8 on Windows, where `tempfile` supports autoremoving directories with read-only files.",py.test pytest,"
- Fix some tests with non-windows hardcoded stuff.",35,Testing,Testing,False,False
1833,diofant/diofant,cfbf0b39190c035ba52ede0b32cbdbc39702c044,2008-10-08 15:36:03,pytest,py.test,"Adapts the whole testsuite to use raises and skip from pytest.py.

Nothing changes if the py.test library is available. However, if it is not
available, we can now use our own test suite and everything will just work.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>
Signed-off-by: Riccardo Gori <goriccardo@gmail.com>",py.test pytest,"
Nothing changes if the py.test library is available.
However, if it is not
Adapts the whole testsuite to use raises and skip from pytest.py.",35,Testing,Testing,False,False
1834,edgedb/edgedb,0a51f660bd044007eb78c1acf3fa30420bb52e01,2013-05-18 00:23:34,pytest,py.test,tests: Use pytest instead of legacy py.test,py.test pytest,"
tests: Use pytest instead of legacy py.test",35,Testing,Testing,False,False
1836,inducer/pycuda,9a3bacb5ddd2e25ef2317d191350ea0279a8c180,2018-02-27 06:31:12,pytest,py.test,Fix pytest script-based test invocation,py.test pytest,"
Fix pytest script-based test invocation",35,Testing,Testing,False,False
1838,internetarchive/openlibrary,2c1bccb515154d659e54ab42a84017493dbf0b62,2018-08-23 11:43:02,pytest,py.test,deal with remaining pytest warnings,py.test pytest,"
deal with remaining pytest warnings",35,Testing,Testing,False,False
1839,ionrock/cachecontrol,93cc8523298f8615154e0e6251388f50a0f046fe,2013-06-16 22:30:47,pytest,py.test,Update tests. Switched webtest for CherryPy. Fixes for Requests > 1.x.,py.test pytest,"
Update tests.
Switched webtest for CherryPy.",35,Testing,Testing,False,False
1840,jasonlaska/skggm,e939ddf59881a1d88df19d2797af45df8ab770b5,2016-06-11 23:25:50,pytest,py.test,Fix tests,py.test pytest,"
Fix tests",35,Testing,Testing,False,False
1849,pytest-dev/pytest,a698465487a9cd92e8223d7f9be0e7710272f8ca,2010-11-17 21:12:16,pytest,py.test,"streamline docs, especially use ""import pytest"" and ""pytest.*"" in python code examples instead of ""import py"" and ""py.test.*"".",py.test pytest,"
streamline docs, especially use ""import pytest"" and ""pytest.*"" in python code examples instead of ""import py"" and ""py.test.*"".",35,Testing,Testing,True,False
1855,translate/translate,ce7e47e1372af1bcd5063f06f7526f71a1d11678,2013-05-22 10:43:12,pytest,py.test,"Don’t use the old py.test module name

Module name has been renamed to pytest for a while now, use the new name
consistently.",py.test pytest,"
Don’t use the old py.test module name
Module name has been renamed to pytest for a while now, use the new name
consistently.",35,Testing,Testing,False,False
1859,Chavithra/degiro-connector,19c3ce79ead080fc317deae7232f0606e704d353,2020-11-07 20:36:35,orjson,json,import orjson instead of json,json orjson,"
import orjson instead of json",10,Serialization,Serialization,False,False
1861,Rhinik/vkquick,74d4dbf4645958ab0970f7b4d3fd0b729e9a39af,2020-12-24 18:05:25,orjson,json,Moved on customizable json parsers,json orjson,"
Moved on customizable json parsers",10,Serialization,Serialization,False,False
1862,StackStorm/st2,9bb97394fbd6891ddcfc6b94e0efc337ebd0921a,2021-02-20 21:26:44,orjson,json,Update more code to use more efficient json encode / decode library.,json orjson,"
Update more code to use more efficient json encode / decode library.",10,Serialization,Serialization,False,False
1864,eversum/galacteek,fb91cca1ded3c4dbca86987ea97996875dbe84a5,2020-09-03 20:58:26,orjson,json,"Persist authenticated peers in a DAG (network graph)

* Use orjson instead of json as much as possible

* Detect timeouts more precisely when listing unixfs folders

* The network DAG persists information about peers/DIDs after
DID authentication",json orjson,"
* Use orjson instead of json as much as possible",10,Serialization,Serialization,False,False
1865,hsahovic/poke-env,a336a7221089537ef724aa1d15bb58d1a81cb69d,2020-11-17 00:14:10,orjson,json,Use orjson for json deserialization,json orjson,"
Use orjson for json deserialization",10,Serialization,Serialization,False,False
1866,sumeshi/evtx2es,d9abe266045b2309b3918587916a657ee976e0ea,2020-12-18 20:12:58,orjson,json,feat: change json library to orjson,json orjson,"
feat: change json library to orjson",10,Serialization,Serialization,False,False
1867,terraform-compliance/cli,68e581e96eb56f471be7e44045b3a5aba942a310,2021-05-12 10:31:59,orjson,json,"Performance upgrade on JSON entities (#479)

* Changed the way how we parse JSON entities for speeding up (gained 20x performance on some use cases)

* Updated CHANGELOG

Co-authored-by: Kaan Katırcıoğlu <32440802+Kudbettin@users.noreply.github.com>",json orjson,"
Performance upgrade on JSON entities (#479)",10,Serialization,Serialization,False,False
1870,MDAnalysis/mdanalysis,232ee952219d4d931b3b054c49c303ce23ab0430,2015-10-25 17:32:22,setuptools,unittest,"Convert XYZ-format to be tested with new test-class

The XYZ Reader/Writer is now extensivly tested with the new base test
class for reader and writers. It also serves as an example how to add
format specific tests to these new classes. As a bonus the coverage of
the XYZ coordinate module is increased.",unittest setuptools,"
Convert XYZ-format to be tested with new test-class",3,Testing,Testing,False,False
1871,panoptes/POCS,14400bdcbc173b25b15c3cd952ebbfae446b5fbb,2020-06-01 03:04:50,setuptools,unittest,"Docker into develop 02 (#951)

* Dockerize

This will merge all the docker components into a new branch in the main repo. As part of milestone 0.7 these items will be cleaned up as a step towards making the docker version the default (i.e. `develop`) version for milestone 0.8.

This is being merged now because there are too many changes within one PR and it will be better to have new PRs that branch off this `docker` branch. This will also allow for installs on new units from the `panoptes` user rather than my personal branches.

* Docker branch upstream merge - WIP (#911)

Keeping `docker` in line with `develop`.

* Update env_file

Adding local user id

* Fixing power entry (#928)

* Minor fixes

* * Excplit teardown of camera for simulator_sdk so we can remove from assigned list. Note that this should ideally be happening by the `__del__` of the `AbstractSDCCamera` but is not getting called.

* Fixtures scopes at function level. Not sure what this will break.

* Adding empty `obstructions` for location config.

* Adding empty `obstructions` for location config.

* Try to download the IERS table before starting travis test

* Remove mongo

* Download IERS

* Core
* Explicitly cast free_space boolean

Camera
* Pass the config_port to the subcomponents
* Allow for a default string representation (needed to help debug object before it has fully initialized)

Debug logging

* * Default str representation for camera subcomponents that haven't been fully initialized.
* Logging statements for debug (will be removed).

* test_pocs

* Updating all the POCSTIME to be more current.
* Lots of debugging for now (I'm about to switch to desktop and want to keep these in)

* Ensure seconds quantity for exptime

* Test POCS

* Update POCSTIMEs and targets.
* Make the used observation a fixture.

* Small log change

* Ensure a float

* Testing should default to testing pointing

* Removing PR debugging.

* Removing PR debugging.

* Changes from #927 (@zacharyt20)

* Changes from #934 (@zacharyt20)

* Ignore vscode project files

* Coverage tests

* Coverage tests (and a few `no cover` cheats)

* PanBase cleanup

* Config server always returns a `None` so skip exception checking here.
* Coverage tests

* Move social messaging test to panoptes-utils

* Updates to linking pretty image to match panoptes-utils

* Make pretty in pocs shell matched to `panoptes-utils`

* Adding `responses` library.

* Removing references to mongo

* Better dockerignore

* Small changes to logging statements for consistency and use with new logger.

* Updating requirements

* Use new version of `panoptes-utils`

* Adding `responses` to main required section. `pip-tools` can't handle
the `extras_require` section so nothing from those can make their way
into `requirements.txt`, which is a bit frustrating.

* Requirements changes
* Updating pyzmq to latest
* Removing tweepy

* Removing `dateparser` and `pyzmq`

* Removing `photutils` and `python-dateutil`.
Other cleanup to setup.py

* Fixing calls to the root logger

* Getting rid of logger calls.

* Fixing caplog for pytest with new logging.

* **BREAKING CHANGE**

Changing `get_root_logger` to the more intuitive `get_logger`

* Logger Fixes

* Switches to `get_logger`
* Better logger config
* Remove old log config file

* Fixing focuser calls to mask_saturated for updates panoptes-utils

* Don't pass logger to write_fits

* Adding custom formatter for console logger so there are even widths for columns

* Singleton console formatter so column widths are retained across imports

* Change some log levels to trace for setup items in testing

* * Handle missing thumbnail creation.
* Smarter wait for cooling cameras so tests don't take as long.
* Better log format for cooling cameras.

* Logger:

* Better singleton
* Better work with pytest
* Moved more thngs to trace level

Filterwheel:

* Increased tolerances on some tests for some reason. :confused:

* Breaking some logger coverage for now

* pep8
    * Ignore a few minor violations with new pycodestyle
    * fix some errors

* Requirements:

* Adding all the modules to the `required` section in `setup.py`. This means that `pip-tools` will generate a full and complete `requirements.txt` but is otherwise annoying.
    * Helps to fix some depedency issues in the docker image.

* Removing logger coverage for now

* Allow camera time to properly cool

* Some some debug messages when camera not ready.

* Increase default temperature_tolerance for ZWO cameras (#959)

* override default value

* Updating to `panoptes-utils==0.2.2` to fix testing issues.

* Fix paths to testing script

* Change GH action name

* Update version number.

* Updates to readme

* Auto fix format errors on changelog

* Updates to README and CHANGELOG

* Increase log retention policy

* Changing relevant `super()` calls.

* Remove unused script

* Changelog updates

* Move pdf manuals to resources directory

* Build documentation correctly

* Update readthedocs config

* Split the AAG weather docker containers to separate compose file.

* Fix `super` calls

* Update the install script

* Use `panoptes-exp`
* Remove the branch option
* Only link env file if one doesn't exist
* Newer version of `docker-compose`
* List of docker images updated

* Changing log levels (lots of output)

* * Timeout the GitHub Actions at 60 minutes (default is 6 hours!)
* Fix missing param

* * Don't unpark the mount in the `ready` state but wait until `slewing`.
* Better machine logic logging
* Small cleanup

* Generate all new documentation.

* More fixes for documentation

* Documentation fixes

* Fix tests with regard to parking change

* Change level colors for logger

* Fix url in setup
Fix some docs

* Trying to import cooling_enabled test.

* Don't capture log output

* Small test fixes

* Revert the travis test option

* Slight delay to killing of server so next one can start

* * Update `panoptes-utils`

* Reduce test verbose output

* f-string for vesion (why not?)

* Add back test verbosity (didn't help with GH Actions output)

* Die on first error

* Save log files in github if tests fail.

* Use local path for artifacts.

* Fix GH Actions path

* More trying to fix GH Action path

* Moving coverage upload to gh actions.

* Trying to figure out GHA artifacts

* Apparently need a name

* Fix pipes

* Add back the `failure`

* More GHA test

* GHA tests

* Docker container not a tty

* Try local logs

* More and more and more testing of GHA

* Remove test for testing tests

* Better name for job step

* Change step name for GHA

* Travis consistently fails on this test so attempting to get some debug info.

* Combine covergae in GHA

* z

* Make `coverage` command available.

* Always create log file artifact, only do coverage on success

* Camera tests will always wait for camera to be ready.

* Increase time allowed to get ready and log

* Identify which camera

* Try different wait for camers

* Adding ridiculous debugging.

* Try to debug random temperature spikes

* Better debug logging

* Decrease random temp variance on simulator.

* Just trace the temp instead of debug

* Coverage is combined at the time it is run.

* Lower temp var for simulator

* Set trace log level on CI testing.

* List files to see coverage

* Get some log output

* Use the logger from the camera.

* Compress console log file

* Also list hidden files on success (looking for travis file)

* Add some echoes

* Removing teardown

* Try explicit delete

* Trying to get more debug info on stalling tests

* Only log if have assigned cameras

* Updating panoptes-utils

* Send coverage reports from inside the testing file.

* Correct expression

* I thought I had the `or` working earlier but don't want to spend any more time.

* Coverage

* Explicit GH actions tests to find coverage

* * Opinionated logger forces handlers.
* No `SystemExit` on missig config items.
* Smarter filterwheel timeouts.
* Cleanup `camera` fixture so it skips hardware tests better.
* Adding a `testing` level for logger for differentiating between test output.

* Minor cleanup

* Comment about weird code for removing `simulator_sdk`

* Cheating with not testing caplog

* * Force logger handler singletons by id again. Seems like `loguru` should have a mechanism to track by name.

* Fix coverage artifact

* * Remove ci env and list before upload.

* Don't upload coverage file.

* Try to explictyly upload coverage file

* Show coverage report before uploading.

* Coverage report from test script.

* Test and coverage cleanup.

* * Add coverage upload action to pythontest GHA.
* Consolidate setup files into `setup.cfg`. Also rearrage `setup.cfg`.
    * Remove `.pycodestyle.cfg`
    * Remove `.coveragerc`

* Add to changelog.

* Better step names for GHA

* Fix codestyle test to point to config.

* Rename codecov file to be their selfish top-level name.

* More in changelog.

* * Default the install to the `panoptes` user intead of `$USER`.
* Don't get PAWS repo.

* Remove simple weather script reader and `pandas` dependency (moved to branch in `aag-weather`)

* Consistent script names

* Simplify env file

* Add `$PANUSER` to env file.

* * Revert back to installing with the `$USER`, which makes esnse for the host system.
* Remove `$LOCAL_USER_ID` from env file.

* Install script
* Don't install PAWS.
* Don't use env file (for now?).

Env file
* Move out of `docker` to root of project.

Config file cleanup
* Rearrange.
* Remove weather items.
* Remove social items.

* Install script

* Prompt for PANDIR.

* Remove stale comment

* Clarify misleading env var value

* Remove stale comment

* Clean up coverage and test files

* Use `PanLogger` from the utils.

* Manually addy the panoptes-utils github to requirements for now.

* Fix coverage pointing location.

* Add coverage variables.

* Make sure to add `latest` image.

* Update panoptes-utils

* Update labels and build for docker

* Small cleanups.

* Fixing requirements.

* * Supporting tagged Dockerfile so we can create a `develop` version (TODO).
* Adjusting test so that it builds docker image. Hopefully won't be too slow.

* Switch to panoptes user.

* Update Dockerfile.

* Don't link conf_files. Need a better solution.

* Bringing `PanLogger` (dynamic padding and handler info) from `panoptes-utils`.

* Cleanup of files and ignore files.

* Try to run the GHA tests with GHA user.

* Updates to test and config to try and make more like working panoptes-utils.

* Bumping panoptes-utils requirements

* Removing unnecessary comments.

* Updating test scripts for automated testing inside a container, either local or on CI service.

* Allow the CI service to run as its local user.

* Try GHA testing without local user id.

* Trying to solve log file permissions problem on GHA.

* Can't take time to fix this test as it might be removed.

* * Adding setuptools-scm
* Updating requirements.txt

* Ignore generated version file

* Small docker changes

* PyScaffold migration commit.

* Custom edits to the pyscaffold merge.

* **Breaking**

* Changing pocs namespace to fit within panoptes.

* Fixing tests.

* More big chnages for pyscaffold. Getting the docs and the tests working.

* Add static images

* More documentation updates and fixes.

Some filterwheel tolerance fixes.

* * Changing logging namespace.
* Updating contributing guide and other docs.

* * Cleaing up docker.
* Changing logger namespace back to original.

* * Add `is_sleeping` property.
* Move `parse_lines` into function as a camera utility.
* Using panoptes-utils serializers.

* * Fixing `parse_config` for gphoto2
* Added `is_sleeping` for pocs.
* Dockerfile install local via pip.

* * Adding items from #970.
* Using `panoptes.utils.time.wait_for_events`.
* Install instructions in the README.

* Readme cleanup.

* Readme cleanup.

* Test cleanup.

* * Making proper abstractmethods.
* Documentation updates where found.
* Many log and f-string fixes.
* `pocs.config_port` property available publicly.
* horizon check for state happens directly in `run`.
* `sleep` renamed to `wait`.
* dome status changed to dict.

* Changelog, quick test fixes.

* Fix bad import.

* Fix bad import.

* Install script

* Don't start time service on linux
* Don't write existing env vars to zshrc
* Don't fetch origin if repo already exists
* Always pull docker images
* Don't use sudo for pulling images

* Docker updates to use testing.

* Fixing GHA .

* Update contributing guide.

* Changelog updates.

* Changelog updates.

* Adding an update warning.",unittest setuptools,"
* Change some log levels to trace for setup items in testing",3,Testing,Testing,False,False
1874,BjornFJohansson/pydna,e6ebffb2b893195af5ee3e72b200489a77a55c7d,2016-11-14 20:54:32,pytest,nose,migrate from nose to pytest,nose pytest,"
migrate from nose to pytest",156,Testing,Testing,False,False
1876,CenterForOpenScience/osf.io,f8e1160092fdd8380a4cf1adeef28ff3305f4c06,2017-05-23 19:03:14,pytest,nose,"restructured imports, converted nose tests to pytest, grouped tests in application_detail, added an assert function to api_tests/utils",nose pytest,"
restructured imports, converted nose tests to pytest, grouped tests in application_detail, added an assert function to api_tests/utils",156,Testing,Testing,False,False
1877,ClusterLabs/crmsh,c9e2991fe05b92569f6c47030a837dc38db61895,2020-01-17 08:58:44,pytest,nose,Low: unittest: replace nose with pytest,nose pytest,"
Low: unittest: replace nose with pytest",156,Testing,Testing,False,False
1879,DataDog/datadogpy,7546f734f8c5021192705164370ea054bd0c4cfa,2019-09-20 09:17:29,pytest,nose,"Replace nose by pytest (#427)

Nose is not maintained for a few years now; it's not a really good idea to
stick to it at this point.

Uses pytest instead to run tests.",nose pytest,"
Replace nose by pytest (#427)",156,Testing,Testing,False,False
1883,Galvant/InstrumentKit,bb4ab2152bcf3a5881100af06fd9afb75618cfc9,2018-03-24 14:52:24,pytest,nose,"Nose to pytest transition (#183)

* Use mock from the standard lib if available.

* Migrate nose raises to pytest.raises.

This touches a lot of code because pytest.raises
is used in a context manager, so indentation
has to be changed.

Replacement happened with regex from
@raises\((.*)\) to @pytest.mark.xfail(raises=$1)
then from @pytest.mark.xfail\(raises=(.*)\)\ndef(.*)
to def$2\n    with pytest.raises($1):
then manual correction of indentation.

* Replace nose eq_ by assert, remove nottest.

* Move CI from nosetests to pytest, adapt docs.

Pin astroid version, too, to avoid wrong errors on CI.

* Fix some introduced errors flagged by pylint.

* Specify minimum pyserial requirement (see #58).",nose pytest,"
* Migrate nose raises to pytest.raises.",156,Testing,Testing,False,False
1884,HERA-Team/pyuvdata,104575d954cdbe37d4e249adeecb4ba76c2a6e81,2019-05-22 18:57:04,pytest,nose,beamfits nose --> pytest,nose pytest,"
beamfits nose  laifuhewb  pytest",156,Testing,Testing,False,False
1885,LLNL/spack,7ea10e768ee1a7deab98ae538d916bbeeb0346b8,2016-12-29 15:48:48,pytest,nose,"unit tests: replace nose with pytest  (#2502)

* Porting: substitute nose with ytest

This huge commit substitutes nose with pytest as a testing system. Things done here:

* deleted external/nose as it is no longer used
* moved mock resources in their own directory 'test/mock/'
* ported two tests (cmd/find, build_system) to pytest native syntax as an example
* build_environment, log: used monkeypatch instead of try/catch
* moved global mocking of fetch_cache to an auto-used fixture
* moved global mocking from test/__init__.py to conftest.py
* made `spack test` a wrapper around pytest
* run-unit-tests: avoid running python 2.6 tests under coverage to speed them up
* use `pytest --cov` instead of coverage run to cut down testing time

* mock/packages_test: moved mock yaml configuration to files instead of leaving it in the code as string literals

* concretize.py: ported tests to native pytest, reverted multiprocessing in pytest.ini as it was creating the wrong report for coveralls

* conftest.py, fixtures: added docstrings

* concretize_preferences.py: uses fixtures instead of subclassing MockPackagesTest

* directory_layout.py: uses fixtures instead of subclassing MockPackagesTest

* install.py: uses fixtures instead of subclassing MockPackagesTest

* optional_deps.py: uses fixtures instead of subclassing MockPackagesTest

optional_deps.py: uses fixtures instead of subclassing MockPackagesTest

* packages.py: uses fixtures instead of subclassing MockPackagesTest

* provider_index.py: uses fixtures instead of subclassing MockPackagesTest

* spec_yaml.py: uses fixtures instead of subclassing MockPackagesTest

* multimethod.py: uses fixtures instead of subclassing MockPackagesTest

* install.py: now uses mock_archive_url

* git_fetch.py: uses fixtures instead of subclassing MockPackagesTest

* hg_fetch.py: uses fixtures instead of subclassing MockPackagesTest

* svn_fetch.py, mirror.py: uses fixtures instead of subclassing MockPackagesTest
repo.py: deleted

* test_compiler_cmd.py: uses fixtures instead of subclassing MockPackagesTest

* cmd/module.py, cmd/uninstall.py: uses fixtures instead of subclassing MockDatabase

* database.py: uses fixtures instead of subclassing MockDatabase, removed mock/database

* pytest: uncluttering fixture implementations

* database: changing the scope to 'module'

* config.py: uses fixtures instead of subclassing MockPackagesTest

* spec_dag.py, spec_semantics.py: uses fixtures instead of subclassing MockPackagesTest

* stage.py: uses fixtures instead of subclassing MockPackagesTest. Removed mock directory

* pytest: added docstrings to all the fixtures

* pytest: final cleanup

* build_system_guess.py: fixed naming and docstrings as suggested by @scheibelp

* spec_syntax.py: added expected failure on parsing multiple specs closes #1976

* Add pytest and pytest-cov to Spack externals.

* Make `spack flake8` ignore externals.

* run-unit-tests runs spack test and not pytest.

* Remove all the special stuff for `spack test`

- Remove `conftest.py` magic and all the special case stuff in `bin/spack`

- Spack commands can optionally take unknown arguments, if they want to
  handle them.

- `spack test` is now a command like the others.

- `spack test` now just delegates its arguments to `pytest`, but it does
  it by receiving unknown arguments and NOT taking an explicit
  help argument.

* Fix error in fixtures.

* Improve `spack test` command a bit.

- Now supports an approximation of the old simple interface
- Also supports full pytest options if you want them.

* Use external coverage instead of pytest-cov

* Make coverage use parallel-mode.

* change __init__.py docs to include pytest",nose pytest,"
unit tests: replace nose with pytest  (#2502)",156,Testing,Testing,False,False
1889,MasterOdin/pylint_runner,2c040e8a8fdd5e92c8e9e0ce08b38a45d465b0e0,2020-06-04 02:52:47,pytest,nose,"move to pytest from nose for testing

Signed-off-by: Matthew Peveler <matt.peveler@gmail.com>",nose pytest,"
move to pytest from nose for testing",156,Testing,Testing,False,False
1893,ReproNim/niceman,cfd515aab0594fef350e576c5b071740721e9711,2016-11-22 18:39:10,pytest,nose,Switched to pytest from nose,nose pytest,"
Switched to pytest from nose",156,Testing,Testing,False,False
1894,SALib/SALib,c0b6f81e01ac7ee6eb0e7ef9c2092cb67ac3d48a,2019-03-14 11:49:44,pytest,nose,"Removed nose dependency from tests, replaced with pytest - fix #212",nose pytest,"
Removed nose dependency from tests, replaced with pytest - fix #212",156,Testing,Testing,False,False
1895,StellarCN/py-stellar-base,89b242ec6945896a4eff96f5eb0ba515cec8bd17,2018-04-26 13:09:32,pytest,nose,"local stellar infrastructure for testing (#106)

- added docker-based stellar infrastructure
- changed testing framework from nose to pytest
- updated tests to be pytest compatible
- changed builder to work with custom network
- updated travis build to use new testing infrastructure
- added makefile
- amended package setup
- updated dependencies",nose pytest,"
- added docker-based stellar infrastructure
- changed testing framework from nose to pytest
- updated tests to be pytest compatible",156,Testing,Testing,False,False
1896,StingraySoftware/stingray,e58640d6e2b9df63fb6f559e1a59cd3f51377e42,2016-06-01 07:50:55,pytest,nose,Use pytest.raises instead of nose,nose pytest,"
Use pytest.raises instead of nose",156,Testing,Testing,False,False
1897,Thor77/TeamspeakStats,9891b1d785bbe36f4a2a837cfb9304855a0acb6d,2016-05-09 18:09:16,pytest,nose,use py.test instead of nose for testing,nose pytest,"
use py.test instead of nose for testing",156,Testing,Testing,False,False
1899,ajdawson/eofs,ea0cdb526df977cd0db80a6a6c652d5939173568,2017-10-12 10:25:42,pytest,nose,"Modernize the testing components

The main switch is from nose to pytest for the test framework. In
addition the pep8 library is replaced with pycodestyle.",nose pytest,"
The main switch is from nose to pytest for the test framework.
In",156,Testing,Testing,False,False
1900,ajdawson/windspharm,30e7934a9b4d186d59d7f879af8347f2153abc99,2017-12-21 12:00:23,pytest,nose,Switch from nose to pytest,nose pytest,"
Switch from nose to pytest",156,Testing,Testing,False,False
1901,alkaline-ml/pmdarima,6a45bb68c6531f4f0123bca61c5f472e809072ea,2018-09-21 13:58:33,pytest,nose,CI: Replace nose calls with pytest,nose pytest,"
CI: Replace nose calls with pytest",156,Testing,Testing,False,False
1903,amzn/ion-python,0642c6b2635f43310312e5892cf6e8ba3efd72a1,2016-05-08 00:50:26,pytest,nose,"Switches testing framework from nose to Py.test.

Nose is effectively deprecated.
Py.test supports better parametrization and dynamic testing (useful for
vectors).

Changes Nose @raises decorator idiom to Py.test's raises context manager
idiom.

cr 5235416",nose pytest,"
Switches testing framework from nose to Py.test.",156,Testing,Testing,False,False
1904,ansible/ansible,cd3fdca540781d0b982e885b01f467f1601dba75,2017-01-11 20:34:59,pytest,nose,"Switch tests to pytest and ansible-test.

- Replace nose usage with pytest.
- Remove legacy Shippable integration.sh.
- Update Makefile to use pytest and ansible-test.
- Convert most yield unit tests to pytest parametrize.",nose pytest,"
- Replace nose usage with pytest.",156,Testing,Testing,False,False
1905,apple/coremltools,39b1ec01e74ccc7dfea303cf31135f57038f0399,2017-11-17 06:58:29,pytest,nose,Upgraded from nose to pytest.,nose pytest,"
Upgraded from nose to pytest.",156,Testing,Testing,False,False
1907,bashtage/arch,d286593cc982c1d5a382035443c3e39ee0a77032,2016-08-03 16:22:38,pytest,nose,"TST: Switch to using py.test

Switch form nose to py.test",nose pytest,"
Switch form nose to py.test",156,Testing,Testing,False,False
1908,bbangert/beaker,cfc9bf8aaae7d0de1bfb6b51e160561da9af5868,2020-07-22 22:03:20,pytest,nose,"Port testing from nose to pytest.

Fixes #188",nose pytest,"
Port testing from nose to pytest.",156,Testing,Testing,False,False
1910,biocore/scikit-bio,006e3b255fbefce2ee64fe636bba33b95c2b00c5,2018-09-21 22:54:35,pytest,nose,"TST: test runner is now pytest (❌  👃) (#1624)

Testing is done with pytest instead of nose

Use `python setup.py test` or `make test`.

Co-authored-by: Matthew Dillon <matthewrdillon@gmail.com>",nose pytest,"
Testing is done with pytest instead of nose",156,Testing,Testing,False,False
1912,bodono/scs-python,355da107086c2f576cbe6dfa7ef56361801f119c,2021-05-18 11:48:06,pytest,nose,"Switch from nosetests to pytest (#37)

* minimal adaptation to make test suite runnable with pytest

* migrate from nose.tools.assert_almost_equals to numpy.testing.assert_almost_equal

* translate nose.tools.assert_raises to pytest.raises

* replace remaining invocations/mentions of nose with pytest

* basic parametrization of test_scs_basic.py

* replace single invocation of check_failure in test_scs_basic.py

* remove redundant function from test_scs_linsys.py

* basic parametrization of test_scs_rand.py

* basic parametrization of test_scs_sdp.py

* add ipynb_checkpoints to .gitignore

* migrate away from deprecated scipy.randn

* turn solve_random_cone_prob.py into test

* pull out common parameters in test_solve_random_cone_prob.py

* turn off verbosity of scs.solve in test suite",nose pytest,"
* migrate from nose.tools.assert_almost_equals to numpy.testing.assert_almost_equal",156,Testing,Testing,False,False
1914,cdent/paste,0604a3a5fd1a64098cbdaf44bbb76b805c5233c0,2016-03-08 20:13:35,pytest,nose,Switch from nose to pytest,nose pytest,"
Switch from nose to pytest",156,Testing,Testing,False,False
1916,certbot/certbot,48173ed1cb075b73ac1b913cd3f3f872ba700c03,2017-12-01 18:59:55,pytest,nose,"Switch from nose to pytest (#5282)

* Use pipstrap to install a good version of pip

* Use pytest in cb-auto tests

* Remove nose usage in auto_test.py

* remove nose dev dep

* use pytest in test_tests

* Use pytest in tox

* Update dev dependency pinnings

* remove nose multiprocess lines

* Use pytest for coverage

* Use older py and pytest for old python versions

* Add test for Error.__str__

* pin pytest in oldest test

* Fix tests for DNS-DO plugin on py26

* Work around bug for Python 3.3

* Clarify dockerfile comments",nose pytest,"
Switch from nose to pytest (#5282)",156,Testing,Testing,False,False
1919,cihologramas/pyoptools,fdf3b8b1a38ca0006c9155c2923d6bf7ba9f8508,2019-11-11 05:01:59,pytest,nose,replace nose by pytest,nose pytest,"
replace nose by pytest",156,Testing,Testing,False,False
1920,cloudtools/stacker,7f98feb20189c55abab6441c14567f5f88ef566e,2019-03-20 04:06:41,pytest,nose,"Change test runner from nose to py.test  (#714)

* Change test runner from nose to py.test

Nose has been deprecated by its authors. py.test is very active, widely
used, and has many useful features for running and writing tests.

Changing the tests themselves away from unittest-style is a different
step that must be taken later. This commit only changes the tooling.

* dag: port tests to pytest

* blueprints: raw: always return absolute template paths

Additionaly, adapt tests to not depend on any fixtures in the test
directory, or on the current working directory of the test runner.

* test: disable deprecation warnings by default due to noise",nose pytest,"
Change test runner from nose to py.test  (#714)",156,Testing,Testing,False,False
1925,diyan/pywinrm,4599a89b365f066856ff5001181287149986cbaf,2013-09-01 15:03:51,pytest,nose,Tests. Switch from nose into py.test,nose pytest,"
Tests.
Switch from nose into py.test",156,Testing,Testing,False,False
1926,django-oscar/django-oscar,5c4591fa7516b82fe9dae91afd784253adc66f89,2015-05-04 16:44:20,pytest,nose,"Update tests to stop using nose specific functions

This also removes the attr() marking of tests. This can be implemented
in pytest with marking the tests with a custom marker if required.",nose pytest,"
Update tests to stop using nose specific functions",156,Testing,Testing,False,False
1932,edx/edx-ora2,d037c3391f7793d881386812dad3ded5b19ade87,2019-12-02 15:12:31,pytest,nose,Switch from nose to pytest.,nose pytest,"
Switch from nose to pytest.",156,Testing,Testing,False,False
1935,etalab/udata,05b7a880d56359e2f857cb9d0f2c553babf7aacf,2018-01-29 09:55:13,pytest,nose,Switch from nose to pytest and make almost all test pass,nose pytest,"
Switch from nose to pytest and make almost all test pass",156,Testing,Testing,False,False
1939,frictionlessdata/datapackage-py,46d6fd555cdd58f0af659559e927a20190ff43be,2016-01-15 20:01:38,pytest,nose,"[#6] Use pytest instead of nose

This makes it consistent with datapackage-py",nose pytest,"
[#6] Use pytest instead of nose",156,Testing,Testing,False,False
1940,gcovr/gcovr,8db53378b7c3521dc4cd5b4b701276c48836af90,2018-02-22 15:29:47,pytest,nose,"switch testrunner from nose to pytest

Pytest has a number of advantages over Nose:

 - it is maintained
 - it produces really helpful error reports
 - it makes tests really easy – just use ""assert""
 - it auto-captures the STDOUT of a test, including subprocesses
 - it can automatically cover subprocesses
 - it has a rich plugin ecosystem",nose pytest,"
switch testrunner from nose to pytest",156,Testing,Testing,False,False
1941,geopandas/geopandas,ab0f1d2777ea88d3f2fa0cf07948311ccac03963,2017-01-05 08:31:49,pytest,nose,TST: switch remaining nose to pytest (#380),nose pytest,"
TST: switch remaining nose to pytest (#380)",156,Testing,Testing,False,False
1946,histrio/py-couchdb,e22aec3a63e4ea8e047f1b212244ae7490b3cfdb,2021-02-23 13:16:21,pytest,nose,"Replace nose tests with pytest (#81)

* Renamed tests
* Get rid of test classes
* flake8
* admin party for travis tests
* No pypy",nose pytest,"
Replace nose tests with pytest (#81)",156,Testing,Testing,False,False
1952,jobovy/galpy,6df9cff4fdd3925e0893ca7dc5624a769d14ba95,2017-05-29 02:02:45,pytest,nose,Update all tests for switch from nose to pytest,nose pytest,"
Update all tests for switch from nose to pytest",156,Testing,Testing,False,False
1953,juhasch/PhysicalQuantities,c64b64236844ebce0de1594039ac1ad7ffecd6d1,2018-08-30 12:03:33,pytest,nose,Move from nose to pytest,nose pytest,"
Move from nose to pytest",156,Testing,Testing,False,False
1954,jupyter-server/jupyter_server,6c88b317b58bee662a5d097cf653692cddb27184,2019-12-06 21:35:53,pytest,nose,"Replace old nose tests with pytest based tests (#152)

* separate eventloop init/start from webapp init/start

* allow_none in ssl options

* add docstrings and protect the http_server property

* replace old nose tests with pytest tests

* remove old tests location

* Reapply test changes from PR 139 to fix gateway test

* decode json models on 3.5

* workaround tornado py38 compatibility issue

* use fixture for asyncio

* try with new_httpserver=True

* reset new httpserver=False

* pin nbconvert

* add fixture for tornado io_loop

* trigger build

* polish the windows 3.8 fix and handle nbconvert encoding properly

* try extending request timeout

* make patch dependent on platform

* increase request timeout in ws

* increase connection time:

* Address deprecation warnings in gateway tests

* add sleep before connecting to running kernel

* missing kernel shutdown in serverapp

* temporarily remove other kernel tests

* check that patch is applied in windoes 3.8

* stop using static method

* increase connection time

* update to versions of python appveyor

* add old tests back in

* add conda line back to appveyor

* add python 38

* Pull ipykernel from GH to fix Windows tests on 3.8

* pull ipykernel master to fix Windows 3.8 issue",nose pytest,"
Replace old nose tests with pytest based tests (#152)",156,Testing,Testing,False,False
1955,jupyter/nbconvert,498ffde82f593bc2ee6fb18a5649795d6da9470e,2017-01-23 04:29:23,pytest,nose,use pytest.mark.parameterize not yield tests from nose,nose pytest,"
use pytest.mark.parameterize not yield tests from nose",156,Testing,Testing,False,False
1957,kotfu/tomcat-manager,6ab1ae58f6e41ca733c49e1d165c8e3e0b0b2c70,2017-08-09 22:12:41,pytest,nose,switch from nose to pytest,nose pytest,"
switch from nose to pytest",156,Testing,Testing,False,False
1960,landlab/landlab,29cf12262e3e81ae9ac8d5ce8b3d28fb66ccd863,2018-07-14 22:37:04,pytest,nose,Use pytest fixtures in place of with_setup from nose.,nose pytest,"
Use pytest fixtures in place of with_setup from nose.",156,Testing,Testing,False,False
1961,linkcheck/linkchecker,39204ea0fe642f78863ae8ef381f7889e47fddd5,2012-09-29 18:28:16,pytest,nose,Use py.test skip function instead of nose.,nose pytest,"
Use py.test skip function instead of nose.",156,Testing,Testing,False,False
1962,lmfit/lmfit-py,900095dd4b1bf1364c9bd5f50262c654e9b81522,2018-10-07 13:17:54,pytest,nose,"convert tests to not rely on nose, using pytest instead where needed",nose pytest,"
convert tests to not rely on nose, using pytest instead where needed",156,Testing,Testing,False,False
1963,luispedro/mahotas,0f7bb8f028f839eb792fafe8596812ff443933c8,2020-08-13 23:52:27,pytest,nose,TST Remove all uses of nose inside actual tests,nose pytest,"
TST Remove all uses of nose inside actual tests",156,Testing,Testing,False,False
1964,lyft/confidant,3eaf9600f59ee22fa84fccc537fbaad3e6596b75,2020-01-08 21:24:05,pytest,nose,"Switch from nose to pytest (#246)

* Switch deps for pytest and move environment setup

* Update encrypted_settings_test

* Switch to pytest

* Remove Mock and PropertyMock imports

* Update requirements for py2/3 compat

* Do not import settings in tests

* Explicitly set SECRETS_BOOTSTRAP to empty string

* precommit fix

* Fix setup.cfg for pytest

* Also output coverage in term",nose pytest,"
Switch from nose to pytest (#246)",156,Testing,Testing,False,False
1966,markokr/rarfile,c8a7eb8f901adea9d7841f7c1bff71f6fc3f5c0d,2019-09-15 12:42:30,pytest,nose,"Converts test to pytest, nose is dead",nose pytest,"
Converts test to pytest, nose is dead",156,Testing,Testing,False,False
1967,matplotlib/matplotlib,a310cbad28aef395c12f62b1b18d44685907c647,2017-01-22 22:21:44,pytest,nose,MAINT replacing nose.plugin.attr with pytest.mark,nose pytest,"
MAINT replacing nose.plugin.attr with pytest.mark",156,Testing,Testing,False,False
1977,mozilla/mozregression,1731d1233674b284c74f37b4a9eec27b56178f4c,2015-06-21 09:16:51,pytest,nose,replace nose with py.test to run gui tests,nose pytest,"
replace nose with py.test to run gui tests",156,Testing,Testing,False,False
1979,mwaskom/seaborn,00ead277e3fda54ef8d0ac19af1e733444b13e74,2020-11-23 23:03:24,pytest,nose,"MAINT: Drop nose and test on python==3.9 (#2328)

* MAINT: Migrate nose to pytest

* MAINT: Migrate nose to pytest

* MAINT: Migrate nose to pytest

* MAINT: Migrate nose to pytest

* MAINT: Migrate nose to pytest

* MAINT: Migrate nose to pytest

* Modernize some tests

* MAINT: Migrate nose to pytest

* Drop nose dependency

* Improve skip parameter name

* Test on python3.9

* Declare python==3.9 support",nose pytest,"
* MAINT: Migrate nose to pytest",156,Testing,Testing,False,False
1980,nccgroup/ScoutSuite,04e7da9f02f34f2d46575334ed65e66f85fbae5e,2020-06-09 15:48:50,pytest,nose,switch from nose attr to pytest markers,nose pytest,"
switch from nose attr to pytest markers",156,Testing,Testing,False,False
1981,networkx/networkx,0a769465a0f1cf7ca40cd73560d4894c3a72f5c1,2019-10-12 16:26:31,pytest,nose,Replace nose.assert_raises with pytest.raises,nose pytest,"
Replace nose.assert_raises with pytest.raises",156,Testing,Testing,False,False
1982,nilearn/nilearn,04e96c4189eb607dac97045fd80f24f0fc69823d,2019-12-10 13:18:43,pytest,nose,"Maint: Replace nose with Pytest - 1 (Asserts, warns, raises) (#2232)

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/datasets/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/connectome/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/decomposition/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/image/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/input_data/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/plotting/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/regions/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/surface/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/decoding/tests/*

* Replaced nose.tool.assert_* with raw/Pytest asserts in nilearn/tests/*

* Replaced nose.assert_raises with pytest.raises in nilearn/connectome/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/datasets/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/decoding/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/decomposition/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/image/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/input_data/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/plotting/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/region/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/surface/tests

* Replaced nose.assert_raises with pytest.raises in nilearn/tests

* More nose replacements; removed obsolete backports & shims;

 - Renamed some functions to be test runner name agnostic.

* Replaced nose's SkipTest with pytest.skip()

* Removed compatibilty checks for obsolete Nibabel versions

* Corrected param name

* Change Nosetest references in comments to reflect it is now retired

* Replaced overlooked assert_equal with assert ==

* Updated .gitignore & Fixed a template error

* Fixed test failure due to incorrect merge conflict resolution",nose pytest,"
Maint: Replace nose with Pytest - 1 (Asserts, warns, raises) (#2232)",156,Testing,Testing,False,False
1983,nipy/nipype,6220e4005228f0facbab2d02e1a88a4eb86c2349,2016-12-09 12:23:48,pytest,nose,"changing tests: removing yield and nose library, introducing pytest parametrize, fixture, skipif, shortening a few functions",nose pytest,"
changing tests: removing yield and nose library, introducing pytest parametrize, fixture, skipif, shortening a few functions",156,Testing,Testing,False,False
1986,oVirt/vdsm,7f32cfd172af091c15e7cb9a382ac1d6c8155026,2017-08-15 06:25:25,pytest,nose,"net tests: Run functional tests using pytest

Enable the network functional tests to be run using pytest.

The existing marking and assertion of the tests have been
converted from nose to pytest.

There is no change in the unit and integration test run.

In order to run the network functional tests:
pytest -m legacy_switch network/functional
pytest -m ovs_switch network/functional

To run all functional tests except the ovsdpdk ones:
pytest -m ""not ovsdpdk_switch"" network/functional

Note: pytest needs to be installed on the system (pip install pytest).

Change-Id: I1de97fc245bd11402f52f5cc2e981314e2050b53
Signed-off-by: Edward Haas <edwardh@redhat.com>",nose pytest,"
The existing marking and assertion of the tests have been
converted from nose to pytest.",156,Testing,Testing,False,False
1988,oemof/oemof-solph,54c5d9c88609858ee90c0e20b83c945e5dce4d56,2020-07-13 10:23:03,pytest,nose,Convert tests from nose to pytest,nose pytest,"
Convert tests from nose to pytest",156,Testing,Testing,False,False
1995,plotly/plotly.py,00ace7242a0dd198dd11a278eb57e0adf643d50e,2020-02-21 00:36:19,pytest,nose,replace nose with pytest,nose pytest,"
replace nose with pytest",156,Testing,Testing,False,False
1998,psychopy/psychopy,f571e700f7368847da08b010730d176cf93aad5c,2012-04-07 19:09:19,pytest,nose,"RF TEST: completed move to pytest from nose

removed uneccesary nose functions and made a unified skip() function
in tests/utils

Signed-off-by: Jonathan Peirce <jon@peirce.org.uk>",nose pytest,"
RF TEST: completed move to pytest from nose",156,Testing,Testing,False,False
1999,pvlib/pvlib-python,55954bda5286a23a020fd6a8846d675bb46b828f,2016-07-05 16:27:48,pytest,nose,"use pytest instead of nose for automated tests (#204)

* remove module from singlediode

* remove unused partial

* use pytest in solarposition and pvsystem

* remove all nose imports and make tests pass

* add nose to envs for pandas

* add requires_numba decorator

* add pytest-runner to setup

* use pytest on appveyor

* update whatsnew

* clean up rebase mistake

* replace xfails with pytest.raises

* remove init in favor of conftest.py

* switch to pip install",nose pytest,"
use pytest instead of nose for automated tests (#204)",156,Testing,Testing,False,False
2000,pydata/pandas-gbq,225f7047e872fee9387fe6e4544350bb179c3e82,2017-02-08 13:47:57,pytest,nose,change nose skips to pytest skips,nose pytest,"
change nose skips to pytest skips",156,Testing,Testing,False,False
2001,pymssql/pymssql,993049b36e523daef2d5d7e850675a26b5313f8c,2014-02-09 15:48:40,pytest,nose,Create mark_slow that can work with nose or py.test,nose pytest,"
Create mark_slow that can work with nose or py.test",156,Testing,Testing,False,False
2004,pysat/pysat,121d7ee20b4dcb8e23890e5dbb94a5ce072347f1,2020-04-23 18:12:41,pytest,nose,"TST: remove nose, replace with pytest",nose pytest,"
TST: remove nose, replace with pytest",156,Testing,Testing,False,False
2005,python-visualization/folium,b107a0e55c84e6a3d1f32ff7abfb2262547c0667,2015-08-17 19:50:17,pytest,nose,Using py.test instead of nose.,nose pytest,"
Using py.test instead of nose.",156,Testing,Testing,False,False
2006,qtile/qtile,05068040fb6dc8aebb911e660b282b5e6a08e1ef,2016-05-03 17:00:57,pytest,nose,"Switch from nose to py.test

Closes #903",nose pytest,"
Switch from nose to py.test",156,Testing,Testing,False,False
2008,rasbt/mlxtend,2787aa44ce7ca8a447cc022297693b8da0e96c5f,2019-05-29 02:36:20,pytest,nose,"Adding PCA correlation circle graph (#544)

* adding correlation circle

* indentation and tests

* docs - adding

* updating function description

* updating description

* adding adjustText to travis

* changing logfile according to suggestion

* changing back the ci file

* adding adjust_text to externals as discussed

* renaming, updating docs

* renaming, updating docs

* run pep8 fix

* run pep8 fix

* changin sklearn PCA to mlxtend PCA

* unit test adjustments

* use pytest instead of nose

* pytest cleanup

* add coverage

* bumb numpy version etc

* account for both old and new sklearn version

* hopefully last old scikit-version fix

* set pythonpath for pytest in windows

* some improvements to the documentation",nose pytest,"
* use pytest instead of nose",156,Testing,Testing,False,False
2011,sbrunner/tilecloud-chain,15a99ef9c143fffd71ee1b1c3a6bba30b2de60e8,2020-07-10 15:21:03,pytest,nose,Use pytest instead of nose,nose pytest,"
Use pytest instead of nose",156,Testing,Testing,False,False
2013,scipy/scipy,afde80059c8123884ff73a4475520ac907f8cd16,2017-08-21 14:57:37,pytest,nose,"MAINT: _lib: do not require nose to be present

Use pytest.raises(Error) instead of nose.raises(Error)",nose pytest,"
MAINT: _lib: do not require nose to be present",156,Testing,Testing,False,False
2014,sckott/pygbif,4605a72afce4053414056722011261a0b854af1b,2021-03-05 22:08:40,pytest,nose,"in count test, remove nose, use pytest",nose pytest,"
in count test, remove nose, use pytest",156,Testing,Testing,False,False
2017,statsmodels/statsmodels,79b52a2628079575c7be2dce702411266ac7e313,2017-07-30 08:36:43,pytest,nose,"TST: Finish conversion to pytest

Replace nose test running in each file
Restore setup_class to setup to preserve behavior
Provide a method for skipping tests that works in both pytest and nose",nose pytest,"
Replace nose test running in each file
Restore setup_class to setup to preserve behavior",156,Testing,Testing,False,False
2018,tqdm/tqdm,7f2545ef003d5f0563fa9e5071860ef94b9de150,2020-10-24 18:39:14,pytest,nose,replace nose => pytest,nose pytest,"
replace nose => pytest",156,Testing,Testing,False,False
2019,uber/vertica-python,2c885e302785949609892466a5ce31bc3615a904,2019-11-01 17:18:02,pytest,nose,Change from nose test to pytest (#329),nose pytest,"
Change from nose test to pytest (#329)",156,Testing,Testing,False,False
2020,unknown-horizons/unknown-horizons,3a808be4b2752c5defb816d7102e4ee6b8b8d391,2017-05-16 17:13:45,pytest,nose,Setup pytest instead of nose,nose pytest,"
Setup pytest instead of nose",156,Testing,Testing,False,False
2022,witten/atticmatic,0ea58244272e74ed4a083686f67f74e570559c8c,2016-04-10 22:59:36,pytest,nose,Switching from the no-longer-maintained nose test runner to pytest.,nose pytest,"
Switching from the no-longer-maintained nose test runner to pytest.",156,Testing,Testing,False,False
2048,getsentry/sentry,f500c96f842d234f718d4ba227e02ec2d4a39cf7,2015-09-18 20:44:53,simplejson,json,"Switch to simplejson for encoding json

Fixes GH-1979",json simplejson,"
Switch to simplejson for encoding json",40,Serialization,Serialization,False,False
2050,jrnl-org/jrnl,66f8ba28a94770eadab74b7fa4de832e472559ff,2012-04-16 11:41:17,simplejson,json,Simplejson instead of json,json simplejson,"Simplejson instead of json
",40,Serialization,Serialization,False,False
2055,mirnylab/cooler,726098ce150ad82d6ac92e9107fa7012287c337a,2020-01-10 14:35:48,simplejson,json,Replace json with simplejson to cover bytes vs strings issue,json simplejson,"Replace json with simplejson to cover bytes vs strings issue
",40,Serialization,Serialization,False,False
2063,pyecharts/pyecharts,e50f70fe7f749301513f98a091109f10a05f684d,2019-07-02 03:55:22,simplejson,json,update import json (from json to simplejson) and update AngleAxisOpts Configuration. (#1223),json simplejson,"
update import json (from json to simplejson) and update AngleAxisOpts Configuration.
(#1223)",40,Serialization,Serialization,False,False
2071,Adapter-Hub/adapter-transformers,35401fe50fa3e460b2a4422630b017f106c79e03,2019-12-06 18:57:38,unittest,pytest,"Remove dependency on pytest for running tests (#2055)

* Switch to plain unittest for skipping slow tests.

Add a RUN_SLOW environment variable for running them.

* Switch to plain unittest for PyTorch dependency.

* Switch to plain unittest for TensorFlow dependency.

* Avoid leaking open files in the test suite.

This prevents spurious warnings when running tests.

* Fix unicode warning on Python 2 when running tests.

The warning was:

    UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal

* Support running PyTorch tests on a GPU.

Reverts 27e015bd.

* Tests no longer require pytest.

* Make tests pass on cuda",pytest unittest,"
* Switch to plain unittest for skipping slow tests.",34,Testing,Testing,False,False
2072,CAMBI-tech/BciPy,d7fe4cc8b2be1b52685d4c08fe32de4aa4d3418c,2018-04-11 20:32:50,unittest,pytest,Changed unit tests to use unittest.TestCase classes,pytest unittest,"
Changed unit tests to use unittest.
TestCase classes",34,Testing,Testing,False,False
2073,JonathanVusich/pcpartpicker,06d04c29053d0fdbc25533b0381b97769874da64,2019-02-13 05:49:17,unittest,pytest,"Fix handling of API changes and add better tests (#10)

* WIP

* Moved and refactored tests

Now use unittest package instead of pytest :( due to better parametrization support.

* Added concurrent connections

* Update api.py

* Fixed monitor changes

Also prevented future errors from completely destroying package capabilities.

* Update scraper.py

* Update .travis.yml

* Update .travis.yml

* Update .travis.yml

* Added test runner

* Fixed tests

* Update scraper.py

* Added email notifications on build failure",pytest unittest,"
Fix handling of API changes and add better tests (#10)",34,Testing,Testing,False,False
2074,Netflix/consoleme,0f3162f4272d942f2a70b21734e851689640c076,2020-09-14 20:47:14,unittest,pytest,"Tag-based role authorization and initial refactor of role authorization logic (#208)

* Authz refactor: Cloud Credential Authorization Mapping

* WIP: Role Authorization Logic

* Restore original ACE directory

* Reset ConsoleMe UI changes

* Reset more javascript files

* Reset docs directory

* Remove comment

* Fix unit tests

* Update Requirements

* Reduce sentry-sdk version due to internal dependency

* Address comments",pytest unittest,"
* Fix unit tests",34,Testing,Testing,False,False
2077,Toblerity/rtree,14fb3f052c52784fb89a7d6a869b0cc802ccb2fe,2020-12-16 18:02:18,unittest,pytest,"Rtree Wheel Infrastructure (#163)

* first pass

* LSI install script

* try curl

* freaking sha256sum

* update manylinux cmake

* get deps on mac

* skip test for now

* rerun actions

* do some things to copy in shared library

* copy over shared library

* remove FileNotFoundError

* remove non-linux for testing

* build with tests

* add numpy to test_requires

* skip unicode filenames on python 2

* try different comparison test

* pass flake8

* skip cp27m

* missing wildcard

* skip broken test on python 2

* test_index passing flake8

* update finder and skip test

* add back awful hack

* skip pypy builds

* linux working add back windows and macos

* try building on windows with same script

* try bash scripting windows

* add imports to init

* make build dirs if they don't exist

* check before makedirs

* fix typo

* switch to batch file

* batch

* install out of script

* foolishly try make

* back

* pip to batch

* make?

* remove more

* ninja

* copy compiler

* try clang

* test whitespace

* clang?

* windows all use choco

* flake8

* clang-cl

* try gh clang

* try relative path

* windows paths

* escape

* convoluted llvm path

* hard paths

* set env in gh

* try fixing some cmake bugs

* change working directory

* cd doesnt work?

* use batch path tomfoolery

* try

* try msbuild

* copy dll

* windows finder logic

* typo

* try again

* finder logic

* try script relative copy

* use copy

* add debug dir

* add debug prints

* tuple

* build both 64 and 32?

* try override

* try release32?

* add force32

* typo

* skip 32 bit builds on windows

* re-enable other wheels

* typo

* tpr test

* skip test_tpr on windows

* try simpler copy strategy

* update copy

* absolute paths

* in too deep

* more paths

* finder changes working locally

* add repair_wheel override

* yaml typo

* mac uses bsd cp

* skip mac

* move to lib

* explicit copy for macos

* pass in target location

* what the heck

* paths are hard

* fix working copy

* set search on mac

* try

* try some magic

* different

* static

* linker

* copy cmake

* remove arg

* try static build

* try no rpath

* renable wheel repair on mac

* skip cleanup

* skip test on mac for wheel debugging

* fix path on windows

* delocate args

* fix extension

* don't copy everything

* change copy for mac

* delocate args

* get unrepaired wheel for testing

* more dylib

* try manual dylib repair

* remove build directories to make sure paths are OK

* minor fixes

* add windows search paths for conda

* add missed import

* install rtree in docs image

* docs pip3

* curl

* try python2 again

* apt

* use apt spatial for docs

* check windows/linux wheel repair

* right

* auditwheel

* don't repair windows wheels

* cd to test dir

* revert test command",pytest unittest,"
* build with tests",34,Testing,Testing,False,False
2082,dbcli/mssql-cli,d37fcc23f0ee381d2945f0e0d2d03b7d2e26d819,2019-07-27 01:45:43,unittest,pytest,fixed broken unit tests: test_mssqlcliclient.py and test_completion_refresher.py,pytest unittest,"
fixed broken unit tests: test_mssqlcliclient.py and test_completion_refresher.py",34,Testing,Testing,False,False
2086,jgrss/geowombat,b8473546762e046f9176e6a7d25406cf927d05b7,2020-11-07 23:46:31,unittest,pytest,switched from pytests to unittests,pytest unittest,"
switched from pytests to unittests",34,Testing,Testing,False,False
2088,josiah-wolf-oberholtzer/supriya,87158f72416e9fd9ab2d05c51ea83750ad6a2688,2015-09-19 00:11:05,unittest,pytest,Converting tests to use unittest.TestCase.,pytest unittest,"
Converting tests to use unittest.
TestCase.",34,Testing,Testing,False,False
2089,libAtoms/matscipy,8895b76f1f3ce5844bfc11a5c40009717300135d,2019-12-11 16:58:21,unittest,pytest,Relocated executable scripts of electrochemistry module and switched electrochemistry tests from pytest to unittest.,pytest unittest,"
Relocated executable scripts of electrochemistry module and switched electrochemistry tests from pytest to unittest.",34,Testing,Testing,False,False
2090,nipy/nibabel,a23c63a24593aca804377e8837e78d9193d03724,2020-02-08 17:07:29,unittest,pytest,TEST: Use vanilla unittest.skip* over pytest,pytest unittest,"
TEST: Use vanilla unittest.skip* over pytest",34,Testing,Testing,False,False
2091,open-mmlab/mmcv,12e5913bb92188c236860341eddf085de86ddfff,2020-03-16 07:15:35,unittest,pytest,"Remove supports for python 2.7 and bump version to 0.4.0 (#211)

* remove supports for python 2.7

* fix the unit test for python 3.5

* add python 3.8 in CI

* try ubuntu 18.04 as the environment",pytest unittest,"
* fix the unit test for python 3.5",34,Testing,Testing,False,False
2092,pantsbuild/pants,461c9cbad859f7de910f9128287b50a835d292bb,2015-11-06 22:03:15,unittest,pytest,"Remove pytest helpers where unittest will do.

This is a global cleanup.  Some instances of pytest helper use are left
but they either are in tests that use test functions or where there is
no equivalent functionality in unittest(2).

Testing Done:
Locally vetted with `./pants test-changed`.

CI went green here:
  https://travis-ci.org/pantsbuild/pants/builds/89726946

Bugs closed: 2516

Reviewed at https://rbcommons.com/s/twitter/r/3091/",pytest unittest,"
Some instances of pytest helper use are left
but they either are in tests that use test functions or where there is
no equivalent functionality in unittest(2).",34,Testing,Testing,False,False
2095,plangrid/flask-rebar,8b30e5ae337c36588df295a6c9d66aaca169fe75,2019-09-17 18:06:26,unittest,pytest,Fix marshmallow test helpers so that they work will all unittest compatible frameworks and not just pytest. 'python setup.py test'  works again. (#127),pytest unittest,"
Fix marshmallow test helpers so that they work will all unittest compatible frameworks and not just pytest.
'python setup.py test'  works again.",34,Testing,Testing,False,False
2096,ploigos/ploigos-step-runner,916abff2b8612843d0c6f71d099e0b50d70d748a,2020-08-21 14:46:29,unittest,pytest,"NAPSSPO-801 - tssc-python-library - support loading multiple configuration files
* update test_main to use unittest instead of py test",pytest unittest,"
NAPSSPO-801 - tssc-python-library - support loading multiple configuration files
* update test_main to use unittest instead of py test",34,Testing,Testing,False,False
2098,sodafoundation/delfin,af3bdb705c4566769750955c97925e8173974b20,2020-06-08 13:41:40,unittest,pytest,"Add common setup/teardown with unit test framework (#173)

* Add unit test for framework",pytest unittest,"
Add common setup/teardown with unit test framework (#173)",34,Testing,Testing,False,False
2102,vsergeev/u-msgpack-python,d1c16919c338d3a3635462e92a7b5db4959dce10,2013-12-01 22:21:04,unittest,pytest,switch pytest to unittest for interpreter portability,pytest unittest,"
switch pytest to unittest for interpreter portability",34,Testing,Testing,False,False
2104,zach401/acnportal,da2c8fa47349a9f0ba650e1f3e6b04986bbc1f2c,2020-05-03 05:16:36,unittest,pytest,Updated tests to use unittest rather than pytest.,pytest unittest,"
Updated tests to use unittest rather than pytest.",34,Testing,Testing,False,False
2132,zulip/zulip,71247048b4cbf66ff48d723b3cb19d5abb20fbd8,2017-02-07 06:07:38,requests,unirest,"bots: Use requests instead of unirest for Yoda bot.

Fixes #3500.",unirest requests,"
bots: Use requests instead of unirest for Yoda bot.",4,HTTP Clients,HTTP Clients,False,False
2133,AlexandreDecan/sismic,9c45344fa4aaa27f99b6a166101cd2eff0f321b2,2016-09-06 06:48:21,ruamel.yaml,pyyaml,Use ruamel.yaml instead of pyyaml,pyyaml ruamel.yaml,"
Use ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2134,Anaconda-Platform/anaconda-client,a8266b154add8e6a4273448ce0eee5698352adac,2017-12-27 17:46:24,ruamel.yaml,pyyaml,"Replace PyYAML with ruamel.yaml (#448)

* Replace PyYAML with ruamel_yaml",pyyaml ruamel.yaml,"
Replace PyYAML with ruamel.yaml (#448)",73,Serialization,Serialization,False,False
2136,EducationalTestingService/skll,f7421646bb0da4b016ec76b596a8c0fae5d3f7ae,2016-05-13 15:48:33,ruamel.yaml,pyyaml,"Replace PyYAML imports with `ruamel.yaml`

- Or `ruamel_yaml` in case the user is using the conda package instead of the PyPI package.",pyyaml ruamel.yaml,"
Replace PyYAML imports with `ruamel.yaml`",73,Serialization,Serialization,False,False
2137,FORTH-ICS-INSPIRE/artemis,50235ba9f7cf786743e03c2a81bb40d3e09061f5,2018-08-03 15:42:30,ruamel.yaml,pyyaml,updated bgpstream record to valid yaml conf generation with ruamel,pyyaml ruamel.yaml,"
updated bgpstream record to valid yaml conf generation with ruamel",73,Serialization,Serialization,False,False
2139,FederatedAI/FATE,68c0d9b829e76308b71be53bb6ec5dd8b07ff536,2020-08-15 13:08:55,ruamel.yaml,pyyaml,"update yaml

Signed-off-by: weiwee <wbwmat@gmail.com>",pyyaml ruamel.yaml,"
update yaml",73,Serialization,Serialization,False,False
2140,Felienne/hedy,860f4da26aa89ed46573cb5138cf9f6d5b464900,2021-05-01 13:09:35,ruamel.yaml,pyyaml,"feat: add a translation tool

Hopefully makes it (slightly) easier to translate all Hedy content.

Visit:

```
http://<hedy>/translate/en/nl
```

(Or whatever pair of languages you want to translate)

This PR uses content from the ""adventure-mode"" branch (without actually
having the code that uses the data yet).

Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.

I am not proud of the code but it works and I wanted to get it out
quickly.",pyyaml ruamel.yaml,"
Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.",73,Serialization,Serialization,False,False
2142,Galvant/InstrumentKit,065d3d23d78ae2a91ed452d4610fb7607a5471fb,2017-04-20 13:24:15,ruamel.yaml,pyyaml,"Extended YAML (#164)

* Added test:// URI schema.

* Config: Py3 fix and support for setting attrs.

* Added sub/indexing to attrs config.

* Added to docstring.

* Added support for physical quantities to config.

* pylint fixes

* Tests for new setattr_expression

* Added tests for new config, YAML.

* pylint fix for new tests

* Very minor pylint fix

* Added ruamel.yaml as testing dep.

* Reworked awkward sentence.

* Updated docs for ruamel.yaml dep.

* Remove pyyaml, only use ruamel.yaml

* Disabled info category messages from mylint.

* Added version dump to travis config.

* Trying ot use python -m to work around venv issues.

* Revert ""Trying ot use python -m to work around venv issues.""

This reverts commit f73a2439116ba89b867893dbcfe00f1982e03694.

* ruamel.yaml vs ruamel_yaml and fixing pylint false +ve.

* Explicitly use unsafe loader as suggested by ruamel.yaml warnings.

* Marked test as explicitly unsafe as well.",pyyaml ruamel.yaml,"
* Updated docs for ruamel.yaml dep.",73,Serialization,Serialization,False,False
2145,LLNL/spack,63004e3de1473254c3b2a75f1e06afaabdacd7dd,2018-08-20 23:36:04,ruamel.yaml,pyyaml,"yaml: use ruamel.yaml instead of pyyaml

- ruamel.yaml allows round-tripping comments from/to files
- ruamel.yaml is single-source, python2/python3 compatible",pyyaml ruamel.yaml,"
yaml: use ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2148,NVIDIA/NeMo,4cf1e1ed0adc703d2f4366303a5d8a9cd11b86e7,2020-02-07 19:14:02,ruamel.yaml,pyyaml,"yaml -> ruamel yaml, import and requirements cleanups

Signed-off-by: Tomasz Kornuta <tkornuta@nvidia.com>",pyyaml ruamel.yaml,"
yaml  laifuhewb  ruamel yaml, import and requirements cleanups",73,Serialization,Serialization,False,False
2150,Parsely/streamparse,18fd2e9f0c2a8f716aad243bff961c2e962e800e,2016-07-27 14:40:12,ruamel.yaml,pyyaml,Switch from PyYAML to ruamel.yaml,pyyaml ruamel.yaml,"
Switch from PyYAML to ruamel.yaml",73,Serialization,Serialization,False,False
2152,QCoDeS/Qcodes,fca7c3b83d7e2148c2ea84438002dc870bd60afc,2020-08-28 10:40:35,ruamel.yaml,pyyaml,use ruamel.yaml instead of pyyaml,pyyaml ruamel.yaml,"
use ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2153,Quansight/qhub,dba5ed398ba34017198a631d7b9dea10e2c530a8,2021-04-20 19:20:55,ruamel.yaml,pyyaml,"Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys (#509)

* Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys

* Include qhub-config.yaml in tests artifacts

* YAML dump formatting

* Adding release notes for feature",pyyaml ruamel.yaml,"
Changing from pyyaml  laifuhewb  ruamel.yaml to ensure no duplicate keys (#509)",73,Serialization,Serialization,False,False
2155,RasaHQ/rasa,155f82ebb7b408851b3e7f3364bf1c5b34c2b6b3,2018-11-19 08:17:17,ruamel.yaml,pyyaml,replace `pyaml` with `ruamel.yaml`,pyyaml ruamel.yaml,"
replace `pyaml` with `ruamel.yaml`",73,Serialization,Serialization,False,False
2158,afourmy/e-napalm,3463d319e657b9971ba438ffa42ea0188ffedbd7,2019-08-08 20:46:13,ruamel.yaml,pyyaml,replace yaqml with ruamel for custom properties,pyyaml ruamel.yaml,"
replace yaqml with ruamel for custom properties",73,Serialization,Serialization,False,False
2159,andreoliwa/nitpick,a8e2958ec238111e355a3c645494a2850ea5929e,2019-06-17 00:10:07,ruamel.yaml,pyyaml,"feat(pre-commit): compare missing and different keys on hooks (#57)

* test: split pre-commit files and test the merged style

* refactor: compare Toml using the Comparison class

* refactor: create a Yaml format class

* refactor: Comparison class now accepts dictionaries on init

* feat: use package ruamel.yaml to better format YAML output

* refactor: remove PyYAML

* feat(pre-commit): check missing GitHub repos

* refactor: rename ""dict"" to ""data"" on the BaseFormat classes

* refactor(formats): function to compare using dictdiffer

* refactor(setup.cfg): use ""yield from"" and change arg order to ""actual/expected""

* feat(pre-commit): show missing and different values for repos

* refactor: move methods from Comparison to BaseFormat

* refactor: add PreCommitHook class

* refactor: add list of keys to ignore when using the comparison methods

* refactor: warn about missing and different keys

* chore: cleanup fixme and todo

* test: get_all_hooks_from() will split the YAML block

* test: hook with different args or additional dependencies

* refactor: remove unneeded encoding

* refactor(pyproject_toml): call warn_missing_different()

* refactor: remove unused code",pyyaml ruamel.yaml,"
* feat: use package ruamel.yaml to better format YAML output
* refactor: create a Yaml format class",73,Serialization,Serialization,False,False
2162,center-for-threat-informed-defense/adversary_emulation_library,6800e295b583c582bc56261f9fdba84de05152b7,2020-11-13 14:34:14,ruamel.yaml,pyyaml,"update plan_validator.py

- add roundtrip test
- add command builder test
- change pyyaml to ruamel.yaml",pyyaml ruamel.yaml,"
- add command builder test
- change pyyaml to ruamel.yaml",73,Serialization,Serialization,False,False
2163,certtools/intelmq,4797c8e963df393a1fdd1121dbe92145ae654037,2021-06-25 16:02:23,ruamel.yaml,pyyaml,"dev: remove pyyaml dependency for development envs

replace pyyaml by ruamel.yaml",pyyaml ruamel.yaml,"
replace pyyaml by ruamel.yaml",73,Serialization,Serialization,False,False
2166,conda-incubator/grayskull,a3612d5a1f99dfb868e8875850cd8844efd6c4f2,2020-02-09 22:50:48,ruamel.yaml,pyyaml,"Change to ruamel yaml (#23)

* Modify infra to add ruamel yaml

* __main__ small improvements

* Refactoring Selectors._parser

* Refactoring Selectors

* Refactoring RecipeItem

* Refactored section base

* Refactoring section and part of the base recipe

* Renamed base recipe and refactoring

* Refactoring pypi class and clean up",pyyaml ruamel.yaml,"
Change to ruamel yaml (#23)",73,Serialization,Serialization,False,False
2167,conda/conda,29c9c63e3af115e474348dc1f9350c0160f9ac69,2016-02-28 02:09:43,ruamel.yaml,pyyaml,use ruamel.yaml instead of pyyaml for comment roundtrip,pyyaml ruamel.yaml,"
use ruamel.yaml instead of pyyaml for comment roundtrip",73,Serialization,Serialization,False,False
2168,cookiecutter/cookiecutter,798d99a8d59c0d90c911f570116278a786129a2d,2015-10-18 08:11:51,ruamel.yaml,pyyaml,"For #557, this moves us from PyYAML to raumel.yaml",pyyaml ruamel.yaml,"
For #557, this moves us from PyYAML to raumel.yaml",73,Serialization,Serialization,False,False
2170,demisto/demisto-sdk,d459b478062da51e0c8c33bebac2ee3fc777d0cf,2020-02-23 11:09:20,ruamel.yaml,pyyaml,"create content fix - Yamlordereddict -> ryaml load + test infra (#208)

* width revert

* width revert

* load ryaml

* copy_func is ambigious - fixing

* copy_func is ambigious - fixing

* refactor101

* add unit test to the copy_fir_files

* yaakovi cr 101

* yaakovi cr 102

* yaakovi cr 103

* tmpdir twik

* tmpdir twik2

* yaakovi cr 104

* yaakovi cr 105

* add integration dir test

* rm _test",pyyaml ruamel.yaml,"
create content fix - Yamlordereddict  laifuhewb  ryaml load + test infra (#208)",73,Serialization,Serialization,False,False
2173,getnikola/nikola,4df5e99d2e26fc331b5421f886f67426ed5eea42,2019-02-13 17:13:37,ruamel.yaml,pyyaml,"Replace PyYAML with ruamel.yaml.

PyYAML is effectively unmaintained. Many sources are considering PyYAML
insecure, and even though this claim is debatable, they still want the
unsafe API to be default. Ruamel’s fork is actively maintained and has a
saner approach. In addition, if the YAML-config project eventually
becomes a thing, we would need that library anyway.

Signed-off-by: Chris Warrick <kwpolska@gmail.com>",pyyaml ruamel.yaml,"
Replace PyYAML with ruamel.yaml.",73,Serialization,Serialization,False,False
2175,gschivley/PowerGenome,7311ba6b66a751f537b5faf31329c8688ac0755f,2020-02-19 04:17:26,ruamel.yaml,pyyaml,Switch from pyyaml to ruaml,pyyaml ruamel.yaml,"
Switch from pyyaml to ruaml",73,Serialization,Serialization,False,False
2177,home-assistant-ecosystem/home-assistant-cli,df9f8c23fa9993f16c735159634f29d2a50e1a43,2019-02-07 14:46:15,ruamel.yaml,pyyaml,"Remove pyaml and move to ruamel only for yaml

Why:

 * using two libraries for yaml is annoying.
 * 0.4 accidentally used pyyaml incompatible with homeassistant so
   lets avoid that.

This change addreses the need by:

 * move all code to use ruamel yaml.
 * made it possible eventually to control what version of yaml
   ruamel will use if ever needed.",pyyaml ruamel.yaml,"
Remove pyaml and move to ruamel only for yaml",73,Serialization,Serialization,False,False
2178,homebysix/pre-commit-macadmin,24512ea1dfa98286a659ecce2543081a4f711548,2019-02-28 07:27:32,ruamel.yaml,pyyaml,Require ruamel.yaml for safe yaml parsing,pyyaml ruamel.yaml,"
Require ruamel.yaml for safe yaml parsing",73,Serialization,Serialization,False,False
2180,jwplayer/buildpipe-buildkite-plugin,cc3c88d004dae5e5f8f455d7340c71fb19a4b40c,2019-12-25 23:35:22,ruamel.yaml,pyyaml,Use ruamel.yaml instead of pyaml (#38),pyyaml ruamel.yaml,"
Use ruamel.yaml instead of pyaml (#38)",73,Serialization,Serialization,False,False
2181,kenfar/DataGristle,a749fb2169aedcfb2aa0034c17907df0531e92ed,2021-03-20 06:05:58,ruamel.yaml,pyyaml,"Add configs to each csv program

This includes:
    * replacing pyyaml with ruamel.yaml
    * adding --config-fn and --gen-config-fn
    * improving common.abort formatting
    * defaulting config file relative paths off config directory
    * refactoring configulator CommandLineArgs",pyyaml ruamel.yaml,"
This includes:
* replacing pyyaml with ruamel.yaml
* adding --config-fn and --gen-config-fn",73,Serialization,Serialization,False,False
2183,materialsproject/custodian,b4632bef69dc55027b2a2c0814f7748ef22c9ba1,2017-06-11 17:41:55,ruamel.yaml,pyyaml,Replace yaml with ruamel.,pyyaml ruamel.yaml,"
Replace yaml with ruamel.",73,Serialization,Serialization,False,False
2184,materialsproject/pymatgen,95e776b8f7ee047bfc3b839e3fbe13e0ca618a9f,2017-06-11 16:28:29,ruamel.yaml,pyyaml,Replace all yaml imports with ruamel.,pyyaml ruamel.yaml,"
Replace all yaml imports with ruamel.",73,Serialization,Serialization,False,False
2187,missionpinball/mpf,3b3a75ee9654074cfb530075ce1bd1b970f41d2f,2015-12-09 03:08:56,ruamel.yaml,pyyaml,"Switch yaml library from PyYAML to ruamel.yaml

Note this branch requires a different yaml parser!!! PyYAML is no
longer used. Instead, use this:

Mac/Linux:
sudo pip install ruamel.yaml

Windows:
pip install ruamel.yaml==0.10.10

Also added tests",pyyaml ruamel.yaml,"Switch yaml library from PyYAML to ruamel.yaml
",73,Serialization,Serialization,False,False
2194,pre-commit/pre-commit-hooks,a7626390387e153c3ff75edc353e3d8a8a73374a,2018-12-28 21:09:17,ruamel.yaml,pyyaml,switch from pyyaml to ruamel.yaml,pyyaml ruamel.yaml,"
switch from pyyaml to ruamel.yaml",73,Serialization,Serialization,False,False
2195,rabobank-cdc/DeTTACT,d0f2a4946b8579bd7635f0ac00252d6dc051408a,2019-07-31 08:18:57,ruamel.yaml,pyyaml,"- Made compatible with version 1.2 of the technique admin YAML file.
- Added new functionality for the auto-update of visibility scores.
- Added multiple new generic functions.
- Multiple small improvements to the technique admin YAML file health check.
- Replaced PyYAML with ruamel.yaml.
- Multiple functions made ""private"".
- Made compatible with v0.2.7 of attackcti.",pyyaml ruamel.yaml,"
- Made compatible with version 1.2 of the technique admin YAML file.
- Replaced PyYAML with ruamel.yaml.",73,Serialization,Serialization,False,False
2200,scrapinghub/dateparser,fee300c3983c3192f462398908c8b175cd28eaa8,2016-06-16 07:49:12,ruamel.yaml,pyyaml,Replaced pyyaml by active fork: ruamel,pyyaml ruamel.yaml,"
Replaced pyyaml by active fork: ruamel",73,Serialization,Serialization,False,False
2202,tjhowse/modbus4mqtt,bdef5452d739543614d56ec28d7455864d3a69b4,2020-11-07 04:43:52,ruamel.yaml,pyyaml,"Fix value map misinterpretation (#17)

* Add a failing unit test to demonstrate issue.

* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.

* Ignore ,cover files.",pyyaml ruamel.yaml,"
* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.",73,Serialization,Serialization,False,False
2205,xoxys/ansible-doctor,cb76507159b4e3a66f7dd0288c6409ee134466f9,2019-10-15 08:48:18,ruamel.yaml,pyyaml,fully migrate to ruamel.yaml instead of pyyaml,pyyaml ruamel.yaml,"
fully migrate to ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2206,AlexandreDecan/sismic,9c45344fa4aaa27f99b6a166101cd2eff0f321b2,2016-09-06 06:48:21,ruamel.yaml.clib,pyyaml,Use ruamel.yaml instead of pyyaml,pyyaml ruamel.yaml.clib,"
Use ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2207,Anaconda-Platform/anaconda-client,a8266b154add8e6a4273448ce0eee5698352adac,2017-12-27 17:46:24,ruamel.yaml.clib,pyyaml,"Replace PyYAML with ruamel.yaml (#448)

* Replace PyYAML with ruamel_yaml",pyyaml ruamel.yaml.clib,"
* Replace PyYAML with ruamel_yaml
Replace PyYAML with ruamel.yaml (#448)",73,Serialization,Serialization,False,False
2209,EducationalTestingService/skll,f7421646bb0da4b016ec76b596a8c0fae5d3f7ae,2016-05-13 15:48:33,ruamel.yaml.clib,pyyaml,"Replace PyYAML imports with `ruamel.yaml`

- Or `ruamel_yaml` in case the user is using the conda package instead of the PyPI package.",pyyaml ruamel.yaml.clib,"
Replace PyYAML imports with `ruamel.yaml`",73,Serialization,Serialization,False,False
2210,FORTH-ICS-INSPIRE/artemis,50235ba9f7cf786743e03c2a81bb40d3e09061f5,2018-08-03 15:42:30,ruamel.yaml.clib,pyyaml,updated bgpstream record to valid yaml conf generation with ruamel,pyyaml ruamel.yaml.clib,"
updated bgpstream record to valid yaml conf generation with ruamel",73,Serialization,Serialization,False,False
2212,FederatedAI/FATE,68c0d9b829e76308b71be53bb6ec5dd8b07ff536,2020-08-15 13:08:55,ruamel.yaml.clib,pyyaml,"update yaml

Signed-off-by: weiwee <wbwmat@gmail.com>",pyyaml ruamel.yaml.clib,"update yaml
",73,Serialization,Serialization,False,False
2213,Felienne/hedy,860f4da26aa89ed46573cb5138cf9f6d5b464900,2021-05-01 13:09:35,ruamel.yaml.clib,pyyaml,"feat: add a translation tool

Hopefully makes it (slightly) easier to translate all Hedy content.

Visit:

```
http://<hedy>/translate/en/nl
```

(Or whatever pair of languages you want to translate)

This PR uses content from the ""adventure-mode"" branch (without actually
having the code that uses the data yet).

Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.

I am not proud of the code but it works and I wanted to get it out
quickly.",pyyaml ruamel.yaml.clib,"
Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.",73,Serialization,Serialization,False,False
2215,Galvant/InstrumentKit,065d3d23d78ae2a91ed452d4610fb7607a5471fb,2017-04-20 13:24:15,ruamel.yaml.clib,pyyaml,"Extended YAML (#164)

* Added test:// URI schema.

* Config: Py3 fix and support for setting attrs.

* Added sub/indexing to attrs config.

* Added to docstring.

* Added support for physical quantities to config.

* pylint fixes

* Tests for new setattr_expression

* Added tests for new config, YAML.

* pylint fix for new tests

* Very minor pylint fix

* Added ruamel.yaml as testing dep.

* Reworked awkward sentence.

* Updated docs for ruamel.yaml dep.

* Remove pyyaml, only use ruamel.yaml

* Disabled info category messages from mylint.

* Added version dump to travis config.

* Trying ot use python -m to work around venv issues.

* Revert ""Trying ot use python -m to work around venv issues.""

This reverts commit f73a2439116ba89b867893dbcfe00f1982e03694.

* ruamel.yaml vs ruamel_yaml and fixing pylint false +ve.

* Explicitly use unsafe loader as suggested by ruamel.yaml warnings.

* Marked test as explicitly unsafe as well.",pyyaml ruamel.yaml.clib,"
* Updated docs for ruamel.yaml dep.",73,Serialization,Serialization,False,False
2218,LLNL/spack,63004e3de1473254c3b2a75f1e06afaabdacd7dd,2018-08-20 23:36:04,ruamel.yaml.clib,pyyaml,"yaml: use ruamel.yaml instead of pyyaml

- ruamel.yaml allows round-tripping comments from/to files
- ruamel.yaml is single-source, python2/python3 compatible",pyyaml ruamel.yaml.clib,"
yaml: use ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2221,NVIDIA/NeMo,4cf1e1ed0adc703d2f4366303a5d8a9cd11b86e7,2020-02-07 19:14:02,ruamel.yaml.clib,pyyaml,"yaml -> ruamel yaml, import and requirements cleanups

Signed-off-by: Tomasz Kornuta <tkornuta@nvidia.com>",pyyaml ruamel.yaml.clib,"
yaml  laifuhewb  ruamel yaml, import and requirements cleanups",73,Serialization,Serialization,False,False
2223,Parsely/streamparse,18fd2e9f0c2a8f716aad243bff961c2e962e800e,2016-07-27 14:40:12,ruamel.yaml.clib,pyyaml,Switch from PyYAML to ruamel.yaml,pyyaml ruamel.yaml.clib,"
Switch from PyYAML to ruamel.yaml",73,Serialization,Serialization,False,False
2225,QCoDeS/Qcodes,fca7c3b83d7e2148c2ea84438002dc870bd60afc,2020-08-28 10:40:35,ruamel.yaml.clib,pyyaml,use ruamel.yaml instead of pyyaml,pyyaml ruamel.yaml.clib,"
use ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2226,Quansight/qhub,dba5ed398ba34017198a631d7b9dea10e2c530a8,2021-04-20 19:20:55,ruamel.yaml.clib,pyyaml,"Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys (#509)

* Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys

* Include qhub-config.yaml in tests artifacts

* YAML dump formatting

* Adding release notes for feature",pyyaml ruamel.yaml.clib,"
Changing from pyyaml  laifuhewb  ruamel.yaml to ensure no duplicate keys (#509)",73,Serialization,Serialization,False,False
2228,RasaHQ/rasa,155f82ebb7b408851b3e7f3364bf1c5b34c2b6b3,2018-11-19 08:17:17,ruamel.yaml.clib,pyyaml,replace `pyaml` with `ruamel.yaml`,pyyaml ruamel.yaml.clib,"
replace `pyaml` with `ruamel.yaml`",73,Serialization,Serialization,False,False
2231,afourmy/e-napalm,3463d319e657b9971ba438ffa42ea0188ffedbd7,2019-08-08 20:46:13,ruamel.yaml.clib,pyyaml,replace yaqml with ruamel for custom properties,pyyaml ruamel.yaml.clib,"
replace yaqml with ruamel for custom properties",73,Serialization,Serialization,False,False
2232,andreoliwa/nitpick,a8e2958ec238111e355a3c645494a2850ea5929e,2019-06-17 00:10:07,ruamel.yaml.clib,pyyaml,"feat(pre-commit): compare missing and different keys on hooks (#57)

* test: split pre-commit files and test the merged style

* refactor: compare Toml using the Comparison class

* refactor: create a Yaml format class

* refactor: Comparison class now accepts dictionaries on init

* feat: use package ruamel.yaml to better format YAML output

* refactor: remove PyYAML

* feat(pre-commit): check missing GitHub repos

* refactor: rename ""dict"" to ""data"" on the BaseFormat classes

* refactor(formats): function to compare using dictdiffer

* refactor(setup.cfg): use ""yield from"" and change arg order to ""actual/expected""

* feat(pre-commit): show missing and different values for repos

* refactor: move methods from Comparison to BaseFormat

* refactor: add PreCommitHook class

* refactor: add list of keys to ignore when using the comparison methods

* refactor: warn about missing and different keys

* chore: cleanup fixme and todo

* test: get_all_hooks_from() will split the YAML block

* test: hook with different args or additional dependencies

* refactor: remove unneeded encoding

* refactor(pyproject_toml): call warn_missing_different()

* refactor: remove unused code",pyyaml ruamel.yaml.clib,"* refactor: create a Yaml format class
* feat: use package ruamel.yaml to better format YAML output
",73,Serialization,Serialization,False,False
2235,center-for-threat-informed-defense/adversary_emulation_library,6800e295b583c582bc56261f9fdba84de05152b7,2020-11-13 14:34:14,ruamel.yaml.clib,pyyaml,"update plan_validator.py

- add roundtrip test
- add command builder test
- change pyyaml to ruamel.yaml",pyyaml ruamel.yaml.clib,"
- add command builder test
- change pyyaml to ruamel.yaml",73,Serialization,Serialization,False,False
2236,certtools/intelmq,4797c8e963df393a1fdd1121dbe92145ae654037,2021-06-25 16:02:23,ruamel.yaml.clib,pyyaml,"dev: remove pyyaml dependency for development envs

replace pyyaml by ruamel.yaml",pyyaml ruamel.yaml.clib,"
replace pyyaml by ruamel.yaml",73,Serialization,Serialization,False,False
2239,conda-incubator/grayskull,a3612d5a1f99dfb868e8875850cd8844efd6c4f2,2020-02-09 22:50:48,ruamel.yaml.clib,pyyaml,"Change to ruamel yaml (#23)

* Modify infra to add ruamel yaml

* __main__ small improvements

* Refactoring Selectors._parser

* Refactoring Selectors

* Refactoring RecipeItem

* Refactored section base

* Refactoring section and part of the base recipe

* Renamed base recipe and refactoring

* Refactoring pypi class and clean up",pyyaml ruamel.yaml.clib,"
Change to ruamel yaml (#23)",73,Serialization,Serialization,False,False
2240,conda/conda,29c9c63e3af115e474348dc1f9350c0160f9ac69,2016-02-28 02:09:43,ruamel.yaml.clib,pyyaml,use ruamel.yaml instead of pyyaml for comment roundtrip,pyyaml ruamel.yaml.clib,"
use ruamel.yaml instead of pyyaml for comment roundtrip",73,Serialization,Serialization,False,False
2241,cookiecutter/cookiecutter,798d99a8d59c0d90c911f570116278a786129a2d,2015-10-18 08:11:51,ruamel.yaml.clib,pyyaml,"For #557, this moves us from PyYAML to raumel.yaml",pyyaml ruamel.yaml.clib,"
For #557, this moves us from PyYAML to raumel.yaml",73,Serialization,Serialization,False,False
2243,demisto/demisto-sdk,d459b478062da51e0c8c33bebac2ee3fc777d0cf,2020-02-23 11:09:20,ruamel.yaml.clib,pyyaml,"create content fix - Yamlordereddict -> ryaml load + test infra (#208)

* width revert

* width revert

* load ryaml

* copy_func is ambigious - fixing

* copy_func is ambigious - fixing

* refactor101

* add unit test to the copy_fir_files

* yaakovi cr 101

* yaakovi cr 102

* yaakovi cr 103

* tmpdir twik

* tmpdir twik2

* yaakovi cr 104

* yaakovi cr 105

* add integration dir test

* rm _test",pyyaml ruamel.yaml.clib,"
create content fix - Yamlordereddict  laifuhewb  ryaml load + test infra (#208)",73,Serialization,Serialization,False,False
2246,getnikola/nikola,4df5e99d2e26fc331b5421f886f67426ed5eea42,2019-02-13 17:13:37,ruamel.yaml.clib,pyyaml,"Replace PyYAML with ruamel.yaml.

PyYAML is effectively unmaintained. Many sources are considering PyYAML
insecure, and even though this claim is debatable, they still want the
unsafe API to be default. Ruamel’s fork is actively maintained and has a
saner approach. In addition, if the YAML-config project eventually
becomes a thing, we would need that library anyway.

Signed-off-by: Chris Warrick <kwpolska@gmail.com>",pyyaml ruamel.yaml.clib,"
Replace PyYAML with ruamel.yaml.",73,Serialization,Serialization,False,False
2248,gschivley/PowerGenome,7311ba6b66a751f537b5faf31329c8688ac0755f,2020-02-19 04:17:26,ruamel.yaml.clib,pyyaml,Switch from pyyaml to ruaml,pyyaml ruamel.yaml.clib,"
Switch from pyyaml to ruaml",73,Serialization,Serialization,False,False
2250,home-assistant-ecosystem/home-assistant-cli,df9f8c23fa9993f16c735159634f29d2a50e1a43,2019-02-07 14:46:15,ruamel.yaml.clib,pyyaml,"Remove pyaml and move to ruamel only for yaml

Why:

 * using two libraries for yaml is annoying.
 * 0.4 accidentally used pyyaml incompatible with homeassistant so
   lets avoid that.

This change addreses the need by:

 * move all code to use ruamel yaml.
 * made it possible eventually to control what version of yaml
   ruamel will use if ever needed.",pyyaml ruamel.yaml.clib,"
Remove pyaml and move to ruamel only for yaml",73,Serialization,Serialization,False,False
2251,homebysix/pre-commit-macadmin,24512ea1dfa98286a659ecce2543081a4f711548,2019-02-28 07:27:32,ruamel.yaml.clib,pyyaml,Require ruamel.yaml for safe yaml parsing,pyyaml ruamel.yaml.clib,"
Require ruamel.yaml for safe yaml parsing",73,Serialization,Serialization,False,False
2253,jwplayer/buildpipe-buildkite-plugin,cc3c88d004dae5e5f8f455d7340c71fb19a4b40c,2019-12-25 23:35:22,ruamel.yaml.clib,pyyaml,Use ruamel.yaml instead of pyaml (#38),pyyaml ruamel.yaml.clib,"
Use ruamel.yaml instead of pyaml (#38)",73,Serialization,Serialization,False,False
2254,kenfar/DataGristle,a749fb2169aedcfb2aa0034c17907df0531e92ed,2021-03-20 06:05:58,ruamel.yaml.clib,pyyaml,"Add configs to each csv program

This includes:
    * replacing pyyaml with ruamel.yaml
    * adding --config-fn and --gen-config-fn
    * improving common.abort formatting
    * defaulting config file relative paths off config directory
    * refactoring configulator CommandLineArgs",pyyaml ruamel.yaml.clib,"
This includes:
* replacing pyyaml with ruamel.yaml
* adding --config-fn and --gen-config-fn",73,Serialization,Serialization,False,False
2256,materialsproject/custodian,b4632bef69dc55027b2a2c0814f7748ef22c9ba1,2017-06-11 17:41:55,ruamel.yaml.clib,pyyaml,Replace yaml with ruamel.,pyyaml ruamel.yaml.clib,"
Replace yaml with ruamel.",73,Serialization,Serialization,False,False
2257,materialsproject/pymatgen,95e776b8f7ee047bfc3b839e3fbe13e0ca618a9f,2017-06-11 16:28:29,ruamel.yaml.clib,pyyaml,Replace all yaml imports with ruamel.,pyyaml ruamel.yaml.clib,"
Replace all yaml imports with ruamel.",73,Serialization,Serialization,False,False
2260,missionpinball/mpf,3b3a75ee9654074cfb530075ce1bd1b970f41d2f,2015-12-09 03:08:56,ruamel.yaml.clib,pyyaml,"Switch yaml library from PyYAML to ruamel.yaml

Note this branch requires a different yaml parser!!! PyYAML is no
longer used. Instead, use this:

Mac/Linux:
sudo pip install ruamel.yaml

Windows:
pip install ruamel.yaml==0.10.10

Also added tests",pyyaml ruamel.yaml.clib,"Switch yaml library from PyYAML to ruamel.yaml
",73,Serialization,Serialization,False,False
2267,pre-commit/pre-commit-hooks,a7626390387e153c3ff75edc353e3d8a8a73374a,2018-12-28 21:09:17,ruamel.yaml.clib,pyyaml,switch from pyyaml to ruamel.yaml,pyyaml ruamel.yaml.clib,"
switch from pyyaml to ruamel.yaml",73,Serialization,Serialization,False,False
2268,rabobank-cdc/DeTTACT,d0f2a4946b8579bd7635f0ac00252d6dc051408a,2019-07-31 08:18:57,ruamel.yaml.clib,pyyaml,"- Made compatible with version 1.2 of the technique admin YAML file.
- Added new functionality for the auto-update of visibility scores.
- Added multiple new generic functions.
- Multiple small improvements to the technique admin YAML file health check.
- Replaced PyYAML with ruamel.yaml.
- Multiple functions made ""private"".
- Made compatible with v0.2.7 of attackcti.",pyyaml ruamel.yaml.clib,"
- Made compatible with version 1.2 of the technique admin YAML file.
- Replaced PyYAML with ruamel.yaml.",73,Serialization,Serialization,False,False
2273,scrapinghub/dateparser,fee300c3983c3192f462398908c8b175cd28eaa8,2016-06-16 07:49:12,ruamel.yaml.clib,pyyaml,Replaced pyyaml by active fork: ruamel,pyyaml ruamel.yaml.clib,"
Replaced pyyaml by active fork: ruamel",73,Serialization,Serialization,False,False
2275,tjhowse/modbus4mqtt,bdef5452d739543614d56ec28d7455864d3a69b4,2020-11-07 04:43:52,ruamel.yaml.clib,pyyaml,"Fix value map misinterpretation (#17)

* Add a failing unit test to demonstrate issue.

* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.

* Ignore ,cover files.",pyyaml ruamel.yaml.clib,"
* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.",73,Serialization,Serialization,False,False
2278,xoxys/ansible-doctor,cb76507159b4e3a66f7dd0288c6409ee134466f9,2019-10-15 08:48:18,ruamel.yaml.clib,pyyaml,fully migrate to ruamel.yaml instead of pyyaml,pyyaml ruamel.yaml.clib,"
fully migrate to ruamel.yaml instead of pyyaml",73,Serialization,Serialization,False,False
2279,Akuli/porcupine,47e5e515e65e6ea3f99ae8451e488ffc62e85fbf,2020-08-03 11:01:45,pathlib,os,replace os.path with pathlib when useful,os pathlib,"
replace os.path with pathlib when useful",107,Filesystem,Filesystem,False,False
2280,BlueBrain/NeuroM,a5732a723cc2f00aaac0d09bd074871b62005031,2020-07-21 14:09:12,pathlib,os,"Widespread the use of pathlib.Path (#846)

- neurom.io.utils get_files_by_path and get_morph_files returns pathlib objects
- fix name == None when calling load_neuron with a pathlib object
- all unit tests use pathlib instead of os.path",os pathlib,"
- fix name == None when calling load_neuron with a pathlib object
- all unit tests use pathlib instead of os.path",107,Filesystem,Filesystem,False,False
2282,C0D3D3V/Moodle-Downloader-2,ca666856ae8aa0158c8f4f59fb562bbcd458060f,2020-03-19 16:37:37,pathlib,os,use pathlib instead of os.path #15,os pathlib,"
use pathlib instead of os.path #15",107,Filesystem,Filesystem,False,False
2283,CLIMADA-project/climada_python,a9ec6ce5578e32aa805940dcf18f624165d97b54,2021-01-08 09:36:50,pathlib,os,"Feature/config conventions (#114)

* docs: first draft of new configuration policy

* doc.guide.configuration: add test config example

* explore jenkins

* explore jenkins

* fix case

* explore jenkins

* climada.util.config: introduce Object class for the sake of it.

* climada.util.config.Config refactoring
renamed from Object
index handling elaborated

* climada.util.config.Config: self-referencing
of string variables enabled
for configurations like this: `{'a': 'x', 'b': '...{a}...'}`

* climada.util.config linting

* climada.CONFIG: replace the dict by a Config object

* climada.CONFIG: merge `global`into the top dict
it is an unfortunate key and it's not strictly required

* config: move local data directories definition from constants to config
remove DATA_DIR constant, base SOURCE_DIR on config.__file__

* config: move local data directories definition from constants to config
remove DATA_DIR constant, base SOURCE_DIR on config.__file__

* PEP8 linting

* climada.util.coordinates.dist_approx complex ndarray expressions
break it apart in order to avoid temporary array allocation
-> performance improvement order of magnitude 25%

* climada.test.test_osm: revert last commit
which introduced a predetermined test failure

* climada.conf: set default climada directory to ~/climada
start adaptations: synchronize repository data files with climada directory

* climada.conf: synchronize missing repository data files with climada directory

* climada.conf: synchronize missing repository data files with climada directory

* typo

* coding conventions: start elimination of os, introduce test config in wd

* files_handler: fix glob file search

* gpw_import: work on distinction between path and name

* PEP8 cosmetics

* tc_tracks_synth: CONIG is a Config object now

* cosmetics

* util.save: use pathlib instead of os.path

* util.finance: use pathlib instead of os.path

* hazard.tc_tracks: use pathlib instead of os.path

* util.files_handler: pydocs, type of return list items

* util.finance: replace glob by is_file

* hazard:tc_tracks_forecast: fixing a bug

* exposures.crop_production: use pathlib instead of os.path

* cosmetics

* space cosmetics

* exposures.litpop: use pathlib instead of os.path, move resources to config file

* exposures.litpop: bugfix

* exposures.spam_agrar: use pathlib instead of os.path, move resources to config file
exposures.litpop: PEP8

* hazard.drought: use pathlib instead of os.path, move external resources to config file

* hazard.landslide: use pathlib instead of os.path, move external resources to config file

* hazard.low_flow: use pathlib instead of os.path

* hazard.river_flood: use pathlib instead of os.path

* hazard.river_flood: PEP8
hazard.tag: use pathlib instead of os.path

* hazard.river_flood: PEP8
hazard.tag: use pathlib instead of os.path
hazard.realative_cropyield: use pathlib instead of os.path

* climada.hazard.test, climada.util.test: hazard.landslide: adapt to new CONFIG style

* climada.engine.test, climada.entity.test: adapt to new CONFIG style
unlink os package

* test: address failures due to Path not being str

* climada.conf: bugfix

* climada.conf: bugfix 2

* climada.conf: bugfix 3

* climada.conf: bugfix 4

* test: reverse. wrong track.

* test: still bugfixing

* climada.test: adapt to new CONFIG style

* cosmetics

* climada.util: remove circular imports

* exposures:open_street_map: use pathlib instead of string concatenation

* add comment to Config exclusion

Co-authored-by: schmide <emanuel.schmid@id.ethz.ch>",os pathlib,"
* util.save: use pathlib instead of os.path",107,Filesystem,Filesystem,False,False
2285,ComplianceAsCode/auditree-framework,bc15ca085175033edf5c01ae2e0a30f5613f7560,2020-09-30 13:55:48,pathlib,os,"Add evidence locker TOC (#71)

* Add evidence locker TOC
* Replace os with pathlib in report.py
* Temporarily remove mention of demo checks",os pathlib,"
* Add evidence locker TOC
* Replace os with pathlib in report.py
* Temporarily remove mention of demo checks",107,Filesystem,Filesystem,False,False
2286,Donders-Institute/bidscoin,20841557b6e9f5a487fc3baeaaa5469fe590cc07,2019-11-15 16:41:27,pathlib,os,"Moved from using os.path & glob to the much more readable and modern pathlib.Path library
Added a first version of the multi-echo combine wrapper",os pathlib,"
Moved from using os.path & glob to the much more readable and modern pathlib.
Path library",107,Filesystem,Filesystem,False,False
2287,H-uru/korman,55566c908ae9b267dccfb66be9728f4a052c4643,2016-02-02 02:14:12,pathlib,os,"Convert os.path usage to pathlib. ++code_quality

This closes #26",os pathlib,"
Convert os.path usage to pathlib.
++code_quality",107,Filesystem,Filesystem,False,False
2288,HyperLink-Technology/brownie,4e4372c17d8205ec16053fc417fb52a0137612c5,2019-04-06 21:40:19,pathlib,os,use pathlib instead of os,os pathlib,"
use pathlib instead of os",107,Filesystem,Filesystem,False,False
2290,JohnDoenut/biopeaks,fa91aa51dd9f0d00b0bf6559187d8c95de895bf1,2020-04-27 14:15:43,pathlib,os,Using pathlib instead of os.,os pathlib,"
Using pathlib instead of os.",107,Filesystem,Filesystem,False,False
2294,KeepSafe/aiohttp,79fe204522ecf91e9c1cf1a3547c03f821106a74,2019-08-08 11:29:22,pathlib,os,"Improve test suite handling of paths, temp files (#3957)

* Improve test suite handling of paths, temp files

This updates most uses of `os.path` to instead use `pathlib.Path`.
Relatedly, and following up from #3955 (which replaced pytest's `tmpdir`
fixture with `tmp_path`), this removes most ad-hoc tempfile creation in
favor of the `tmp_path` fixture. Following conversion, unnecessary `os`
and `tempfile` imports were removed.

Most pathlib changes involve straightforward changes from `os` functions
such as `os.mkdir` or `os.path.abspath` to their equivalent methods in
`pathlib.Path`.

Changing ad-hoc temporary path to `tmp_path` involved removing the
`tmp_dir_path` fixture and replacing its functionality with `tmp_path`
in `test_save_load` and `test_guess_filename_with_tempfile`.

On `test_static_route_user_home` function:

* I think that the intention of this test is to ensure that aiohttp
correctly expands the home path if passed in a string. I refactored it
to `pathlib.Path` and cut out duplication of `relative_to()` calls.
But if it's not doing anything but expanding `~`, then it's testing the
functionality of `pathlib.Path`, not aiohttp.

On `unix_sockname` fixture:

This fixture uses `tempfile.TemporaryDirectory`. Because it's a somewhat
complicated fixture used across multiple test modules, I left it as-is
for now.

On `str(tmp_path)` and even `pathlib.Path(str(tmp_path))`:

pytest uses `pathlib2` to provide `tmp_path` for Python 3.5 (only).
This is mostly fine but it fails on a couple of corner cases, such as
`os.symlink()` which blocks all but `str` and `PurePath` via isinstance
type checking. In several cases, this requires conversion to string or
conversion to string and then into `pathlib.Path` to maintain code
compatibility. See: pytest-dev/pytest/issues/5017

* Correct test_guess_filename to use file object

* Update symlink in tests; more guess_filename tests",os pathlib,"
This updates most uses of `os.path` to instead use `pathlib.
Path`.",107,Filesystem,Filesystem,False,False
2295,Kozea/tinycss2,0a2b7c7af63819e39a6110afdcbb449831eb09e0,2020-02-23 22:01:40,pathlib,os,Use pathlib instead of os.path,os pathlib,"
Use pathlib instead of os.path",107,Filesystem,Filesystem,False,False
2297,LCA-ActivityBrowser/activity-browser,7ba3b0451d8be24f23407d58c10f00acc3320e1d,2021-03-10 13:14:24,pathlib,os,Replace usage of os with Path,os pathlib,"
Replace usage of os with Path",107,Filesystem,Filesystem,False,False
2300,MouseLand/suite2p,3633222ecc5750f5e9fd172bf05c1327152083ca,2020-05-24 02:56:44,pathlib,os,Made changes to download test_data from suite2p link to .suite2p directory. Using pathlib.Path instead of os.path. Modified test functions to compare to downloaded cache test_files.,os pathlib,"
Using pathlib.
Path instead of os.path.
Modified test functions to compare to downloaded cache test_files.",107,Filesystem,Filesystem,False,False
2302,PyCQA/pylint,5e9b4384e5bb3f3ee570eee32949a135130453d9,2020-04-27 12:51:19,pathlib,os,Use pathlib.Path instead of os.path in unittest_checker,os pathlib,"
Use pathlib.
Path instead of os.path in unittest_checker",107,Filesystem,Filesystem,False,False
2304,StochSS/GillesPy2,694bc2bfa56359bee1a4287b1e750990af253a52,2021-05-23 05:19:41,pathlib,os,Moved from os.path to pathlib.Path,os pathlib,"
Moved from os.path to pathlib.
Path",107,Filesystem,Filesystem,False,False
2305,The-Compiler/qutebrowser,ca653d5de94895f21a168870f4b8d4014ee697ea,2020-11-23 16:35:31,pathlib,os,"tests: Simplify dir handling in webserver_sub.py

- Switch from os.path to pathlib, see #176
- Remove sys.frozen handling, see #5867
- Always set Flask template dir correctly",os pathlib,"
- Switch from os.path to pathlib, see #176
- Remove sys.frozen handling, see #5867",107,Filesystem,Filesystem,False,False
2308,aaugustin/websockets,f192a4ad37ce72f9047ce4527721eb6fdcc792fd,2018-05-06 18:48:22,pathlib,os,Use pathlib instead of os.path.,os pathlib,"
Use pathlib instead of os.path.",107,Filesystem,Filesystem,False,False
2311,alphatwirl/atpbar,30eb61262868febdc04bbb9a0a11bcabff69c64c,2020-04-28 02:55:55,pathlib,os,use pathlib instead of os and io in setup.py,os pathlib,"
use pathlib instead of os and io in setup.py",107,Filesystem,Filesystem,False,False
2313,ashnair1/COCO-Assistant,84a03f93b96a3c9c7f801d39d051bffb4e74ae07,2021-03-20 11:19:55,pathlib,os,Replace os.path with pathlib (#36),os pathlib,"
Replace os.path with pathlib (#36)",107,Filesystem,Filesystem,False,False
2316,bonjorno7/SourceOps,bf2d0944b2de87948b567348b6857dc2e6810618,2020-08-27 19:21:45,pathlib,os,"Update model export

Now using the new way games store paths.
I also made basename, directory, studiomdl, and hlmv all set during init, instead of getting them everytime I need them.
Another big change is that I've replaced os with pathlib. No functional change, just something that had to be done. Was a lot of work though tbh.
The real big functional change is that you can now use pretty much any combination of paths for bin, game, models, modelsrc, maps. Works for both StudioMDL and HLMV.
And copy_files is gone, replaced by move_files, cause that's how we're doing things now. Also I'm printing every file that fails to get copied now cause it's useful to know.
Oh and instead of replacing the backward slashes with forward slashes to check if a text is already in blender, I'm just converting both of them to Path. Dunno why I didn't think of it earlier.
Though I think I'm gonna get rid of those buttons anyway, and just have a single button to open the folder where the qc and log are.
Atm it just assumes all paths are valid. I'm going to build in some safety stuff for that, but this is already plenty of changes for one commit.",os pathlib,"
Another big change is that I've replaced os with pathlib.
No functional change, just something that had to be done.",107,Filesystem,Filesystem,False,False
2317,bpython/bpython,b7a6753fc06abcad03e6331de712e364c30d52af,2021-01-01 13:25:37,pathlib,os,Use pathlib instead of low-level os module,os pathlib,"
Use pathlib instead of low-level os module",107,Filesystem,Filesystem,False,False
2318,brainix/pottery,41f42bbce65bbac847e263d73e0f35d6c7f440f7,2021-07-07 02:14:39,pathlib,os,"Improve setup.py (#420)

* Specify that Pottery requires Python < 4

* Use pathlib instead of os.path

* Switch classifiers from a tuple to a list

This fixes this warning:

```
(venv) raj@C02FK16KMD6V pottery % python3 setup.py --long-description
Warning: 'classifiers' should be a list, got type 'tuple'
```

* Use pathlib instead of os.path",os pathlib,"
* Use pathlib instead of os.path",107,Filesystem,Filesystem,False,False
2327,earthobservations/wetterdienst,60879e1a38dfefc30463299cdcbd1be288f9cf4e,2020-05-06 18:29:39,pathlib,os,Update the whole structure and combine some functions; Replace os with pathlib functions,os pathlib,"
Update the whole structure and combine some functions; Replace os with pathlib functions",107,Filesystem,Filesystem,False,False
2328,encode/uvicorn,1b32f9971ad4080c67e5779d519dec6b60d3ece6,2020-10-14 13:12:59,pathlib,os,"Fixes watchgod with common prefixes (#817)

* Fixes watchgod with common prefixes

Use pathlib to recognize common ancestry instead of string compare

* Add tests for watchgodreload

Test for common prefix paths
Replace os.path with pathlib",os pathlib,"
Test for common prefix paths
Replace os.path with pathlib",107,Filesystem,Filesystem,False,False
2329,equinor/ecl2df,47c2fd02b2ab85ff72afd7462d3cd192d076dd82,2020-11-20 13:06:31,pathlib,os,Replace os.path with pathlib (#206),os pathlib,"
Replace os.path with pathlib (#206)",107,Filesystem,Filesystem,False,False
2330,ethereum/viper,c2b43d90fea5c9e634d6c38f079ecd64e8666391,2019-08-08 14:22:11,pathlib,os,use pathlib instead of os.path,os pathlib,"
use pathlib instead of os.path",107,Filesystem,Filesystem,False,False
2333,freqtrade/freqtrade,f261911285343a870bda9ad281af4e971e15b95d,2018-12-15 12:54:35,pathlib,os,replace os.path with pathlib.Path,os pathlib,"
replace os.path with pathlib.
Path",107,Filesystem,Filesystem,False,False
2335,gbouvignies/chemex,3f03330a5108efcad1a059c28a09cac1e7854fdc,2018-09-25 14:06:32,pathlib,os,Use 'pathlib' instead of 'os' for dealing with pathes,os pathlib,"
Use 'pathlib' instead of 'os' for dealing with pathes",107,Filesystem,Filesystem,False,False
2338,gretelai/gretel-synthetics,863db25b0b46211f2dbd78b6ab8541d016140540,2020-03-23 19:53:16,pathlib,os,replace os with pathlib for readability,os pathlib,"
replace os with pathlib for readability",107,Filesystem,Filesystem,False,False
2342,ipython/ipython,638df3d65d04349a033a0b83f1a6435510872882,2020-10-07 02:15:05,pathlib,os,Updated to Pathlib Path from os,os pathlib,"
Updated to Pathlib Path from os",107,Filesystem,Filesystem,False,False
2344,jina-ai/jina,e4d831a7fd8ccd236705cfb4ce8804545666dc1c,2020-12-07 05:57:14,pathlib,os,chore: use pathlib instead of os path in all unit tests,os pathlib,"
chore: use pathlib instead of os path in all unit tests",107,Filesystem,Filesystem,False,False
2345,josiah-wolf-oberholtzer/supriya,257fd9cce7d3ff5f1557c8857627ed1e8946aa63,2017-03-09 03:42:29,pathlib,os,Replaced os with pathlib in SessionRenderer.,os pathlib,"
Replaced os with pathlib in SessionRenderer.",107,Filesystem,Filesystem,False,True
2349,miurahr/py7zr,f7d16b36ab0ed036206331c7a2d0a6d86570a0e9,2019-12-01 02:37:35,pathlib,os,"Replace os.path with pathlib.Path

Signed-off-by: Hiroshi Miura <miurahr@linux.com>",os pathlib,"
Replace os.path with pathlib.
Path",107,Filesystem,Filesystem,False,False
2351,mopidy/mopidy-local,b4a25a7706969f90aca394a35871f53d34f2e562,2020-01-03 20:06:18,pathlib,os,"Replace os.path with pathlib

Fixes #20",os pathlib,"
Replace os.path with pathlib",107,Filesystem,Filesystem,False,False
2353,nschloe/meshio,4147af6bdef2549e5aecc5273048c33b6ff655c2,2020-09-24 08:48:06,pathlib,os,Switched from os to pathlib.Path module. Also added two test files and corresponding test,os pathlib,"
Switched from os to pathlib.
Path module.",107,Filesystem,Filesystem,False,False
2357,packit-service/packit,b13e5b05f5131d09261dee5ff0086afa3621d23d,2019-03-01 15:34:12,pathlib,os,[tests] os -> pathlib,os pathlib,"
[tests] os  laifuhewb  pathlib",107,Filesystem,Filesystem,False,False
2358,pantsbuild/pants,79ba58636288f95be1a156f02623d46b0eb242ea,2019-09-07 21:51:13,pathlib,os,"Refactor `pathlib.Path` usages to use multiple path segments constructor (#8255)

https://github.com/pantsbuild/pants/pull/8251#discussion_r321972453 showed that `pathlib.Path` can take multiple args in the constructor, like `os.path.join()`, for a more ergonomic API that allows us to avoid using `/` to join two Paths.

This also replaces `os.path` with `pathlib.Path` (and adds f-strings) to some files.",os pathlib,"
https://github.com/pantsbuild/pants/pull/8251#discussion_r321972453 showed that `pathlib.
Path` can take multiple args in the constructor, like `os.path.join()`, for a more ergonomic API that allows us to avoid using `/` to join two Paths.",107,Filesystem,Filesystem,False,False
2359,poldracklab/niworkflows,88e190ffb817c150ab0a9761d891168190e40f5a,2020-02-26 20:39:11,pathlib,os,"RF: Replace os operations with pathlib, add metadata indentation",os pathlib,"
RF: Replace os operations with pathlib, add metadata indentation",107,Filesystem,Filesystem,False,False
2360,pomo-mondreganto/ForcAD,46494a925045682d90b5810aa1d01afdf83c6e11,2020-05-12 19:05:41,pathlib,os,"Major refactoring (changed os.path to pathlib), better flag receiver monitoring",os pathlib,"
Major refactoring (changed os.path to pathlib), better flag receiver monitoring",107,Filesystem,Filesystem,False,False
2363,project-alice-assistant/ProjectAlice,3a93f0401577eab809b4f0ecb1cbd9a5772ea7a4,2019-09-01 07:37:02,pathlib,os,replace os.path with pathlib,os pathlib,"
replace os.path with pathlib",107,Filesystem,Filesystem,False,False
2365,pyre/pyre,f1dfb950a502934c7817a74acdbfc41a8ccc5d1d,2016-01-16 23:22:19,pathlib,os,pyre.framework: replaced more {os.path} with {pathlib},os pathlib,"
pyre.framework: replaced more {os.path} with {pathlib}",107,Filesystem,Filesystem,False,False
2366,qtile/qtile,621b6cbcf2f04f98339182b637dfb59a341f3ceb,2021-04-09 17:31:17,pathlib,os,"Tidy up test/test_config.py a bit

Primarily this replaces os.path with pathlib.Path to it is actually
readable.",os pathlib,"
Primarily this replaces os.path with pathlib.
Path to it is actually",107,Filesystem,Filesystem,False,False
2369,rlaPHOENiX/pvsfunc,985ebfa45b475e01e046e7ea66c8d66480510e22,2021-06-22 23:54:22,pathlib,os,"Move fps_reset to PLS,  use pathlib instead of os.path",os pathlib,"
Move fps_reset to PLS,  use pathlib instead of os.path",107,Filesystem,Filesystem,False,False
2370,scidash/sciunit,cdb151b5a4ecd06581bac6a3d73d7e9af14dbe6d,2020-09-01 06:09:14,pathlib,os,"Update Docstrings, Change os.path to pathlib (#165)

* Update docstrings, change os.path to pathlib stuff

* Remove import os

* Update return type hint

* Update docstrings

* remove test_path_escape function

* Correct type hint

* Update type hints and unit test

* Remove settings and add stuff in settings to DEFAULT_CONFIG. Remove path_escape function.

* Avoid potential stack overflow issue when other stuff fails.

* Rename repo config file to sciunit.ini

* Update docstrings

* Update docstrings.

* Update docstrings.

* Delete old function

* Fill some descriptions.

* Update docstrings

* Update docstring

* Remove some parts of docstrings of some internal function.

* Update docstring

* Add config_set, config_get in __init__.py of the project.

* Requiring Python version >= 3.5

* Update unit tests, clean up `from __future__ import something`

* Update PR

* Remove methods printd and printd_set. Remove PRINT_DEBUG_STATE from default config.

* Update and rename log function.",os pathlib,"
Update Docstrings, Change os.path to pathlib (#165)",107,Filesystem,Filesystem,False,False
2371,scikit-hep/pyhf,021dd117d235ab62afd997652b3273d2491724e0,2020-03-18 03:38:43,pathlib,os,"refactor: Use pathlib over os.path for path (#798)

* Refactor to use pathlib over os.path module for path related functions
* Add tests for readxml.import_root_histogram",os pathlib,"
refactor: Use pathlib over os.path for path (#798)",107,Filesystem,Filesystem,False,False
2372,scikit-image/scikit-image,a31de841520135d97bc3ddf9c0d49d89b466fa9b,2018-11-01 19:13:03,pathlib,os,Use pathlib instead of os.path,os pathlib,"
Use pathlib instead of os.path",107,Filesystem,Filesystem,False,False
2373,shyamd/mkdocs-bibtex,63b6061265ec33b7a9c288948b7daae4f66807ca,2021-07-01 22:39:17,pathlib,os,replace os.path with PathLib and validation,os pathlib,"
replace os.path with PathLib and validation",107,Filesystem,Filesystem,False,False
2376,spraakbanken/sparv-pipeline,efdd74867922a244d801cd40e1f5dcfec47fc56d,2020-05-15 18:55:46,pathlib,os,Use pathlib instead of os.path in many places,os pathlib,"
Use pathlib instead of os.path in many places",107,Filesystem,Filesystem,False,False
2378,tophat/syrupy,dcb96faca2e61a886945c69d50b0b69d30ad3b5d,2020-02-21 20:59:11,pathlib,os,"Replace all instances of `os.path` with `pathlib` calls (#130)

* refactor: transition application code

* refactor: transition test code

* wip: insert new block instead of splitting",os pathlib,"
Replace all instances of `os.path` with `pathlib` calls (#130)",107,Filesystem,Filesystem,False,False
2382,widdowquinn/pyani,e3ca35e7e0ffdf9b4b595e3edb3c1d8f15879d7c,2019-11-01 08:29:16,pathlib,os,convert pyani/anim.py to use Pathlib not os.path,os pathlib,"
convert pyani/anim.py to use Pathlib not os.path",107,Filesystem,Filesystem,False,False
2385,zeromq/pyzmq,ca4cc3a0af45250fb22c51ba100e85a40f123ee2,2020-10-02 09:41:27,pathlib,os,asyncio-ironhouse.py: Change os.path.* to pathlib.Path,os pathlib,"
asyncio-ironhouse.py: Change os.path.* to pathlib.
Path",107,Filesystem,Filesystem,False,False
2386,Akuli/porcupine,9254a89d7f1b2da9b8b186d944d40ec697b78192,2021-02-11 12:44:54,sys,platform,"Sys platform (#344)

* use sys.platform

* delete unnecessary line of code",platform sys,"
* use sys.platform",10,Filesystem,Filesystem,False,False
2389,gem/oq-engine,bae8cda584a6b3624fbcb7dd41e0dc84e6e3b3df,2018-05-18 06:34:49,sys,platform,"Fixed sys.platform


Former-commit-id: fa0b883fefeb8ac235133318462a72fab67a0831 [formerly 617edf148be8dbe4d7687e69a46bf5d82009e87c]
Former-commit-id: b5138969ba78dbe8c2815410d1cef140474ffed6",platform sys,"
Fixed sys.platform",10,Filesystem,Filesystem,False,False
2390,joerick/pyinstrument,f91a77351443aeb1990b188b77f96a0128f7cddb,2019-05-20 02:37:32,sys,platform,"Use sys.platform rather than platform.platform(), as joerick RTFM for me :)",platform sys,"Use sys.platform rather than platform.platform(), as joerick RTFM for me :)
",10,Filesystem,Filesystem,False,False
2399,AlexAplin/nndownload,f3fb8fe3e5787deff3cdc0dd9739857c3d167517,2020-05-18 03:54:13,aiohttp,websockets,"Use AIOHTTP for WebSocket connections (#64)

* Rewrite nama support with AIOHTTP

- Use AIOHTTP instead of websockets
- Nama methods will now honor the proxy argument supplied by the user for the WebSocket connection, potentially needed for region locked streams
- More graceful handling of disconnections and errors

* Change minimum Python version (>=3.5.3) and required libraries",websockets aiohttp,"
Use AIOHTTP for WebSocket connections (#64)",10,HTTP Clients,HTTP Clients,False,False
2401,PythonistaGuild/Wavelink,a3ff5a3e84eac619c0573eed03cf237537d83009,2020-05-18 10:41:19,aiohttp,websockets,"Use aiohttp.ws instead of websockets (#53)

* Use aiohttp.ws instead of websockets
* Bump version to 0.8.0
* Remove unused json import",websockets aiohttp,"
Use aiohttp.ws instead of websockets (#53)",10,HTTP Clients,HTTP Clients,False,False
2403,Terbau/fortnitepy,a93c41585c2decdc9f4146819874220e29cb5acc,2020-06-27 12:48:53,aiohttp,websockets,use aiohttp websockets,websockets aiohttp,"
use aiohttp websockets",10,HTTP Clients,HTTP Clients,False,False
2406,miguelgrinberg/python-engineio,280aa0f00c0ca3d099c2a693f6c2ce7919d2dc86,2019-11-24 09:02:59,aiohttp,websockets,Use aiohttp's WebSocket client (Fixes https://github.com/miguelgrinberg/python-socketio/issues/324),websockets aiohttp,"
Use aiohttp's WebSocket client (Fixes https://github.com/miguelgrinberg/python-socketio/issues/324)",10,HTTP Clients,HTTP Clients,False,False
2407,streamlit/streamlit,3cbf470b9375ca4403c9f30d881eb2fe1ff44581,2018-02-03 15:59:22,aiohttp,websockets,Moved from websockets to aiohttp for the local server.,websockets aiohttp,"
Moved from websockets to aiohttp for the local server.",10,HTTP Clients,HTTP Clients,False,False
2408,timkpaine/tributary,bebf3740f4d5b559574279a76d2833139c60a2b8,2020-07-20 03:55:42,aiohttp,websockets,switch to aiohttp to support websockets behidn https,websockets aiohttp,"
switch to aiohttp to support websockets behidn https",10,HTTP Clients,HTTP Clients,False,False
2409,AlexandreDecan/sismic,9c45344fa4aaa27f99b6a166101cd2eff0f321b2,2016-09-06 06:48:21,ruamel.base,pyyaml,Use ruamel.yaml instead of pyyaml,pyyaml ruamel.base,"
Use ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2410,Anaconda-Platform/anaconda-client,a8266b154add8e6a4273448ce0eee5698352adac,2017-12-27 17:46:24,ruamel.base,pyyaml,"Replace PyYAML with ruamel.yaml (#448)

* Replace PyYAML with ruamel_yaml",pyyaml ruamel.base,"
Replace PyYAML with ruamel.yaml (#448)",62,Serialization,Serialization,False,False
2412,EducationalTestingService/skll,f7421646bb0da4b016ec76b596a8c0fae5d3f7ae,2016-05-13 15:48:33,ruamel.base,pyyaml,"Replace PyYAML imports with `ruamel.yaml`

- Or `ruamel_yaml` in case the user is using the conda package instead of the PyPI package.",pyyaml ruamel.base,"
Replace PyYAML imports with `ruamel.yaml`",62,Serialization,Serialization,False,False
2413,FORTH-ICS-INSPIRE/artemis,50235ba9f7cf786743e03c2a81bb40d3e09061f5,2018-08-03 15:42:30,ruamel.base,pyyaml,updated bgpstream record to valid yaml conf generation with ruamel,pyyaml ruamel.base,"
updated bgpstream record to valid yaml conf generation with ruamel",62,Serialization,Serialization,False,False
2415,Felienne/hedy,860f4da26aa89ed46573cb5138cf9f6d5b464900,2021-05-01 13:09:35,ruamel.base,pyyaml,"feat: add a translation tool

Hopefully makes it (slightly) easier to translate all Hedy content.

Visit:

```
http://<hedy>/translate/en/nl
```

(Or whatever pair of languages you want to translate)

This PR uses content from the ""adventure-mode"" branch (without actually
having the code that uses the data yet).

Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.

I am not proud of the code but it works and I wanted to get it out
quickly.",pyyaml ruamel.base,"
Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.",62,Serialization,Serialization,False,False
2417,Galvant/InstrumentKit,065d3d23d78ae2a91ed452d4610fb7607a5471fb,2017-04-20 13:24:15,ruamel.base,pyyaml,"Extended YAML (#164)

* Added test:// URI schema.

* Config: Py3 fix and support for setting attrs.

* Added sub/indexing to attrs config.

* Added to docstring.

* Added support for physical quantities to config.

* pylint fixes

* Tests for new setattr_expression

* Added tests for new config, YAML.

* pylint fix for new tests

* Very minor pylint fix

* Added ruamel.yaml as testing dep.

* Reworked awkward sentence.

* Updated docs for ruamel.yaml dep.

* Remove pyyaml, only use ruamel.yaml

* Disabled info category messages from mylint.

* Added version dump to travis config.

* Trying ot use python -m to work around venv issues.

* Revert ""Trying ot use python -m to work around venv issues.""

This reverts commit f73a2439116ba89b867893dbcfe00f1982e03694.

* ruamel.yaml vs ruamel_yaml and fixing pylint false +ve.

* Explicitly use unsafe loader as suggested by ruamel.yaml warnings.

* Marked test as explicitly unsafe as well.",pyyaml ruamel.base,"
* Updated docs for ruamel.yaml dep.",62,Serialization,Serialization,False,False
2419,LLNL/spack,63004e3de1473254c3b2a75f1e06afaabdacd7dd,2018-08-20 23:36:04,ruamel.base,pyyaml,"yaml: use ruamel.yaml instead of pyyaml

- ruamel.yaml allows round-tripping comments from/to files
- ruamel.yaml is single-source, python2/python3 compatible",pyyaml ruamel.base,"
yaml: use ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2422,NVIDIA/NeMo,4cf1e1ed0adc703d2f4366303a5d8a9cd11b86e7,2020-02-07 19:14:02,ruamel.base,pyyaml,"yaml -> ruamel yaml, import and requirements cleanups

Signed-off-by: Tomasz Kornuta <tkornuta@nvidia.com>",pyyaml ruamel.base,"
yaml  laifuhewb  ruamel yaml, import and requirements cleanups",62,Serialization,Serialization,False,False
2424,Parsely/streamparse,18fd2e9f0c2a8f716aad243bff961c2e962e800e,2016-07-27 14:40:12,ruamel.base,pyyaml,Switch from PyYAML to ruamel.yaml,pyyaml ruamel.base,"
Switch from PyYAML to ruamel.yaml",62,Serialization,Serialization,False,False
2426,QCoDeS/Qcodes,fca7c3b83d7e2148c2ea84438002dc870bd60afc,2020-08-28 10:40:35,ruamel.base,pyyaml,use ruamel.yaml instead of pyyaml,pyyaml ruamel.base,"
use ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2427,Quansight/qhub,dba5ed398ba34017198a631d7b9dea10e2c530a8,2021-04-20 19:20:55,ruamel.base,pyyaml,"Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys (#509)

* Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys

* Include qhub-config.yaml in tests artifacts

* YAML dump formatting

* Adding release notes for feature",pyyaml ruamel.base,"
Changing from pyyaml  laifuhewb  ruamel.yaml to ensure no duplicate keys (#509)",62,Serialization,Serialization,False,False
2429,RasaHQ/rasa,155f82ebb7b408851b3e7f3364bf1c5b34c2b6b3,2018-11-19 08:17:17,ruamel.base,pyyaml,replace `pyaml` with `ruamel.yaml`,pyyaml ruamel.base,"
replace `pyaml` with `ruamel.yaml`",62,Serialization,Serialization,False,False
2431,afourmy/e-napalm,3463d319e657b9971ba438ffa42ea0188ffedbd7,2019-08-08 20:46:13,ruamel.base,pyyaml,replace yaqml with ruamel for custom properties,pyyaml ruamel.base,"
replace yaqml with ruamel for custom properties",62,Serialization,Serialization,False,False
2432,andreoliwa/nitpick,a8e2958ec238111e355a3c645494a2850ea5929e,2019-06-17 00:10:07,ruamel.base,pyyaml,"feat(pre-commit): compare missing and different keys on hooks (#57)

* test: split pre-commit files and test the merged style

* refactor: compare Toml using the Comparison class

* refactor: create a Yaml format class

* refactor: Comparison class now accepts dictionaries on init

* feat: use package ruamel.yaml to better format YAML output

* refactor: remove PyYAML

* feat(pre-commit): check missing GitHub repos

* refactor: rename ""dict"" to ""data"" on the BaseFormat classes

* refactor(formats): function to compare using dictdiffer

* refactor(setup.cfg): use ""yield from"" and change arg order to ""actual/expected""

* feat(pre-commit): show missing and different values for repos

* refactor: move methods from Comparison to BaseFormat

* refactor: add PreCommitHook class

* refactor: add list of keys to ignore when using the comparison methods

* refactor: warn about missing and different keys

* chore: cleanup fixme and todo

* test: get_all_hooks_from() will split the YAML block

* test: hook with different args or additional dependencies

* refactor: remove unneeded encoding

* refactor(pyproject_toml): call warn_missing_different()

* refactor: remove unused code",pyyaml ruamel.base,"
* feat: use package ruamel.yaml to better format YAML output",62,Serialization,Serialization,False,False
2435,center-for-threat-informed-defense/adversary_emulation_library,6800e295b583c582bc56261f9fdba84de05152b7,2020-11-13 14:34:14,ruamel.base,pyyaml,"update plan_validator.py

- add roundtrip test
- add command builder test
- change pyyaml to ruamel.yaml",pyyaml ruamel.base,"
- add command builder test
- change pyyaml to ruamel.yaml",62,Serialization,Serialization,False,False
2436,certtools/intelmq,4797c8e963df393a1fdd1121dbe92145ae654037,2021-06-25 16:02:23,ruamel.base,pyyaml,"dev: remove pyyaml dependency for development envs

replace pyyaml by ruamel.yaml",pyyaml ruamel.base,"
replace pyyaml by ruamel.yaml",62,Serialization,Serialization,False,False
2438,conda-incubator/grayskull,a3612d5a1f99dfb868e8875850cd8844efd6c4f2,2020-02-09 22:50:48,ruamel.base,pyyaml,"Change to ruamel yaml (#23)

* Modify infra to add ruamel yaml

* __main__ small improvements

* Refactoring Selectors._parser

* Refactoring Selectors

* Refactoring RecipeItem

* Refactored section base

* Refactoring section and part of the base recipe

* Renamed base recipe and refactoring

* Refactoring pypi class and clean up",pyyaml ruamel.base,"
Change to ruamel yaml (#23)",62,Serialization,Serialization,False,False
2439,conda/conda,29c9c63e3af115e474348dc1f9350c0160f9ac69,2016-02-28 02:09:43,ruamel.base,pyyaml,use ruamel.yaml instead of pyyaml for comment roundtrip,pyyaml ruamel.base,"
use ruamel.yaml instead of pyyaml for comment roundtrip",62,Serialization,Serialization,False,False
2440,demisto/demisto-sdk,d459b478062da51e0c8c33bebac2ee3fc777d0cf,2020-02-23 11:09:20,ruamel.base,pyyaml,"create content fix - Yamlordereddict -> ryaml load + test infra (#208)

* width revert

* width revert

* load ryaml

* copy_func is ambigious - fixing

* copy_func is ambigious - fixing

* refactor101

* add unit test to the copy_fir_files

* yaakovi cr 101

* yaakovi cr 102

* yaakovi cr 103

* tmpdir twik

* tmpdir twik2

* yaakovi cr 104

* yaakovi cr 105

* add integration dir test

* rm _test",pyyaml ruamel.base,"
create content fix - Yamlordereddict  laifuhewb  ryaml load + test infra (#208)",62,Serialization,Serialization,False,False
2443,getnikola/nikola,4df5e99d2e26fc331b5421f886f67426ed5eea42,2019-02-13 17:13:37,ruamel.base,pyyaml,"Replace PyYAML with ruamel.yaml.

PyYAML is effectively unmaintained. Many sources are considering PyYAML
insecure, and even though this claim is debatable, they still want the
unsafe API to be default. Ruamel’s fork is actively maintained and has a
saner approach. In addition, if the YAML-config project eventually
becomes a thing, we would need that library anyway.

Signed-off-by: Chris Warrick <kwpolska@gmail.com>",pyyaml ruamel.base,"
Replace PyYAML with ruamel.yaml.",62,Serialization,Serialization,False,False
2445,gschivley/PowerGenome,7311ba6b66a751f537b5faf31329c8688ac0755f,2020-02-19 04:17:26,ruamel.base,pyyaml,Switch from pyyaml to ruaml,pyyaml ruamel.base,"
Switch from pyyaml to ruaml",62,Serialization,Serialization,False,False
2447,home-assistant-ecosystem/home-assistant-cli,df9f8c23fa9993f16c735159634f29d2a50e1a43,2019-02-07 14:46:15,ruamel.base,pyyaml,"Remove pyaml and move to ruamel only for yaml

Why:

 * using two libraries for yaml is annoying.
 * 0.4 accidentally used pyyaml incompatible with homeassistant so
   lets avoid that.

This change addreses the need by:

 * move all code to use ruamel yaml.
 * made it possible eventually to control what version of yaml
   ruamel will use if ever needed.",pyyaml ruamel.base,"
Remove pyaml and move to ruamel only for yaml",62,Serialization,Serialization,False,False
2448,homebysix/pre-commit-macadmin,24512ea1dfa98286a659ecce2543081a4f711548,2019-02-28 07:27:32,ruamel.base,pyyaml,Require ruamel.yaml for safe yaml parsing,pyyaml ruamel.base,"
Require ruamel.yaml for safe yaml parsing",62,Serialization,Serialization,False,False
2450,jwplayer/buildpipe-buildkite-plugin,cc3c88d004dae5e5f8f455d7340c71fb19a4b40c,2019-12-25 23:35:22,ruamel.base,pyyaml,Use ruamel.yaml instead of pyaml (#38),pyyaml ruamel.base,"
Use ruamel.yaml instead of pyaml (#38)",62,Serialization,Serialization,False,False
2451,kenfar/DataGristle,a749fb2169aedcfb2aa0034c17907df0531e92ed,2021-03-20 06:05:58,ruamel.base,pyyaml,"Add configs to each csv program

This includes:
    * replacing pyyaml with ruamel.yaml
    * adding --config-fn and --gen-config-fn
    * improving common.abort formatting
    * defaulting config file relative paths off config directory
    * refactoring configulator CommandLineArgs",pyyaml ruamel.base,"
This includes:
* replacing pyyaml with ruamel.yaml
* adding --config-fn and --gen-config-fn",62,Serialization,Serialization,False,False
2453,materialsproject/custodian,b4632bef69dc55027b2a2c0814f7748ef22c9ba1,2017-06-11 17:41:55,ruamel.base,pyyaml,Replace yaml with ruamel.,pyyaml ruamel.base,"
Replace yaml with ruamel.",62,Serialization,Serialization,False,False
2454,materialsproject/pymatgen,95e776b8f7ee047bfc3b839e3fbe13e0ca618a9f,2017-06-11 16:28:29,ruamel.base,pyyaml,Replace all yaml imports with ruamel.,pyyaml ruamel.base,"
Replace all yaml imports with ruamel.",62,Serialization,Serialization,False,False
2455,missionpinball/mpf,3b3a75ee9654074cfb530075ce1bd1b970f41d2f,2015-12-09 03:08:56,ruamel.base,pyyaml,"Switch yaml library from PyYAML to ruamel.yaml

Note this branch requires a different yaml parser!!! PyYAML is no
longer used. Instead, use this:

Mac/Linux:
sudo pip install ruamel.yaml

Windows:
pip install ruamel.yaml==0.10.10

Also added tests",pyyaml ruamel.base,"Switch yaml library from PyYAML to ruamel.yaml
",62,Serialization,Serialization,False,False
2462,pre-commit/pre-commit-hooks,a7626390387e153c3ff75edc353e3d8a8a73374a,2018-12-28 21:09:17,ruamel.base,pyyaml,switch from pyyaml to ruamel.yaml,pyyaml ruamel.base,"
switch from pyyaml to ruamel.yaml",62,Serialization,Serialization,False,False
2463,rabobank-cdc/DeTTACT,d0f2a4946b8579bd7635f0ac00252d6dc051408a,2019-07-31 08:18:57,ruamel.base,pyyaml,"- Made compatible with version 1.2 of the technique admin YAML file.
- Added new functionality for the auto-update of visibility scores.
- Added multiple new generic functions.
- Multiple small improvements to the technique admin YAML file health check.
- Replaced PyYAML with ruamel.yaml.
- Multiple functions made ""private"".
- Made compatible with v0.2.7 of attackcti.",pyyaml ruamel.base,"
- Replaced PyYAML with ruamel.yaml.",62,Serialization,Serialization,False,False
2466,scrapinghub/dateparser,fee300c3983c3192f462398908c8b175cd28eaa8,2016-06-16 07:49:12,ruamel.base,pyyaml,Replaced pyyaml by active fork: ruamel,pyyaml ruamel.base,"
Replaced pyyaml by active fork: ruamel",62,Serialization,Serialization,False,False
2467,tjhowse/modbus4mqtt,bdef5452d739543614d56ec28d7455864d3a69b4,2020-11-07 04:43:52,ruamel.base,pyyaml,"Fix value map misinterpretation (#17)

* Add a failing unit test to demonstrate issue.

* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.

* Ignore ,cover files.",pyyaml ruamel.base,"
* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.",62,Serialization,Serialization,False,False
2470,xoxys/ansible-doctor,cb76507159b4e3a66f7dd0288c6409ee134466f9,2019-10-15 08:48:18,ruamel.base,pyyaml,fully migrate to ruamel.yaml instead of pyyaml,pyyaml ruamel.base,"
fully migrate to ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2471,AlexandreDecan/sismic,9c45344fa4aaa27f99b6a166101cd2eff0f321b2,2016-09-06 06:48:21,ruamel.ordereddict,pyyaml,Use ruamel.yaml instead of pyyaml,pyyaml ruamel.ordereddict,"
Use ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2472,Anaconda-Platform/anaconda-client,a8266b154add8e6a4273448ce0eee5698352adac,2017-12-27 17:46:24,ruamel.ordereddict,pyyaml,"Replace PyYAML with ruamel.yaml (#448)

* Replace PyYAML with ruamel_yaml",pyyaml ruamel.ordereddict,"
Replace PyYAML with ruamel.yaml (#448)",62,Serialization,Serialization,False,False
2474,EducationalTestingService/skll,f7421646bb0da4b016ec76b596a8c0fae5d3f7ae,2016-05-13 15:48:33,ruamel.ordereddict,pyyaml,"Replace PyYAML imports with `ruamel.yaml`

- Or `ruamel_yaml` in case the user is using the conda package instead of the PyPI package.",pyyaml ruamel.ordereddict,"
Replace PyYAML imports with `ruamel.yaml`",62,Serialization,Serialization,False,False
2475,FORTH-ICS-INSPIRE/artemis,50235ba9f7cf786743e03c2a81bb40d3e09061f5,2018-08-03 15:42:30,ruamel.ordereddict,pyyaml,updated bgpstream record to valid yaml conf generation with ruamel,pyyaml ruamel.ordereddict,"
updated bgpstream record to valid yaml conf generation with ruamel",62,Serialization,Serialization,False,False
2477,Felienne/hedy,860f4da26aa89ed46573cb5138cf9f6d5b464900,2021-05-01 13:09:35,ruamel.ordereddict,pyyaml,"feat: add a translation tool

Hopefully makes it (slightly) easier to translate all Hedy content.

Visit:

```
http://<hedy>/translate/en/nl
```

(Or whatever pair of languages you want to translate)

This PR uses content from the ""adventure-mode"" branch (without actually
having the code that uses the data yet).

Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.

I am not proud of the code but it works and I wanted to get it out
quickly.",pyyaml ruamel.ordereddict,"
Change Python YAML dependency from **PyYAML** to **ruamel.yaml** because
it has better support for leaving the original file mostly in place.",62,Serialization,Serialization,False,False
2479,Galvant/InstrumentKit,065d3d23d78ae2a91ed452d4610fb7607a5471fb,2017-04-20 13:24:15,ruamel.ordereddict,pyyaml,"Extended YAML (#164)

* Added test:// URI schema.

* Config: Py3 fix and support for setting attrs.

* Added sub/indexing to attrs config.

* Added to docstring.

* Added support for physical quantities to config.

* pylint fixes

* Tests for new setattr_expression

* Added tests for new config, YAML.

* pylint fix for new tests

* Very minor pylint fix

* Added ruamel.yaml as testing dep.

* Reworked awkward sentence.

* Updated docs for ruamel.yaml dep.

* Remove pyyaml, only use ruamel.yaml

* Disabled info category messages from mylint.

* Added version dump to travis config.

* Trying ot use python -m to work around venv issues.

* Revert ""Trying ot use python -m to work around venv issues.""

This reverts commit f73a2439116ba89b867893dbcfe00f1982e03694.

* ruamel.yaml vs ruamel_yaml and fixing pylint false +ve.

* Explicitly use unsafe loader as suggested by ruamel.yaml warnings.

* Marked test as explicitly unsafe as well.",pyyaml ruamel.ordereddict,"
* Updated docs for ruamel.yaml dep.",62,Serialization,Serialization,False,False
2481,LLNL/spack,63004e3de1473254c3b2a75f1e06afaabdacd7dd,2018-08-20 23:36:04,ruamel.ordereddict,pyyaml,"yaml: use ruamel.yaml instead of pyyaml

- ruamel.yaml allows round-tripping comments from/to files
- ruamel.yaml is single-source, python2/python3 compatible",pyyaml ruamel.ordereddict,"
yaml: use ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2484,NVIDIA/NeMo,4cf1e1ed0adc703d2f4366303a5d8a9cd11b86e7,2020-02-07 19:14:02,ruamel.ordereddict,pyyaml,"yaml -> ruamel yaml, import and requirements cleanups

Signed-off-by: Tomasz Kornuta <tkornuta@nvidia.com>",pyyaml ruamel.ordereddict,"
yaml  laifuhewb  ruamel yaml, import and requirements cleanups",62,Serialization,Serialization,False,False
2486,Parsely/streamparse,18fd2e9f0c2a8f716aad243bff961c2e962e800e,2016-07-27 14:40:12,ruamel.ordereddict,pyyaml,Switch from PyYAML to ruamel.yaml,pyyaml ruamel.ordereddict,"
Switch from PyYAML to ruamel.yaml",62,Serialization,Serialization,False,False
2488,QCoDeS/Qcodes,fca7c3b83d7e2148c2ea84438002dc870bd60afc,2020-08-28 10:40:35,ruamel.ordereddict,pyyaml,use ruamel.yaml instead of pyyaml,pyyaml ruamel.ordereddict,"
use ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2489,Quansight/qhub,dba5ed398ba34017198a631d7b9dea10e2c530a8,2021-04-20 19:20:55,ruamel.ordereddict,pyyaml,"Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys (#509)

* Changing from pyyaml -> ruamel.yaml to ensure no duplicate keys

* Include qhub-config.yaml in tests artifacts

* YAML dump formatting

* Adding release notes for feature",pyyaml ruamel.ordereddict,"
Changing from pyyaml  laifuhewb  ruamel.yaml to ensure no duplicate keys (#509)",62,Serialization,Serialization,False,False
2491,RasaHQ/rasa,155f82ebb7b408851b3e7f3364bf1c5b34c2b6b3,2018-11-19 08:17:17,ruamel.ordereddict,pyyaml,replace `pyaml` with `ruamel.yaml`,pyyaml ruamel.ordereddict,"
replace `pyaml` with `ruamel.yaml`",62,Serialization,Serialization,False,False
2493,afourmy/e-napalm,3463d319e657b9971ba438ffa42ea0188ffedbd7,2019-08-08 20:46:13,ruamel.ordereddict,pyyaml,replace yaqml with ruamel for custom properties,pyyaml ruamel.ordereddict,"
replace yaqml with ruamel for custom properties",62,Serialization,Serialization,False,False
2494,andreoliwa/nitpick,a8e2958ec238111e355a3c645494a2850ea5929e,2019-06-17 00:10:07,ruamel.ordereddict,pyyaml,"feat(pre-commit): compare missing and different keys on hooks (#57)

* test: split pre-commit files and test the merged style

* refactor: compare Toml using the Comparison class

* refactor: create a Yaml format class

* refactor: Comparison class now accepts dictionaries on init

* feat: use package ruamel.yaml to better format YAML output

* refactor: remove PyYAML

* feat(pre-commit): check missing GitHub repos

* refactor: rename ""dict"" to ""data"" on the BaseFormat classes

* refactor(formats): function to compare using dictdiffer

* refactor(setup.cfg): use ""yield from"" and change arg order to ""actual/expected""

* feat(pre-commit): show missing and different values for repos

* refactor: move methods from Comparison to BaseFormat

* refactor: add PreCommitHook class

* refactor: add list of keys to ignore when using the comparison methods

* refactor: warn about missing and different keys

* chore: cleanup fixme and todo

* test: get_all_hooks_from() will split the YAML block

* test: hook with different args or additional dependencies

* refactor: remove unneeded encoding

* refactor(pyproject_toml): call warn_missing_different()

* refactor: remove unused code",pyyaml ruamel.ordereddict,"
* feat: use package ruamel.yaml to better format YAML output",62,Serialization,Serialization,False,False
2497,center-for-threat-informed-defense/adversary_emulation_library,6800e295b583c582bc56261f9fdba84de05152b7,2020-11-13 14:34:14,ruamel.ordereddict,pyyaml,"update plan_validator.py

- add roundtrip test
- add command builder test
- change pyyaml to ruamel.yaml",pyyaml ruamel.ordereddict,"
- add command builder test
- change pyyaml to ruamel.yaml",62,Serialization,Serialization,False,False
2498,certtools/intelmq,4797c8e963df393a1fdd1121dbe92145ae654037,2021-06-25 16:02:23,ruamel.ordereddict,pyyaml,"dev: remove pyyaml dependency for development envs

replace pyyaml by ruamel.yaml",pyyaml ruamel.ordereddict,"
replace pyyaml by ruamel.yaml",62,Serialization,Serialization,False,False
2500,conda-incubator/grayskull,a3612d5a1f99dfb868e8875850cd8844efd6c4f2,2020-02-09 22:50:48,ruamel.ordereddict,pyyaml,"Change to ruamel yaml (#23)

* Modify infra to add ruamel yaml

* __main__ small improvements

* Refactoring Selectors._parser

* Refactoring Selectors

* Refactoring RecipeItem

* Refactored section base

* Refactoring section and part of the base recipe

* Renamed base recipe and refactoring

* Refactoring pypi class and clean up",pyyaml ruamel.ordereddict,"
Change to ruamel yaml (#23)",62,Serialization,Serialization,False,False
2501,conda/conda,29c9c63e3af115e474348dc1f9350c0160f9ac69,2016-02-28 02:09:43,ruamel.ordereddict,pyyaml,use ruamel.yaml instead of pyyaml for comment roundtrip,pyyaml ruamel.ordereddict,"
use ruamel.yaml instead of pyyaml for comment roundtrip",62,Serialization,Serialization,False,False
2502,demisto/demisto-sdk,d459b478062da51e0c8c33bebac2ee3fc777d0cf,2020-02-23 11:09:20,ruamel.ordereddict,pyyaml,"create content fix - Yamlordereddict -> ryaml load + test infra (#208)

* width revert

* width revert

* load ryaml

* copy_func is ambigious - fixing

* copy_func is ambigious - fixing

* refactor101

* add unit test to the copy_fir_files

* yaakovi cr 101

* yaakovi cr 102

* yaakovi cr 103

* tmpdir twik

* tmpdir twik2

* yaakovi cr 104

* yaakovi cr 105

* add integration dir test

* rm _test",pyyaml ruamel.ordereddict,"
create content fix - Yamlordereddict  laifuhewb  ryaml load + test infra (#208)",62,Serialization,Serialization,False,False
2505,getnikola/nikola,4df5e99d2e26fc331b5421f886f67426ed5eea42,2019-02-13 17:13:37,ruamel.ordereddict,pyyaml,"Replace PyYAML with ruamel.yaml.

PyYAML is effectively unmaintained. Many sources are considering PyYAML
insecure, and even though this claim is debatable, they still want the
unsafe API to be default. Ruamel’s fork is actively maintained and has a
saner approach. In addition, if the YAML-config project eventually
becomes a thing, we would need that library anyway.

Signed-off-by: Chris Warrick <kwpolska@gmail.com>",pyyaml ruamel.ordereddict,"
Replace PyYAML with ruamel.yaml.",62,Serialization,Serialization,False,False
2507,gschivley/PowerGenome,7311ba6b66a751f537b5faf31329c8688ac0755f,2020-02-19 04:17:26,ruamel.ordereddict,pyyaml,Switch from pyyaml to ruaml,pyyaml ruamel.ordereddict,"
Switch from pyyaml to ruaml",62,Serialization,Serialization,False,False
2509,home-assistant-ecosystem/home-assistant-cli,df9f8c23fa9993f16c735159634f29d2a50e1a43,2019-02-07 14:46:15,ruamel.ordereddict,pyyaml,"Remove pyaml and move to ruamel only for yaml

Why:

 * using two libraries for yaml is annoying.
 * 0.4 accidentally used pyyaml incompatible with homeassistant so
   lets avoid that.

This change addreses the need by:

 * move all code to use ruamel yaml.
 * made it possible eventually to control what version of yaml
   ruamel will use if ever needed.",pyyaml ruamel.ordereddict,"
Remove pyaml and move to ruamel only for yaml",62,Serialization,Serialization,False,False
2510,homebysix/pre-commit-macadmin,24512ea1dfa98286a659ecce2543081a4f711548,2019-02-28 07:27:32,ruamel.ordereddict,pyyaml,Require ruamel.yaml for safe yaml parsing,pyyaml ruamel.ordereddict,"
Require ruamel.yaml for safe yaml parsing",62,Serialization,Serialization,False,False
2512,jwplayer/buildpipe-buildkite-plugin,cc3c88d004dae5e5f8f455d7340c71fb19a4b40c,2019-12-25 23:35:22,ruamel.ordereddict,pyyaml,Use ruamel.yaml instead of pyaml (#38),pyyaml ruamel.ordereddict,"
Use ruamel.yaml instead of pyaml (#38)",62,Serialization,Serialization,False,False
2513,kenfar/DataGristle,a749fb2169aedcfb2aa0034c17907df0531e92ed,2021-03-20 06:05:58,ruamel.ordereddict,pyyaml,"Add configs to each csv program

This includes:
    * replacing pyyaml with ruamel.yaml
    * adding --config-fn and --gen-config-fn
    * improving common.abort formatting
    * defaulting config file relative paths off config directory
    * refactoring configulator CommandLineArgs",pyyaml ruamel.ordereddict,"
This includes:
* replacing pyyaml with ruamel.yaml
* adding --config-fn and --gen-config-fn",62,Serialization,Serialization,False,False
2515,materialsproject/custodian,b4632bef69dc55027b2a2c0814f7748ef22c9ba1,2017-06-11 17:41:55,ruamel.ordereddict,pyyaml,Replace yaml with ruamel.,pyyaml ruamel.ordereddict,"
Replace yaml with ruamel.",62,Serialization,Serialization,False,False
2516,materialsproject/pymatgen,95e776b8f7ee047bfc3b839e3fbe13e0ca618a9f,2017-06-11 16:28:29,ruamel.ordereddict,pyyaml,Replace all yaml imports with ruamel.,pyyaml ruamel.ordereddict,"
Replace all yaml imports with ruamel.",62,Serialization,Serialization,False,False
2517,missionpinball/mpf,3b3a75ee9654074cfb530075ce1bd1b970f41d2f,2015-12-09 03:08:56,ruamel.ordereddict,pyyaml,"Switch yaml library from PyYAML to ruamel.yaml

Note this branch requires a different yaml parser!!! PyYAML is no
longer used. Instead, use this:

Mac/Linux:
sudo pip install ruamel.yaml

Windows:
pip install ruamel.yaml==0.10.10

Also added tests",pyyaml ruamel.ordereddict,"
Switch yaml library from PyYAML to ruamel.yaml",62,Serialization,Serialization,False,False
2524,pre-commit/pre-commit-hooks,a7626390387e153c3ff75edc353e3d8a8a73374a,2018-12-28 21:09:17,ruamel.ordereddict,pyyaml,switch from pyyaml to ruamel.yaml,pyyaml ruamel.ordereddict,"
switch from pyyaml to ruamel.yaml",62,Serialization,Serialization,False,False
2525,rabobank-cdc/DeTTACT,d0f2a4946b8579bd7635f0ac00252d6dc051408a,2019-07-31 08:18:57,ruamel.ordereddict,pyyaml,"- Made compatible with version 1.2 of the technique admin YAML file.
- Added new functionality for the auto-update of visibility scores.
- Added multiple new generic functions.
- Multiple small improvements to the technique admin YAML file health check.
- Replaced PyYAML with ruamel.yaml.
- Multiple functions made ""private"".
- Made compatible with v0.2.7 of attackcti.",pyyaml ruamel.ordereddict,"
- Replaced PyYAML with ruamel.yaml.",62,Serialization,Serialization,False,False
2528,scrapinghub/dateparser,fee300c3983c3192f462398908c8b175cd28eaa8,2016-06-16 07:49:12,ruamel.ordereddict,pyyaml,Replaced pyyaml by active fork: ruamel,pyyaml ruamel.ordereddict,"
Replaced pyyaml by active fork: ruamel",62,Serialization,Serialization,False,False
2529,tjhowse/modbus4mqtt,bdef5452d739543614d56ec28d7455864d3a69b4,2020-11-07 04:43:52,ruamel.ordereddict,pyyaml,"Fix value map misinterpretation (#17)

* Add a failing unit test to demonstrate issue.

* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.

* Ignore ,cover files.",pyyaml ruamel.ordereddict,"
* Switch to ruamel.yaml rather than pyyaml for YAML 1.2 support.",62,Serialization,Serialization,False,False
2532,xoxys/ansible-doctor,cb76507159b4e3a66f7dd0288c6409ee134466f9,2019-10-15 08:48:18,ruamel.ordereddict,pyyaml,fully migrate to ruamel.yaml instead of pyyaml,pyyaml ruamel.ordereddict,"
fully migrate to ruamel.yaml instead of pyyaml",62,Serialization,Serialization,False,False
2534,DRMacIver/hypothesis,233515e998f9fc1ea5bec40db52aaec879a64395,2018-08-28 02:44:20,json,pickle,Replace pickle with json in charmap.py,pickle json,"
Replace pickle with json in charmap.py",55,Serialization,Serialization,False,False
2540,OpenPrinting/system-config-printer,2f79956b0cf5bf82b575ef72550f26d958c8e0e4,2011-07-20 09:22:07,json,pickle,"Adjusted firewall code to match new system-config-firewall API (modified for CVE-2011-2520).

Uses json instead of pickle.",pickle json,"
Uses json instead of pickle.",55,Serialization,Serialization,False,False
2542,PyThaiNLP/pythainlp,20846076995e568e2c9b12cf52bd676f25e10b17,2020-12-04 18:46:24,json,pickle,pos tag: port pickle to json and add lst20 postag data,pickle json,"
pos tag: port pickle to json and add lst20 postag data",55,Serialization,Serialization,False,False
2543,RabadanLab/arcasHLA,f3297c327c0c0726f84a8a6ed27e0fc310918436,2021-04-13 22:36:57,json,pickle,update reference to use json in place of pickle,pickle json,"
update reference to use json in place of pickle",55,Serialization,Serialization,False,False
2549,aiven/karapace,3c62b565b1c7773191aeed35fa5e88498122c969,2021-03-16 14:26:55,json,pickle,"tests: replaced pickle with json

- pickle encodes the object's absolute module location while encoding, and
  use it while decoding.
- pytest will change the top-level module depending on the arguments it
  is provided, breaking pickle decoding.

This changes to use json, since that does not depends on the above.",pickle json,"
tests: replaced pickle with json",55,Serialization,Serialization,False,False
2550,choderalab/perses,6fd38ba0fa162e9f928aea20ece14dd8b447fb62,2016-07-04 01:23:04,json,pickle,Replace pickle object storage with JSON to overcome python 3.x issues,pickle json,"
Replace pickle object storage with JSON to overcome python 3.x issues",55,Serialization,Serialization,False,False
2552,cylc/cylc,ca5e126ca7ad1b0a03f74cc33c0e5368fb78d46a,2018-04-19 13:59:52,json,pickle,"db: pickle to json

Use JSON instead of pickle to serialise data structure such as list and
named tuples.",pickle json,"
Use JSON instead of pickle to serialise data structure such as list and
named tuples.",55,Serialization,Serialization,False,False
2557,douglasrizzo/catsim,caf60175309186fad247412e230bc0fa7fbbf1ae,2015-11-20 17:53:31,json,pickle,Changing serialization from pickle to json,pickle json,"
Changing serialization from pickle to json",55,Serialization,Serialization,False,False
2558,eLvErDe/nicotine-plus,9b9c40408390d065ecfdf9a48f9838bc1fa49870,2021-01-23 11:59:01,json,pickle,Replace usage of pickle with json,pickle json,"
Replace usage of pickle with json",55,Serialization,Serialization,False,False
2563,fossasia/pslab,c312a89fdd11a07f078cfbb570d004b8f24772e5,2020-09-06 15:18:04,json,pickle,Use JSON instead of pickle for serial traffic recordings,pickle json,"
Use JSON instead of pickle for serial traffic recordings",55,Serialization,Serialization,False,False
2564,frescobaldi/frescobaldi,a4ecfe8a9e56bc5b6bf786898370283998f89f2d,2010-12-10 16:42:19,json,pickle,use json instead of pickle,pickle json,"use json instead of pickle
",55,Serialization,Serialization,False,False
2566,h5py/h5py,01d982be3c478c3523078f023088bc25f7f6f3b1,2020-08-01 19:22:15,json,pickle,BLD: use json to pickle to stash build configuration,pickle json,"
BLD: use json to pickle to stash build configuration",55,Serialization,Serialization,False,False
2569,jamesoff/simplemonitor,1213405ae8255658e2d8e1ac08411262adabb00b,2018-10-20 09:41:15,json,pickle,Use JSON instead of pickle.,pickle json,"
Use JSON instead of pickle.",55,Serialization,Serialization,False,False
2572,korcankaraokcu/PINCE,a5b120da32183d90e37fd0797b5326103cac3e38,2017-04-11 13:33:25,json,pickle,pince-trace-instructions now uses json instead of pickle,pickle json,"
pince-trace-instructions now uses json instead of pickle",55,Serialization,Serialization,False,False
2574,maximumstock/poe-currency-flip-planner,d44f69f97ebe0555de233cfef27d9bb13eaf1058,2020-05-19 11:35:36,json,pickle,"refactor: simplify data models between pool, graph, collector, cli

- Flatten backend_pool result structure into a list of offers
- Use Offer and Edge classes instead of dicts
- Collector generates JSON instead of binary pickle format",pickle json,"
- Use Offer and Edge classes instead of dicts
- Collector generates JSON instead of binary pickle format",55,Serialization,Serialization,False,False
2575,nedbat/coveragepy,2147f7a65af6a9faa034771f15453b3260fad142,2015-07-22 00:32:39,json,pickle,Data files are now JSON instead of pickles. Fixes #236.,pickle json,"
Data files are now JSON instead of pickles.
Fixes #236.",55,Serialization,Serialization,False,False
2576,optuna/optuna,aa04914318178d3b73f3fd9ebc6e9172a4035687,2021-02-18 05:54:19,json,pickle,Use json instead of pickle.,pickle json,"Use json instead of pickle.
",55,Serialization,Serialization,False,False
2581,sephii/taxi,4201d5ba8a4968443b21c398eb6921765273abd7,2014-10-08 12:11:27,json,pickle,WIP use json format instead of pickle for projects db,pickle json,"
WIP use json format instead of pickle for projects db",55,Serialization,Serialization,False,False
2582,sharkwouter/minigalaxy,73aee77f08860e792c417ed3a0ecaaa9ba59947b,2020-10-29 19:10:45,json,pickle,Replace pickle with json for storing DLC status.,pickle json,"Replace pickle with json for storing DLC status.
",55,Serialization,Serialization,False,False
2586,yaph/geonamescache,5c6c6a37d85d34e7e0c5567fbe9d0c624d0e1232,2012-05-22 19:43:27,json,pickle,"tests for cities methods, use json as data format for cities to avoid python2/3 incompatibilities with pickle",pickle json,"
tests for cities methods, use json as data format for cities to avoid python2/3 incompatibilities with pickle",55,Serialization,Serialization,False,False
2587,zach401/acnportal,bf9387ce7caed7539649b218309284528637125c,2019-09-06 01:03:04,json,pickle,changed test_tutorial_2 to use json files instead of pickle,pickle json,"
changed test_tutorial_2 to use json files instead of pickle",55,Serialization,Serialization,False,False
2588,C4ptainCrunch/ics.py,ab4398b695ccab0e5237206fea7c6576ca42fbc4,2020-03-21 15:41:18,functools,notifications-python-client,"Remove arrow, transition to attrs and add Timespan (#222)

Most important breaking changes:

arrow was removed, use built-in datetime and timedelta instead
events, todos, attendees and alarms are now all lists instead of sets, as their contained types are not actually hashable and in order to keep the order they had in the file. Use append instead of add to insert new entries.
attendees and organizer now must be instances of the respective classes, plain strings with the e-mail are no longer allowed
extra can now only contain nested Containers and ContentLines, no plain strings
some attributes now have further validators that restrict which values they can be set to, which might further change once we have configurable levels of strictness
dtstamp and created have been separated, dtstamp is the only one set automatically (hopefully more conforming with the RFC)
Event.join is hard to do right and now gone if nobody needs it (and is able to formulate a clear behaviour faced with floating events vs events in different timezones and also all-day events)
method has_end() -> property has_explicit_end as any Event with a begin time has an end


* [WIP] new implementation of event timespan

This implementation collects all time-related attributes of an event - begin, end/duration and precision - in a single, isolated and easy to test class.
It also targets the three possible cases for time values - timezone-aware datetimes, floating datetimes and all-day dates.
Additionally to not doing anything implicitly (neither any fancy value conversion nor fancy indirect property access),it viciously guards the validity of its internal state.
The validity of each of the 4 values representing the event time is highly depending upon the other values.
Allowing mutation opens up easy ways of breaking validity - so the implementation is actually immutable, with each modification creating a new object and requiring a full revalidation of all 4 values together.
As the times shouldn't be modified that often, having the optimization of mutability shouldn't be strictly necessary.
Additionally, moving the functionality to its own class should make testing easier and keeps this quite complicated functionality clean from other concerns.
All this makes the timespan handling easier to implement correctly, but unfortunately not easier to use.
So I also started modifying the Event class to handle the interfacing in an user-friendly way and hide the complexity of timespans.

* remove arrow

ToDo:
- verify Timeline operation and Timespan Comparability (esp. with diverging timezones)
- ensure that correct parse_date(time) is used
- keep track of used_timezone information from serialize_datetime_to_contentline and generate VTIMEZONEs

* autoformat / clean-up imports

* mypy fixes and minor code cleanup

* add `attrs` goodness ✨

* bugfixes for cyclic / type-checking imports

* make mypy and static analysis happier

* fixes for attrs and mypy, proper comparision for timespan

Also, Event and Todo now share most of their code and Todo only renaming all the `end*` functions to `due`.
Timespan finally has proper comparision by defining lt and eq based on (begin, end) and the remaining functions generated by @functools.total_ordering.
Event and Todo also use the same ordering as _timespan is their first attribute.
Also contains fixes for Timespans with no begin (which are considered floating) and small timedelta floating-point arithmetic errors.

* properly support DTSTAMP, CREATED and LAST-MODIFIED for events and todos

fixes #200

* allow setting version and prodid to custom values

Also helps with #195 as we are now always filling in our defaults, but we still need to change the parser from raising an exception for this required=True attribute to issuing a warning.

* validation

* bugfixes

notable changes:
- parser methods can now be named parse[0-9]_something and will be called in alphabetical order
- all fields of type Set were converted to Lists, as their values are not really hashable (and the ics semantic is actually more list-like)
- has_end -> has_explicit_end
- Timespan has been split into TodoTimespan and EventTimespan to represent different end value semantics
- creator is an alias for prodid and dtstamp/created are set to default and parsed correctly
- add ensure_timedelta and use Timedelta/DatetimeLike correctly

* remove arrow from testsuite and fix as many as possible

* more test fixes

* enable runtime validation and conversion of attribute values

* also check item types of Container

* bug and test fixes

* implement order-comparision using tuples, functools.total_ordering and new attrs eq/cmp

The methods __eq__ and __ne__ are generated by attrs based on *all* attributes of the class
(except for Components' _classmethod_args, _classmethod_kwargs and iCalendars' _timezones)
We explicitly define __lt__ for Timespan based on (begin_time, effective_end_time)
and also __lt__ for Event based on (begin_time, effective_end_time, name)
using Timespan.cmp_tuples, defaulting values to datetime.min or empty string.
The functions __gt__, __le__, __ge__ are then generated from __lt__ and __eq__ using functools.total_ordering.
We then also need to make sure that subclasses using attrs don't override the comparision functions.

* properly implement and document event ordering

according to RFC 5545, clients should default to using local time for floating times, so all the complicated
normalization logic is replaced by simply default to tzlocal()

* mypy and test fixes

* docstring fixes, order Todos with due first

* clean-up

* Apply suggested docstring improvements from code review

Co-Authored-By: Tom Schraitle <tomschr@users.noreply.github.com>

* small docstring improvements

Co-authored-by: Tom Schraitle <tomschr@users.noreply.github.com>",notifications-python-client functools,"
Allowing mutation opens up easy ways of breaking validity - so the implementation is actually immutable, with each modification creating a new object and requiring a full revalidation of all 4 values together.
Also, Event and Todo now share most of their code and Todo only renaming all the `end*` functions to `due`.",3,Utility,Utility,False,False
2593,plotly/plotly.py,66349716fa9f3106eebcf0d0b3d61791a129bd06,2017-01-18 21:13:58,requests,json,"Use requests.compat.json instead of plain json.

The `requests` package kindly manages 2/3 compat for json for us, might
as well be consistent and use the same tool!

As a side note, I’d like to move away from `six` and depend directly on
`requests.compat`. I believe it has everything we need and then we can
ditch the `six` dep and know that we’re always in sync with whatever
requests is doing (which is really what we care about).",json requests,"
Use requests.compat.json instead of plain json.",3,Serialization&HTTP Clients,Serialization,False,False
2597,OpenPrinting/system-config-printer,f49c084afc1934cfd17a4845c302cc8df1c03d4e,2014-12-10 13:51:29,requests,pycurl,"Use pyrequests instead of pycurl for secure (verified certificate) downloads

pycurl stopped working after the OpenPrinting web server has moved
from Ubuntu 10.04 to 12.04.",pycurl requests,"
Use pyrequests instead of pycurl for secure (verified certificate) downloads",22,HTTP Clients,HTTP Clients,False,False
2598,benbusby/whoogle-search,b6fb4723f9589e54ed55be2254ed7e70db519322,2020-06-02 18:54:47,requests,pycurl,"Project refactor (#85)

* Major refactor of requests and session management

- Switches from pycurl to requests library
  - Allows for less janky decoding, especially with non-latin character
  sets
- Adds session level management of user configs
  - Allows for each session to set its own config (people are probably
  going to complain about this, though not sure if it'll be the same
  number of people who are upset that their friends/family have to share
  their config)
- Updates key gen/regen to more aggressively swap out keys after each
request

* Added ability to save/load configs by name

- New PUT method for config allows changing config with specified name
- New methods in js controller to handle loading/saving of configs

* Result formatting and removal of unused elements

- Fixed question section formatting from results page (added appropriate
padding and made questions styled as italic)
- Removed user agent display from main config settings

* Minor change to button label

* Fixed issue with ""de-pickling"" of flask session

Having a gitignore-everything (""*"") file within a flask session folder seems to cause a
weird bug where the state of the app becomes unusable from continuously
trying to prune files listed in the gitignore (and it can't prune '*').

* Switched to pickling saved configs

* Updated ad/sponsored content filter and conf naming

Configs are now named with a .conf extension to allow for easier manual
cleanup/modification of named config files

Sponsored content now removed by basic string matching of span content

* Version bump to 0.2.0

* Fixed request.send return style",pycurl requests,"
- Switches from pycurl to requests library
- Allows for less janky decoding, especially with non-latin character",22,HTTP Clients,HTTP Clients,False,False
2609,osuosl/ganeti_webmgr,fc9e8edea57094f28003fefa0e4e79e82c2eadc0,2012-01-25 20:09:08,requests,pycurl,"util/client: Rewrite to use requests instead of pycurl.

Life is good.",pycurl requests,"
util/client: Rewrite to use requests instead of pycurl.",22,HTTP Clients,HTTP Clients,False,False
2610,python-bugzilla/python-bugzilla,0575fce04fdd3c4486d04b20c782a7a06cf7a3ad,2013-10-31 17:15:44,requests,pycurl,"Use requests instead of pycurl

pycurl doesn't work on python3, and python-requests should do everything we
need.",pycurl requests,"
Use requests instead of pycurl",22,HTTP Clients,HTTP Clients,False,False
2612,sentinelsat/sentinelsat,c8552b2cc472f73384c810f507fd32d21c8bcf0e,2017-06-01 11:15:25,requests,pycurl,"Replace homura and pycurl with requests and tqdm

Split downloading-related tests to separate cassettes, since this caused issues with vcrpy otherwise.",pycurl requests,"
Replace homura and pycurl with requests and tqdm",22,HTTP Clients,HTTP Clients,False,False
2613,tasmota/decode-config,5be614174b1e282440fa0166e48c0d39bafb3ff1,2019-11-22 08:28:24,requests,pycurl,"decode-config.py: fix --restore-file, replace pycurl by requests

- fix error during --restore-file function
- replace lib pycurl by requests",pycurl requests,"
decode-config.py: fix --restore-file, replace pycurl by requests",22,HTTP Clients,HTTP Clients,False,False
2615,upstox/upstox-python,dce87602c4bcc41ddee1cfb06c5fe1866a338fee,2017-06-26 07:20:55,requests,pycurl,"* Convert enum type to custom enum
* Change supporting code
* Move from pyCurl to requests library
* Minor bugs",pycurl requests,"
* Change supporting code
* Move from pyCurl to requests library
* Minor bugs",22,HTTP Clients,HTTP Clients,False,False
2636,ApacheInfra/superset,90decbc5db523b41722cd86f1d4ef49c2f3acf31,2018-07-20 22:26:33,click,Flask,"Migrated to click (#5410)

* Migrate flask_script to the Flask built-in click.

Flask 0.11 is the built-in integration of the click command line interface.
Flask-Migrate support for the new Flask CLI based on Click after Release 2.0.0.

* Resolved merge conflicts.

* Fixed issue introduced from bad merge.

* Fixed flake8 errors, added build to excluded flake8 stuff.

* * Moved the FlaskGroup declaration to the driver script.
* Moved shell context definition to cli.py
* Switched shell context definition to use decorator.
* Moved create_app definition to cli.py
* Fixed InvocationError with a wrapped function

* Added extra newlines between functions

* Removed flask-script dependency.",Flask click,"* Migrate flask_script to the Flask built-in click.
",3,Web Framework,Web Framework,False,False
2638,lucyparsons/OpenOversight,e9311ddc2b03c9c2e15fabc8acd370caaf5ac366,2018-12-27 18:45:40,click,Flask,Switched from Flask-Script to built-in Flask CLI,Flask click,"
Switched from Flask-Script to built-in Flask CLI",3,Web Framework,Web Framework,False,False
2639,ApacheInfra/superset,e23920b8bab05232fac8b905bd28dfcec2f6b981,2019-08-02 17:01:28,urllib,requests,"7620: Start removing dependencies on requests (#7643)

* 7620: Start removing dependencies on requests

* Patch urllib.request.urlopen instead of requests.get

* Try to fix flake8

* More work on flake8 import errors

* First attempt at using urllib with cookies

* Fix pylint/flake8

* Fix test_deliver_slice_csv_attachment

* Fix test_deliver_slice_csv_inline

* Import requests and pydruid conditionally, remove dependency on prison

* Fix flake errors

* Fix load_examples

* Please flake

* Skip tests depending on optional deps

* Try to please flake

* Address review comments

* Remove Druid-related UI

* Revert ""Remove Druid-related UI""

This reverts commit d7e0f166cc3f3dd2496b4a666e177f0c191aeb0f.

* Skip a few tests more

* Put imports in right order

* Apply black patch

* Please flake

* Please black, silence flake

* Use flake8 silencing the right way

* Add deps for CI",requests urllib,"
* Patch urllib.request.urlopen instead of requests.get",37,HTTP Clients,HTTP Clients,False,False
2642,RDFLib/rdflib,a30fb38b6c81e4586ed059616c8e539ec9dce06b,2020-10-03 04:19:53,urllib,requests,replace requests with urllib,requests urllib,"
replace requests with urllib",37,HTTP Clients,HTTP Clients,False,False
2643,add-ons/plugin.video.vrt.nu,3f6015df98f4aad019da825819557f0e377e2798,2019-05-03 18:22:59,urllib,requests,Replace requests with urllib2 (#174),requests urllib,"
Replace requests with urllib2 (#174)",37,HTTP Clients,HTTP Clients,False,False
2645,balloob/pychromecast,74e72f6def7800e80d83978c11ff8a89a2809f66,2021-01-04 22:05:43,urllib,requests,"Use urllib.request instead of requests (#443)

* Use urllib.request instead of requests

* Tweak",requests urllib,"
Use urllib.request instead of requests (#443)",37,HTTP Clients,HTTP Clients,False,False
2650,emilsvennesson/script.module.inputstreamhelper,78b8aabbdbedef500191f4f25a688fa22b7b286c,2019-08-18 22:28:02,urllib,requests,"Replace requests and urllib3 with urllib/urllib2 (#71)

* Replace requests and urllib3 with urllib/urllib2

This PR includes:
- Replace requests library with urllib/urllib2
- Increase download chunk size by factor 32 to speed up transfer

* decode bytes to unicode",requests urllib,"
Replace requests and urllib3 with urllib/urllib2 (#71)",37,HTTP Clients,HTTP Clients,False,False
2653,hhursev/recipe-scraper,c8f3dc32f08344b45db258a1c5aa44392457b2d5,2015-09-14 12:56:45,urllib,requests,Remove unneeded requests lib,requests urllib,"
Remove unneeded requests lib",37,HTTP Clients,HTTP Clients,False,False
2654,jrkerns/pylinac,723d62835429aa5d8a16838e59b2e54e6d7e5f2c,2015-11-29 01:42:37,urllib,requests,"added temporary directories that unpack zip archives. `get_url` no longer uses requests; instead, retrieves url to local file",requests urllib,"
added temporary directories that unpack zip archives.
`get_url` no longer uses requests; instead, retrieves url to local file",37,HTTP Clients,HTTP Clients,False,False
2655,lalitpagaria/obsei,5b9ab8b09d15a883e9a0aca10264579f19583d2c,2021-05-19 08:11:02,urllib,requests,Use urllib instead of requests to mitigate SSL issue in windows systems (#103),requests urllib,"
Use urllib instead of requests to mitigate SSL issue in windows systems (#103)",37,HTTP Clients,HTTP Clients,False,False
2659,mozilla/code-coverage,90cc3e528d7314b40530cbcfab2eadd94bac7a2d,2017-04-27 16:01:20,urllib,requests,Use urllib instead of the requests package,requests urllib,"
Use urllib instead of the requests package",37,HTTP Clients,HTTP Clients,False,False
2660,mpvqc/mpvQC,54de55a29ad84aedab22b936a64c518d08800a39,2020-09-26 20:41:39,urllib,requests,"Use urllib instead of requests

It just doesn't feel right to add another dependency for just fetching a single text file.",requests urllib,"
Use urllib instead of requests",37,HTTP Clients,HTTP Clients,False,False
2661,obspy/obspy,9738b43c8dcac89d54327d18db77607101c17987,2017-10-11 12:41:58,urllib,requests,"- Update FederatedClient to use urllib2 request library instead of urllib3. FederatedClient now follows the same design as Client.
- Simplify parallel request test in test_federatedclient to speed things up.",requests urllib,"
- Update FederatedClient to use urllib2 request library instead of urllib3.
FederatedClient now follows the same design as Client.",37,HTTP Clients,HTTP Clients,False,False
2663,piqueserver/piqueserver,ad9e48e237b4f0331c8834f7396f4bed9850467e,2019-01-14 16:03:51,urllib,requests,Use urllib.request instead of requests to download geoip database,requests urllib,"
Use urllib.request instead of requests to download geoip database",37,HTTP Clients,HTTP Clients,False,False
2666,romanvm/service.addic7ed,b394e49dff3d67f13678e2081a7137d68f3b5f45,2019-06-01 18:47:34,urllib,requests,Use built-in urllib2 instead of requests library,requests urllib,"
Use built-in urllib2 instead of requests library",37,HTTP Clients,HTTP Clients,False,False
2668,sendgrid/sendgrid-python,e1a4f6ab9bdc7e2f133bbff936bba9cd9dfa1eb7,2014-02-06 03:50:33,urllib,requests,"updated to v0.2.5 to use urllib instead of external requests library, which was causing 'too many redirect' errors on app engine",requests urllib,"
updated to v0.2.5 to use urllib instead of external requests library, which was causing 'too many redirect' errors on app engine",37,HTTP Clients,HTTP Clients,False,False
2669,soimort/you-get,67c240abd043e5effd92f955d420f18e25c76dc2,2020-01-08 07:20:27,urllib,requests,use urllib instead of requests,requests urllib,"
use urllib instead of requests",37,HTTP Clients,HTTP Clients,False,False
2670,sony/nnabla-examples,7963861a6dddee6e3866cf8f20a0e7cf3a24ac57,2021-04-23 05:48:53,urllib,requests,Use urllib instead of requests,requests urllib,"
Use urllib instead of requests",37,HTTP Clients,HTTP Clients,False,False
2672,twu/skjold,6ff1b013494b89585bdb5b0124af145440db9141,2021-01-02 12:00:46,urllib,requests,"Fix CLI issue with settings/options precedence. (#20)

* Fix issue with CLI defaults overriding already set values. Fixes #11.
* Replaced tomlkit with the more commonly used toml.
* Replaced requests with urllib from the standard library.
* Remove pytest-env since it is unused.
* Updated dependencies.",requests urllib,"
* Replaced requests with urllib from the standard library.",37,HTTP Clients,HTTP Clients,False,False
2675,y0ssar1an/CSS3,d47e36b9f19cacaeed97752ae7f00e508b13d1d1,2015-02-23 03:54:18,urllib,requests,use requests instead of urllib to call validation server. make POST requests using multipart/form-data instead of terrible method using GET requests,requests urllib,"
use requests instead of urllib to call validation server.
make POST requests using multipart/form-data instead of terrible method using GET requests",37,HTTP Clients,HTTP Clients,False,False
2691,PSLmodels/Tax-Calculator,5f8f4b6910c130cd3d6a4c72bc8978b1095bb864,2016-01-26 21:23:39,json,simplejson,use json instead of simplejson,simplejson json,"
use json instead of simplejson",82,Serialization,Serialization,False,False
2693,StellarCN/py-stellar-base,610912b7df3eed688e85f63c19271694ab8e8237,2015-11-25 14:54:55,json,simplejson,"Fix import, simplejson to json",simplejson json,"
Fix import, simplejson to json",82,Serialization,Serialization,False,False
2695,achillean/shodan-python,73acd775cd86d99f15d8e400af832cfb7b477b0e,2010-09-07 13:24:52,json,simplejson,Filled out README.md and switched from simplejson to json,simplejson json,"
Filled out README.md and switched from simplejson to json",82,Serialization,Serialization,False,False
2697,akvo/akvo-rsr,91c77aea7d005b92d689a38a568fae489786b2d7,2012-11-07 14:36:30,json,simplejson,[#122] Replaced simplejson imports with json since this is now part of Python 2.7.,simplejson json,"
[#122] Replaced simplejson imports with json since this is now part of Python 2.7.",82,Serialization,Serialization,False,False
2703,bugsnag/bugsnag-python,d2dea0358002d47e05d1d131a2edca5455187a9d,2016-08-16 18:45:29,json,simplejson,"Move sanitization and encoding logic into encoder

* Makes a pre-encoding pass to clear recursion and filter metadata
* Handles all of the base types directly without duplication
* Exposes string-coercion logic directly through JSONEncoder.default()
* Replace import of simplejson with json (since bugsnag is Python 2.6+)",simplejson json,"
* Exposes string-coercion logic directly through JSONEncoder.default()
* Replace import of simplejson with json (since bugsnag is Python 2.6+)",82,Serialization,Serialization,False,False
2704,camptocamp/c2cgeoportal,d04085e9637e59b43bfadddf5d06e997c86474d9,2017-08-15 06:54:28,json,simplejson,Use json from the standard library instead of simplejson,simplejson json,"
Use json from the standard library instead of simplejson",82,Serialization,Serialization,False,False
2714,elastic/apm-agent-python,740cfb2facb741e9ca8eb0b824454d373e9bde93,2012-12-11 03:39:11,json,simplejson,"Shorten message, culprit and logger prior to send and:

- Ensure ""shorten"" really shortens to string_length, and not string_length + 3
- Do not require simplejson when plain json is available
- Various cleanups and pep8-itification.",simplejson json,"
- Ensure ""shorten"" really shortens to string_length, and not string_length + 3
- Do not require simplejson when plain json is available
- Various cleanups and pep8-itification.",82,Serialization,Serialization,False,False
2716,ewels/MultiQC,cf371007f62a6011bd256c979f0cbeb08831a263,2018-04-19 15:43:32,json,simplejson,"simplejson -> json

Attempt at plotting the background points first, to avoid writing
over the non-background points. Doesn't seem to work.",simplejson json,"
simplejson  laifuhewb  json",82,Serialization,Serialization,False,False
2717,exaile/exaile,a1078ad589947e556066301710a9d7ab15bf723a,2015-12-19 18:28:05,json,simplejson,"[Jamendo plugin] Retire bundled simplejson

The jamendo plugin is currently [shipping its own copy](https://github.com/exaile/exaile/tree/master/plugins/jamendo/simplejson) of [simplejson](https://github.com/simplejson/simplejson).
This copy is 6 years old.

Simplejson was [included in Python 2.6](https://docs.python.org/2/whatsnew/2.6.html#the-json-module-javascript-object-notation) as module `json`.
There is no need to ship a separate copy.
I guess there won't be anyone using exaile 4.x with python 2.5 or older (and I doubt that would work with GObject).
So I think we can just rely on json bundled with python.

I've tested the jamendo plugin and it works fine with json and simplejson.",simplejson json,"
I've tested the jamendo plugin and it works fine with json and simplejson.",82,Serialization,Serialization,False,False
2718,fedora-infra/fedmsg,e4e48e5dfca8c115bd180def7d25a2dc356ccdad,2012-07-17 20:11:56,json,simplejson,simplejson -> json.,simplejson json,"
simplejson  laifuhewb  json.",82,Serialization,Serialization,False,False
2719,galaxyproject/galaxy,559ecb4ec8f9314b6078dcd5f9fa51168e4548d4,2014-01-10 12:29:05,json,simplejson,Remove dependency on simplejson; convert everything over to using the json module in the python standard library.,simplejson json,"Remove dependency on simplejson; convert everything over to using the json module in the python standard library.
",82,Serialization,Serialization,False,False
2720,galaxyproject/pulsar,0365ab7eafa09d8b057983ba706d13d716686f08,2014-02-10 18:26:45,json,simplejson,"Drop dependency on simplejson, just use json.

Mirrors change made by @dannon to Galaxy.",simplejson json,"
Drop dependency on simplejson, just use json.",82,Serialization,Serialization,False,False
2722,googlefonts/fontbakery,f250bdf3ccd0a617ff238b91af6177065bdbbc28,2014-05-06 06:35:06,json,simplejson,replace simplejson with naive json python module #308,simplejson json,"replace simplejson with naive json python module #308
",82,Serialization,Serialization,False,False
2727,hydroshare/hydroshare,f11d58cba015616c73b81a944d9fa23ea0d1d7f0,2016-04-19 16:22:40,json,simplejson,"remove simplejson; use python built-in json; instead of clearing localStorage, just remove localStorage related to checkboxes",simplejson json,"
remove simplejson; use python built-in json; instead of clearing localStorage, just remove localStorage related to checkboxes",82,Serialization,Serialization,False,False
2728,internetarchive/openlibrary,c0f300ade9935278eaf5f5b5378d1553de3d25ac,2020-12-17 19:13:31,json,simplejson,Replace simplejson with python json in openlibrary/tests package for 2308 (#4301),simplejson json,"
Replace simplejson with python json in openlibrary/tests package for 2308 (#4301)",82,Serialization,Serialization,False,False
2736,metomi/rose,a2ff66cdfb73a9c52b91a92e5a654109f9e7edd1,2017-10-20 11:40:03,json,simplejson,"Replace simplejson with json in standard library

They are the same module from Python 2.6+.",simplejson json,"
Replace simplejson with json in standard library",82,Serialization,Serialization,False,False
2739,mozilla/balrog,a28adacab1180b6ff2747c458ebccb7cf54f5d3f,2019-09-18 13:00:46,json,simplejson,"Pip compile multi (#1002)

* Get rid of old requirements files, unused script and replace simplejson with json everywhere.

* Add new requirements.in files

* Generate full requirements files and update references to them.

* Fix missing dependencies that were breaking tests.

* Add missing uwsgi dependency.

* Include test.in in local.in

* Update agent requirements files.

* Move requests requirement to base.in in client

* Reformat client files with black.

* Fix missing dependencies.

* Re-add client tests to CI.

* Compile py2 requirements with python2

* Fix other references to client requirements.

* Fix flake8-black check for main balrog app.

* Add pyproject.toml everywhere and fix a black failure.

* Improve setup.py requirements parsing a bit more; fix up repoze.lru package name.

* Add clarifying comments to requirements file.

* Add MANIFEST.in to balrogclient dockerfile.",simplejson json,"
* Get rid of old requirements files, unused script and replace simplejson with json everywhere.",82,Serialization,Serialization,False,False
2753,tableau/TabPy,c2ac96c82ace05724c90effbe17ee6a15034fa4b,2019-04-08 22:38:09,json,simplejson,Replace simplejson with json,simplejson json,"
Replace simplejson with json",82,Serialization,Serialization,False,False
2756,tendenci/tendenci,b5ddfc0b7764965541834a7df80e427ad74e1317,2015-10-12 22:45:13,json,simplejson,"fix error on reports/add/ by switching simplejson to json

the error is: __init__() got an unexpected keyword argument 'iterable_as_array'",simplejson json,"
fix error on reports/add/ by switching simplejson to json",82,Serialization,Serialization,False,False
2757,thombashi/tcconfig,cb1683ca8615b03f38fced9c0e595fcf9610f383,2020-04-26 06:13:34,json,simplejson,Replace simplejson to ujson and make it to an optional package,simplejson json,"
Replace simplejson to ujson and make it to an optional package",82,Serialization,Serialization,False,False
2759,unt-libraries/django-premis-event-service,5d6b9b151e37c331a6e4e1284d90706d02b82928,2014-01-31 21:00:51,json,simplejson,Use standard json lib instead of simplejson (requires Python 2.6+),simplejson json,"
Use standard json lib instead of simplejson (requires Python 2.6+)",82,Serialization,Serialization,False,False
2761,weecology/retriever,7777598a02de71352eee9133d521f1c7b51e5621,2014-01-26 17:48:46,json,simplejson,"Switch back to using the json module instead of simplejson

1. Switch simplejson to json
2. Convert string representations of decimals to float instead of
   Decimal

We were using simplejson to support the use of Decimal values for
exporting floats, but we don't actually need to use Decimal values
because using floats accomplishes exactly the same formatting on
export. Therefore switching back to a core module is preferable.",simplejson json,"
Switch back to using the json module instead of simplejson",82,Serialization,Serialization,False,False
2772,aiidateam/aiida-core,68f840da709d796a81b8458171f34b2c13fbb784,2020-11-27 13:35:05,asyncio,tornado,"Engine: replace `tornado` with `asyncio`

The `plumpy` and `kiwipy` dependencies have already been migrated from
using `tornado` to the Python built-in module `asyncio` in the versions
`0.16.0` and `0.6.0`, respectively. This allows us to also rid AiiDA of
the `tornado` dependency, which has been giving requirement clashes with
other tools, specifically from the Jupyter and iPython world. The final
limitation was the `circus` library that is used to daemonize the daemon
workers, which as of `v0.17.1` also supports `tornado~=5`.

A summary of the changes:

 * Replace `tornado.ioloop` with `asyncio` event loop.
 * Coroutines are marked with `async` instead of decorated with the
   `tornado.gen.coroutine` decorator.
 * Replace `yield` with `await` when calling a coroutine.
 * Replace `raise tornado.gen.Return` with `return` when returning from
   a coroutine.
 * Replace `add_callback` call on event loop with `call_soon` when
   scheduling a callback.
 * Replace `add_callback` call on event loop with `create_task` when
   scheduling `process.step_until_terminated()`.
 * Replace `run_sync` call on event loop with `run_until_complete`.
 * Replace `pika` uses with `aio-pika` which is now used by the `plumpy`
   and `kiwipy` libraries.
 * Replace `concurrent.Future` with `asyncio.Future`.
 * Replace `yield tornado.gen.sleep` with `await asyncio.sleep`.

Additional changes:

 * Remove the `tornado` logger from the logging configuration.
 * Remove the `logging.tornado_loglevel` configuration option.
 * Turn the `TransportQueue.loop` attribute from method into property.
 * Call `Communicator.close()` instead of `Communicator.stop()` in the
   `Manager.close()` method. The `stop` method has been deprecated in
   `kiwipy==0.6.0`.",tornado asyncio,"
Engine: replace `tornado` with `asyncio`",7,Web Framework,Web Framework,False,False
2773,blaze/distributed,7c9da106b2edd543d3b420ad8270261c6a04ec5e,2020-02-03 17:09:37,asyncio,tornado,Replace tornado.locks with asyncio for Events/Locks/Conditions/Semaphore (#3397),tornado asyncio,"
Replace tornado.locks with asyncio for Events/Locks/Conditions/Semaphore (#3397)",7,Web Framework,Web Framework,False,False
2778,AppThreat/vulnerability-db,2f742c2f7e1daa830d9cd833bbbbbb72e5000605,2020-07-28 19:11:44,orjson,ujson,Replace ujson with orjson,ujson orjson,"
Replace ujson with orjson",4,Serialization,Serialization,False,False
2779,piccolo-orm/piccolo,59ccef0edcdb5e6d4fdc2dc0a92e9b10a56dfcfd,2020-08-12 21:00:35,orjson,ujson,using orjson for JSON serialisation when using output(as_json=True) clause,ujson orjson,"
using orjson for JSON serialisation when using output(as_json=True) clause",4,Serialization,Serialization,False,False
2781,zulip/zulip,61d0417e75a09075d9a61ac0ddd959efd6934478,2020-08-11 17:55:12,orjson,ujson,"python: Replace ujson with orjson.

Fixes #6507.

Signed-off-by: Anders Kaseorg <anders@zulip.com>",ujson orjson,"
python: Replace ujson with orjson.",4,Serialization,Serialization,False,False
2782,ArduPilot/MAVProxy,156f9646e21043248425807fd94fd08c74519353,2013-09-24 09:03:07,urllib2,httplib2,"swap urllib2 for httplib2 so we can download through an HTTP proxy.

close #19",httplib2 urllib2,"
swap urllib2 for httplib2 so we can download through an HTTP proxy.",7,HTTP Clients,HTTP Clients,False,False
2783,ganeti/ganeti,9279e986ea8d24d570c1d0cbca54590430ad538a,2010-05-11 14:27:22,urllib2,httplib2,"Remove httplib2 dependency from ganeti.rapi.client

- It's possible to implement all functionality in ganeti.rapi.client
  using Python's standard modules httplib and urllib2
- By doing so, proper SSL certificate verification is implemented
- Adjust some of the code to Ganeti's code style (this is not yet
  finished)

Signed-off-by: Michael Hanselmann <hansmi@google.com>
Reviewed-by: Iustin Pop <iustin@google.com>",httplib2 urllib2,"
- It's possible to implement all functionality in ganeti.rapi.client
using Python's standard modules httplib and urllib2
- By doing so, proper SSL certificate verification is implemented",7,HTTP Clients,HTTP Clients,False,False
2785,mozilla/mozregression,e37a10deea53ee9ca92c0234b339ad3f7cc2e8d2,2012-12-19 04:40:49,urllib2,httplib2,Fixing Issue #29 - show a percentage bar when downloading. Using urllib2 instead of httplib2 throughout mozregression now. TODO: Make progress bar more portable.,httplib2 urllib2,"
Fixing Issue #29 - show a percentage bar when downloading.
Using urllib2 instead of httplib2 throughout mozregression now.
TODO: Make progress bar more portable.",7,HTTP Clients,HTTP Clients,False,False
2789,AresValley/Artemis,f224fcc0bce483f8eb33a2faa351324acfa734ec,2018-11-03 19:38:05,urllib3,urllib,Add checksum control od db download and switch to urllib3,urllib urllib3,"
Add checksum control od db download and switch to urllib3",19,HTTP Clients,HTTP Clients,False,False
2790,Tautulli/Tautulli,c31d3ffd6c8550b514eb7e11a4c692516df30880,2020-01-01 18:10:52,urllib3,urllib,Download from MaxMind using urllib3 using certifi,urllib urllib3,"
Download from MaxMind using urllib3 using certifi",19,HTTP Clients,HTTP Clients,False,False
2791,TracyWebTech/django-revproxy,575bb3b4400e96286ebab46845ff7cd3783740ce,2014-12-12 03:09:09,urllib3,urllib,Replaced urllib2.urlopen by urllib3,urllib urllib3,"
Replaced urllib2.urlopen by urllib3",19,HTTP Clients,HTTP Clients,False,False
2792,affjljoo3581/canrevan,113587606b4056c7ecd6142af0ec93d1d7b4b923,2020-06-03 06:28:35,urllib3,urllib,Change to use urllib3 for performance,urllib urllib3,"
Change to use urllib3 for performance",19,HTTP Clients,HTTP Clients,False,False
2794,ckan/ckanext-harvest,6b6458f2eadd4eb022f5dd5d76993e9abbd39e7b,2018-10-29 11:50:39,urllib3,urllib,Use requests lib instead of urllib2,urllib urllib3,"Use requests lib instead of urllib2
",19,HTTP Clients,HTTP Clients,False,False
2795,cloudinary/pycloudinary,5e4fc9e46371f75dfa8acb578775da09ad06e075,2016-11-08 15:22:56,urllib3,urllib,Use urllib3,urllib urllib3,"
Use urllib3",19,HTTP Clients,HTTP Clients,False,False
2796,edmorley/newrelic-python-agent,b9cef7c66ba9b3f9aa749f1ce37dab3de3f27c8e,2020-08-05 16:21:13,urllib3,urllib,Change agent http client from requests to urllib3.,urllib urllib3,"
Change agent http client from requests to urllib3.",19,HTTP Clients,HTTP Clients,False,False
2801,mdmintz/SeleniumBase,765e64d6fb245c984eaca5927ecd11ceb5a8b66a,2018-08-30 06:56:51,urllib3,urllib,Use urllib3 for driver downloads,urllib urllib3,"Use urllib3 for driver downloads
",19,HTTP Clients,HTTP Clients,False,False
2802,nasa/apod-api,c8210d942472f97a6a030074ca5324f94b891805,2019-04-01 19:56:52,urllib3,urllib,changed 'import urllib.request' to 'import urllib3 as urllib',urllib urllib3,"
changed 'import urllib.request' to 'import urllib3 as urllib'",19,HTTP Clients,HTTP Clients,False,False
2813,libstorage/libstoragemgmt,78955edd5e87ec210b139bccbc2c88bf2c7c64b3,2015-02-23 18:20:29,sqlite3,pickle,"Simulator Plugin: Use sqlite3 to replace risky pickle

 * Replace SimData class(pickle) with BackStore class(sqlite3):
    * SimPlugin:
        1. Simple code to demonstrate how plugin should look like.
           Plan to use this file to hold python plugin developer guide.
    * SimArray:
        1. Handling lsm_data <-> sim_data converting.
        2. Session/Transaction management for data consistency of each API
           call using BackStore.trans_begin(), trans_commit() and
           trans_rollback().
    * BackStore:
        1. Organize sim_data from sqlite3 data file.
        2. Raise LsmError for each following lsm API definition.
           # It will save a lot of sqlite query time and code to do this in
           # BackStore class in stead of SimArray even SimArray seems a better
           # place to handle LsmError.

 * If statefile not exist, will create new file with 666 permission just
   in case someday we let simulator plugin running as root.

 * No complex data layout in database. Just integer, long, and text.

 * This patch purely maintain the same behaviour of old code except:
    1. Add replication support.
    2. Add timeout support using sqlite transaction lock timing.
    3. Add fs snapshot and clone support.
    4. Add more lsm API compliant LsmError handling.

 * Tested with 100 thread of lsmcli for concurrency action:
    # Concurrent creating
    for x in `seq 1 100`;
    do
        lsmenv sim lsmcli ac --name gris_ag_1$x \
            --init iqn.1986-05.com.example:gris-9$x --sys sim-01 -s &
    done
    # Duplicate creating
    for x in `seq 1 100`;
    do
        lsmenv sim lsmcli ac --name gris_ag_10 \
            --init iqn.1986-05.com.example:gris-10 --sys sim-01 -s &
    done

 * Tested by plugin_test.
 * Passed 'make check' test.

Changes in V2:

 * Use str(sql_error) to replace sql_error.message. The later has been
   deprecated.

 * Add ""PRAGMA foreign_keys = ON;"" to enforce the dependency delete.
   Removed unneeded REFERENCES child deletion.

 * Explicitly specify cascade delete action for child reference column when
   parent got deleted, example:
        FOREIGN KEY(pool_id) REFERENCES pools(id) ON DELETE CASCADE

 * Delegate complex calculation to database by creating these SQL VIEWS:
    * pools_view
      Handle total_space and free-space calculation.
    * disks_view
      Handle disk.name generation.
    * volumes_by_ag_view
      Handle volume mask query base on access group ID.
    * ags_view
      Handle AccessGroup.init_type and AccessGroup.init_ids calculation.
      The AccessGroup.init_ids will stored sim_ag['init_ids_str'] string
      splatted by '#'(BackStore._LIST_SPLITTER).
      # I am a SQL rookie, let me know if storing list as string in SQL VIEW
      # break any SQL fundamental rules.
      The AccessGroup.init_type is determined by database by counting the
      unique init_type of initiators.
    * ags_by_vol_view
      Handle volume mask query base on volume ID.
    * exps_view
      Handle NfsExport.root, NfsExport.rw, and NfsExport.ro calculation.
      Using the same algorithm of AccessGroup.init_ids in ags_view.

 * Update sim_xxxs() methods by using above SQL views.

 * Remove unneeded functions:
    * _list_to_dict_by_id()
    * _sort_by_id()

 * Change md_wrapper() to wrapper().

 * Since the python-sqlite2 module in Fedora 21 does not using identical
   error string as RHEL 6 and 7 do, remove error string check after
   expecting sqlite3.IntegrityError.

 * Tested by 'make rpm'[1] on:
    * RHEL 6 and 7
    * Centos 6 and 7
    * Fedora 20 and 21
    * OpenSuSE 13.1 and 13.2

[1] 'make rpm' will run 'make check' which contains C unit test,
    lsmcli test and plugin test against simulator plugin.

Signed-off-by: Gris Ge <fge@redhat.com>",pickle sqlite3,"
Simulator Plugin: Use sqlite3 to replace risky pickle",3,Database,Database,False,False
2815,CloudBotIRC/CloudBot,4b7cbb118cbabb0d133cdf58fd46d384a0002e61,2012-09-03 21:28:24,beautifulsoup4,beautifulsoup,Updated gcalc.py to use included copy of BeautifulSoup.,beautifulsoup beautifulsoup4,"
Updated gcalc.py to use included copy of BeautifulSoup.",63,HTML,HTML,False,False
2818,Diaoul/subliminal,4d06316d22c1834ec359b2c9ec90ae2ce2120619,2012-03-05 21:02:31,beautifulsoup4,beautifulsoup,ported services to BeautifulSoup4,beautifulsoup beautifulsoup4,"
ported services to BeautifulSoup4",63,HTML,HTML,False,False
2830,aag/apple_trailer_downloader,ac7506d45568ee40b390785b49c6fc33294567d1,2013-11-14 13:28:31,beautifulsoup4,beautifulsoup,Upgrade to Beautiful Soup 4 and fix README,beautifulsoup beautifulsoup4,"
Upgrade to Beautiful Soup 4 and fix README",63,HTML,HTML,False,False
2837,cfpb/cfgov-refresh,3262610155669294fa5b79c108b6a244d9d03cbc,2016-03-23 17:20:49,beautifulsoup4,beautifulsoup,"Add script to parse through data for external links to search through ES data

- Add script to all processors
- Refactor script to use new version of Beautiful Soup
- Update requirements to use bs4",beautifulsoup beautifulsoup4,"- Add script to all processors
- Refactor script to use new version of Beautiful Soup
- Update requirements to use bs4",63,HTML,HTML,False,False
2838,cms-dev/cms,6f3b6049495e71bbecf0c9dc1e8cffe17c4fe986,2017-04-04 13:12:25,beautifulsoup4,beautifulsoup,"Port to BeautifulSoup 4

Following this guide:
https://www.crummy.com/software/BeautifulSoup/bs4/doc/#porting-code-to-bs4",beautifulsoup beautifulsoup4,"
Port to BeautifulSoup 4",63,HTML,HTML,False,False
2839,datalad/datalad,5f6480de298c776f9fbcb25c84f4c77ebe9e83f2,2013-07-31 18:13:51,beautifulsoup4,beautifulsoup,"ENH: use bs4 for BeautifulSoup, pass bs4's links and other stuff into evals",beautifulsoup beautifulsoup4,"
ENH: use bs4 for BeautifulSoup, pass bs4's links and other stuff into evals",63,HTML,HTML,False,False
2844,exaile/exaile,40aeaf0e4f041a5bf219bcb61dd3aa97fdf2b1c7,2016-12-19 22:10:37,beautifulsoup4,beautifulsoup,"LyricWiki: port to BeautifulSoup4

BeautifulSoup3 is not maintained any more since 2012, but it has a successor, BeautifulSoup4.
3 -> 4 transition:
* API breaks
* added python 3 compatibility",beautifulsoup beautifulsoup4,"
LyricWiki: port to BeautifulSoup4",63,HTML,HTML,False,False
2845,fabiocaccamo/django-freeze,fc05806dfe3a4b2272c8281554ec0bd43cd776e8,2015-10-19 16:26:49,beautifulsoup4,beautifulsoup,Updated BeautifulSoup dependency,beautifulsoup beautifulsoup4,"
Updated BeautifulSoup dependency",63,HTML,HTML,False,False
2855,lorien/grab,33a67792de5bafefb2e3a9be6b077858f6cf83f8,2014-02-15 16:29:20,beautifulsoup4,beautifulsoup,"Update soup.py

fix beautiful soup",beautifulsoup beautifulsoup4,"
fix beautiful soup",63,HTML,HTML,False,False
2857,mdmintz/SeleniumBase,3f4b09f4215c447b17d0c3694e5c2343b0e9c8c5,2017-07-19 20:55:34,beautifulsoup4,beautifulsoup,Have base_case use the updated BeautifulSoup4,beautifulsoup beautifulsoup4,"
Have base_case use the updated BeautifulSoup4",63,HTML,HTML,False,False
2861,privacyidea/privacyidea,0838eec21bae7e6f268b24ef2fbd4d8a4548e32e,2015-06-18 14:45:33,beautifulsoup4,beautifulsoup,replace beautifulsoup 3 with 4,beautifulsoup beautifulsoup4,"
replace beautifulsoup 3 with 4",63,HTML,HTML,False,False
2865,stephenmcd/mezzanine,7a2b479ac5bc4373baa98bd237987e4085f5f3d4,2014-06-25 22:13:31,beautifulsoup4,beautifulsoup,Use beautifulsoup4 for Python 3 support.,beautifulsoup beautifulsoup4,"
Use beautifulsoup4 for Python 3 support.",63,HTML,HTML,False,False
2867,sunpy/sunpy,34a506daf50a248208f1caa0f77b074e5547725f,2014-08-04 16:10:03,beautifulsoup4,beautifulsoup,changed import of BeautifulSoup.,beautifulsoup beautifulsoup4,"changed import of BeautifulSoup.
",63,HTML,HTML,False,False
2868,tendenci/tendenci,29a1d1b1186d3a5414cc29428aa04b89c8714e39,2018-03-20 19:46:03,beautifulsoup4,beautifulsoup,Update BeautifulSoup dependency,beautifulsoup beautifulsoup4,"
Update BeautifulSoup dependency",63,HTML,HTML,False,False
2873,translate/translate,1743ed465a638547913b60f0fa0723f231baa153,2014-02-25 16:25:09,beautifulsoup4,beautifulsoup,trados: Use BeautifulSoup4 instead of obsolete version 3,beautifulsoup beautifulsoup4,"
trados: Use BeautifulSoup4 instead of obsolete version 3",63,HTML,HTML,False,False
2877,Axelrod-Python/Axelrod,70f3a3520291812966b68d443dd94289939e0537,2016-05-08 02:58:57,multiprocessing,multiprocess,Move back to standard multiprocessing a nd dill back to pickle,multiprocess multiprocessing,"Move back to standard multiprocessing a nd dill back to pickle
",5,Utility,Utility,False,False
2881,mozilla/OpenWPM,4b600b2d20406ce75be1913a57a1b780d8dc61fc,2017-07-03 14:44:57,multiprocessing,multiprocess,Typo fix multiprocess -> multiprocessing,multiprocess multiprocessing,"
Typo fix multiprocess  laifuhewb  multiprocessing",5,Utility,Utility,False,False
2882,Axelrod-Python/Axelrod,6c2181dada934331d99ce43f4e8c15cde16f1192,2016-04-06 14:41:35,pathos,multiprocessing,Replace multiprocessing with pathos.multiprocess,multiprocessing pathos,"
Replace multiprocessing with pathos.multiprocess",7,Graphic,Graphic,False,False
2885,SimonBlanke/hyperactive,3a684e9ad72258fe890d987f2f90c4c8a0bf2db3,2020-06-20 09:24:24,pathos,multiprocessing,"avoid ""cannot serialize '_io.TextIOWrapper"" by using pathos multiprocessing",multiprocessing pathos,"
avoid ""cannot serialize '_io.
TextIOWrapper"" by using pathos multiprocessing",7,Graphic,Graphic,False,False
2886,aertslab/pySCENIC,ec23b900f001a51538dd1d9b8e186e8b26569cc0,2018-02-06 09:00:34,pathos,multiprocessing,Using pathos version of multiprocessing (uses dill to pickle).,multiprocessing pathos,"
Using pathos version of multiprocessing (uses dill to pickle).",7,Graphic,Graphic,False,False
2887,schlegelp/navis,1c8ffe63c8ed764d49228874f983545c6feb86e9,2021-05-09 14:18:49,pathos,multiprocessing,"enable parallel processing on lots of functions:
* move NeuronProcessor to core.utils
* add tests
* use pathos instead of multiprocessing",multiprocessing pathos,"
* add tests
* use pathos instead of multiprocessing",7,Graphic,Graphic,False,False
2888,tensorflow/quantum,fe81a992cb94596a7796c3db05a720fa8388dcc1,2020-03-17 10:35:36,pathos,multiprocessing,"Change from multiprocessing to pathos for windows compatability. (#161)

Co-authored-by: Michael Broughton <mbbrough@google.com>",multiprocessing pathos,"
Change from multiprocessing to pathos for windows compatability.
(#161)",7,Graphic,Graphic,False,False
2889,Axelrod-Python/Axelrod,72238a33e56b060aef1fe5ca246d08cc61f11313,2016-09-21 18:59:36,os,sys,Change sys to os lib for win detection.,sys os,"
Change sys to os lib for win detection.",5,Filesystem,Filesystem,False,False
2891,python-beaver/python-beaver,dbf57f01c642ed1513e7fa958a73c2c31c2528a8,2013-08-22 12:39:29,os,sys,"Use os._exit over sys.exit in signal handlers to quit cleanly

As per
http://thushw.blogspot.co.uk/2010/12/python-dont-use-sysexit-inside-signal.html
the use of `sys.exit` inside the signal handlers means that a
`SystemExit` exception is raised
(http://docs.python.org/2/library/sys.html#sys.exit) which can be caught
by try/except blocks that might have been executing at time of signal
handling, resulting in beaver failing to quit",sys os,"
Use os._exit over sys.exit in signal handlers to quit cleanly",5,Filesystem,Filesystem,False,False
2892,tendenci/tendenci,99fbaafed5706a4a0c52cbd258e0fed8d22eb45b,2017-10-12 14:25:44,os,sys,"Replaced sys.executable in subprocesses

Replaced sys.executable with os.environ.get('_', 'python') because sys.executable doesn't work with sites running under uwsgi.",sys os,"
Replaced sys.executable with os.environ.get('_', 'python') because sys.executable doesn't work with sites running under uwsgi.",5,Filesystem,Filesystem,False,False
2895,BigBrotherBot/big-brother-bot,1780823714329202245473a2b91fb3039876bf74,2012-04-06 19:59:35,unittest2,unittest,TESTS: make tests use module unittest2 instead of native unittest for python 2.6 compatibility,unittest unittest2,"
TESTS: make tests use module unittest2 instead of native unittest for python 2.6 compatibility",140,Testing,Testing,False,False
2900,Hugovdberg/PIconnect,a433a5470d5580992fac8a5f8505ac176cdfde99,2018-11-14 21:39:38,unittest2,unittest,"Add warning regarding unknown host (#232)

* Added warning to PIServer for unknown hosts, added test case

* Added warnings to PIAFDatabase class for unknown server or database, including tests

* Changed format strings to regular strings to keep support for Python versions below 3.6

* Changed to unittest2 framework for backwards compatibility in Python 2

* Added another block level ignore because codacy has an older version of Pylint

Closes #75",unittest unittest2,"
* Changed to unittest2 framework for backwards compatibility in Python 2",140,Testing,Testing,False,False
2904,PythonCharmers/python-future,a4a0fbcc34f7c079c59fcd8b237e6e50b983def7,2013-10-27 23:22:08,unittest2,unittest,Use unittest2 on Python 2.6,unittest unittest2,"Use unittest2 on Python 2.6
",140,Testing,Testing,False,False
2905,SatelliteQE/robottelo,3fb471fc549ecb87d17c92954ad263e98a4e8b45,2015-09-16 15:10:20,unittest2,unittest,"Switch to unittest2

All occurrences of unittest should have been caught, except for the references
in the documentation. (And the documentation needs quite a few updates, at this
point.)

    $ git grep -i 'unittest[\. ]'
    docs/index.rst:    $ python -m unittest discover -s tests/robottelo -t .
    docs/index.rst:    $ python -m unittest discover -s tests/foreman -t .
    docs/index.rst:    $ python -m unittest discover \
    docs/index.rst:    $ python -m unittest tests.robottelo.test_decorators
    docs/index.rst:    $ python -m unittest tests.robottelo.test_decorators.DataDecoratorTestCase
    docs/index.rst:    $ python -m unittest tests.robottelo.test_decorators.DataDecoratorTestCase.test_data_decorator_smoke
    docs/index.rst:    $ python -m unittest discover -s tests/ -t . -v
    docs/index.rst:    $ python -m unittest \
    docs/index.rst:    $ python -m unittest discover -s tests/foreman/api/
    docs/index.rst:    $ python -m unittest discover -s tests/foreman/cli/
    docs/index.rst:    $ python -m unittest discover -s tests/foreman/ui/
    docs/index.rst:.. _unittest: http://docs.python.org/2/library/unittest.html

Pylint results:

    $ pylint -j 4 --reports n $(git diff master --name-only) | grep -i unittest
    No config file found, using default configuration
    W: 34, 0: FIXME: Use unittest2's subTest context manager instead of this and @ddt.data. (fixme)

Sample CLI test results:

    $ make test-foreman-cli
    python -m cProfile -o test-foreman-cli.pstats $(which nosetests) --logging-filter=nailgun,robottelo --with-xunit --xunit-file=foreman-results.xml tests/foreman/cli
    .....ESSSSSSSSS...........SSSSSSS.SSSSSS.
    ======================================================================
    ERROR: @Test: Test that subscription can be added to activation key
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File ""/home/ichimonji10/code/robottelo/tests/foreman/cli/test_activationkey.py"", line 1416, in test_add_subscription
        manifest = manifests.clone()
      File ""robottelo/manifests.py"", line 167, in clone
        with zipfile.ZipFile(new_path) as oldzip:
      File ""/usr/lib64/python2.7/zipfile.py"", line 770, in __init__
        self._RealGetContents()
      File ""/usr/lib64/python2.7/zipfile.py"", line 811, in _RealGetContents
        raise BadZipfile, ""File is not a zip file""
    BadZipfile: File is not a zip file

    ----------------------------------------------------------------------
    Ran 41 tests in 284.720s

    FAILED (SKIP=22, errors=1)

Sample UI test results:

    $ make test-foreman-ui
    python -m cProfile -o test-foreman-ui.pstats $(which nosetests) --logging-filter=nailgun,robottelo --with-xunit --xunit-file=foreman-results.xml tests/foreman/ui
    .E.^C
    ======================================================================
    ERROR: @Test: Test that RH product can be associated to Activation Keys
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File ""/home/ichimonji10/code/robottelo/tests/foreman/ui/test_activationkey.py"", line 1191, in test_associate_product_1
        with open(manifests.clone(), 'rb') as manifest:
      File ""robottelo/manifests.py"", line 167, in clone
        with zipfile.ZipFile(new_path) as oldzip:
      File ""/usr/lib64/python2.7/zipfile.py"", line 770, in __init__
        self._RealGetContents()
      File ""/usr/lib64/python2.7/zipfile.py"", line 811, in _RealGetContents
        raise BadZipfile, ""File is not a zip file""
    BadZipfile: File is not a zip file

    ----------------------------------------------------------------------
    Ran 3 tests in 179.495s

    FAILED (errors=1)

I believe the failed tests are due to a partially configured configuration file,
not the changes herein.",unittest unittest2,"
Switch to unittest2",140,Testing,Testing,False,False
2907,StingraySoftware/HENDRICS,6de155d61618847e1bb26a2a17dae4655e35abfc,2015-01-05 15:55:36,unittest2,unittest,"data directory moved to tests/, as data are mainly used for tests; unit test includes correctly the data directory",unittest unittest2,"
data directory moved to tests/, as data are mainly used for tests; unit test includes correctly the data directory",140,Testing,Testing,False,False
2910,Toblerity/Shapely,99a0cf56b34fd642d394221a8e8ac376f97d75ba,2013-11-18 11:27:00,unittest2,unittest,"Allow tests to work on different versions of Python and GEOS
 - Add distutils as a fail-safe if setuptools is not available
 - For Python 2.6, require unittest2 to use modern unittest features,
   and with each test modules use `from . import unittest` to use it
 - Use `@unittest.skipIf` rather than `if` blocks to skip tests
   - Prepared geometries require GEOS 3.1.0
   - Linear referencing requires GEOS 3.2.0
   - Unary union requires GEOS 3.3.0
   - ndarrays requires Numpy (I can't do anything with the .txt tests!)
   - Speedups require them to be available (via Cython)
 - Update a few deprecated methods like failUnlessAlmostEqual
 - Several other misc PEP8 in geos.py",unittest unittest2,"
- Add distutils as a fail-safe if setuptools is not available
- For Python 2.6, require unittest2 to use modern unittest features,
and with each test modules use `from .",140,Testing,Testing,False,False
2912,ansible/awx,34ecd4e5b625787e49d9c08920de22e4c005f768,2015-07-29 19:07:40,unittest2,unittest,use python2.6 safe unittest2,unittest unittest2,"
use python2.6 safe unittest2",140,Testing,Testing,False,False
2915,beaker-project/beaker,c69dbdb27b1db78707f40f16fa114075e6578544,2013-07-24 05:03:04,unittest2,unittest,"need to set root logging level in beaker-import

Also started using unittest2 for its nicer assertion methods.

Change-Id: I255665b7e2ee45db615b2456bd19b57e14eded6f",unittest unittest2,"Also started using unittest2 for its nicer assertion methods.
",140,Testing,Testing,False,False
2918,canonical/cloud-init,fb5015fe3f5078149463838b7974523646f94eab,2018-09-27 21:02:28,unittest2,unittest,"cii-tests: use unittest2.SkipTest in ntp_chrony due to new deps

Git commitish fc4b966ba928b30b1c586407e752e0b51b1031e8 changed integration
test dependencies from unittest to unittest2.  Use unittest2.SkipTest in
test_chrony to avoid causing tracebacks.",unittest unittest2,"
cii-tests: use unittest2.
SkipTest in ntp_chrony due to new deps",140,Testing,Testing,False,False
2920,casacore/python-casacore,d1b80988304392e0713a6ed5104b481b676aa078,2016-02-26 13:56:31,unittest2,unittest,Quanta: add dicts with all units and prefixes,unittest unittest2,"
Quanta: add dicts with all units and prefixes",140,Testing,Testing,False,False
2921,celery/celery,8b2643618f0eb7fb4e09b8ab9af07e9c2e3e4f87,2010-03-11 14:04:49,unittest2,unittest,Use unittest2 features for better test diagnostics.,unittest unittest2,"
Use unittest2 features for better test diagnostics.",140,Testing,Testing,False,False
2923,circus-tent/circus,16c521963db69df046a952354d0bc3ea829bbac6,2012-06-16 01:02:31,unittest2,unittest,use unittest2 for py < 2.7,unittest unittest2,"
use unittest2 for py < 2.7",140,Testing,Testing,False,False
2926,darcymason/pydicom,12cd84ddfb28eb1ef44c1ac2dcd015878a112c5d,2015-11-30 22:40:17,unittest2,unittest,"Backport to Python 2.6

The proper way to achieve that is using unittest2 instead
of discarding code incompatible with unittest in Python 2.6.",unittest unittest2,"
The proper way to achieve that is using unittest2 instead
of discarding code incompatible with unittest in Python 2.6.",140,Testing,Testing,False,False
2931,dimagi/jsonobject,2bdddec43720c65485469d028f51a692349e7d22,2013-08-05 01:22:13,unittest2,unittest,use unittest2 for 2.6 support,unittest unittest2,"
use unittest2 for 2.6 support",140,Testing,Testing,False,False
2934,django-haystack/django-haystack,479f9d96c30712f1feb8688e2b109628d7a5d112,2012-09-29 18:02:43,unittest2,unittest,"Update unittest2 import logic

We'll try to get it from Django 1.3+ but Django 1.2 users will need to install
it manually",unittest unittest2,"
Update unittest2 import logic",140,Testing,Testing,False,False
2936,dw/mitogen,17da6e9998793e62e6760452380230bc3a9def24,2018-03-19 16:13:27,unittest2,unittest,"Use unittest2 in all tests

This allows using features such as TestCase,assertIsInstance on Python
2.6 and earlier.",unittest unittest2,"
Use unittest2 in all tests",140,Testing,Testing,False,False
2937,earwig/mwparserfromhell,88c8fb88e0cd788949109a2d9d1d4b12e574f1d2,2014-02-27 11:55:08,unittest2,unittest,Switch to `unittest2` to be able to use new features in Python 2.6.,unittest unittest2,Switch to `unittest2` to be able to use new features in Python 2.6.,140,Testing,Testing,False,False
2938,elastic/elasticsearch-py,fe7cc106f670861d4ef3174ee6614e6fc06bd8fa,2013-08-28 17:11:28,unittest2,unittest,Use unittest2 even for python 2.6,unittest unittest2,"
Use unittest2 even for python 2.6",140,Testing,Testing,False,False
2940,enthought/chaco,d9ba227fd51d4dedd017caf22c3795d35c66b098,2014-12-17 10:38:46,unittest2,unittest,Use unitest2.,unittest unittest2,"
Use unitest2.",140,Testing,Testing,False,False
2942,epsy/sigtools,c4d12f47053ba8bb2023fce0349265b1d49ae401,2015-08-13 20:09:59,unittest2,unittest,Switch to unittest2,unittest unittest2,"
Switch to unittest2",140,Testing,Testing,False,False
2946,galaxyproject/bioblend,bc3c83a3ee69f4f8bf0b09c283a253597e34c946,2014-07-22 14:16:16,unittest2,unittest,Use unittest2 for Python < 2.7 .,unittest unittest2,"
Use unittest2 for Python < 2.7 .",140,Testing,Testing,False,False
2948,google/apitools,4d1e56159c45c23ae6d4fd99073a11794c28d77e,2015-09-18 21:58:35,unittest2,unittest,Update a unittest skip for py26 compatibility.,unittest unittest2,"
Update a unittest skip for py26 compatibility.",140,Testing,Testing,False,False
2949,google/google-api-python-client,497a90f67d9ffd5403690590d6924eeac0c941d4,2015-03-09 16:52:54,unittest2,unittest,"Using unittest2 in place of unittest

Used for Python 2.6 compatibility in testing.",unittest unittest2,"
Using unittest2 in place of unittest",140,Testing,Testing,False,False
2952,haypo/perf,09a85443c4a8b055fb91aac1a37abcc4d8b0750e,2016-06-09 19:03:03,unittest2,unittest,"update unit tests

* number of runs/samples is no more displayed by default
* add unittest2 test dependency",unittest unittest2,"
update unit tests",140,Testing,Testing,False,False
2955,iconfinder/pyvat,14673123cff71855e92b5444befb830abbd259c8,2014-11-25 15:57:00,unittest2,unittest,Switch to unittest2 for backwards compatibility in tests.,unittest unittest2,"
Switch to unittest2 for backwards compatibility in tests.",140,Testing,Testing,False,False
2962,jorisroovers/gitlint,0c66f6dca43eac634d37752dd41d37b7fdbec608,2017-05-14 00:35:17,unittest2,unittest,"New rule: author-valid-email

This commits adds a new rule (author-valid-email) that validates that the commit
author email address is a valid email address. The rule has a regex option that
allows users to configure specify which email addresses they want to be
considered valid.

Also changed the 'unittest' import back to 'unittest2' to fix a regression with
the integration tests in python 2.6.",unittest unittest2,"Also changed the 'unittest' import back to 'unittest2' to fix a regression with
the integration tests in python 2.6.
",140,Testing,Testing,False,False
2970,materialsproject/pymatgen,c51a98c5dc268ad75206f829343a5a08da75ddaa,2016-04-12 13:48:16,unittest2,unittest,"Try switching everything to unittest2 for future proofing.


Former-commit-id: cebd442765ef4acaf10379bc52165f13c80b1dd3 [formerly df2ceffe7ec9f9bffc4d801c376cad689a29ccc5]
Former-commit-id: c809100fabd4cceb2ff9f97bb8b2a3613cb3f280",unittest unittest2,"
Try switching everything to unittest2 for future proofing.",140,Testing,Testing,False,False
2991,pajbot/pajbot,ec91280258fbacd782939f30d8edff26f029e500,2016-02-01 03:47:39,unittest2,unittest,now using unittests2,unittest unittest2,"
now using unittests2",140,Testing,Testing,False,False
2992,pantsbuild/pants,f5c3a749ab11538a4dfedeb5e5aec43dc0d58051,2014-08-07 11:23:31,unittest2,unittest,"Updates error message when referencing the wrong path to a BUILD file.

Before, it would just spit out the incorrect BUILD file path.:

  Exception message: BUILD file does not exist at: /Users/zundel/Src/Pants/src/java/com/pants/examples/annotation/exampleTYPO

Now it will read as follows:

  Exception message: BUILD file does not exist at: /Users/zundel/Src/Pants/src/java/com/pants/examples/annotation/exampleTYPO
    referenced from src/java/com/pants/examples/annotation/processor:processor
    referenced from src/java/com/pants/examples/annotation/main:main

Testing Done:
Updated unit tests, ci passed at https://travis-ci.org/pantsbuild/pants/jobs/31812266

Bugs closed: 442

Reviewed at https://rbcommons.com/s/twitter/r/841/",unittest unittest2,"Testing Done:
Updated unit tests, ci passed at https://travis-ci.org/pantsbuild/pants/jobs/31812266
",140,Testing,Testing,False,False
2996,pydata/xarray,abf680ef333cebd4e959f81c3d662855a9e5c6c0,2014-07-01 00:34:29,unittest2,unittest,Use unittest2 rather than unittest,unittest unittest2,"
Use unittest2 rather than unittest",140,Testing,Testing,False,False
2997,pyinstaller/pyinstaller,e64f83a458e4ddb5cd53da4e2f5c23121713f01a,2012-01-19 22:33:02,unittest2,unittest,Issue #485: Modify junitxml library to use unittest2 framework.,unittest unittest2,"
Issue #485: Modify junitxml library to use unittest2 framework.",140,Testing,Testing,False,False
2999,pywbem/pywbem,98d53fc3c09057d5ecd2cdacd5d4706ea0d6ff99,2017-11-10 15:35:58,unittest2,unittest,"Improved checks and conversions when setting attributes in cim_obj.py.

The motivation for this change is:

1. The constructor parameters are subject to certain checks and automatic
   conversions. The instance attributes can be modified through their setter
   methods, but currently they only store the provided values. It would be
   more consistent if the same checks and automatic conversions would be
   performed by the setter methods, as in the constructor.
   This contributes also to addressing issue 746.

Details:

* Updating attributes of objects of CIM object classes (e.g. updating
  the `value` attribute of a `CIMProperty` object) now applies the same
  conversions and nearly the same checks as for the same-named
  constructor parameters.

* Changed parameter/attribute conversions and checks in applicable CIM
  object classes (from `CIMInstanceName`, `CIMInstance`, `CIMClassName`,
  `CIMClass`, `CIMProperty`, `CIMMethod`, `CIMParameter`, `CIMQualifier`,
  `CIMQualifierDeclaration`) as follows:

  - For classes with a `classname` parameter/attribute (i.e.
    `CIMInstanceName`, `CIMInstance`, `CIMClassName`, `CIMClass`),
    the requirement for the `classname` parameter/attribute not to be
    `None` that had previously been documented is now enforced by
    raising `ValueError`  both when initializing an object and when
    setting the `classname` attribute.

    Previously, `None` for the classname was tolerated for all classes
    when setting the attribute, and for `CIMInstance` and `CIMClass`
    when initializing an object, and `CIMClassName` and `CIMInstanceName`
    raised `TypeError` when it was `None`.

  - For classes with a `name` parameter/attribute (i.e. `CIMProperty`,
    `CIMMethod`, `CIMParameter`, `CIMQualifier`,
    `CIMQualifierDeclaration`), the requirement for the `name`
    parameter/attribute not to be `None` that had previously been
    documented is now enforced by raising `ValueError` both when
    initializing an object and when setting the `name` attribute.

    Previously, initializing an object with `None` for the name was
    tolerated in `CIMParameter`, `CIMQualifier`, and
    `CIMQualifierDeclaration`, caused `TypeError` to be raised in
    `CIMMethod` (and caused `ValueError` to be raised in `CIMProperty`
    like now). Setting the `name` atribute to `None` was tolerated
    by all those classes.

  - When initializing objects of classes with an optional `type`
    parameter and a `value` parameter (i.e. `CIMProperty`,
    `CIMQualifier`), the type is now inferred from the `value` parameter,
    if the type is `None`. If that is not possible (for example because
    the value is a Python integer, float or `None`), `ValueError` is
    raised. When setting the `type` attribute, no inferring from `value`
    is performed.

    Previously, inferring the type was implemented only for initializing
    `CIMProperty` and `CIMQualifier`, and `TypeError` was raised if the
    type could not be inferred. In all other cases, a type of `None` was
    tolerated.

  - For classes with a required `type` parameter (i.e. `CIMParameter`,
    `CIMQualifierDeclaration`), the `type` parameter is now enforced not
    to be `None` both when initializing an object and when setting the
    attribute, and `ValueError` is raised if it is `None`.

    Previously, this was tolerated and the resulting object had a type
    of `None`.

  - For classes with a `value` parameter/attribute (i.e. `CIMProperty`,
    `CIMParameter`, `CIMQualifier`, `CIMQualifierDeclaration`), the
    provided value is now guaranteed to be converted to a CIM data type,
    both when initializing an object and when setting the attribute.

    Previously, strings have been converted to unicode, but all other
    values were stored as provided, resulting in values that were not
    CIM data types.

  - For classes with an `is_array` parameter/attribute (i.e.
    `CIMProperty`, `CIMParameter`, `CIMQualifierDeclaration`, that
    attribute is now inferred (if passed as `None`) from whether the
    `value` attribute is a list.

    Previously, that was done only for `CIMProperty`, and it was
    required to be provided for the other classes.

  - For parameters/attributes that are dictionaries (`properties`,
    `keybindings`, `parameters`, `qualifiers`), the consistency between
    the dict keys and the names of the CIM elements that are the dict
    values is now enforced (case insensitively) and `ValueError` is
    raised in case of inconsistencies. Added `_cim_keybinding()`,
    `_cim_property_value()`, `_cim_property_decl()`, `_cim_method()`,
    and `_cim_qualifier()` in support of that.

    Previously, such inconsistencies were tolerated.

  - Boolean parameters/attributes (e.g. `is_array`) are now converted
    to `bool` type unless they are `None`. Added `_ensure_bool()` in
    support of that.

    Previously, the provided value was stored, resulting in non-bool values
    for these attributes.

* For `CIMInstanceName`, specifying input keybindings as Python numeric types
  (`int`, `float`) has been deprecated, and an according deprecation warning
  will now be raised. These types had previously been documented to be
  invalid.

* For `CIMInstanceName`, the keybindings can now be specified as
  `CIMProperty` objects from which their value will be used (this is in
  addition to specfying the values of keybindings as CIM data types).

* Added static `from_wbem_uri()` methods to `CIMInstanceName` and
  `CIMClassName`, that create a new object of these classes from a
  WBEM URI string.

* Added a `cimvalue()` function that converts input values specified
  at the interface of CIM object classes, into the internally stored
  CIM value. The new function is part of the public API of pywbem.
  Its functionality is very close to the existing `tocimobj()`
  function.

* The other changes allowed to remove the meanwhile unused (and rather
  complex) internal function _intended_value() in cim_obj.py.

* Docs: Added examples for constructing `CIMQualifier` objects
  to the documentation of its init function.

* Test: Added and changed testcases in test_cim_obj.py to accomodate
  the new behaviors of CIM object classes.

* Test: Added the examples documented for `CIMProperty` and `CIMQualifier`
  as tests.

* Test: Improved the assertion output in unittest_extensions.py by removing
  the fixed messages that did not really help.

* Test: In test_cim_obj.py, now using unittest2 because we started
  using `assertRaises()` as a context manager. This was introduced
  into unittest only in Python 2.7.

Signed-off-by: Andreas Maier <maiera@de.ibm.com>",unittest unittest2,"
* Test: In test_cim_obj.py, now using unittest2 because we started
using `assertRaises()` as a context manager.",140,Testing,Testing,False,False
3000,qubole/qds-sdk-py,06f0e9d6b479ae97bf3c695f5adfb4229ff20425,2014-04-28 06:14:28,unittest2,unittest,The ability to use assertRaises() as a context manager was added in Python 2.7. Using unittest2 to use that in Python 2.6,unittest unittest2,"
The ability to use assertRaises() as a context manager was added in Python 2.7.
Using unittest2 to use that in Python 2.6",140,Testing,Testing,False,False
3003,redhat-performance/tuned,b09c8d0d37e6fb44193a1c6488ddceaf36e3973e,2018-10-15 11:20:14,unittest2,unittest,Start using unittest2 in test_device_matcher,unittest unittest2,"
Start using unittest2 in test_device_matcher",140,Testing,Testing,False,False
3004,robotools/fontParts,577727cb7bc7af9bf496ba1f88881883c0363580,2018-04-09 15:07:31,unittest2,unittest,"Using assertWarnsRegex for testing deprecated. For Python 2.7, needs the unittest2 backport. Adding just to tox, as it's not a project requirement, and only using it in the deprecated tests. Remove when deprecated is removed.",unittest unittest2,"
Using assertWarnsRegex for testing deprecated.
For Python 2.7, needs the unittest2 backport.",140,Testing,Testing,False,False
3005,rollbar/pyrollbar,61ebffa9d0270781109224f85e020366c7320b53,2015-10-08 00:06:21,unittest2,unittest,Use unittest2 instead of implementing missing methods ourselves @brianr,unittest unittest2,"
Use unittest2 instead of implementing missing methods ourselves @brianr",140,Testing,Testing,False,False
3007,s3ql/s3ql,6e8979c96e558c6475f957df055c8298d0856b8c,2010-04-15 16:05:25,unittest2,unittest,Use unittest2. Read aws default credentials from ~/.awssecret. Init basic logging in tests if no logging is configured yet.,unittest unittest2,"
Use unittest2.
Read aws default credentials from ~/.awssecret.",140,Testing,Testing,False,False
3008,scalyr/scalyr-agent-2,fb853d06507f4e2fa0c3440670bb00468220df36,2019-04-25 05:55:29,unittest2,unittest,"CircleCI config for python 2.6 testing

Modify circleCI config to test python 2.6. 
Also use unittest2 for pre-2.7 backward compatibility.",unittest unittest2,"Also use unittest2 for pre-2.7 backward compatibility.
",140,Testing,Testing,False,False
3009,scikit-learn-contrib/categorical-encoding,8e04f70462c88decfd4991f0e88ae673d2a620dd,2018-09-11 17:19:26,unittest2,unittest,"Because Python 2 does not support subtests, we use unittest2 library",unittest unittest2,"
Because Python 2 does not support subtests, we use unittest2 library",140,Testing,Testing,False,False
3010,sciunto-org/python-bibtexparser,64e1ecc804a1bb34dbc8378e116e811cab30d565,2018-08-24 19:03:10,unittest2,unittest,"Use backported unittest2 for crossref tests

- crossref tests depend on assertLogs, which was introduced only in
  Python 3.4. For backward compatibility, add unittest2:

    * Travis CI: requirements.txt (required)
    * setup.py: optional feature flag unittest",unittest unittest2,"
Use backported unittest2 for crossref tests",140,Testing,Testing,False,False
3011,simphony/osp-core,43881b043964957a9dccbb1391730fade86b59ad,2018-11-07 09:28:56,unittest2,unittest,Changed testing to unittest2,unittest unittest2,"
Changed testing to unittest2",140,Testing,Testing,False,False
3013,slimta/python-slimta,385c9c410486d21f4b4523af1dbc1a22a753ef30,2015-05-09 19:55:36,unittest2,unittest,use unittest2,unittest unittest2,"
use unittest2",140,Testing,Testing,False,False
3017,splunk/splunk-sdk-python,8574bb54d169b669f12f388cbb36d675112ba6a2,2012-11-26 21:09:29,unittest2,unittest,"Finished making all tests pass on Python 2.6.

Also fixed README.md's instructions for running the test suite.",unittest unittest2,"
Also fixed README.md's instructions for running the test suite.",140,Testing,Testing,False,False
3018,stripe/stripe-python,00f69ca1bbf6960369d5ae437081da7ba2f0e798,2015-07-02 16:28:39,unittest2,unittest,"Add request ID to exceptions

Return response headers from all the HTTP clients. Use unittest2 instead
of unittest so that we can skip tests in Python 2.6.

Note, that due to the number of support HTTP clients (four), reponse
headers will always use lower-case key names.",unittest unittest2,"
Return response headers from all the HTTP clients.
Use unittest2 instead
of unittest so that we can skip tests in Python 2.6.",140,Testing,Testing,False,False
3020,sunscrapers/djoser,0fb1f00cb2cba399df13e094dca122f6ecc92852,2015-06-22 21:46:56,unittest2,unittest,Fix test skip. See #42.,unittest unittest2,"Fix test skip.
See #42.
",140,Testing,Testing,False,False
3026,tweepy/tweepy,80769d9330cf0052101fa6a298d16b91678a2c39,2013-12-18 20:44:06,unittest2,unittest,Use unittest2 for Python 2.6 compatibility,unittest unittest2,"
Use unittest2 for Python 2.6 compatibility",140,Testing,Testing,False,False
3027,uw-it-aca/myuw,6256fc8e68cc8dd3674160739e76990f9266ea19,2014-12-09 18:22:08,unittest2,unittest,unittest -> unittest2,unittest unittest2,"unittest  laifuhewb  unittest2
",140,Testing,Testing,False,False
3036,CoreSecurity/impacket,53b4395aa052024c6dce58436288a5ba804bbbc8,2018-08-25 15:25:17,pycryptodomex,pycryptodome,Replace pycrypto with pycryptodome,pycryptodome pycryptodomex,"
Replace pycrypto with pycryptodome",59,Crypto,Crypto,False,False
3039,GetStream/stream-python,10ec1a19f6ca0e9aba6df3eda285d3877b0464cb,2017-12-21 09:47:30,pycryptodomex,pycryptodome,Converted to pycryptodomex to decouple from Pycrypto,pycryptodome pycryptodomex,"
Converted to pycryptodomex to decouple from Pycrypto",59,Crypto,Crypto,False,False
3040,IdentityPython/SATOSA,363631f6a70ec1b154259cf2a0214c09103d0a21,2016-11-22 06:11:14,pycryptodomex,pycryptodome,"Remove explicit pyoidc dependency to avoid collision with pyop.

Requires explicity pycryptodomex dependency.",pycryptodome pycryptodomex,"
Requires explicity pycryptodomex dependency.",59,Crypto,Crypto,False,False
3042,IdentityPython/pysaml2,57f233eba1b502e065b26da5abd0c63ef60eb12c,2016-02-21 09:19:28,pycryptodomex,pycryptodome,Use package 'Cryptodome' instead of 'Crypto',pycryptodome pycryptodomex,"
Use package 'Cryptodome' instead of 'Crypto'",59,Crypto,Crypto,False,False
3043,Keeper-Security/Commander,b4e2e7b4a566df95d2335851cfdb07bdc727720b,2016-08-23 16:17:43,pycryptodomex,pycryptodome,Replace pycrypto with pycryptodomex.,pycryptodome pycryptodomex,"
Replace pycrypto with pycryptodomex.",59,Crypto,Crypto,False,False
3044,LaunchKey/launchkey-python,9a1f544ec0fb187daf429364815ce40fb55306bf,2018-07-26 00:53:33,pycryptodomex,pycryptodome,"Remove PyCrypto and replace with required pycryptodomex (#17)

* Remove PyCrypto and replace with required pycryptodomex
Fixed typo in internal class method in JOSE auth transport

* Update Travis build file to cover current active spectrum of dev and prod Python versions
 dev to all Travis supported versions
Add 3.7-dev as it is live
Remove 3.3 as it is EOL",pycryptodome pycryptodomex,"
Remove PyCrypto and replace with required pycryptodomex (#17)",59,Crypto,Crypto,False,False
3045,LedgerHQ/blue-loader-python,cff103d03868f0f9e0aef1d57bafe22281711932,2018-06-14 13:26:37,pycryptodomex,pycryptodome,"Replace pycrypto with pycryptodomex

See issue https://github.com/LedgerHQ/blue-loader-python/issues/44",pycryptodome pycryptodomex,"
Replace pycrypto with pycryptodomex",59,Crypto,Crypto,False,False
3047,OpenIDC/pyoidc,1a1ef41a8d8d4abbb0a8311d9140b21224b94453,2016-04-03 07:52:54,pycryptodomex,pycryptodome,Complete move from Crypto to Cryptodome.,pycryptodome pycryptodomex,"
Complete move from Crypto to Cryptodome.",59,Crypto,Crypto,False,False
3049,SparkTC/enterprise_gateway,14fb313617c12e2ecb76a7ac7caff38cd85b12b3,2020-03-27 22:31:26,pycryptodomex,pycryptodome,"Replace pycrypto with pycryptodomex

The pycrypto package has fallen out of maintenance, so this change
replaces it with pycryptdomex.  This package was chosen over pycryptodome
because it can co-exist with pycrypto, while pycryptodome cannot, and
we felt other applications may be using pycrypto.  If the remote kernel
launchers are not updated, the two are compatible since we use
the same mode.",pycryptodome pycryptodomex,"
Replace pycrypto with pycryptodomex",59,Crypto,Crypto,False,False
3052,cms-dev/cms,9db3983a1aeae86c6dded788a4455bc87abd04d2,2020-12-07 19:36:59,pycryptodomex,pycryptodome,"Replace pycryptodome with pycryptodomex

a82137b2ecb0572051f3681463bff1f40afa747f replaced pycrypto with
pycryptodome, as pycrypto is no longer maintained.

However, Ubuntu's python3-pycryptodome package actually installs
pycryptodomex. Thus update requirements accordingly.

Fixes: a82137b2ecb0572051f3681463bff1f40afa747f",pycryptodome pycryptodomex,"
Replace pycryptodome with pycryptodomex",59,Crypto,Crypto,False,False
3058,edx/edx-proctoring,aaf80d17401382331507efaea7ad2496418dee05,2017-12-20 22:24:35,pycryptodomex,pycryptodome,"Switch from pycypto to pycryptodomex

I suspect this might fix LEARNER-3705 because pycrypto was removed in
edx-platform by https://github.com/edx/edx-platform/pull/16612.

Regardless, PyCryptodome is more maintained than PyCrypto.",pycryptodome pycryptodomex,"
Switch from pycypto to pycryptodomex",59,Crypto,Crypto,False,False
3059,edx/xblock-lti-consumer,a7af9fc09fe165eb31b6e2fb33c1ae5d1d030076,2020-07-24 11:14:39,pycryptodomex,pycryptodome,replace Cryptodom,pycryptodome pycryptodomex,"
replace Cryptodom",59,Crypto,Crypto,False,False
3061,flobz/psa_car_controller,8527d8a3e1f8fe513daf20961b90ca9e051ea6cb,2021-01-27 23:02:37,pycryptodomex,pycryptodome,change module pycryptodome to pycryptodomex,pycryptodome pycryptodomex,"
change module pycryptodome to pycryptodomex",59,Crypto,Crypto,False,False
3062,freedomofpress/securedrop,81f4c90530d53f21e5dd6a69f239f3f5bac36d93,2018-01-19 21:46:56,pycryptodomex,pycryptodome,Replace aging PyCrypto library with PyCryptodome,pycryptodome pycryptodomex,"
Replace aging PyCrypto library with PyCryptodome",59,Crypto,Crypto,False,False
3065,jaraco/keyrings.alt,3d54332e156917c08fe7219b835711bcac19aa9c,2020-09-30 18:24:18,pycryptodomex,pycryptodome,"Migrate from pycryptodome to pycryptodomex

pycryptodomex is a module built from the same source code as
pycryptodome, but it does not pretend to be old PyCrypto and uses its
own module name instead (Cryptodome):

https://pypi.org/project/pycryptodomex/

We do not need compatibility with old PyCrypto, so we can use the new
module name.",pycryptodome pycryptodomex,"Migrate from pycryptodome to pycryptodomex
We do not need compatibility with old PyCrypto, so we can use the new
module name.",59,Crypto,Crypto,False,False
3067,koldinger/Tardis,7c304a933896c4149f023ce38d24221042d4b067,2016-04-15 06:28:10,pycryptodomex,pycryptodome,"Switch to using pycryptodome (via the pycryptodomex package) instead of
pycrypto.  Pycrypto is no longer supported, and pycryptodome adds
support for AES-NI on modern x86 processors, allowing significantly
faster encoding/decoding.",pycryptodome pycryptodomex,"
Switch to using pycryptodome (via the pycryptodomex package) instead of
pycrypto.",59,Crypto,Crypto,False,False
3071,mikelolasagasti/revelation,615a888967bd05e3267d7876e32383a4f26196a8,2020-09-06 10:36:40,pycryptodomex,pycryptodome,Replace Crypto by Cryptodome,pycryptodome pycryptodomex,"
Replace Crypto by Cryptodome",59,Crypto,Crypto,False,False
3072,miurahr/py7zr,3b694055186dc0e0ffe9a69a5f7b4b227be72be3,2021-04-30 04:46:41,pycryptodomex,pycryptodome,"Change depends PyCryptodomex to avoid PyCrypto conflict

- Cygwin might have old PyCrypto that cause conflict with PyCryptodome(#328)

Signed-off-by: Hiroshi Miura <miurahr@linux.com>",pycryptodome pycryptodomex,"
Change depends PyCryptodomex to avoid PyCrypto conflict",59,Crypto,Crypto,False,False
3077,nmantani/FileInsight-plugins,0565c8a6753063adaea13ec44df1e6a8020b9770,2019-03-24 16:00:27,pycryptodomex,pycryptodome,"- Add ""AES Decrypt"" and ""AES Encrypt"" plugins to the ""Crypto operations"" category.
  Currently ""ECB"", ""CBC"", ""CFB"" and ""OFB"" block cipher mode of operations are supported.
- Rewrite ""ARC4 Decrypt"" plugin to support text keys in addition to hex keys.
- Switch crypto library dependency from PyCrypto to PyCryptodome.",pycryptodome pycryptodomex,"
- Switch crypto library dependency from PyCrypto to PyCryptodome.",59,Crypto,Crypto,False,False
3078,nuxeo/nuxeo-drive,7a98e982f6a3adfd85b6c475289986e6a6aa8834,2018-03-01 14:36:09,pycryptodomex,pycryptodome,"NXDRIVE-1132: Security fix in the Crypto module (move to PyCryptodome)

* Jenkins: Possibility to launch the release job on a given beta version",pycryptodome pycryptodomex,"
NXDRIVE-1132: Security fix in the Crypto module (move to PyCryptodome)",59,Crypto,Crypto,False,False
3079,obsidianforensics/hindsight,06074a651079e9d3e3cec5e3d0278870c661744a,2017-02-21 04:16:29,pycryptodomex,pycryptodome,Updated to use Cryptodome over the decprecated PyCrypto. Fixes to plugin loading to support multiple plugin directories and work better when packaged as exe.,pycryptodome pycryptodomex,"
Updated to use Cryptodome over the decprecated PyCrypto.
Fixes to plugin loading to support multiple plugin directories and work better when packaged as exe.",59,Crypto,Crypto,False,False
3080,pyload/pyload,c3a29cdd59b233233a3df571ff326061534d8dca,2018-10-12 01:09:35,pycryptodomex,pycryptodome,Crypto -> Cryptodome,pycryptodome pycryptodomex,"
Crypto  laifuhewb  Cryptodome",59,Crypto,Crypto,False,False
3086,snowflakedb/snowflake-connector-python,fd1746b14944a547403e050b261495b33d41e0d5,2018-08-09 19:57:28,pycryptodomex,pycryptodome,SNOW-51797: replaced pycryptodome with pycryptodomex.,pycryptodome pycryptodomex,"
SNOW-51797: replaced pycryptodome with pycryptodomex.",59,Crypto,Crypto,False,False
3088,thumbor/thumbor,c61e71e0fdcb3bded1007c1e05d2b611179dd42a,2019-02-20 00:17:15,pycryptodomex,pycryptodome,"Replace 'pycryptodome' with 'pycryptodomex' (#1173)

pycryptodomex is a library independent of the old PyCrypto",pycryptodome pycryptodomex,"
Replace 'pycryptodome' with 'pycryptodomex' (#1173)",59,Crypto,Crypto,False,False
3093,Azure/azure-sdk-for-python,5971ffa5e72e3fec13ad5b5ad00d7c6d00f350cc,2020-04-15 22:50:32,pytest,asyncio,"[formrecognizer] working on tests (#10711)

* receipt design changes

* layout/content design changes

* analyze custom form design changes

* don't expose receipt_locale until v2.1

* update generated code to use time type

* training/mgmt design changes (wip)

* update the one test

* fix pylint

* adds test framework and some tests for receipt/content

* some fixes for python 2

* add train (wip)

* regen without client side validation, fix wrapped code validation

* remove begin_ prefix for async lro methods

* tests update

* still working on training

* fix form field for receipt, add base type, move filter to kwargs

* fixes for form field, page range returned pages, model-id added to form type

* updates to tests, wip training

* expose keys for unsupervised training

* dynamically create storage account for training tests

* fix async training tests

* try fix again

* workaround for vcrpy bug

* add mgmt tests, content type tests, working on custom form tests

* form pages should be list

* add custom form tests

* set confidence to 1.0 if not sent by service

* fix testcase

* fix testcase to account for confidence set to 1.0, add live test yaml

* update live test yaml

* update some docstrings, change last_updated_on -> last_modified

* update tests due to design changes

* remove patch for async tests recordings

* update type hints, changelog

* docstring review comments

* change region to westus for cognitive preparers

* re-record all tests + review feedback",asyncio pytest,"
* fix async training tests",6,Testing,Testing,False,False
3095,FAForever/server,d5934e9c583772627a1be43414035cec7f0bff27,2019-09-06 19:16:14,pytest,asyncio,"[WIP] Support for multiple player ratings (#486)

* Get rid of BasePlayer class

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove Player class mocking in tests

The Player class is essentially plain old data right now. Remove all
mocking of it to make it easier to modify. If we ever bless Player with
non-trivial behaviour, we can make a mock or an abstract class for it.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Improve game stats coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use a dict-like object for player ratings

Preparations for adding new rating types.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add asynctest to dependencies

This will save us some manual mucking around with asyncio's sleep.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Replace CoroMock with asynctest's CoroutineMock

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove BaseGame class

Everything inherits from the Game class anyway, and all ""abstract""
methods are already implemented there.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix ban test by formatting >100 year bans as 'forever'

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Make the DB non-global

This should make tests a bit more manageable.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use asynctest/pytest-asyncio for tests

This replaces homegrown tools for coroutine testing with asynctest and
pytest-asyncio. One benefit is that each test gets its own fresh event
loop, another will come with proper tools for fast-forwarding event
loops.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add an event loop fast-forwarding decorator

This removes the need for ugly asyncio.sleep monkeypatching. It also
exposes some issues with tests not closing the server after the test
ends; we ignore it for now, eventually we'll fix that too.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix some sleep usage in tests

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* A bit more test coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove no longer needed loop fixture

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Update game docstring

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>",asyncio pytest,"
* Replace CoroMock with asynctest's CoroutineMock",6,Testing,Testing,False,False
3096,felix-hilden/tekore,3603c0167b0f6dacaa928007915fde8a8effd210,2020-05-21 14:45:23,pytest,asyncio,Use pytest and pytest-asyncio for tests,asyncio pytest,"
Use pytest and pytest-asyncio for tests",6,Testing,Testing,False,False
3115,willforde/script.module.codequick,38804b2351c7565f813528bd480bdd9092c1ed69,2017-09-24 01:16:52,pickle,json,switch build_path to use pickle instead of json,json pickle,"
switch build_path to use pickle instead of json",17,Serialization,Serialization,False,False
3116,BD2KGenomics/toil,04d41296676ef5de28e6013faa9446a7462f5281,2017-01-04 23:43:14,six,httplib,"Improve Python 3 compatibility (#1380)

* Add six to dependencies

* Replace xrange with six.moves.xrange

* Replace dict.iter* methods with six.iter* functions when possible

* Replace print statements with print function

* Add cmp function for Python 3

* Use 0o... syntax for octal literals

* Replace Queue with  six.moves.queue.Queue

* Replace cPickle with six.moves.cPickle

* Replace StringIO with six.moves.StringIO

* Replace urllib2 and urlparse usage with six.moves.urllib

* Replace basestring with six.string_type

* Replace unicode with six.u

* Replace httplib usage with six.moves.http_client

* Replace SocketServer with six.moves.socketserver

* Replace SimpleHttpServer with six.moves.SimpleHttpServer

* Replace ConfigParser with six.moves.configparser

* Replace repr with six.moves reprlib

* Replace dict.iteritems with dict.items in the version_template",httplib six,"
* Replace httplib usage with six.moves.http_client",13,HTTP Clients,HTTP Clients,False,False
3117,SickGear/SickGear,4aa04fbbaa3b42d37196faf266a8ac574205fd07,2015-06-13 17:04:29,six,httplib,"Change py2 queue, httplib, cookielib and xmlrpclib to py2/3 compatible calls using six",httplib six,"
Change py2 queue, httplib, cookielib and xmlrpclib to py2/3 compatible calls using six",13,HTTP Clients,HTTP Clients,False,False
3118,StackStorm/st2,43e838d1e79ce716cbed6b65ed530364f0a507f7,2018-01-29 01:26:29,six,httplib,use six moves instead of httplib,httplib six,"
use six moves instead of httplib",13,HTTP Clients,HTTP Clients,False,False
3119,WeblateOrg/weblate,2df49204e601f4720ef29a3938ee83c81b9ffe60,2016-01-08 14:54:57,six,httplib,"Use six for http client

Signed-off-by: Michal Čihař <michal@cihar.com>",httplib six,"
Use six for http client",13,HTTP Clients,HTTP Clients,False,False
3122,oVirt/vdsm,2186e37e67249ba74a25ccc70a5daf3c5f3d3782,2016-11-13 11:31:51,six,httplib,"py3 tests: imagetickets_test.py now uses six.http_client

replaced httlib with six.http_client in imagetickets.py
and imagetickets_test.py

Change-Id: If13fb30966d98fa0381da25f0f2907899df12e96
Signed-off-by: Irit Goihman <igoihman@redhat.com>
Reviewed-on: https://gerrit.ovirt.org/59859
Continuous-Integration: Jenkins CI
Reviewed-by: Dan Kenigsberg <danken@redhat.com>",httplib six,"py3 tests: imagetickets_test.py now uses six.http_client
",13,HTTP Clients,HTTP Clients,False,False
3129,BD2KGenomics/toil,04d41296676ef5de28e6013faa9446a7462f5281,2017-01-04 23:43:14,six,urllib2,"Improve Python 3 compatibility (#1380)

* Add six to dependencies

* Replace xrange with six.moves.xrange

* Replace dict.iter* methods with six.iter* functions when possible

* Replace print statements with print function

* Add cmp function for Python 3

* Use 0o... syntax for octal literals

* Replace Queue with  six.moves.queue.Queue

* Replace cPickle with six.moves.cPickle

* Replace StringIO with six.moves.StringIO

* Replace urllib2 and urlparse usage with six.moves.urllib

* Replace basestring with six.string_type

* Replace unicode with six.u

* Replace httplib usage with six.moves.http_client

* Replace SocketServer with six.moves.socketserver

* Replace SimpleHttpServer with six.moves.SimpleHttpServer

* Replace ConfigParser with six.moves.configparser

* Replace repr with six.moves reprlib

* Replace dict.iteritems with dict.items in the version_template",urllib2 six,"
* Replace urllib2 and urlparse usage with six.moves.urllib",33,HTTP Clients,HTTP Clients,False,False
3130,OCHA-DAP/hdx-ckan,7ad7aaa370377197a5a4d45ef48ac7b99121210a,2019-08-30 13:26:44,six,urllib2,[#4914] [#4914] [#4914] Replace direct usage of urllib and urllib2 with six wrappers,urllib2 six,"
[#4914] [#4914] [#4914] Replace direct usage of urllib and urllib2 with six wrappers",33,HTTP Clients,HTTP Clients,False,False
3132,Yelp/Tron,e7bb55463bce2ccb31aa3f6ceef083a2ec978949,2018-02-20 14:20:47,six,urllib2,"use six.iteritems, use six.moves.urllib.request instead of urllib2",urllib2 six,"
use six.iteritems, use six.moves.urllib.request instead of urllib2",33,HTTP Clients,HTTP Clients,False,False
3133,aiidateam/aiida-core,0e9983e8f9b3b3f587fa92a179aaf7af7fad565b,2018-08-31 13:23:45,six,urllib2,"replace all calls into the reorganized urllib with six.moves

The fixer would originally replace calls like::

  import urllib2
  urllib2.urlopen(...)

with::

  import six.moves.urllib.request
  six.moves.urllib.request.urlopen(...)

This has been manually changed such that only the import line contains a
reference to six::

  from six.moves import urllib
  urllib.request.urlopen(...)

to be closer to the Python 3 variation of it::

  import urllib
  urllib.request.urlopen(...)

Instead of importing the whole `urllib`, one could have imported only a
submodule instead::

  from six.moves.urllib import request
  request.urlopen(...)",urllib2 six,"
replace all calls into the reorganized urllib with six.moves",33,HTTP Clients,HTTP Clients,False,False
3135,certbot/certbot,316e4640f86c7f48a48d194a77e9462d1f50bd34,2020-04-09 21:35:47,six,urllib2,"Upgrade the test farm tests to use Python 3 (#7876)

Fixes #7857.

* stop using urllib2 in test farm tests

* use six for urllib instead

* remove fabric lcd usage

* correct lcd removal

* remove fabric cd

* convert some remote calls to v2

* move more cxns to v2

* get run working with prefix

* get sudo commands working

* remove final fabric v1 references including local

* update requirements and README

* add new venv to gitignore

* update version used in travis

* remove deploy_script unused kwargs

* fix killboulder implementation so I can test creating a new boulder server

* hardcode the gopath due to broken env manamagement in fabric2

* Update letstest readme

* move the comment about hardcoding the ggopath

* catch BaseException instead of Exception

* work around fabric #2007

* use connections as context managers to ensure they're closed

* remove reference to virtualenv",urllib2 six,"
* use six for urllib instead",33,HTTP Clients,HTTP Clients,False,False
3138,datalad/datalad,52931dfb88c804dbb06973ca1f10166029ada646,2015-07-29 14:58:05,six,urllib2,RF(PY3): use six for urllib2,urllib2 six,"
RF(PY3): use six for urllib2",33,HTTP Clients,HTTP Clients,False,False
3144,jaraco/wolframalpha,f72ac2074dea2096f51094c1dcdbaf02f897ef4c,2014-06-08 10:02:14,six,urllib2,Use six for urllib compatibility,urllib2 six,"
Use six for urllib compatibility",33,HTTP Clients,HTTP Clients,False,False
3149,openatv/enigma2,7991b73cd12002b7360f6eaa5d685d67fa6118c4,2020-05-29 18:58:11,six,urllib2,"]2t3] replace Python 2 urllib and urllib2 with six.moves.urllib, add import six",urllib2 six,"
]2t3] replace Python 2 urllib and urllib2 with six.moves.urllib, add import six",33,HTTP Clients,HTTP Clients,False,False
3152,openstack/cloudbase-init,c13680eeec20e1f41ad3b2727b4101eab0c20259,2014-09-08 12:29:49,six,urllib2,"Adds Python 3.x support in utils network module

Replaces urllib2 usage with the six equivalent.",urllib2 six,"
Replaces urllib2 usage with the six equivalent.",33,HTTP Clients,HTTP Clients,False,False
3158,rackspace/pyrax,b49697476a70f99fc935fa6b8577dcc32546044f,2014-05-19 00:22:39,six,urllib2,Replace uses of 'urllib' and 'urlparse' with Python 3 idioms via six,urllib2 six,"
Replace uses of 'urllib' and 'urlparse' with Python 3 idioms via six",33,HTTP Clients,HTTP Clients,False,False
3160,torchbox/wagtail,c90d61fa2acb4d58df1d0f29c1ae1120884fb93c,2014-07-02 09:35:46,six,urllib2,Use six to import urllib and StringIO,urllib2 six,"
Use six to import urllib and StringIO",33,HTTP Clients,HTTP Clients,False,False
3161,yougov/pmxbot,f376c1c78128df9b79bf82cbd0b489c25e20e75b,2014-05-12 17:11:37,six,urllib2,Use six for urllib,urllib2 six,"Use six for urllib
",33,HTTP Clients,HTTP Clients,False,False
3168,PaddlePaddle/PaddleSlim,b587104893654b9c3fc48a489ca15e5300a2a79d,2020-06-02 11:42:13,imageio,scipy,change scipy.misc.imread() to imageio.imread() (#324),scipy imageio,"
change scipy.misc.imread() to imageio.imread() (#324)",19,Deep Learning&Filesystem,Deep Learning,False,False
3170,PyLops/pylops,69519cb1b22722d10e34b521efbb51c3fea5b1ed,2018-12-16 16:59:52,imageio,scipy,Small fixes in documentation figure suptitle. Added imageio as new dependency for dev envs to read images instead of using deprecated scipy imread,scipy imageio,"
Small fixes in documentation figure suptitle.
Added imageio as new dependency for dev envs to read images instead of using deprecated scipy imread",19,Deep Learning&Filesystem,Deep Learning,False,False
3176,hyperspy/hyperspy,fc934bc66b8ece5df564ac0996db5e28b70b00f2,2018-11-03 15:54:07,imageio,scipy,"Use imageio instead of deprecated scipy functions.
Add tests for reading and writing images (png, jpeg, gif, bmp).",scipy imageio,"
Use imageio instead of deprecated scipy functions.",19,Deep Learning&Filesystem,Deep Learning,False,False
3177,invesalius/invesalius3,fe5e0fb2b874b825a594604ed93456cd7a15b212,2019-06-11 17:17:49,imageio,scipy,using imageio (imread and imsave from scipy deprecated),scipy imageio,"
using imageio (imread and imsave from scipy deprecated)",19,Deep Learning&Filesystem,Deep Learning,False,False
3178,jhfjhfj1/autokeras,73cc4c077eb37ed797cdce325852649e5702b4c6,2018-10-23 20:26:49,imageio,scipy,Change scipy.ndimage.imread to imageio.imread in autokeras.utils because scipy.ndimage.imread is deprecated and update requirements.txt with imageio (#276),scipy imageio,"
Change scipy.ndimage.imread to imageio.imread in autokeras.utils because scipy.ndimage.imread is deprecated and update requirements.txt with imageio (#276)",19,Deep Learning&Filesystem,Deep Learning,False,False
3187,dj-stripe/dj-stripe,682af1d638437df88f753e063497660a0245289a,2013-11-13 04:16:36,models,model,Fixed indentation on models and views,model models,"
Fixed indentation on models and views",14,Database,Database,False,False
3199,jjjake/internetarchive,92237e213b7ccdf522b2527fd100b014d07f2f72,2019-12-06 21:31:39,tqdm,clint,"Use tqdm instead of clint for progress bar

clint is no longer maintained.",clint tqdm,"
Use tqdm instead of clint for progress bar",4,Utility,Utility,False,False
3200,pypa/twine,42e55e0662e22b28c84cb0b704462abe524ffcc6,2017-05-02 17:22:44,tqdm,clint,"Replace clint by tqdm for progressbar

Closes #241 – As clint as some indirect Python 2 dependency and tqdm has
not.",clint tqdm,"
Replace clint by tqdm for progressbar",4,Utility,Utility,False,False
3205,JohnKendrick/PDielec,da99cc12001cc97582744cea5fba0f4b92800878,2020-07-26 17:39:41,multiprocess,multiprocessing,"Codes are now using multiprocess not multiprocessing, also psutils is
    used to return the number of cores",multiprocessing multiprocess,"
Codes are now using multiprocess not multiprocessing, also psutils is
used to return the number of cores",9,Utility,Utility,False,False
3207,huggingface/nlp,e83bd4c4f6544cc0b52b5134ccfb1be21d9e0a41,2020-09-28 14:45:38,multiprocess,multiprocessing,"Use multiprocess from pathos for multiprocessing (#656)

* use pathos for multiprocessing and fix dataset attributes copy

* add pathos to dependencies

* typo

* only use the multiprocess part of pathos

* forgot to change pathos to multiprocess

* fix test

* use right RLock",multiprocessing multiprocess,"
Use multiprocess from pathos for multiprocessing (#656)",9,Utility,Utility,False,False
3208,mirnylab/cooler,718dde53a200034c5e76b62ecb17dcb22ec5ad29,2017-01-15 00:12:53,multiprocess,multiprocessing,"Use multiprocess for dill support in Py2/3

Dill author now maintains a multiprocessing fork that uses dill instead
of pickle. Add to requirements. Also remove pool context managers for py2
compatibility.",multiprocessing multiprocess,"
Use multiprocess for dill support in Py2/3",9,Utility,Utility,False,False
3209,mozilla/OpenWPM,5acb7d911e2296a243e98b3d001f67744af6c0d6,2016-11-14 22:19:35,multiprocess,multiprocessing,"Adding tests for custom command and moving `multiprocessing` -> `multiprocess`

I chose to use `dill` instead of `pickle` for additional flexibility
in inline functions. Python's built-in `multiprocessing` library uses
`pickle`, so it was still a bottleneck. In particular functions defined
within class methods (e.g. within a test method) couldn't be pickled.
`multiprocess` is a fork of `multiprocessing` which mainly differs in
replacing `pickle` with `dill`. It's maintained by the same developers
as `dill`, so it seems like a safe replacement.

Conflicts:
	test/expected.py",multiprocessing multiprocess,"
Adding tests for custom command and moving `multiprocessing`  laifuhewb  `multiprocess`",9,Utility,Utility,False,False
3252,BjornFJohansson/pydna,e6ebffb2b893195af5ee3e72b200489a77a55c7d,2016-11-14 20:54:32,py.test,nose,migrate from nose to pytest,nose py.test,"
migrate from nose to pytest",7,Testing,Testing,False,False
3254,LLNL/spack,7ea10e768ee1a7deab98ae538d916bbeeb0346b8,2016-12-29 15:48:48,py.test,nose,"unit tests: replace nose with pytest  (#2502)

* Porting: substitute nose with ytest

This huge commit substitutes nose with pytest as a testing system. Things done here:

* deleted external/nose as it is no longer used
* moved mock resources in their own directory 'test/mock/'
* ported two tests (cmd/find, build_system) to pytest native syntax as an example
* build_environment, log: used monkeypatch instead of try/catch
* moved global mocking of fetch_cache to an auto-used fixture
* moved global mocking from test/__init__.py to conftest.py
* made `spack test` a wrapper around pytest
* run-unit-tests: avoid running python 2.6 tests under coverage to speed them up
* use `pytest --cov` instead of coverage run to cut down testing time

* mock/packages_test: moved mock yaml configuration to files instead of leaving it in the code as string literals

* concretize.py: ported tests to native pytest, reverted multiprocessing in pytest.ini as it was creating the wrong report for coveralls

* conftest.py, fixtures: added docstrings

* concretize_preferences.py: uses fixtures instead of subclassing MockPackagesTest

* directory_layout.py: uses fixtures instead of subclassing MockPackagesTest

* install.py: uses fixtures instead of subclassing MockPackagesTest

* optional_deps.py: uses fixtures instead of subclassing MockPackagesTest

optional_deps.py: uses fixtures instead of subclassing MockPackagesTest

* packages.py: uses fixtures instead of subclassing MockPackagesTest

* provider_index.py: uses fixtures instead of subclassing MockPackagesTest

* spec_yaml.py: uses fixtures instead of subclassing MockPackagesTest

* multimethod.py: uses fixtures instead of subclassing MockPackagesTest

* install.py: now uses mock_archive_url

* git_fetch.py: uses fixtures instead of subclassing MockPackagesTest

* hg_fetch.py: uses fixtures instead of subclassing MockPackagesTest

* svn_fetch.py, mirror.py: uses fixtures instead of subclassing MockPackagesTest
repo.py: deleted

* test_compiler_cmd.py: uses fixtures instead of subclassing MockPackagesTest

* cmd/module.py, cmd/uninstall.py: uses fixtures instead of subclassing MockDatabase

* database.py: uses fixtures instead of subclassing MockDatabase, removed mock/database

* pytest: uncluttering fixture implementations

* database: changing the scope to 'module'

* config.py: uses fixtures instead of subclassing MockPackagesTest

* spec_dag.py, spec_semantics.py: uses fixtures instead of subclassing MockPackagesTest

* stage.py: uses fixtures instead of subclassing MockPackagesTest. Removed mock directory

* pytest: added docstrings to all the fixtures

* pytest: final cleanup

* build_system_guess.py: fixed naming and docstrings as suggested by @scheibelp

* spec_syntax.py: added expected failure on parsing multiple specs closes #1976

* Add pytest and pytest-cov to Spack externals.

* Make `spack flake8` ignore externals.

* run-unit-tests runs spack test and not pytest.

* Remove all the special stuff for `spack test`

- Remove `conftest.py` magic and all the special case stuff in `bin/spack`

- Spack commands can optionally take unknown arguments, if they want to
  handle them.

- `spack test` is now a command like the others.

- `spack test` now just delegates its arguments to `pytest`, but it does
  it by receiving unknown arguments and NOT taking an explicit
  help argument.

* Fix error in fixtures.

* Improve `spack test` command a bit.

- Now supports an approximation of the old simple interface
- Also supports full pytest options if you want them.

* Use external coverage instead of pytest-cov

* Make coverage use parallel-mode.

* change __init__.py docs to include pytest",nose py.test,"
* Porting: substitute nose with ytest
unit tests: replace nose with pytest  (#2502)",7,Testing,Testing,False,False
3255,diyan/pywinrm,4599a89b365f066856ff5001181287149986cbaf,2013-09-01 15:03:51,py.test,nose,Tests. Switch from nose into py.test,nose py.test,"
Tests.
Switch from nose into py.test",7,Testing,Testing,False,False
3256,hsoft/dupeguru,4d66b4667c3edd5fc898f20898ea8847f6490866,2010-07-13 09:10:45,py.test,nose,"Moved from nose to py.test (the former doesn't officially support py3k, which is limiting).",nose py.test,"
Moved from nose to py.test (the former doesn't officially support py3k, which is limiting).",7,Testing,Testing,False,False
3259,Boltgolt/howdy,8c3039b0d03cbd89436c61c4400c04fab6ece6ec,2018-02-01 15:01:17,configparser,config,"Fixed old references to first config system, fixed typo",config configparser,"
Fixed old references to first config system, fixed typo",9,Filesystem,Filesystem,False,False
3260,DuckBoss/JJMumbleBot,8bc4824b8dad70592d42c1c88e393e56f939bd09,2019-03-17 03:22:13,configparser,config,"Updated config system to use INI files

Updated the config system to use INI files instead of python files.",config configparser,"Updated config system to use INI files
",9,Filesystem,Filesystem,False,False
3262,JrGoodle/clowder,bc787b2888acf4b7bd8351b9a72982c71c143362,2020-12-05 03:51:59,configparser,config,Use ConfigParser for config file (#625),config configparser,"
Use ConfigParser for config file (#625)",9,Filesystem,Filesystem,False,False
3265,infobyte/faraday,3e26268b94fb97e80b6814c9d3db8647cc183364,2018-10-10 23:18:04,configparser,config,Fixed the config is now the file .faraday/config/cscan_conf.ini,config configparser,"Fixed the config is now the file .faraday/config/cscan_conf.ini
",9,Filesystem,Filesystem,False,False
3267,skyzh/canvas_grab,d5920217e97d3fa65a4db4e03c34fc093ad8220a,2020-03-06 01:51:55,configparser,config,change config file into INI format for portability,config configparser,"
change config file into INI format for portability",9,Filesystem,Filesystem,False,False
3279,Breakthrough/PySceneDetect,8b7fbbaca3d63c8204b3f12423d440e3cd6962f5,2018-07-08 07:16:40,click,argparse,Remove existing CLI parsing and replace with new parser based on click (still WIP).  Add scenedetect.cli_context module with CliContext class to manage application state when running PySceneDetect via the CLI.  Removed all existing from scenedetect.__init__ and scenedetect.cli.  Update module copyright information and docstrs/comment headers.,argparse click,"Remove existing CLI parsing and replace with new parser based on click (still WIP).
Add scenedetect.cli_context module with CliContext class to manage application state when running PySceneDetect via the CLI.",60,Utility,Utility,False,False
3281,DataDog/apigentools,a1f6656332059d0d25385bf2f6739c232b6affea,2020-03-16 19:47:20,click,argparse,"Switch from argparse to click and code format (#136)

* Switch to click

* Use black to format repo

* Fix tests by updating how args are defined",argparse click,"Switch from argparse to click and code format (#136)
",60,Utility,Utility,False,False
3282,DataDog/riot,ac574096f672aa25eab9cb2abee6c169a2e98724,2020-10-18 04:39:52,click,argparse,"Replace argparse with click (#22)

* Replace argparse with click

* Add tests/test_cli.py

* fix mypy issues

* replace importlib.metadata usage with pkg_resources

* use pypi mock library

Co-authored-by: Kyle Verhoog <kyle@verhoog.ca>",argparse click,"
Replace argparse with click (#22)",60,Utility,Utility,False,False
3285,GreyNoise-Intelligence/pygreynoise,64b15a3b3f6ae99d973cce4498795fb8b6d892a1,2019-08-17 08:50:36,click,argparse,"Use click instead of argparse

This allows to easily set the default group, which will be useful when
the gnql endpoint is supported.",argparse click,"
Use click instead of argparse",60,Utility,Utility,False,False
3289,Stratoscale/skipper,ffe31925250e1db905c141c6bc7c64f182b14ae3,2016-08-28 08:55:47,click,argparse,"Replaced argparse with click for constructing the CLI interface.
Click allows us to create a CLI command by wrapping the function that
implements the command logic with decorators. This way the code is more
testable and self documented.
Also removed depscheck command, because it is not belong here.",argparse click,"
Replaced argparse with click for constructing the CLI interface.",60,Utility,Utility,False,False
3292,Yubico/yubioath-desktop,9d601b4fe39c6e37ef51ee9a1274909309d4286f,2016-06-08 08:37:33,click,argparse,Use click instead of argparse.,argparse click,"
Use click instead of argparse.",60,Utility,Utility,False,False
3297,ansible-community/molecule,b7d7740db482624182dd6c31600ca1c09669cfc5,2017-08-03 18:51:30,click,argparse,"Moved convert to click vs argparse

As part of moving to click, reworked convert into a class.",argparse click,"
Moved convert to click vs argparse",60,Utility,Utility,False,False
3300,celery/celery,01651d2f5d9ad20dfb9812d92831510147974b23,2020-08-19 17:19:45,click,argparse,"Refactor CLI to use Click instead of our custom argparse based framework (#5718)

* 'abstractproperty' is deprecated. Use 'property' with 'abstractmethod' instead

* Fix #2849 - Initial work of celery 5.0.0 alpha1 series by dropping python below 3.6 from marix & remove import from __future__ (#5684)

* initial work of celery 5.0.0 alpha-1 series by dropping python below 3.6

* i-5651(ut): add ut for ResultSet.join_native (#5679)

* dropped python versions below 3.6 from tox

* dropped python versions below 3.6 from travis

* dropped python versions below 3.6 from appveyor

* dropped python2 compat __future__ imports from tests

* Fixed a bug where canvases with a group and tasks in the middle followed by a group fails to complete and indefinitely hangs. (#5681)

Fixes #5512, fixes #5354, fixes #2573.

* dropped python2 compat __future__ imports from celery

* dropped python2 compat code from init

* revert readme change about version

* removed python 2 object inheritance (#5687)

* removed python 2 object inheritance

* removed python 2 object inheritance

* removed python 2 compatibility decorator (#5689)

* removed python 2 compatibility decorator

* removed python 2 compatibility decorator

* removed python 2 compatibility decorator

* removed python 2 compatibility decorator

* Remove unused imports.

* Remove unused imports of python_2_unicode_compatible.

Also removed leftover useage of them where they were still used.

* Run pyupgrade on codebase (#5726)

* Run pyupgrade on codebase.

* Use format strings where possible.

* pyupgrade examples.

* pyupgrade on celerydocs extension.

* pyupgrade on updated code.

* Address code review comments.

* Address code review comments.

* Remove unused imports.

* Fix indentation.

* Address code review comments.

* Fix syntax error.

* Fix syntax error.

* Fix syntax error.

* pytest 5.x for celery 5 (#5791)

* Port latest changes from master to v5-dev (#5942)

* Fix serialization and deserialization of nested exception classes (#5717)

* Fix #5597: chain priority (#5759)

* adding `worker_process_shutdown` to __all__ (#5762)

* Fix typo (#5769)

* Reformat code.

* Simplify commands to looking for celery worker processes (#5778)

* update doc- celery supports storage list. (#5776)

* Update introduction.rst

* Update introduction.rst

* Fail xfailed tests if the failure is unexpected.

* Added integration coverage for link_error (#5373)

* Added coverage for link_error.

* Use pytest-rerunfailed plugin instead of rolling our own custom implementation.

* Added link_error with retries. This currently fails.

* Remove unused import.

* Fix import on Python 2.7.

* retries in link_error do not hang the worker anymore.

* Run error callbacks eagerly when the task itself is run eagerly.

Fixes #4899.

* Adjust unit tests accordingly.

* Grammar in documentation (#5780)

* Grammar in documentation

* Address review.

* pypy 7.2 matrix (#5790)

* removed extra slashes in CELERY_BROKER_URL (#5792)

The Celery broker URL in settings.py had 2 slashes in the end which are not required and can be misleading.
so I changed :-
CELERY_BROKER_URL = 'amqp://guest:guest@localhost//' to CELERY_BROKER_URL = 'amqp://guest:guest@localhost'

* Fix #5772 task_default_exchange & task_default_exchange_type not work (#5773)

* Fix #5772 task_default_exchange & task_default_exchange_type not work

* Add unit test: test_setting_default_exchange

* Move default_exchange test to standalone class

* Run integration suite with memcached results backend. (#5739)

* Fix hanging forever when fetching results from a group(chain(group)) canvas. (#5744)

PR #5739 uncovered multiple problems with the cache backend.
This PR should resolve one of them.

PR #5638 fixed the same test case for our async results backends that support native join.
However, it did not fix the test case for sync results backends that support native join.

* Fix regression in PR #5681. (#5753)

See comment in the diff for details.

* Grammatical fix to CONTRIBUTING.rst doc (#5794)

* Fix #5734 Celery does not consider authMechanism on mongodb backend URLs (#5795)

* Fix #5734 Celery does not consider authMechanism on mongodb backend URLs

* Add unit test: test_get_connection_with_authmechanism

* Add unit test: test_get_connection_with_authmechanism_no_username

* Fix errors in Python 2.7

Remove "","" after ""**"" operator

* Revert ""Revert ""Revert ""Added handle of SIGTERM in BaseTask in celery/task.py to prevent kill the task"" (#5577)"" (#5586)"" (#5797)

This reverts commit f79894e0a2c7156fd0ca5e8e3b652b6a46a7e8e7.

* Add Python 3.8 Support (#5785)

* Added Python 3.8 to the build matrix.

* Ensure a supported tblib version is installed for Python 3.8 and above.

In addition, modernize the relevant tests.

* Workaround patching problem in test.

* py 3.8 in clasifier

* ubuntu bionic (#5799)

* ubuntu bionic

* fast finish

* sync bumversion with pypi release

* Dev.req (#5803)

* update  docker config



* undo hardpin

* devr req install from github master

* update  docker config (#5801)

* update  docker config

* make dockerfile to install from github master dev branch by default

* update download link

* Isort.

* Grammatical & punctuation fixes for CONTRIBUTING.rst document (#5804)

* update dockerfile

* switched to ubuntu bionic

* update docker

* keep it empty until we reconfigure it again with autopep8

* Fixed Dockerfile (#5809)

* Update document CONTRIBUTING.rst & fix Dockerfile typo (#5813)

* Added an issue template for minor releases.

* reference gocelery Go Client/Server for Celery (#5815)

* Add enterprise language (#5818)

* Fix/correct minor doc typos (#5825)

* Correct a small typo

* Correct bad contributing documentation links

* Preserve the task priority in case of a retry (#5820)

* Preserve the task priority in case of a retry

* Created test case for retried tasks with priority

* Implement an integration test for retried tasks with priorities

* bump kombu

* basic changelog for celery 4.4.0rc4

* bump celery 4.4.0rc4

* events bootstep disabled if no events (#5807)

* events bootstep disabled if no events

* Added unit tests.

* update bug report template

* fixing ascii art to look nicer (#5831)

* Only rerun flaky tests when failures can be intermediary.

* Rename Changelog to Changelog.rst

* The test_nested_group_chain test can run without native_join support. (#5838)

* Run integration tests with Cassandra (#5834)

* Run integration tests with Cassandra.

* Configure cassandra result backend

* Pre-create keyspace and table

* Fix deprecation warning.

* Fix path to cqlsh.

* Increase connection timeout.

* Wait until the cluster is available.

* SQS - Reject on failure (#5843)

* reject on failure

* add documentation

* test fix

* test fix

* test fix

* Add a concurrency model with ThreadPoolExecutor (#5099)

* Add a concurrency model with ThreadPoolExecutor

* thread model test for pypy

* Chain primitive's code example fix in canvas documentation (Regression PR#4444) (#5845)

* Changed multi-line string (#5846)

This string wasn't rendering properly and was printing the python statement too. Although the change isn't as pretty code-wise, it gets rid of an annoyance for the user.

* Add auto expiry for DynamoDB backend (#5805)

* Add auto expiry for DynamoDB backend

This adds auto-expire support for the DynamoDB backend, via the DynamoDB
Time to Live feature.

* Require boto3>=1.9.178 for DynamoDB TTL support

boto3 version 1.9.178 requires botocore>=1.12.178.

botocore version 1.12.178 introduces support for the DynamoDB
UpdateTimeToLive call.

The UpdateTimeToLive call is used by the DynamoDB backend to enable TTL
support on a newly created table.

* Separate TTL handling from table creation

Handle TTL enabling/disabling separately from the table get-or-create
function.

Improve handling of cases where the TTL is already set to the desired
state.

DynamoDB only allows a single TTL update action within a fairly long
time window, so some problematic cases (changing the TTL attribute,
enabling/disabling TTL when it was recently modified) will raise
exceptions that have to be dealt with.

* Handle older boto3 versions

If the boto3 TTL methods are not found, log an informative error. If the
user wants to enable TTL, raise an exception; if TTL should be disabled,
simply return.

* Improve logging

- Handle exceptions by logging the error and re-raising

- Log (level debug) when the desired TTL state is already in place

* Add and use _has_ttl() convenience method

Additional changes:

- Handle exceptions when calling boto3's describe_time_to_live()

- Fix test cases for missing TTL methods

* Update ttl_seconds documentation

* Log invalid TTL; catch and raise ValueError

* Separate method _get_table_ttl_description

* Separate ttl method validation function

* Clarify tri-state TTL value

* Improve test coverage

* Fix minor typo in comment

* Mark test as xfail when using the cache backend. (#5851)

* [Fix #5436] Store extending result in all backends (#5661)

* [Fix #5436] Store extending result in all backends

* Fix sqlalchemy

* More fixu

* Fixing tests

* removing not necessary import

* Removing debug code

* Removing debug code

* Add tests for get_result_meta in base and database

* Revert ""Add auto expiry for DynamoDB backend (#5805)"" (#5855)

This reverts commit f7f5bcfceca692d0e78c742a7c09c424f53d915b.

* Revert ""Mark test as xfail when using the cache backend. (#5851)"" (#5854)

This reverts commit 1b303c2968836245aaa43c3d0ff9249dd8bf9ed2.

* docs: Document Redis commands used by celery (#5853)

* remove cache back end integrtion test. (#5856)

* Fix a race condition when publishing a very large chord header (#5850)

* Added a test case which artificially introduces a delay to group.save().

* Fix race condition by delaying the task only after saving the group.

* update tox

* Remove duplicate boto dependency. (#5858)

* Revert ""remove cache back end integrtion test. (#5856)"" (#5859)

This reverts commit e0ac7a19a745dd5a52a615c1330bd67f2cef4d00.

* Revert ""Revert ""Add auto expiry for DynamoDB backend (#5805)"" (#5855)"" (#5857)

This reverts commit 4ddc605392d7694760f23069c34ede34b3e582c3.

* Revert ""update tox""

This reverts commit 49427f51049073e38439ea9b3413978784a24999.

* Fix the test_simple_chord_with_a_delay_in_group_save test.

* Revert ""Revert ""Skip unsupported canvas when using the cache backend"""" (#5860)

* Revert ""Revert ""Mark test as xfail when using the cache backend. (#5851)"" (#5854)""

This reverts commit fc101c61c1912c4dafa661981f8b865c011e8a55.

* Make the xfail condition stricter.

* Fix the xfail condition.

* Linters should use Python 3.8.

* Move pypy unit tests to the correct stage.

* Temporarily allow PyPy to fail since it is unavailable in Travis.

* Remove unused variables.

* Fix unused imports.

* Fix pydocstyle errors in dynamodb.

* Fix pydocstyle errors in redis backend.

* bump kombu to 4.6.7

* celery 4.4.0rc5 changelog

* celery 4.4.0rc5

* rm redundant code (#5864)

* isort.

* Document the threads task pool in the CLI.

* Removed the paragraph about using librabbitmq. Refer to #5872 (#5873)

* Task class definitions can have retry attributes (#5869)

* autoretry_for
* retry_kwargs
* retry_backoff
* retry_backoff_max
* retry_jitter
can now be defined as cls attributes.

All of these can be overriden from the @task decorator

https://github.com/celery/celery/issues/4684

* whatsnew in Celery 4.4 as per projects standard (#5817)

* 4.4 whatsnew

* update

* update

* Move old whatsnew to history.

* Remove old news & fix markers.

* Added a section notifying Python 3.4 has been dropped.

* Added a note about ElasticSearch basic auth.

* Added a note about being able to replace eagerly run tasks.

* Update index.

* Address comment.

* Described boto3 version updates.

* Fix heading.

* More news.

* Thread pool.

* Add Django and Config changes

* Bump version 4.4.0

* upate readme

* Update docs regarding Redis Message Priorities (#5874)

* Update docs regarding Redis Message Priorities

* fixup! Update docs regarding Redis Message Priorities

* Update 4.4.0 docs (#5875)

* Update 4.4 release changelog

* Update whatsnew-4.4

* Update tasks docs

* Fix recent tasks doc file update (#5879)

* Include renamed Changelog.rst in source releases. (#5880)

Changelog.rst was renamed from Changelog in
fd023ec174bedc2dc65c63a0dc7c85e425ac00c6 but MANIFEST.in was not updated to
include the new name. This fixes the file name so Changelog.rst will show up
in future source releases again.

* Reorganised project_urls and classifiers. (#5884)

* Use safequote in SQS Getting Started doc (#5885)

* Have appveyor build relevant versions of Python. (#5887)

* Have appveyor build relevant and buildable versions of Python.

* Appveyor is missing CI requirements to build.

* Pin pycurl to version that will build with appveyor (because wheels files exist)

* Restrict python 2.7 64 bit version of python-dateutil for parse.

* Use is_alive instead of isAlive for Python 3.9 compatibility. (#5898)

* Very minor tweak to commen to improve docs (#5900)

As discussed here: 
https://stackoverflow.com/questions/58816271/celery-task-asyncresult-takes-task-id-but-is-documented-to-get-asyncresult-inst
this comment seems to flow to a very confusing and misleading piece of documentation here:
https://docs.celeryproject.org/en/latest/reference/celery.app.task.html#celery.app.task.Task.AsyncResult

* Support configuring schema of a PostgreSQL database (#5910)

* Support configuring schema of a PostgreSQL database

* Add unit test

* Remove blank line

* Fix raise issue to make exception message more friendly (#5912)

Signed-off-by: Chenyang Yan <memory.yancy@gmail.com>

* Add progress for retry connections (#5915)

This will show current retry progress so it will clear confusion about how many retries will be tried for connecting to broker.
Closes #4556

* chg: change xrange to range (#5926)

* update docs for json serializer and add note for int keys serialization (#5932)

* fix indentation for note block in calling.rst (#5933)

* Added links to other issue trackers. (#5939)

* Add labels automatically for issues. (#5938)

* Run pyupgrade.

Co-authored-by: Michal Čihař <michal@cihar.com>
Co-authored-by: ptitpoulpe <ptitpoulpe@ptitpoulpe.fr>
Co-authored-by: Didi Bar-Zev <didi@hiredscore.com>
Co-authored-by: Santos Solorzano <santosjavier22@gmail.com>
Co-authored-by: manlix <manlix@yandex.ru>
Co-authored-by: Jimmy <54828848+sckhg1367@users.noreply.github.com>
Co-authored-by: Борис Верховский <boris.verk@gmail.com>
Co-authored-by: Asif Saif Uddin <auvipy@gmail.com>
Co-authored-by: Jainal Gosaliya <jainal09gosalia@gmail.com>
Co-authored-by: gsfish <caoyu97@hotmail.com>
Co-authored-by: Dipankar Achinta <di.punk.car19@gmail.com>
Co-authored-by: Pengjie Song (宋鹏捷) <spengjie@sina.com>
Co-authored-by: Chris Griffin <chris-griffin@users.noreply.github.com>
Co-authored-by: Muhammad Hewedy <mhewedy@gmail.com>
Co-authored-by: Blaine Bublitz <blaine.bublitz@gmail.com>
Co-authored-by: Tamu <tamsanh@gmail.com>
Co-authored-by: Erik Tews <erik@datenzone.de>
Co-authored-by: abhinav nilaratna <anilaratna2@bloomberg.net>
Co-authored-by: Wyatt Paul <wpaul@hearsaycorp.com>
Co-authored-by: gal cohen <gal.nevis@gmail.com>
Co-authored-by: as <alfred@huji.fr>
Co-authored-by: Param Kapur <paramkapur2002@gmail.com>
Co-authored-by: Sven Ulland <sven.ulland@gmail.com>
Co-authored-by: Safwan Rahman <safwan.rahman15@gmail.com>
Co-authored-by: Aissaoui Anouar <tobia@crossbone.cc>
Co-authored-by: Neal Wang <qdzzyb2015@gmail.com>
Co-authored-by: Alireza Amouzadeh <alireza@amouzadeh.net>
Co-authored-by: Marcos Moyano <marcos@anue.biz>
Co-authored-by: Stepan Henek <stepan+github@henek.name>
Co-authored-by: Andrew Sklyarov <AndrewPix@users.noreply.github.com>
Co-authored-by: Michael Fladischer <michael@fladi.at>
Co-authored-by: Dejan Lekic <dejan.lekic@gmail.com>
Co-authored-by: Yannick Schuchmann <yannick.schuchmann@googlemail.com>
Co-authored-by: Matt Davis <matteius@gmail.com>
Co-authored-by: Karthikeyan Singaravelan <tir.karthi@gmail.com>
Co-authored-by: Bernd Wechner <bernd-wechner@users.noreply.github.com>
Co-authored-by: Sören Oldag <soeren_oldag@freenet.de>
Co-authored-by: uddmorningsun <memory.yancy@gmail.com>
Co-authored-by: Amar Fadil <34912365+marfgold1@users.noreply.github.com>
Co-authored-by: woodenrobot <woodenrobot1993@gmail.com>
Co-authored-by: Sardorbek Imomaliev <sardorbek.imomaliev@gmail.com>

* Remove fallback code for Python 2 support marked with TODOs. (#5953)

Co-authored-by: Asif Saif Uddin <auvipy@gmail.com>

* Remove PY3 conditionals (#5954)

* Added integration coverage for link_error (#5373)

* Added coverage for link_error.

* Use pytest-rerunfailed plugin instead of rolling our own custom implementation.

* Added link_error with retries. This currently fails.

* Remove unused import.

* Fix import on Python 2.7.

* retries in link_error do not hang the worker anymore.

* Run error callbacks eagerly when the task itself is run eagerly.

Fixes #4899.

* Adjust unit tests accordingly.

* Grammar in documentation (#5780)

* Grammar in documentation

* Address review.

* pypy 7.2 matrix (#5790)

* removed extra slashes in CELERY_BROKER_URL (#5792)

The Celery broker URL in settings.py had 2 slashes in the end which are not required and can be misleading.
so I changed :-
CELERY_BROKER_URL = 'amqp://guest:guest@localhost//' to CELERY_BROKER_URL = 'amqp://guest:guest@localhost'

* Fix #5772 task_default_exchange & task_default_exchange_type not work (#5773)

* Fix #5772 task_default_exchange & task_default_exchange_type not work

* Add unit test: test_setting_default_exchange

* Move default_exchange test to standalone class

* Run integration suite with memcached results backend. (#5739)

* Fix hanging forever when fetching results from a group(chain(group)) canvas. (#5744)

PR #5739 uncovered multiple problems with the cache backend.
This PR should resolve one of them.

PR #5638 fixed the same test case for our async results backends that support native join.
However, it did not fix the test case for sync results backends that support native join.

* Fix regression in PR #5681. (#5753)

See comment in the diff for details.

* Grammatical fix to CONTRIBUTING.rst doc (#5794)

* Fix #5734 Celery does not consider authMechanism on mongodb backend URLs (#5795)

* Fix #5734 Celery does not consider authMechanism on mongodb backend URLs

* Add unit test: test_get_connection_with_authmechanism

* Add unit test: test_get_connection_with_authmechanism_no_username

* Fix errors in Python 2.7

Remove "","" after ""**"" operator

* Revert ""Revert ""Revert ""Added handle of SIGTERM in BaseTask in celery/task.py to prevent kill the task"" (#5577)"" (#5586)"" (#5797)

This reverts commit f79894e0a2c7156fd0ca5e8e3b652b6a46a7e8e7.

* Add Python 3.8 Support (#5785)

* Added Python 3.8 to the build matrix.

* Ensure a supported tblib version is installed for Python 3.8 and above.

In addition, modernize the relevant tests.

* Workaround patching problem in test.

* py 3.8 in clasifier

* ubuntu bionic (#5799)

* ubuntu bionic

* fast finish

* sync bumversion with pypi release

* Dev.req (#5803)

* update  docker config



* undo hardpin

* devr req install from github master

* update  docker config (#5801)

* update  docker config

* make dockerfile to install from github master dev branch by default

* update download link

* Isort.

* Grammatical & punctuation fixes for CONTRIBUTING.rst document (#5804)

* update dockerfile

* switched to ubuntu bionic

* update docker

* keep it empty until we reconfigure it again with autopep8

* Fixed Dockerfile (#5809)

* Update document CONTRIBUTING.rst & fix Dockerfile typo (#5813)

* Added an issue template for minor releases.

* reference gocelery Go Client/Server for Celery (#5815)

* Add enterprise language (#5818)

* Fix/correct minor doc typos (#5825)

* Correct a small typo

* Correct bad contributing documentation links

* Preserve the task priority in case of a retry (#5820)

* Preserve the task priority in case of a retry

* Created test case for retried tasks with priority

* Implement an integration test for retried tasks with priorities

* bump kombu

* basic changelog for celery 4.4.0rc4

* bump celery 4.4.0rc4

* events bootstep disabled if no events (#5807)

* events bootstep disabled if no events

* Added unit tests.

* update bug report template

* fixing ascii art to look nicer (#5831)

* Only rerun flaky tests when failures can be intermediary.

* Rename Changelog to Changelog.rst

* The test_nested_group_chain test can run without native_join support. (#5838)

* Run integration tests with Cassandra (#5834)

* Run integration tests with Cassandra.

* Configure cassandra result backend

* Pre-create keyspace and table

* Fix deprecation warning.

* Fix path to cqlsh.

* Increase connection timeout.

* Wait until the cluster is available.

* SQS - Reject on failure (#5843)

* reject on failure

* add documentation

* test fix

* test fix

* test fix

* Add a concurrency model with ThreadPoolExecutor (#5099)

* Add a concurrency model with ThreadPoolExecutor

* thread model test for pypy

* Chain primitive's code example fix in canvas documentation (Regression PR#4444) (#5845)

* Changed multi-line string (#5846)

This string wasn't rendering properly and was printing the python statement too. Although the change isn't as pretty code-wise, it gets rid of an annoyance for the user.

* Add auto expiry for DynamoDB backend (#5805)

* Add auto expiry for DynamoDB backend

This adds auto-expire support for the DynamoDB backend, via the DynamoDB
Time to Live feature.

* Require boto3>=1.9.178 for DynamoDB TTL support

boto3 version 1.9.178 requires botocore>=1.12.178.

botocore version 1.12.178 introduces support for the DynamoDB
UpdateTimeToLive call.

The UpdateTimeToLive call is used by the DynamoDB backend to enable TTL
support on a newly created table.

* Separate TTL handling from table creation

Handle TTL enabling/disabling separately from the table get-or-create
function.

Improve handling of cases where the TTL is already set to the desired
state.

DynamoDB only allows a single TTL update action within a fairly long
time window, so some problematic cases (changing the TTL attribute,
enabling/disabling TTL when it was recently modified) will raise
exceptions that have to be dealt with.

* Handle older boto3 versions

If the boto3 TTL methods are not found, log an informative error. If the
user wants to enable TTL, raise an exception; if TTL should be disabled,
simply return.

* Improve logging

- Handle exceptions by logging the error and re-raising

- Log (level debug) when the desired TTL state is already in place

* Add and use _has_ttl() convenience method

Additional changes:

- Handle exceptions when calling boto3's describe_time_to_live()

- Fix test cases for missing TTL methods

* Update ttl_seconds documentation

* Log invalid TTL; catch and raise ValueError

* Separate method _get_table_ttl_description

* Separate ttl method validation function

* Clarify tri-state TTL value

* Improve test coverage

* Fix minor typo in comment

* Mark test as xfail when using the cache backend. (#5851)

* [Fix #5436] Store extending result in all backends (#5661)

* [Fix #5436] Store extending result in all backends

* Fix sqlalchemy

* More fixu

* Fixing tests

* removing not necessary import

* Removing debug code

* Removing debug code

* Add tests for get_result_meta in base and database

* Revert ""Add auto expiry for DynamoDB backend (#5805)"" (#5855)

This reverts commit f7f5bcfceca692d0e78c742a7c09c424f53d915b.

* Revert ""Mark test as xfail when using the cache backend. (#5851)"" (#5854)

This reverts commit 1b303c2968836245aaa43c3d0ff9249dd8bf9ed2.

* docs: Document Redis commands used by celery (#5853)

* remove cache back end integrtion test. (#5856)

* Fix a race condition when publishing a very large chord header (#5850)

* Added a test case which artificially introduces a delay to group.save().

* Fix race condition by delaying the task only after saving the group.

* update tox

* Remove duplicate boto dependency. (#5858)

* Revert ""remove cache back end integrtion test. (#5856)"" (#5859)

This reverts commit e0ac7a19a745dd5a52a615c1330bd67f2cef4d00.

* Revert ""Revert ""Add auto expiry for DynamoDB backend (#5805)"" (#5855)"" (#5857)

This reverts commit 4ddc605392d7694760f23069c34ede34b3e582c3.

* Revert ""update tox""

This reverts commit 49427f51049073e38439ea9b3413978784a24999.

* Fix the test_simple_chord_with_a_delay_in_group_save test.

* Revert ""Revert ""Skip unsupported canvas when using the cache backend"""" (#5860)

* Revert ""Revert ""Mark test as xfail when using the cache backend. (#5851)"" (#5854)""

This reverts commit fc101c61c1912c4dafa661981f8b865c011e8a55.

* Make the xfail condition stricter.

* Fix the xfail condition.

* Linters should use Python 3.8.

* Move pypy unit tests to the correct stage.

* Temporarily allow PyPy to fail since it is unavailable in Travis.

* Remove unused variables.

* Fix unused imports.

* Fix pydocstyle errors in dynamodb.

* Fix pydocstyle errors in redis backend.

* bump kombu to 4.6.7

* celery 4.4.0rc5 changelog

* celery 4.4.0rc5

* rm redundant code (#5864)

* isort.

* Document the threads task pool in the CLI.

* Removed the paragraph about using librabbitmq. Refer to #5872 (#5873)

* Task class definitions can have retry attributes (#5869)

* autoretry_for
* retry_kwargs
* retry_backoff
* retry_backoff_max
* retry_jitter
can now be defined as cls attributes.

All of these can be overriden from the @task decorator

https://github.com/celery/celery/issues/4684

* whatsnew in Celery 4.4 as per projects standard (#5817)

* 4.4 whatsnew

* update

* update

* Move old whatsnew to history.

* Remove old news & fix markers.

* Added a section notifying Python 3.4 has been dropped.

* Added a note about ElasticSearch basic auth.

* Added a note about being able to replace eagerly run tasks.

* Update index.

* Address comment.

* Described boto3 version updates.

* Fix heading.

* More news.

* Thread pool.

* Add Django and Config changes

* Bump version 4.4.0

* upate readme

* Update docs regarding Redis Message Priorities (#5874)

* Update docs regarding Redis Message Priorities

* fixup! Update docs regarding Redis Message Priorities

* Update 4.4.0 docs (#5875)

* Update 4.4 release changelog

* Update whatsnew-4.4

* Update tasks docs

* Fix recent tasks doc file update (#5879)

* Include renamed Changelog.rst in source releases. (#5880)

Changelog.rst was renamed from Changelog in
fd023ec174bedc2dc65c63a0dc7c85e425ac00c6 but MANIFEST.in was not updated to
include the new name. This fixes the file name so Changelog.rst will show up
in future source releases again.

* Reorganised project_urls and classifiers. (#5884)

* Use safequote in SQS Getting Started doc (#5885)

* Have appveyor build relevant versions of Python. (#5887)

* Have appveyor build relevant and buildable versions of Python.

* Appveyor is missing CI requirements to build.

* Pin pycurl to version that will build with appveyor (because wheels files exist)

* Restrict python 2.7 64 bit version of python-dateutil for parse.

* Use is_alive instead of isAlive for Python 3.9 compatibility. (#5898)

* Very minor tweak to commen to improve docs (#5900)

As discussed here: 
https://stackoverflow.com/questions/58816271/celery-task-asyncresult-takes-task-id-but-is-documented-to-get-asyncresult-inst
this comment seems to flow to a very confusing and misleading piece of documentation here:
https://docs.celeryproject.org/en/latest/reference/celery.app.task.html#celery.app.task.Task.AsyncResult

* Support configuring schema of a PostgreSQL database (#5910)

* Support configuring schema of a PostgreSQL database

* Add unit test

* Remove blank line

* Fix raise issue to make exception message more friendly (#5912)

Signed-off-by: Chenyang Yan <memory.yancy@gmail.com>

* Add progress for retry connections (#5915)

This will show current retry progress so it will clear confusion about how many retries will be tried for connecting to broker.
Closes #4556

* chg: change xrange to range (#5926)

* update docs for json serializer and add note for int keys serialization (#5932)

* fix indentation for note block in calling.rst (#5933)

* Added links to other issue trackers. (#5939)

* Add labels automatically for issues. (#5938)

* remove redundant raise from docstring (#5941)

`throw` is True by default so the Retry exception will already get raised by calling `self.retry(countdown=60 * 5, exc=exc)`

* Run pyupgrade.

* Fix typo (#5943)

* Remove fallback code for Python 2 support.

* docs: fixes Rabbits and Warrens link in routing userguide (#4007) (#5949)

* Fix labels on Github issue templates. (#5955)

Use quotation marks to escape labels on Github issue templates. This
prevents the colon from breaking the template.

* added retry_on_timeout and socket_keepalive to config and doc (#5952)

* Fixed event capture from building infinite list (#5870)

* Fix error propagation example (#5966)

* update range (#5971)

* update setup.cfg

* bump billiard to 3.6.3.0

* Update __init__.py (#5951)

* Update __init__.py

Fixed issue for object with result_backend=True (decode fails on multiple None request)

* Update __init__.py

suggested changeds

* Update __init__.py

* Use configured db schema also for sequences (#5972)

* Added a default value for retries in worker.strategy. (#5945)

* Added a default value for retries in worker.strategy.

I was facing an issue when adding tasks directly to rabbitmq
using pika instead of calling task.apply_async. The issue was
the self.retry mechanisum was failing. In app/tasks.py the line
`retries = request.retries + 1` was causing the issue. On further
tracing I figured out that it was because the default .get value
(None) was getting passed through this function and was raising
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'

* Add test cases for default and custom retries value

* pypy 7.3 (#5980)

* Pass `interval` to `get_many` (#5931)

* Pass `interval` to `get_many`

* Fix: Syntax error for py2.7

* Fix: Syntax error for py2.7

* Fixed problem with conflicting autoretry_for task parameter and Task.replace() (#5934)

* Fix #5917 (#5918)

* Fix changelog (#5881)

* merge in place the apps beat schedule in the default Schedule class. (#5908)

* Handle Redis connection errors in result consumer (#5921)

* Handle Redis connection errors in result consumer

* Closes #5919.

* Use context manager for Redis conusmer reconnect

* Log error when result backend reconnection fails

* Fix inspect_command documentation (#5983)

* Use gevent and eventlet wait() functions to remove busy-wait (#5974)

* Use gevent and eventlet wait() functions to remove busy-wait

Fixes issue #4999.

Calling AsyncResult.get() in a gevent context would cause the async Drainer to repeatedly call wait_for until the result was completed.  I've updated the code to have a specific implementation for gevent and eventlet that will cause wait_for to only return every ""timeout"" # of seconds, rather than repeatedly returning.

Some things I'd like some feedback on:
* Where's the best place to add test coverage for this?  It doesn't look like there are any tests that directly exercised the Drainer yet so I would probably look to add some of these to the backends/ unit tests.
* The way I did this for the Eventlet interface was to rely on the private _exit_event member of the GreenThread instance; to do this without relying on a private member would require some additional changes to the backend Drainer interface so that we could wait for an eventlet-specific event in wait_for().  I can do this, just wanted to get some feedback before.

* Add unit tests for Drainer classes

In order for this to work without monkeypatching in the tests, I needed to call sleep(0) to let the gevent/eventlet greenlets to yield control back to the calling thread.  I also made the check interval configurable in the drainer so that we didn't need to sleep multiples of 1 second in the tests.

* Weaken asserts since they don't pass on CI

* Fix eventlet auto-patching DNS resolver module on import

By default it looks like ""import eventlet"" imports the greendns module unless the environment EVENTLET_NO_GREENDNS is set to true.  This broke a pymongo test.

* Add tests ensuring that the greenlet loop isn't blocked

These tests make sure that while drain_events_until is running that other gevent/eventlet concurrency can run.

* Clean up tests and make sure they wait for all the threads to stop

* Fix chords with chained groups (#5947)

* kombu 4.6.8

* update setup

* updated version 4.4.1

* Fix: Accept and swallow `kwargs` to handle unexpected keyword arguments

* Allow boto to look for credentials in S3Backend

* add reference to Rusty Celery

* Update document of revoke method in Control class

* Fix copy-paste error in result_compression docs

* Make 'socket_keepalive' optional variable (#6000)

* update connection params - socket_keepalive is optional now

* update readme - added versionadded 4.4.1 and fixed `redis_socket_keepalive`

* added check of socket_keepalive in arguments for UnixSocketConnect

* Fixed incorrect setting name in documentation (#6002)

* updated version 4.4.2

* Fix backend utf-8 encoding in s3 backend

Celery backend uses utf-8 to deserialize results,
which would fail for some serializations like pickle.

* Fix typo in celery.bin.multi document

* Upgraded pycurl to the latest version that supports wheel.

* pytest 5.3.5 max

* Add uptime to the stats inspect command

* Doc tweaks: mostly grammar and punctuation (#6016)

* Fix a bunch of comma splices in the docs

* Remove some unnecessary words from next-steps doc

* Tweak awkward wording; fix bad em-dash

* Fix a bunch more comma splices in next-steps doc

* Miscellaneous grammar/punctuation/wording fixes

* Link to task options in task decorator docs

* Fixing issue #6019: unable to use mysql SSL parameters when getting mysql engine (#6020)

* Fixing issue #6019: unable to use mysql SSL parametes in create_engine()

* adding test for get_engine when self.forked is False and engine args are passed in for create_engine()

* Clean TraceBack to reduce memory leaks for exception task (#6024)

* Clean TraceBack to reduce memory leaks

* add unit test

* add unit test

* reject unittest

* Patch For Python 2.7 compatibility

* update unittest

* Register to the garbage collector by explicitly referring to f_locals.

* need more check

* update code coverage

* update Missing unit test

* 3.4 -> 3.5

Co-authored-by: heedong.jung <heedong.jung@samsung.com>

* exceptions: NotRegistered: fix up language

Minor fix to the language.

* Note about autodiscover_tasks and periodic tasks

This is particularly important for Django projects that put periodic tasks into each app's `tasks.py` and want to use one as a periodic task.  By the time `autodiscover_tasks()` loads those tasks, the `on_after_configure` Signal has already come and gone, so anything decorated with `@app.on_after_finalize.connect` will never be called.

If there's other documentation on this subject, I could not find it.

* Avoid PyModulelevel, deprecated in Sphinx 4

Use `PyFunction` instead of `PyModulelevel` to avoid this
deprecation warning:

    RemovedInSphinx40Warning: PyModulelevel is deprecated.
    Please check the implementation of
    <class 'celery.contrib.sphinx.TaskDirective'>

This replacement is one of the options listed in the Sphinx docs
(https://www.sphinx-doc.org/en/master/extdev/deprecated.html).

* Give up sending a worker-offline message if transport is not connected (#6039)

* If worker-offline event fails to send, give up and die peacefully

* Add test for retry= and msgs in heartbeat

* Fix the build and all documentation warnings.

I finally upgraded our theme to 2.0.
As a result we've upgraded Sphinx to 2.0.
Work to upgrade Sphinx to 3.0 will proceed in a different PR.

This upgrade also fixes our build issues caused by #6032.
We don't support Sphinx 1.x as a result of that patch.

I've also included the missing 4.3 changelog to our history.

* Support both Sphinx 2 and 3.

* Add Task to __all__ in celery.__init__.py

* Add missing parenthesis to example in docs

* Ensure a single chain object in a chain does not raise MaximumRecursionError.

Previously chain([chain(sig)]) would crash.
We now ensure it doesn't.

Fixes #5973.

* update setup.py

* fix typo

missing quote at the end of line

* Fix a typo in monitoring doc

* update travis

* update ubuntu to focal foss

20.04 LTS

* Fix autoscale when prefetch_multiplier is 1

* Allow start_worker to function without ping task

* Update celeryd.conf

Move the directory of the program before the execution of the command/script

* Add documentation for ""predefined_queue_urls""

* [Fix #6074]: Add missing documentation for MongoDB as result backend.

* update funding

* 🐛 Correctly handle configuring the serializer for always_eager mode. (#6079)

* 🐛 Correctly handle configuring the serializer for always_eager mode.

options['serializer'] will always exist, because it is initialized from an mattrgetter. Even if unset, it will be present in the options with a value of None.

* 🐛 Add a test for new always_eager + task_serializer behavior.

* ✏️ Whoops missed a :

* Remove doubling of prefetch_count increase when prefetch_multiplier gt 1 (#6081)

* try ubuntu focal (#6088)

* Fix eager function not returning result after retries.

Using apply function does not return correct results after at least one
retry because the return value of successive call is not going back to
the original caller.

* return retry result if not throw and is_eager

if throw is false, we would be interested by the result of retry and
not the current result which will be an exception.

This way it does not break the logic of `raise self.retry`

This should be used like `return self.retry(..., throw=False)` in an
except statement.

* revert formatting change

* Add tests for eager retry without throw

* update predefined-queues documentation

Suggested version of configuration does not work. 
Additionally I'd like to mention, that `access_key_id` and `secret_access_key` are mandatory fields and not allowing you to go with defaults AWS_* env variables.
I can contribute for this variables to be optional

Also I'm not sure if security token will apply, could you please advice how to do it?

* Fix couchbase version < 3.0.0 as API changed

* Remove reference to -O fair in optimizations

-O fair was made the default in Celery 4.0
https://docs.celeryproject.org/en/stable/history/whatsnew-4.0.html#ofair-is-now-the-default-scheduling-strategy

* pytest ranges

* pypy3

* revert to bionic

* do not load docs.txt requirements for python 2.7

As it requires Sphinx >= 2.0.0 and there is no such version compatible
with python 2.7

* update cassandra travis integration test configuration

cassandra:latest docker image changed location of cqlsh program

* pin cassandra-driver

CI get stuck after all cassandra integration tests

* Fix all flake8 lint errors

* Fix all pydocstyle lint errors

* Fix all configcheck lint errors

* Always requeue while worker lost regardless of the redelivered flag (#6103)

* #5598 fix, always redelivery while WorkerLostError

* fix, change the requeue flag so the task will remain PENDING

* Allow relative paths in the filesystem backend (#6070)

* Allow relative paths in the filesystem backend

* fix order of if statements

* [Fixed Issue #6017]
--> Added Multi default logfiles and pidfiles paths

[Description]:
--> Changed the default paths for log files & pid files to be '/var/log/celery' and '/var/run/celery'
--> Handled by creating the respective paths if not exist.
--> Used os.makedir(path,if_exists=True)

[Unit Test Added]:
--> .travis.yml - config updated with 'before install'.
--> t/unit/apps/test_multi.py - Changed the default log files & pid files paths wherever required.

* Avoid race condition due to task duplication.

In some circumstances like a network partitioning, some tasks might
be duplicated. Sometimes, this lead to a race condition where a lost
task overwrites the result of the last successful task in the backend.

In order to avoid this race condition we prevent updating the result if
it's already in successful state.

This fix has been done for KV backends only and therefore won't work
with other backends.

* adding tests

* Exceptions must be old-style classes or derived from BaseException,
but here self.result may not subclass of BaseException.

* update fund link

* Fix windows build (#6104)

* do not load memcache nor couchbase lib during windows build

those libraries depends on native libraries libcouchbase and libmemcached
that are not installed on Appveyor.
As only unit tests runs on Appveyor, it should be fine

* Add python 3.8 workaround for app trap

* skip tests file_descriptor_safety tests on windows

AsyncPool is not supported on Windows so Pool does have _fileno_to_outq
attribute, making the test fail

* Fix crossplatform log and pid files in multi mode

it relates to #6017

* Use tox to build and test on windows

* remove tox_install_command

* drop python 2.7 from windows build

* Add encode to meta task in base.py (#5894)

* Add encode to base.py meta result

Fix bug with impossibility to load None from task meta

* Add tests for None. Remove exceed encode.

* Update base.py

Add return payload if None

* Update time.py to solve the microsecond issues (#5199)

When `relative` is set to True, the day, hour, minutes second will be round to the nearest one, however, the original program do not update the microsecond (reset it). As a result, the run-time offset on the microsecond will then be accumulated. 
For example, given the interval is 15s and relative is set to True
1.    2018-11-27T15:01:30.123236+08:00
2.    2018-11-27T15:01:45.372687+08:00
3.    2018-11-27T15:02:00.712601+08:00
4.    2018-11-27T15:02:15.987720+08:00
5.    2018-11-27T15:02:31.023670+08:00

* Change backend _ensure_not_eager error to warning

* Add priority support for 'celery.chord_unlock' task (#5766)

* Change eager retry behaviour

even with raise self.retry, it should return the eventual value
or MaxRetriesExceededError.
if return value of eager apply is Retry exception, retry eagerly
the task signature

* Order supported Python versions

* Avoid race condition in elasticsearch backend

if a task is retried, the task retry may work concurrently to current task.
store_result may come out of order.
it may cause a non ready state (Retry) to override a ready state (Success, Failure).
If this happens, it will block indefinitely pending any chord depending on this task.

this change makes document updates safe for concurrent writes.

https://www.elastic.co/guide/en/elasticsearch/reference/current/optimistic-concurrency-control.html

* backends base get_many pass READY_STATES arg

* test backends base get_many pass READY_STATES arg

* Add integration tests for Elasticsearch and fix _update

* Revert ""revert to bionic""

This reverts commit 6e091573f2ab0d0989b8d7c26b677c80377c1721.

* remove jython check

* feat(backend): Adds cleanup to ArangoDB backend

* Delete Document Known Issue with CONN_MAX_AGE in 4.3

* issue 6108 fix filesystem backend cannot not be serialized by picked (#6120)

* issue 6108 fix filesystem backend cannot not be serialized by picked

https://github.com/celery/celery/issues/6108

* issue-6108 fix unit test failure

* issue-6108 fix flake8 warning

Co-authored-by: Murphy Meng <mmeng@mirriad.com>

* kombu==4.6.9 (#6133)

* changelog for 4.4.3

* v 4.4.3

* remove un supported classifier

* Fix autoretry_for with explicit retry (#6138)

* Add tests for eager task retry

* Fixes #6135

If autoretry_for is set too broad on Exception, then autoretry may get a Retry
if that's the case, rethrow directly instead of wrapping it in another Retry
to avoid loosing new args

* Use Django DB max age connection setting (fixes #4116)

* Add retry on recoverable exception for the backend (#6122)

* Add state to KeyValueStoreBackend.set method

This way, a backend implementation is able to take decisions based on
current state to store meta in case of failures.

* Add retry on recoverable exception for the backend

acks.late makes celery acknowledge messages only after processing and
storing result on the backend.

However, in case of backend unreachable, it will shadow a Retry
exception and put the task as failed in the backend not retrying the
task and acknoledging it on the broker.

With this new result_backend_always_retry setting, if the backend
exception is recoverable (to be defined per backend implementation),
it will retry the backend operation with an exponential backoff.

* Make elasticsearch backward compatible with 6.x

* Make ES retry storing updates in a better way

if existing value in the backend is success, then do nothing.
if it is a ready status, then update it only if new value is a ready status as well.
else update it.

This way, a SUCCESS cannot be overriden so that we do not loose
results but any ready state other than success (FAILURE, REVOKED) can
be overriden by another ready status (i.e. a SUCCESS)

* Add test for value not found in ES backend

* Fix random distribution of jitter for exponential backoff

random.randrange should be called with the actual so that all numbers
have equivalent probability, otherwise maximum value does have a way
higher probability of occuring.

* fix unit test if extra modules are not present

* ElasticSearch: add setting to save meta as json

* fix #6136. celery 4.4.3 always trying create /var/run/celery directory (#6142)

* fix #6136. celery 4.4.3 always trying create /var/run/celery directory, even if it's not needed.

* fix #6136. cleanup

* Add task_internal_error signal (#6049)

* Add internal_error signal

There is no special signal for an out of body error which can be the
result of a bad result backend.

* Fix syntax error.

* Document the task_internal_error signal.

Co-authored-by: Laurentiu Dragan <ldragan@bloomberg.net>

* changelog for v4.4.4

* kombu 4.6.10 (#6144)

* v4.4.4

* Add missing dependency on future (#6146)

Fixes #6145

* ElasticSearch: Retry index if document was deleted between index and update (#6140)

* ElasticSearch: Retry index if document was deleted between index and update

* Elasticsearch increase coverage to 100%

* Fix pydocstyle

* Specify minimum version of Sphinx for Celery extension (#6150)

The Sphinx extension requires Sphinx 2 or later due to #6032.

* fix windows build

* fix flake8 error

* fix multi tests in local

Mock os.mkdir and os.makedirs to avoid creating /var/run/celery and
/var/log/celery during unit tests if run without root priviledges

* Customize the retry interval of chord_unlock tasks

* changelog v4.4.5

* v4.4.5

* Fix typo in comment.

* Remove autoscale force_scale methods (#6085)

* Remove autoscale force_scale methods

* Remove unused variable in test

* Pass ping destination to request

The destination argument worked fine from CLI but didn't get used when calling ping from Python.

* Fix autoscale test

* chord: merge init options with run options

* put back KeyValueStoreBackend.set method without state

It turns out it was breaking some other projects.
wrapping set method with _set_with_state, this way it will not break existing Backend.
while enabling this feature for other Backend.

Currently, only ElasticsearchBackend supports this feature.

It protects concurrent update to corrupt state in the backend.
Existing success cannot be overriden, nor a ready state by a non ready state.
i.e. a Retry state cannot override a Success or Failure.
As a result, chord_unlock task will not loop forever due to missing ready state on the backend.

* added --range-prefix option to `celery multi` (#6180)

* added --range-prefix option to `celery multi`

Added option for overriding default range prefix when running
multiple workers prividing range with `celery multy` command.

* covered multi --range-prefix with tests

* fixed --range-prefix test

* Added as_list function to AsyncResult class (#6179)

* Add as_list method to return task IDs as a list

* Add a test for as_list method

* Add docstring for as_list method

* Fix CassandraBackend error in threads or gevent pool (#6147)

* Fix CassandraBackend error in threads or gevent pool
        * remove CassandraBackend.process_cleanup

* Add test case

* Add test case

* Add comments test_as_uri

Co-authored-by: baixue <baixue@wecash.net>

* changelog for v4.4.6

* v4.4.6

* Update Wiki link in ""resources""

In the page linked below, the link to wiki is outdated. Fixed that. 

https://docs.celeryproject.org/en/stable/getting-started/resources.html

* test_canvas: Add test for chord-in-chain

Add test case for the issue where a chord in a chain does not
work when using .apply(). This works fine with .apply_async().

* Trying to fix flaky tests in ci

* fix pydocstyle errors

* fix pydocstyle

* Drainer tests, put a lower constraint on number of intervals

liveness should iterate 10 times per interval while drain_events only
once. However, as it may use thread that may be scheduled out of
order, we may end up in some situation where liveness and drain_events
were called the same amount of time.

Lowering the constraint from < to <= to avoid failing the tests.

* pyupgrade.

* Fix merge error.

Co-authored-by: Борис Верховский <boris.verk@gmail.com>
Co-authored-by: Asif Saif Uddin <auvipy@gmail.com>
Co-authored-by: Jainal Gosaliya <jainal09gosalia@gmail.com>
Co-authored-by: gsfish <root@grassfish.net>
Co-authored-by: Dipankar Achinta <di.punk.car19@gmail.com>
Co-authored-by: spengjie <spengjie@sina.com>
Co-authored-by: Chris Griffin <chris-griffin@users.noreply.github.com>
Co-authored-by: Muhammad Hewedy <mhewedy@gmail.com>
Co-authored-by: Blaine Bublitz <blaine.bublitz@gmail.com>
Co-authored-by: Tamu <tamsanh@gmail.com>
Co-authored-by: Erik Tews <erik@datenzone.de>
Co-authored-by: abhinav nilaratna <anilaratna2@bloomberg.net>
Co-authored-by: Wyatt Paul <wpaul@hearsaycorp.com>
Co-authored-by: gal cohen <gal.nevis@gmail.com>
Co-authored-by: whuji <alfred@huji.fr>
Co-authored-by: Param Kapur <paramkapur2002@gmail.com>
Co-authored-by: Sven Ulland <sven.ulland@gmail.com>
Co-authored-by: Safwan Rahman <safwan.rahman15@gmail.com>
Co-authored-by: Aissaoui Anouar <tobia@crossbone.cc>
Co-authored-by: Neal Wang <qdzzyb2015@gmail.com>
Co-authored-by: Alireza Amouzadeh <alireza@amouzadeh.net>
Co-authored-by: Marcos Moyano <marcos@anue.biz>
Co-authored-by: Stepan Henek <stepan+github@henek.name>
Co-authored-by: Andrew Sklyarov <AndrewPix@users.noreply.github.com>
Co-authored-by: Michael Fladischer <michael@fladi.at>
Co-authored-by: Dejan Lekic <dejan.lekic@gmail.com>
Co-authored-by: Yannick Schuchmann <yannick.schuchmann@googlemail.com>
Co-authored-by: Matt Davis <matteius@gmail.com>
Co-authored-by: Xtreak <tir.karthi@gmail.com>
Co-authored-by: Bernd Wechner <bernd-wechner@users.noreply.github.com>
Co-authored-by: Sören Oldag <soeren_oldag@freenet.de>
Co-authored-by: uddmorningsun <memory.yancy@gmail.com>
Co-authored-by: Amar Fadil <34912365+marfgold1@users.noreply.github.com>
Co-authored-by: woodenrobot <woodenrobot1993@gmail.com>
Co-authored-by: Sardorbek Imomaliev <sardorbek.imomaliev@gmail.com>
Co-authored-by: Alex Riina <alex.riina@gmail.com>
Co-authored-by: Joon Hwan 김준환 <xncbf12@gmail.com>
Co-authored-by: Prabakaran Kumaresshan <k_prabakaran+github@hotmail.com>
Co-authored-by: Martey Dodoo <martey@mobolic.com>
Co-authored-by: Konstantin Seleznev <4374093+Seleznev-nvkz@users.noreply.github.com>
Co-authored-by: Prodge <Prodge@users.noreply.github.com>
Co-authored-by: Abdelhadi Dyouri <raryat@gmail.com>
Co-authored-by: Ixiodor <Ixiodor@users.noreply.github.com>
Co-authored-by: abhishekakamai <47558404+abhishekakamai@users.noreply.github.com>
Co-authored-by: Allan Lei <allanlei@helveticode.com>
Co-authored-by: M1ha Shvn <work_shvein_mihail@mail.ru>
Co-authored-by: Salih Caglar Ispirli <caglarispirli@gmail.com>
Co-authored-by: Micha Moskovic <michamos@gmail.com>
Co-authored-by: Chris Burr <chrisburr@users.noreply.github.com>
Co-authored-by: Dave King <tildedave@gmail.com>
Co-authored-by: Dmitry Nikulin <v.dmitry.nikulin@gmail.com>
Co-authored-by: Michael Gaddis <mgaddis@ancestry.com>
Co-authored-by: epwalsh <epwalsh10@gmail.com>
Co-authored-by: TalRoni <tal.inon.16@gmail.com>
Co-authored-by: Leo Singer <leo.singer@ligo.org>
Co-authored-by: Stephen Tomkinson <neonbunny@users.noreply.github.com>
Co-authored-by: Abhishek <abhishek.shukla@xeneta.com>
Co-authored-by: theirix <theirix@gmail.com>
Co-authored-by: yukihira1992 <hirayama@cancerscan.jp>
Co-authored-by: jpays <jerome.pays@cnp.fr>
Co-authored-by: Greg Ward <greg@gerg.ca>
Co-authored-by: Alexa Griffith <agriffith@bluecore.com>
Co-authored-by: heedong <63043496+heedong-jung@users.noreply.github.com>
Co-authored-by: heedong.jung <heedong.jung@samsung.com>
Co-authored-by: Shreyansh Khajanchi <shreyanshk@users.noreply.github.com>
Co-authored-by: Sam Thompson <georgedorn@users.noreply.github.com>
Co-authored-by: Alphadelta14 <alpha@pokesplash.net>
Co-authored-by: Azimjon Pulatov <azimjohn@yahoo.com>
Co-authored-by: ysde <ysde108@gmail.com>
Co-authored-by: AmirMohammad Ziaei <amir_zia@outlook.com>
Co-authored-by: Ben Nadler <ben.nadler@gusto.com>
Co-authored-by: Harald Nezbeda <hn@nezhar.com>
Co-authored-by: Chris Frisina <github@specialorange.org>
Co-authored-by: Adam Eijdenberg <adam.eijdenberg@digital.gov.au>
Co-authored-by: rafaelreuber <rafaelreuber@gmail.com>
Co-authored-by: Noah Kantrowitz <noah@coderanger.net>
Co-authored-by: Ben Nadler <jbennadler@gmail.com>
Co-authored-by: Clement Michaud <c.michaud@criteo.com>
Co-authored-by: Mathieu Chataigner <m.chataigner@criteo.com>
Co-authored-by: eugeneyalansky <65346459+eugeneyalansky@users.noreply.github.com>
Co-authored-by: Leonard Lu <leonard@socialcodeinc.com>
Co-authored-by: XinYang <yangxinhust@hotmail.com>
Co-authored-by: Ingolf Becker <ingolf.becker@googlemail.com>
Co-authored-by: Anuj Chauhan <an12ch98@gmail.com>
Co-authored-by: shaoziwei <ziwei.shao@cloudchef.io>
Co-authored-by: Mathieu Chataigner <mathieu.chataigner@gmail.com>
Co-authored-by: Anakael <shemeldima2@yandex.ru>
Co-authored-by: Danny Chan <danny.chan@c-k.dev>
Co-authored-by: Sebastiaan ten Pas <sebastiaan@diggimedia.nl>
Co-authored-by: David TILLOY <d.tilloy@criteo.com>
Co-authored-by: Anthony N. Simon <anthonynsimon@users.noreply.github.com>
Co-authored-by: lironhl <liron.lavy@gmail.com>
Co-authored-by: Raphael Cohen <raphael.cohen@sekoia.fr>
Co-authored-by: JaeyoungHeo <jay.jaeyoung@gmail.com>
Co-authored-by: singlaive <singlaive@gmail.com>
Co-authored-by: Murphy Meng <mmeng@mirriad.com>
Co-authored-by: Wu Haotian <whtsky@gmail.com>
Co-authored-by: Kwist <velnik@gmail.com>
Co-authored-by: Laurentiu Dragan <ldragan@bloomberg.net>
Co-authored-by: Michal Čihař <michal@cihar.com>
Co-authored-by: Radim Sückr <radim.suckr@gmail.com>
Co-authored-by: Artem Vasilyev <artem.v.vasilyev@gmail.com>
Co-authored-by: kakakikikeke-fork <kakakikikeke_new@yahoo.co.jp>
Co-authored-by: Pysaoke <pysaoke@gmail.com>
Co-authored-by: baixue <baixue@wecash.net>
Co-authored-by: Prashant Sinha <prashantsinha@outlook.com>
Co-authored-by: AbdealiJK <abdealikothari@gmail.com>

* Remove Python 2 compatibility code from Celery (#6221)

* Remove five from celery/__init__.py

* Remove five from celery/beat.py

* Remove five from celery/bootsteps.py

* Remove five from celery/exceptions.py

* Remove five from celery/local.py

* Remove five from celery/platforms.py

* Remove five from celery/result.py

* Remove five from celery/schedules.py

* Remove five from celery/app/amqp.py

* Remove five from celery/app/annotations.py

* Remove five from celery/app/backends.py

* Remove five from celery/app/base.py

* Remove five from celery/app/control.py

* Remove five from celery/app/defaults.py

* Remove five from celery/app/log.py

* Remove five from celery/app/registry.py

* Remove five from celery/app/routes.py

* Remove five from celery/app/task.py

* Remove five from celery/app/trace.py

* Remove five from celery/app/utils.py

* Remove five from celery/apps/beat.py

* Remove five from celery/apps/multi.py

* Remove five from celery/apps/worker.py

* Remove five from celery/backends/database/__init__.py

* Remove five from celery/backends/amqp.py

* Remove five from celery/backends/asynchronous.py

* Remove five from celery/backends/base.py

* Remove five from celery/backends/dynamodb.py

* Remove five from celery/backends/elasticsearch.py

* Remove five from celery/backends/mongodb.py

* Remove five from celery/backends/redis.py

* Remove five from celery/backends/rpc.py

* Remove five from celery/concurrency/asynpool.py

* Remove five from celery/concurrency/base.py

* Remove five from celery/concurrency/prefork.py

* Remove five from celery/contrib/testing/manager.py

* Remove five from celery/contrib/migrate.py

* Remove five from celery/contrib/rdb.py

* Remove five from celery/events/cursesmon.py

* Remove five from celery/events/dispatcher.py

* Remove five from celery/events/state.py

* Remove five from celery/loaders/base.py

* Remove five from celery/security/certificate.py

* Remove five from celery/security/utils.py

* Remove five from celery/task/base.py

* Remove five from celery/utils/dispatch/signal.py

* Remove five from celery/utils/abstract.py

* Remove five from celery/utils/collections.py

* Remove five from celery/utils/debug.py

* Remove five from celery/utils/functional.py

* Remove five from celery/utils/graph.py

* Remove five from celery/utils/imports.py

* Remove five from celery/utils/log.py

* Remove five from celery/utils/saferepr.py

* Remove five from celery/utils/serialization.py

* Remove five from celery/utils/term.py

* Remove five from celery/utils/text.py

* Remove five from celery/utils/threads.py

* Remove five from celery/utils/time.py

* Remove five from celery/utils/timer2.py

* Remove five from celery/consumer/consumer.py

* Remove five from celery/consumer/gossip.py

* Remove five from celery/consumer/mingle.py

* Remove five from celery/worker/autoscale.py

* Remove five from celery/worker/components.py

* Remove five from celery/worker/control.py

* Remove five from celery/worker/request.py

* Remove five from celery/worker/state.py

* Remove five from celery/worker/worker.py

* Remove five from celery/t/benchmarks/bench_worker.py

* Remove five from celery/t/integration/test_canvas.py

* Remove five from celery/t/unit/app

* Remove five from celery/t/unit/backends

* Remove five from celery/t/unit/compat_modules

* Remove five from celery/t/unit/concurrency

* Remove five from celery/t/unit/contrib

* Remove five from celery/t/unit/events

* Remove five from celery/t/unit/security

* Remove five from celery/t/unit/tasks

* Remove five from celery/t/unit/utils

* Remove five from celery/t/unit/worker

* Sort imports.

* Comment out PyPy for now.

* Remove flakeplus.

* Happify linter.

* Fix merge problems.

* Delete backport.

* Remove unused import.

* Remove logic that notifies user that the Python version isn't supported from setup.py.

pip already does that for us.

* Add a trove classifier to indicate Celery only supports Python 3.

* Restore usage of `reraise` for consistency with the kombu port.

* Drop Python 2 compatibility code from our Sphinx extension.

* Remove mention of flakeplus from tox.ini.

* Remove mention of flakeplus from our CONTRIBUTING guide.

* Bump Sphinx requirement.

* Remove Python 2 compatibility code from our custom Sphinx extension.

* Resolve Sphinx warning due to removed section in 32ff7b45aa3d78aedca61b6554a9db39122924fd.

* Remove pydocstyle from build matrix as it was removed from master.

See #6278.

* Bump version: 4.4.7 → 5.0.0-alpha1

* Final touches.

* Fix README.

* Bump Kombu to 5.0.0.

* Bump version: 5.0.0-alpha1 → 5.0.0a2

* Fix wrong version.

* Remove autodoc for removed module.

* Remove documentation for removed methods.

* Remove the riak backend since riak is no longer maintained.

* Remove riak backend since riak is no longer maintained.

* Start fresh.

* Added all arguments for the celery worker command.

Still needs more documentation and improvements...

* Load the application and execute a worker.

* Added the rest of the global options.

If an app is not specified we now use the default app.

In addition, we now exit with the correct status code.

* Extract validation into parameter types.

* Restructure and document.

* Allow to pass worker configuration options from command line.

* Implement the beat command.

* Allow to configure celery options through the CLI.

* Implement the `celery call` command.

* Implement the `celery list bindings` command.

* Implement the `celery purge` command.

* Implement the `celery result` command.

* Implement the `celery migrate` task.

* Implemented the celery@thedrow: OK

1 node online. command.

* Take --no-color in consideration when outputting to stdout.

* Ensure `celery worker` takes `--no-color` into consideration.

* Use the preformatted OK string.

* Adopt the NO_COLOR standard.

See https://no-color.org/ for details.

* Split commands into separate files.

* Added 'did you mean' messages.

* Implement the `celery events` command.

* Text style should take --no-color into consideration as well.

* Implement the basic `celery inspect` command.

* Improve UI.

* Organize the code.

* Implement the `celery graph bootsteps` command.

* Implement the `celery graph workers` command.

* Implement the `celery upgrade settings` command.

* Implement the `celery report` command.

* Delete former unit tests.

* Implement the `celery logtool` command.

* Pass the quiet argument to the CLI context.

* Limit inspect to existing actions.

* Implement the `celery control` command.

* Basic scaffold for the `celery amqp` shell command.

* Start implementing the shell commands.

* Implement basic.publish and basic.get.

* Echo OK after acknowledgement.

* Reformat Code.

* Implement the exchange.declare command.

* Implement the exchange.delete command.

* Implement the queue.bind command.

* Implement the queue.declare command.

* Implement the queue.delete command.

* Echo queue.declare result to screen.

* Echo queue.delete result to screen.

* Implement the queue.purge command.

* Fix color support for error().

* Report errors and continue.

* Handle connection errors and reconnect on error.

* Refactor.

* Implement the `celery shell` command.

* Isort.

* Add documentation.

* Correct argument types.

* Implement detach for `celery worker`.

* Documentation.

* Implement detach for `celery beat`.

* Documentation.

* Implement the `celery multi` command.

* Documentation.

* Implement user options.

* Collect command actions from the correct registry.

* Isort.

* Fix access to app.

* Match arguments for control.

* Start fresh.

* Added all arguments for the celery worker command.

Still needs more documentation and improvements...

* Load the application and execute a worker.

* Added the rest of the global options.

If an app is not specified we now use the default app.

In addition, we now exit with the correct status code.

* Extract validation into parameter types.

* Restructure and document.

* Allow to pass worker configuration options from command line.

* Implement the beat command.

* Allow to configure celery options through the CLI.

* Implement the `celery call` command.

* Implement the `celery list bindings` command.

* Implement the `celery purge` command.

* Implement the `celery result` command.

* Implement the `celery migrate` task.

* Implemented the celery@thedrow: OK

1 node online. command.

* Take --no-color in consideration when outputting to stdout.

* Ensure `celery worker` takes `--no-color` into consideration.

* Use the preformatted OK string.

* Adopt the NO_COLOR standard.

See https://no-color.org/ for details.

* Split commands into separate files.

* Added 'did you mean' messages.

* Implement the `celery events` command.

* Text style should take --no-color into consideration as well.

* Implement the basic `celery inspect` command.

* Improve UI.

* Organize the code.

* Implement the `celery graph bootsteps` command.

* Implement the `celery graph workers` command.

* Implement the `celery upgrade settings` command.

* Implement the `celery report` command.

* Implement the `celery logtool` command.

* Pass the quiet argument to the CLI context.

* Limit inspect to existing actions.

* Implement the `celery control` command.

* Basic scaffold for the `celery amqp` shell command.

* Start implementing the shell commands.

* Implement basic.publish and basic.get.

* Echo OK after acknowledgement.

* Reformat Code.

* Implement the exchange.declare command.

* Implement the exchange.delete command.

* Implement the queue.bind command.

* Implement the queue.declare command.

* Implement the queue.delete command.

* Echo queue.declare result to screen.

* Echo queue.delete result to screen.

* Implement the queue.purge command.

* Fix color support for error().

* Report errors and continue.

* Handle connection errors and reconnect on error.

* Refactor.

* Implement the `celery shell` command.

* Isort.

* Add documentation.

* Correct argument types.

* Implement detach for `celery worker`.

* Documentation.

* Implement detach for `celery beat`.

* Documentation.

* Implement the `celery multi` command.

* Documentation.

* Implement user options.

* Collect command actions from the correct registry.

* Isort.

* Fix access to app.

* Match arguments for control.

* added --range-prefix option to `celery multi` (#6180)

* added --range-prefix option to `celery multi`

Added option for overriding default range prefix when running
multiple workers prividing range with `celery multy` command.

* covered multi --range-prefix with tests

* fixed --range-prefix test

* multi: fixed handling unknown options, fixed doc example

* removed debug print

* Fix click.style usage.

* Remove app.start() and app.worker_main() since they are never used.

* autopep8.

* Record new bandit profile.

* Fix pep8 and docstyle errors.

* Happify flake8.

* Happify linters.

* Remove typo.

* Added the documentation for the CLI.

* There's no return value so there's no point returning it.

* Remove redundant assignment.

* Use pformat and echo with click.

* Finishing touches for the CLI.

* More finishing touches.

* Happify linters.

Co-authored-by: tothegump <tothegump@gmail.com>
Co-authored-by: Asif Saif Uddin <auvipy@gmail.com>
Co-authored-by: Michal Čihař <michal@cihar.com>
Co-authored-by: ptitpoulpe <ptitpoulpe@ptitpoulpe.fr>
Co-authored-by: Didi Bar-Zev <didi@hiredscore.com>
Co-authored-by: Santos Solorzano <santosjavier22@gmail.com>
Co-authored-by: manlix <manlix@yandex.ru>
Co-authored-by: Jimmy <54828848+sckhg1367@users.noreply.github.com>
Co-authored-by: Борис Верховский <boris.verk@gmail.com>
Co-authored-by: Jainal Gosaliya <jainal09gosalia@gmail.com>
Co-authored-by: gsfish <caoyu97@hotmail.com>
Co-authored-by: Dipankar Achinta <di.punk.car19@gmail.com>
Co-authored-by: Pengjie Song (宋鹏捷) <spengjie@sina.com>
Co-authored-by: Chris Griffin <chris-griffin@users.noreply.github.com>
Co-authored-by: Muhammad Hewedy <mhewedy@gmail.com>
Co-authored-by: Blaine Bublitz <blaine.bublitz@gmail.com>
Co-authored-by: Tamu <tamsanh@gmail.com>
Co-authored-by: Erik Tews <erik@datenzone.de>
Co-authored-by: abhinav nilaratna <anilaratna2@bloomberg.net>
Co-authored-by: Wyatt Paul <wpaul@hearsaycorp.com>
Co-authored-by: gal cohen <gal.nevis@gmail.com>
Co-authored-by: as <alfred@huji.fr>
Co-authored-by: Param Kapur <paramkapur2002@gmail.com>
Co-authored-by: Sven Ulland <sven.ulland@gmail.com>
Co-authored-by: Safwan Rahman <safwan.rahman15@gmail.com>
Co-authored-by: Aissaoui Anouar <tobia@crossbone.cc>
Co-authored-by: Neal Wang <qdzzyb2015@gmail.com>
Co-authored-by: Alireza Amouzadeh <alireza@amouzadeh.net>
Co-authored-by: Marcos Moyano <marcos@anue.biz>
Co-authored-by: Stepan Henek <stepan+github@henek.name>
Co-authored-by: Andrew Sklyarov <AndrewPix@users.noreply.github.com>
Co-authored-by: Michael Fladischer <michael@fladi.at>
Co-authored-by: Dejan Lekic <dejan.lekic@gmail.com>
Co-authored-by: Yannick Schuchmann <yannick.schuchmann@googlemail.com>
Co-authored-by: Matt Davis <matteius@gmail.com>
Co-authored-by: Karthikeyan Singaravelan <tir.karthi@gmail.com>
Co-authored-by: Bernd Wechner <bernd-wechner@users.noreply.github.com>
Co-authored-by: Sören Oldag <soeren_oldag@freenet.de>
Co-authored-by: uddmorningsun <memory.yancy@gmail.com>
Co-authored-by: Amar Fadil <34912365+marfgold1@users.noreply.github.com>
Co-authored-by: woodenrobot <woodenrobot1993@gmail.com>
Co-authored-by: Sardorbek Imomaliev <sardorbek.imomaliev@gmail.com>
Co-authored-by: gsfish <root@grassfish.net>
Co-authored-by: Alex Riina <alex.riina@gmail.com>
Co-authored-by: Joon Hwan 김준환 <xncbf12@gmail.com>
Co-authored-by: Prabakaran Kumaresshan <k_prabakaran+github@hotmail.com>
Co-authored-by: Martey Dodoo <martey@mobolic.com>
Co-authored-by: Konstantin Seleznev <4374093+Seleznev-nvkz@users.noreply.github.com>
Co-authored-by: Prodge <Prodge@users.noreply.github.com>
Co-authored-by: Abdelhadi Dyouri <raryat@gmail.com>
Co-authored-by: Ixiodor <Ixiodor@users.noreply.github.com>
Co-authored-by: abhishekakamai <47558404+abhishekakamai@users.noreply.github.com>
Co-authored-by: Allan Lei <allanlei@helveticode.com>
Co-authored-by: M1ha Shvn <work_shvein_mihail@mail.ru>
Co-authored-by: Salih Caglar Ispirli <caglarispirli@gmail.com>
Co-authored-by: Micha Moskovic <michamos@gmail.com>
Co-authored-by: Chris Burr <chrisburr@users.noreply.github.com>
Co-authored-by: Dave King <tildedave@gmail.com>
Co-authored-by: Dmitry Nikulin <v.dmitry.nikulin@gmail.com>
Co-authored-by: Michael Gaddis <mgaddis@ancestry.com>
Co-authored-by: epwalsh <epwalsh10@gmail.com>
Co-authored-by: TalRoni <tal.inon.16@gmail.com>
Co-authored-by: Leo Singer <leo.singer@ligo.org>
Co-authored-by: Stephen Tomkinson <neonbunny@users.noreply.github.com>
Co-authored-by: Abhishek <abhishek.shukla@xeneta.com>
Co-authored-by: theirix <theirix@gmail.com>
Co-authored-by: yukihira1992 <hirayama@cancerscan.jp>
Co-authored-by: jpays <jerome.pays@cnp.fr>
Co-authored-by: Greg Ward <greg@gerg.ca>
Co-authored-by: Alexa Griffith <agriffith@bluecore.com>
Co-authored-by: heedong <63043496+heedong-jung@users.noreply.github.com>
Co-authored-by: heedong.jung <heedong.jung@samsung.com>
Co-authored-by: Shreyansh Khajanchi <shreyanshk@users.noreply.github.com>
Co-authored-by: Sam Thompson <georgedorn@users.noreply.github.com>
Co-authored-by: Alphadelta14 <alpha@pokesplash.net>
Co-authored-by: Azimjon Pulatov <azimjohn@yahoo.com>
Co-authored-by: ysde <ysde108@gmail.com>
Co-authored-by: AmirMohammad Ziaei <amir_zia@outlook.com>
Co-authored-by: Ben Nadler <ben.nadler@gusto.com>
Co-authored-by: Harald Nezbeda <hn@nezhar.com>
Co-authored-by: Chris Frisina <github@specialorange.org>
Co-authored-by: Adam Eijdenberg <adam.eijdenberg@digital.gov.au>
Co-authored-by: rafaelreuber <rafaelreuber@gmail.com>
Co-authored-by: Noah Kantrowitz <noah@coderanger.net>
Co-authored-by: Ben Nadler <jbennadler@gmail.com>
Co-authored-by: Clement Michaud <c.michaud@criteo.com>
Co-authored-by: Mathieu Chataigner <m.chataigner@criteo.com>
Co-authored-by: eugeneyalansky <65346459+eugeneyalansky@users.noreply.github.com>
Co-authored-by: Leonard Lu <leonard@socialcodeinc.com>
Co-authored-by: XinYang <yangxinhust@hotmail.com>
Co-authored-by: Ingolf Becker <ingolf.becker@googlemail.com>
Co-authored-by: Anuj Chauhan <an12ch98@gmail.com>
Co-authored-by: shaoziwei <ziwei.shao@cloudchef.io>
Co-authored-by: Mathieu Chataigner <mathieu.chataigner@gmail.com>
Co-authored-by: Anakael <shemeldima2@yandex.ru>
Co-authored-by: Danny Chan <danny.chan@c-k.dev>
Co-authored-by: Sebastiaan ten Pas <sebastiaan@diggimedia.nl>
Co-authored-by: David TILLOY <d.tilloy@criteo.com>
Co-authored-by: Anthony N. Simon <anthonynsimon@users.noreply.github.com>
Co-authored-by: lironhl <liron.lavy@gmail.com>
Co-authored-by: Raphael Cohen <raphael.cohen@sekoia.fr>
Co-authored-by: JaeyoungHeo <jay.jaeyoung@gmail.com>
Co-authored-by: singlaive <singlaive@gmail.com>
Co-authored-by: Murphy Meng <mmeng@mirriad.com>
Co-authored-by: Wu Haotian <whtsky@gmail.com>
Co-authored-by: Kwist <velnik@gmail.com>
Co-authored-by: Laurentiu Dragan <ldragan@bloomberg.net>
Co-authored-by: Radim Sückr <radim.suckr@gmail.com>
Co-authored-by: Artem Vasilyev <artem.v.vasilyev@gmail.com>
Co-authored-by: kakakikikeke-fork <kakakikikeke_new@yahoo.co.jp>
Co-authored-by: Pysaoke <pysaoke@gmail.com>
Co-authored-by: baixue <baixue@wecash.net>
Co-authored-by: Prashant Sinha <prashantsinha@outlook.com>
Co-authored-by: AbdealiJK <abdealikothari@gmail.com>",argparse click,"
Refactor CLI to use Click instead of our custom argparse based framework (#5718)",60,Utility,Utility,False,False
3304,edgedb/edgedb,dc85336b319e38163b2c22848b2fa80b9ecc7868,2018-05-03 19:21:31,click,argparse,Switch to click for main server entrypoint option parsing,argparse click,"
Switch to click for main server entrypoint option parsing",60,Utility,Utility,False,False
3306,fedora-python/pyp2rpm,2011de7ff80b8780ca9ddc4c4ad8f8567a85c951,2015-04-16 09:30:06,click,argparse,"Use argument instead of option for providing package name/source file
Use click instead of argparse fixes #25",argparse click,"Use argument instead of option for providing package name/source file
Use click instead of argparse fixes #25
",60,Utility,Utility,False,False
3308,fitodic/centerline,72fb09c795efdd13c8bbe43f8456448c88f2f3dc,2019-06-23 12:28:56,click,argparse,Switch from argparse to Click,argparse click,"
Switch from argparse to Click",60,Utility,Utility,False,False
3309,getpatchwork/git-pw,0042e9acc3a390008ec73010685404d3663d937d,2017-01-29 15:02:20,click,argparse,"Reboot!

Time to reboot development of git-pw using the new fangled REST API.
There are a couple of changes involved here, in what is pretty much a
rewrite:

- Use the REST API instead of the XML-RPC API (*)
- Use the 'click' library instead of 'argparse'
- Use subcommands correctly, instead of copying 'git-review's abuse of
  opts (e.g. use 'apply' instead of '-d'). People can create aliases if
  necessary.

The following commands are basically implemented, though there is still
work to be done with logging etc.

- apply
- download

The following commands are stubbed out:

- show
- update
- list

(*) We're not actually using any of the REST API yet, but we will.

Signed-off-by: Stephen Finucane <stephen@that.guru>",argparse click,"- Use the REST API instead of the XML-RPC API (*)
- Use the 'click' library instead of 'argparse'
- Use subcommands correctly, instead of copying 'git-review's abuse of
",60,Utility,Utility,False,False
3310,globus/globus-cli,d2eca006c49ffd91d37565f8954ecd0c571e772a,2016-05-01 23:00:49,click,argparse,"Convert whole CLI to use click over argparse

It would have been nice to be able to do this in stages as a series of
commits, but it just didn't make sense -- there are very few functional
intermediate states for the CLI during this conversion process. All of
the sophistication in globus_cli.parser was necessary because ArgParse
doesn't actually have very good support for subcommands. It works when
the parsing and code execution are entirely distinct ideas, but it
starts to break down as soon as you want to tie the structure of the CLI
to the modular structure of the code itself. The decorators and classes
that I used were okay stopgaps, but not satisfactory long-term. The
problem was a lower-level model mismatch.
After careful evaluation, I chose click because of its superior support
for subcommand structures, its support for a wide range of python
versions, and its dedicated developer base (so it won't be abandonware in
a few short months). It also handles a number of py2 vs. py3
compatibility issues for us out of the box, which should save time and
heartache.
The click-based CLI has altered help strings, and required that we drop
the list-commands command (at least for now, investigate reviving it).",argparse click,"Convert whole CLI to use click over argparse
",60,Utility,Utility,False,False
3311,godaddy/tartufo,553dc5fb7ddef597cafda451954fa4cba23acde6,2019-11-13 23:49:16,click,argparse,Switch to the click library for command line parsing,argparse click,"Switch to the click library for command line parsing
",60,Utility,Utility,False,False
3316,indico/indico,73c6b385d26d38aebd2bf7303998cc2f7280abfd,2015-08-14 14:34:56,click,argparse,"Improve DB logger

- switch from argparse to click
- allow ignoring queries by source frame and request path
- show request start/end and duration",argparse click,"
- switch from argparse to click
- allow ignoring queries by source frame and request path",60,Utility,Utility,False,False
3322,kxr/o-must-gather,9da472294ca5a598bb74cb413db0bd880f7012b2,2020-12-18 23:05:21,click,argparse,Argparse -> Click,argparse click,"
Argparse  laifuhewb  Click",60,Utility,Utility,False,False
3326,mkb79/Audible,77e497d349ccf412c9f76db16d09396cb0a282aa,2020-08-04 07:29:30,click,argparse,CLI: switch from argparse to click,argparse click,"
CLI: switch from argparse to click",60,Utility,Utility,False,False
3327,networktocode/network-importer,b32a0e729aca31d3acd50556b0752178db88a7c6,2020-04-12 19:13:30,click,argparse,Replace argparse with click,argparse click,"
Replace argparse with click",60,Utility,Utility,False,False
3329,opsdroid/opsdroid,fb0395529235089eafdb36131223a59b4f89d0e4,2018-04-11 18:51:49,click,argparse,"Switch arg parsing to click and add version flag (#522)

Switches the argument parsing to use click. The `--gen-config`  command was moved over to click, created another decorator called `--version` which prints the current opsdroid version and exits.",argparse click,"
Switch arg parsing to click and add version flag (#522)",60,Utility,Utility,False,False
3333,sonatype-nexus-community/jake,28cc553b384a690e676f2fabd324698214449a18,2020-04-23 19:23:55,click,argparse,"PIP IN JAKE (#21)

* PIP IN JAKE

* Get away from urllib3 1.25.6

* HYBRIDIZED RESULTS FOR CONDA BABY

* pulled some logic related to constructing purls into the Coordinates object to allow for easier combines between sets of coordinates

* added changed to conda parsing to use new Coordinates type

* more conversions and added a join function to Coordinates.  For a conda iq scan it is currently overlaying both results with no deduping.  Should be easy to prune the joined dict to remove any dupes

* commented out the stuff for the hybridized conda results, cleaned up formatting and added comments

* Added stage specification for the IQ scan

* fixed unit tests that broke when Coordinate was refactored

* fixed all the import statements that pylint was screaming about by removing the init file in the same directory as the main entrypoint

* changed the pip parser to generate the dependency list as coordinates on init and added a getter function to fix the pylint error

* modified pylint to ignore two trvial cases failing the build

* fixed the disables, vals don't need quotes or semicolons

* disabling warnings because they are failing the circle-ci build

* added scaffolding for an argparser with subcommands that directly calls functions in the class.  haven't wired it up yet

* refactored command line and argument parsing to include subparsers

* removed some code and fixed some issues

* added some comments, readability

* docstring for a thing

* changed a couple things to pass tests

* changed the config so that if non-none params are passed in for auth or IQ endpoint it gets it from confog.  still have to figure out the best place to inject default config params, probably if a file config does not exist

* added the host and auth params for iq to the command line and routed them to the IQ request service.  it now checks if a config exists on the IQ request service side, and if it does, use that unless there are command line params.  If it doesn't, user the default params unless there are command line params.  Logger doesn't go into the IQ service for some reason, gotta figure that one out.

* made it so its just passing the args namespace from argparse down all the way to the iq request service so its only one variable.  Still not sure how logs are working, should figure out how to make it unified across all classes and set the level in the command line.

* some comments, removed a line or two

* initial pass at tearing out argparse and putting in click, working out well so far.  It also has the potential to clean up the code significantly

* threw in the rest of the arguments, just need to consolidate the rest of the logic into the functions that run under each subcommand

* removing old argparse code

* all wired up and good to go for ddt conda/pypi and IQ pypi.  completely messed up the logging output, although it looks like click can output various messages to the console.  No need to have a logger if click can log as well no?

* WOOOOOOOOHHHEEEEEEE we got ourselves a banging wiring job now

* some linting fixes.  Not sure what to do about the iq function names as it map to the sub-command in click.  or does it?  will add docstrings later

* one last thing, just had to add a BOMB-ASS BANNERgit add *!

* alright not to scoop honey out my own pot but this is looking righteous AF

* added some comments and fixed the version prompt never working by making it hit a callback that exits the script

* Ternaries and clean up

* 2 spaces

* UGH

* Improve jake ddt --help

* Disable pylint for arguments and name

* more comments, got rid of linter errors this one should pass

* mas

* Share them args

* Output that ding ol version

* YA SPIN YA, plus color

* removed line that pip freeze throws onto requirements.txt, i've been manually updating since there aren't that many deps anyway

* Some more improvements to outputting results

* fixed

* Fix

* Setup logger

* LOGGER

* Logging level

* Commands and banner

* Logger

* MAX SCORE

* Fix pylint or disable

* some readme and help text changes

* more readme changes

* small fixes to readme and adjusting circleci config to do a minor release rather than a path for merge to master

Co-authored-by: ButterB0wl <ajurgenson@sonatype.com>",argparse click,"
* added changed to conda parsing to use new Coordinates type",60,Utility,Utility,False,False
3335,tony/vcspull,1c2df55e511bdf8cda7a87cf531ad572e0371ea8,2016-01-27 19:18:10,click,argparse,"Switch CLI arguments parsing to click

Also allow multiple repos delimited by spaces.",argparse click,"Switch CLI arguments parsing to click
",60,Utility,Utility,False,False
3336,trhallam/segysak,8e1f687f6aea6ab3de1a8348ec42e6cea7e50dc0,2020-06-07 12:18:10,click,argparse,replace argparse with click,argparse click,"replace argparse with click
",60,Utility,Utility,False,False
3337,vals/umis,9f0976cbac069a2c5c6b836a0de4ae2e16984872,2015-08-10 15:16:14,click,argparse,Refactored to use Click rather than argparse,argparse click,"
Refactored to use Click rather than argparse",60,Utility,Utility,False,False
3341,rockstor/rockstor-core,3d16626d1edca7d3c4c4a208a061cf83daa67d24,2015-03-18 22:35:40,djangorestframework,algoliasearch-django,"Upgrading Django Rest Framework from 2.x to 3.1.

The big change has been the uprooting of the login in the rfc.GenericView. The
only logic needed in the class is the _handle_exception method since everything
else is incorporated into DRF itself.

Work left to do is the flat view of the json response for the shares.",algoliasearch-django djangorestframework,"
Upgrading Django Rest Framework from 2.x to 3.1.",4,Web Framework,Web Framework,False,False
3344,rockstor/rockstor-core,3d16626d1edca7d3c4c4a208a061cf83daa67d24,2015-03-18 22:35:40,djangorestframework,django,"Upgrading Django Rest Framework from 2.x to 3.1.

The big change has been the uprooting of the login in the rfc.GenericView. The
only logic needed in the class is the _handle_exception method since everything
else is incorporated into DRF itself.

Work left to do is the flat view of the json response for the shares.",django djangorestframework,"
Upgrading Django Rest Framework from 2.x to 3.1.",3,Web Framework,Web Framework,False,False
3346,jazzband/django-constance,69221ba2b410f3965cb627253149bfdb1f49f817,2014-11-21 19:16:39,models,django,"Renamed config module to base to prevent ambiguity

This should fix #80 that is triggered by Django's new strickter import time loading process.",django models,"
This should fix #80 that is triggered by Django's new strickter import time loading process.",4,Web Framework&Database,Web Framework,False,True
3355,canonical/cloud-init,0fc887d97626132e9024490b271888bed162c867,2012-10-22 02:37:00,requests,urllib3,"Use the python requests lib instead of urllib3
since it provides the same support (and it uses
that library). Urllib3 doesn't seem to exist as
its own package (requests hides it) so solve that
by using requests and handling its oddness ourself.",urllib3 requests,"
Use the python requests lib instead of urllib3
since it provides the same support (and it uses",9,HTTP Clients,HTTP Clients,False,False
3358,miguelgrinberg/python-engineio,41b8e29e49560170e852df1c5c070c6d311452d5,2019-02-15 23:52:56,requests,urllib3,replace urllib3 with requests to get cookie support,urllib3 requests,"
replace urllib3 with requests to get cookie support",9,HTTP Clients,HTTP Clients,False,False
3359,mindsdb/mindsdb,45a9dd2136ae970cd5bf24d24732a82480ff0c4c,2019-05-21 22:49:21,requests,urllib3,Use requests instead of urlib3,urllib3 requests,"
Use requests instead of urlib3",9,HTTP Clients,HTTP Clients,False,False
3360,mixpanel/mixpanel-python,e8a9330448f8fd4ec2cdb1ab35e0de9a05d9717f,2021-06-21 23:04:44,requests,urllib3,"Use requests rather than urllib3 (#103)

* Replace urllib3 w/ requests.

* Pass through cert verify, timeout opts. Put verify_cert back to True by default.

* fixing tests.

* fix tests

* Fix older requests str problem

* Fix more encodings

* Post as formencoded with pre-JSON'd data. Test fixes. More tests

* Fix tests w/ form-encoded bodies.

* order

* optimize nearitude

* Use context mgr form of Responses. It's nicer.",urllib3 requests,"
Use requests rather than urllib3 (#103)",9,HTTP Clients,HTTP Clients,False,False
3377,C4ptainCrunch/ics.py,ab4398b695ccab0e5237206fea7c6576ca42fbc4,2020-03-21 15:41:18,pytest,notifications-python-client,"Remove arrow, transition to attrs and add Timespan (#222)

Most important breaking changes:

arrow was removed, use built-in datetime and timedelta instead
events, todos, attendees and alarms are now all lists instead of sets, as their contained types are not actually hashable and in order to keep the order they had in the file. Use append instead of add to insert new entries.
attendees and organizer now must be instances of the respective classes, plain strings with the e-mail are no longer allowed
extra can now only contain nested Containers and ContentLines, no plain strings
some attributes now have further validators that restrict which values they can be set to, which might further change once we have configurable levels of strictness
dtstamp and created have been separated, dtstamp is the only one set automatically (hopefully more conforming with the RFC)
Event.join is hard to do right and now gone if nobody needs it (and is able to formulate a clear behaviour faced with floating events vs events in different timezones and also all-day events)
method has_end() -> property has_explicit_end as any Event with a begin time has an end


* [WIP] new implementation of event timespan

This implementation collects all time-related attributes of an event - begin, end/duration and precision - in a single, isolated and easy to test class.
It also targets the three possible cases for time values - timezone-aware datetimes, floating datetimes and all-day dates.
Additionally to not doing anything implicitly (neither any fancy value conversion nor fancy indirect property access),it viciously guards the validity of its internal state.
The validity of each of the 4 values representing the event time is highly depending upon the other values.
Allowing mutation opens up easy ways of breaking validity - so the implementation is actually immutable, with each modification creating a new object and requiring a full revalidation of all 4 values together.
As the times shouldn't be modified that often, having the optimization of mutability shouldn't be strictly necessary.
Additionally, moving the functionality to its own class should make testing easier and keeps this quite complicated functionality clean from other concerns.
All this makes the timespan handling easier to implement correctly, but unfortunately not easier to use.
So I also started modifying the Event class to handle the interfacing in an user-friendly way and hide the complexity of timespans.

* remove arrow

ToDo:
- verify Timeline operation and Timespan Comparability (esp. with diverging timezones)
- ensure that correct parse_date(time) is used
- keep track of used_timezone information from serialize_datetime_to_contentline and generate VTIMEZONEs

* autoformat / clean-up imports

* mypy fixes and minor code cleanup

* add `attrs` goodness ✨

* bugfixes for cyclic / type-checking imports

* make mypy and static analysis happier

* fixes for attrs and mypy, proper comparision for timespan

Also, Event and Todo now share most of their code and Todo only renaming all the `end*` functions to `due`.
Timespan finally has proper comparision by defining lt and eq based on (begin, end) and the remaining functions generated by @functools.total_ordering.
Event and Todo also use the same ordering as _timespan is their first attribute.
Also contains fixes for Timespans with no begin (which are considered floating) and small timedelta floating-point arithmetic errors.

* properly support DTSTAMP, CREATED and LAST-MODIFIED for events and todos

fixes #200

* allow setting version and prodid to custom values

Also helps with #195 as we are now always filling in our defaults, but we still need to change the parser from raising an exception for this required=True attribute to issuing a warning.

* validation

* bugfixes

notable changes:
- parser methods can now be named parse[0-9]_something and will be called in alphabetical order
- all fields of type Set were converted to Lists, as their values are not really hashable (and the ics semantic is actually more list-like)
- has_end -> has_explicit_end
- Timespan has been split into TodoTimespan and EventTimespan to represent different end value semantics
- creator is an alias for prodid and dtstamp/created are set to default and parsed correctly
- add ensure_timedelta and use Timedelta/DatetimeLike correctly

* remove arrow from testsuite and fix as many as possible

* more test fixes

* enable runtime validation and conversion of attribute values

* also check item types of Container

* bug and test fixes

* implement order-comparision using tuples, functools.total_ordering and new attrs eq/cmp

The methods __eq__ and __ne__ are generated by attrs based on *all* attributes of the class
(except for Components' _classmethod_args, _classmethod_kwargs and iCalendars' _timezones)
We explicitly define __lt__ for Timespan based on (begin_time, effective_end_time)
and also __lt__ for Event based on (begin_time, effective_end_time, name)
using Timespan.cmp_tuples, defaulting values to datetime.min or empty string.
The functions __gt__, __le__, __ge__ are then generated from __lt__ and __eq__ using functools.total_ordering.
We then also need to make sure that subclasses using attrs don't override the comparision functions.

* properly implement and document event ordering

according to RFC 5545, clients should default to using local time for floating times, so all the complicated
normalization logic is replaced by simply default to tzlocal()

* mypy and test fixes

* docstring fixes, order Todos with due first

* clean-up

* Apply suggested docstring improvements from code review

Co-Authored-By: Tom Schraitle <tomschr@users.noreply.github.com>

* small docstring improvements

Co-authored-by: Tom Schraitle <tomschr@users.noreply.github.com>",notifications-python-client pytest,"
Allowing mutation opens up easy ways of breaking validity - so the implementation is actually immutable, with each modification creating a new object and requiring a full revalidation of all 4 values together.",3,Testing,Testing,False,False
3378,Clinical-Genomics/scout,651b76b26bbb3e0beba064df163b6a2b594258b8,2016-01-04 12:39:42,pytest,notifications-python-client,Updated cli and added test for variant handling,notifications-python-client pytest,"
Updated cli and added test for variant handling",3,Testing,Testing,False,False
3379,dagster-io/dagster,020834310f604a7939255547f91979c0046be16c,2020-10-23 22:58:03,pytest,notifications-python-client,"Stop hanging windows tests

Summary:
- Eliminate hanging processes on windows by squashing two places we were opening subprocesses with stdout=subprocess.PIPE (the managed gRPC server startup, and the sync_launch_scheduled_execution call, which only is called in tests anyway)
- Use a test run launcher in the scheduler tests to get around cleanup issues on windows
- disable tests that were failing on windows py36 due to a known issue with opening a bunch of subprocesses in succession (see link in the skip message)

Test Plan: BK+Azure

Reviewers: alangenfeld, schrockn, prha

Reviewed By: alangenfeld

Differential Revision: https://dagster.phacility.com/D4874",notifications-python-client pytest,"
PIPE (the managed gRPC server startup, and the sync_launch_scheduled_execution call, which only is called in tests anyway)
- Use a test run launcher in the scheduler tests to get around cleanup issues on windows
- disable tests that were failing on windows py36 due to a known issue with opening a bunch of subprocesses in succession (see link in the skip message)",3,Testing,Testing,False,False
3380,CBIIT/nci-webtools-dceg-linkage,923b4a32bf2ef812d8352ccdbd559a91ce2839dc,2018-07-30 19:47:47,pyyaml,config,change config file to yaml,config pyyaml,"
change config file to yaml",6,Serialization,Serialization,False,False
3383,kkrypt0nn/Python-Discord-Bot-Template,1afd94efcd7d0feb9654bdabb87a82eac5885db7,2021-05-02 13:22:33,pyyaml,config,"Template v2.5

* Code reformat
* Rewrote the status task
* Now using the `has_permissions` decorator for user permissions
* Using `.yaml` instead of `.py` file for config",config pyyaml,"* Now using the `has_permissions` decorator for user permissions
* Using `.yaml` instead of `.py` file for config
",6,Serialization,Serialization,False,False
3409,leeping/forcebalance,6b88b12038e42ec2507531932d3442d7693d8719,2014-06-30 17:15:20,setuptools,functools,Removed packaged networkx (now uses setuptools to auto-download),functools setuptools,"
Removed packaged networkx (now uses setuptools to auto-download)",5,Utility,Utility,False,False
3410,wikimedia/cumin,ba595c10a99816e1010629290fa95abeb121d96c,2017-07-06 18:45:45,setuptools,functools,"Package metadata and testing tools improvements

- fill setup.py with all the parameters, suitable for a future
  submission to PyPI
- autodetect version from Git tags and expose it in the module using
  setuptools_scm
  - add a --version option to the CLI
- use pytest to run the tests
- make tox use the dependencies in setup.py, removing the now
  unnecessary requirements files.
- add security analyzer Bandit to tox.
- add Prospector to tox, that in turns runs multiple additional tools:
  dodgy, mccabe, pep257, pep8, profile-validator, pyflakes, pylint,
  pyroma, vulture.

Bug: T154588
Change-Id: I08214305bc9337267f4cf904b9acf9ecb8d5d488",functools setuptools,"
Package metadata and testing tools improvements",5,Utility,Utility,False,False
3418,metabrainz/picard,dac50a94b319afc48097615c142102881db3ce64,2018-10-23 15:32:50,mbed-host-tests,unittest,"test_mbjson: Extract self.init_test calls to MBJSONTests setUp()

This is similar to how test_formats does it. It also means that all tests can
inherit setUp() and don't have to super()-call it.",unittest mbed-host-tests,"This is similar to how test_formats does it.
It also means that all tests can
inherit setUp() and don't have to super()-call it.
",11,Testing,Testing,False,False
3419,mongodb/mongo-python-driver,bf78a9b2efd112eb996eb9334ab753848a2864fc,2021-06-15 21:30:01,mbed-host-tests,unittest,"PYTHON-2744 Run LB tests against non-LB clusters (#638)

Fix serviceId fallback to make spec test pass.
Fix socket leak when SocketInfo connection handshake fails.",unittest mbed-host-tests,"
Fix serviceId fallback to make spec test pass.",11,Testing,Testing,False,False
3421,pyecharts/pyecharts,a180ca857cd0b1344e4d576f6f7dbcbe135cb557,2018-03-07 10:15:15,mbed-host-tests,unittest,"重构渲染代码 (#424)

* Refactor notebook render

1. Merge template files and remove unused files.
2. Move render function to environment class
3. Extract notebook test cases to a new module

* Refactor chart render

1. Add render_* to EchartsEnvironment class
2. Remove engine.render
3. Remove unused template files

* Fix online between test cases.

* Update document and changelog

* Rename some functions

* Update some mistakes

* Remove debug code

* Refactor env.render_chart_to_notebook  method",unittest mbed-host-tests,"
* Fix online between test cases.",11,Testing,Testing,False,False
3422,thenetcircle/dino,ebda4437fa01d87c214de28501b5d6e6ae8773c4,2016-11-11 09:54:24,mbed-host-tests,unittest,fixed more test cases for api/request split,unittest mbed-host-tests,"
fixed more test cases for api/request split",11,Testing,Testing,False,False
3429,metabrainz/picard,dac50a94b319afc48097615c142102881db3ce64,2018-10-23 15:32:50,test,unittest,"test_mbjson: Extract self.init_test calls to MBJSONTests setUp()

This is similar to how test_formats does it. It also means that all tests can
inherit setUp() and don't have to super()-call it.",unittest test,"
This is similar to how test_formats does it.
It also means that all tests can
inherit setUp() and don't have to super()-call it.",11,Testing,Testing,False,False
3430,mongodb/mongo-python-driver,bf78a9b2efd112eb996eb9334ab753848a2864fc,2021-06-15 21:30:01,test,unittest,"PYTHON-2744 Run LB tests against non-LB clusters (#638)

Fix serviceId fallback to make spec test pass.
Fix socket leak when SocketInfo connection handshake fails.",unittest test,"
Fix serviceId fallback to make spec test pass.",11,Testing,Testing,False,False
3432,pyecharts/pyecharts,a180ca857cd0b1344e4d576f6f7dbcbe135cb557,2018-03-07 10:15:15,test,unittest,"重构渲染代码 (#424)

* Refactor notebook render

1. Merge template files and remove unused files.
2. Move render function to environment class
3. Extract notebook test cases to a new module

* Refactor chart render

1. Add render_* to EchartsEnvironment class
2. Remove engine.render
3. Remove unused template files

* Fix online between test cases.

* Update document and changelog

* Rename some functions

* Update some mistakes

* Remove debug code

* Refactor env.render_chart_to_notebook  method",unittest test,"
* Fix online between test cases.",11,Testing,Testing,False,False
3433,thenetcircle/dino,ebda4437fa01d87c214de28501b5d6e6ae8773c4,2016-11-11 09:54:24,test,unittest,fixed more test cases for api/request split,unittest test,"
fixed more test cases for api/request split",11,Testing,Testing,False,False
3437,GoogleCloudPlatform/gcloud-python,bdb6515f37bc79cdf3ac9a465fd013f71d4ca7b2,2016-08-04 18:24:56,unittest,unittest2,"Drop 'unittest2' dependency.

Now that we are off Python 2.6, we can just use the stdlib's 'unittest'.",unittest2 unittest,"
Now that we are off Python 2.6, we can just use the stdlib's 'unittest'.",67,Testing,Testing,False,False
3438,OCA/connector,4a8536b6ef5126fd49e16ac3f8652426811fa231,2016-02-29 09:09:28,unittest,unittest2,[MIG] Use python standard lib unittest in place of unittest2,unittest2 unittest,"
[MIG] Use python standard lib unittest in place of unittest2",67,Testing,Testing,False,False
3439,RaRe-Technologies/gensim,12f36b55366867712c4b02ae6bd513fb718a5fed,2017-07-21 08:54:37,unittest,unittest2,"Remove unittest2 (#1490)

* Fix backward compatibility for unittest

* Fix import problem

* Update test_ldamallet_wrapper.py

* Update unittest import

* Fix error

* Fix PEP8 error

* Remove commented code for unittest2

* Remove unittest2 requirements

* Remove unittest2 from setup.py",unittest2 unittest,"
* Fix backward compatibility for unittest",67,Testing,Testing,False,False
3440,XLSForm/pyxform,b34c6b2d33dcc5a3a69a5e6bef980afd63d9c404,2012-03-20 20:18:20,unittest,unittest2,Fixing test and commiting some benign changes so my repo stays in sync with the remote.,unittest2 unittest,"
Fixing test and commiting some benign changes so my repo stays in sync with the remote.",67,Testing,Testing,False,False
3441,akvo/akvo-rsr,c75d539b89cb95ab82619f3df6b9ea90d2977bd4,2012-11-07 15:45:59,unittest,unittest2,[#122] Replaced unittest2 imports with unittest and removed the unittest2 pip requirement since we're now using Python 2.7.,unittest2 unittest,"
[#122] Replaced unittest2 imports with unittest and removed the unittest2 pip requirement since we're now using Python 2.7.",67,Testing,Testing,False,False
3444,canonical/cloud-init,38a7e6e9756fdab31264c0d6e93d20432ed111ac,2020-04-24 13:26:51,unittest,unittest2,"cloudinit: drop dependencies on unittest2 and contextlib2 (#322)

These libraries provide backports of Python 3's stdlib components to Python 2. As we only support Python 3, we can simply use the stdlib now. This pull request does the following:

* removes some unneeded compatibility code for the old spelling of `assertRaisesRegex`
* replaces invocations of the Python 2-only `assertItemsEqual` with its new name, `assertCountEqual`
* replaces all usage of `unittest2` with `unittest`
* replaces all usage of `contextlib2` with `contextlib`
* drops `unittest2` and `contextlib2` from requirements files and tox.ini

It also rewrites some `test_azure` helpers to use bare asserts. We were seeing a strange error in xenial builds of this branch which appear to be stemming from the AssertionError that pytest produces being _different_ from the standard AssertionError.  This means that the modified helpers weren't behaving correctly, because they weren't catching AssertionErrors as one would expect. (I believe this is related, in some way, to https://github.com/pytest-dev/pytest/issues/645, but the only version of pytest where we're affected is so far in the past that it's not worth pursuing it any further as we have a workaround.)",unittest2 unittest,"
* replaces invocations of the Python 2-only `assertItemsEqual` with its new name, `assertCountEqual`
* replaces all usage of `unittest2` with `unittest`
* replaces all usage of `contextlib2` with `contextlib`",67,Testing,Testing,False,False
3445,celery/kombu,491d7f389b03a6ff05775e9c0aa79234d74d7508,2018-04-29 17:46:59,unittest,unittest2,used unittest and remove unittest2 (#855),unittest2 unittest,"
used unittest and remove unittest2 (#855)",67,Testing,Testing,False,False
3453,google/apitools,0db6e8f4ab936409566973d564ae4b1f88afe13a,2020-04-09 23:18:29,unittest,unittest2,"Drop support for EOL Python versions (#265)

* Drop support for EOL Python versions

* sudo no longer needed https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration

* Remove unittest2 dependency

* Add python_requires and Trove classifiers

* Replace unittest2 with unittest",unittest2 unittest,"
* Replace unittest2 with unittest",67,Testing,Testing,False,False
3455,gorakhargosh/watchdog,d38767df131d6b15b343ff7c78f27897f2242d16,2014-01-08 09:41:19,unittest,unittest2,Always use unittest instead unittest2 (same api used in this case),unittest2 unittest,"
Always use unittest instead unittest2 (same api used in this case)",67,Testing,Testing,False,False
3461,materialsproject/pymatgen,73a9004663c970ec7612d9e98898a75f04d5c3f7,2016-07-08 20:28:22,unittest,unittest2,"For PymatgenTest, use unittest istead of unittest2.
Fixes #435.


Former-commit-id: 394e657742a8a12e2b673b9cbc0192345a4b8b49 [formerly 9ddd1016105833a6846b721806834c71c25f3155]
Former-commit-id: e1633fa26f747522ae11e0f3525f9f48f6306ec9",unittest2 unittest,"
For PymatgenTest, use unittest istead of unittest2.",67,Testing,Testing,False,False
3476,pantsbuild/pants,7ceed5245917b32965f4b1a9f5d65923b2f57df7,2015-01-29 23:36:51,unittest,unittest2,"Pants itself uses python2.7, kill unittest2 imports.

The pants.backend.python.test_builder.PythonTestBuilder has a valid need
to depend on unittest2 for pre-2.7 or v3 pre-3.3 codebases _using_ pants
to run python_tests targets. The pants test code itself does not have
this need since we dropped 2.6 support and require a 3.3+ interpreter if
running under 3 (eventually).

Testing Done:
`./build-support/bin/ci.sh` went green locally.

CI went green here: https://travis-ci.org/pantsbuild/pants/builds/48826516

Bugs closed: 1011

Reviewed at https://rbcommons.com/s/twitter/r/1689/",unittest2 unittest,"
Pants itself uses python2.7, kill unittest2 imports.",67,Testing,Testing,False,False
3483,pytroll/pyresample,9bfb1fcbb96b385a37544de47a3143aeb2bdd304,2020-02-20 19:22:22,unittest,unittest2,Fix unittest2 import that should be unittest,unittest2 unittest,"
Fix unittest2 import that should be unittest",67,Testing,Testing,False,False
3484,pywbem/pywbem,3aa402694d349563f6f4aa64ed0a5f02c2ca61c6,2019-05-30 16:35:28,unittest,unittest2,"Removed Python 2.6 support

Details:

* The Python Software Foundation stopped supporting Python 2.6 with the
  2.6.9 release in october 2013. Since then, many Python package projects have
  continued releasing versions for Python 2.6, including pywbem. In 2017 and
  2018, a number of Python package projects have actively removed support for
  Python 2.6 and it has become an increasingly difficult task for pywbem to
  keep supporting Python 2.6. For this reason, Python 2.6 support has been
  removed from pywbem in its 1.0.0 version.

  This allowed eliminating a lot of Python version dependent code,
  eliminating the dependency to the unittest2 package, and lifting a number
  of restrictions in test code.

Signed-off-by: Andreas Maier <maiera@de.ibm.com>",unittest2 unittest,"
eliminating the dependency to the unittest2 package, and lifting a number
of restrictions in test code.",67,Testing,Testing,False,False
3485,redhat-performance/tuned,2399aa3b2de67e0d8134bc2964c63121e5c4173f,2020-02-25 19:04:51,unittest,unittest2,"Remove usage of unittest2, use unittest from the standard library

Fixes https://github.com/redhat-performance/tuned/issues/241

Fedora is removing the unittest2 package: https://bugzilla.redhat.com/show_bug.cgi?id=1794222

tuned is not targeting Python 2.6: https://github.com/redhat-performance/tuned/issues/241#issuecomment-588320175

One thing not present in Python 2.7 is assertItemsEqual() -- renamed to assertCountEqual().

Related, mock was also listed as a requirement in the spec file,
but all the imports are from unittest.mock, hence removed.",unittest2 unittest,"
Remove usage of unittest2, use unittest from the standard library",67,Testing,Testing,False,False
3486,scalyr/scalyr-agent-2,ad821fbe8862cc41a7f73a297cb367f127464c1f,2019-05-06 17:48:09,unittest,unittest2,"Fix python 2.4, 2.5 syntax and unittests

Fix code to be compatible with 2.4/2.5.  
Revert to unittest (unittest2 depends on non-2.5 compatible libs)
Create shims/adapters as needed.",unittest2 unittest,"
Fix python 2.4, 2.5 syntax and unittests",67,Testing,Testing,False,False
3487,scikit-learn-contrib/categorical-encoding,b818de877c400c7d8db0d4c8bb91015ff9071939,2018-11-20 15:29:44,unittest,unittest2,Fixed broken test,unittest2 unittest,"
Fixed broken test",67,Testing,Testing,False,False
3493,testing-cabal/testtools,38fc9a9e302f68d471d7b097c7327b4ff7348790,2019-05-03 23:03:27,unittest,unittest2,"Remove unittest2 usage from testtools

Currently testtools bases all of it's unittest extensions off of
unittest2 instead of the stdlib unittest. At one point this made sense
since unittest2 provided a stable base as unittest in stdlib added
features. But it's been ~5 years since there was a unittest2 release
(or a patch merged) and things have changed since then. The best
example of this is of the supported python versions listed in the
unittest2 project description/README only one is still supported by
upstream python, 2.7, which goes end of life at the end of this year.

More specific to testtools the use of unittest2 causes a whole slew of
issues because of differences in behavior with stdlib unittest. For
example here a couple issues encountered:

https://bugs.launchpad.net/testtools/+bug/1467558
https://bugs.launchpad.net/testtools/+bug/1417803
mtreinish/stestr#238
testing-cabal/testtools#272

which are caused, at least in part, by unittest2. There are likely other
bugs related to it that haven't been reported (or I just missed/forgot
about). At this point it's better to remove the unittest2 usage and just
rely on the upstream stdlib unittest which if nothing else is actively
maintained. It'll improve compatibility using the testtools runner with
stdlib unittest test suites and removes the class of bugs caused by the differences in unittest2.

Fixes #263",unittest2 unittest,"
Currently testtools bases all of it's unittest extensions off of
unittest2 instead of the stdlib unittest.
At one point this made sense",67,Testing,Testing,False,False
3494,torchbox/Willow,8c7688f7d23e102c964bb2b3aa0b4b94b9681ec9,2015-02-18 22:25:26,unittest,unittest2,Use builtin unittest module,unittest2 unittest,"
Use builtin unittest module",67,Testing,Testing,False,False
3524,alexis-mignon/python-flickr-api,f5dcd9c2bda59128cf876c5822e9b213e29b24e7,2017-01-23 12:44:45,requests-oauth2,oauth,Switch from oauth to oauth2: show_albums.py sample works in both Python 2.7 and 3.6 with auth,oauth requests-oauth2,"
Switch from oauth to oauth2: show_albums.py sample works in both Python 2.7 and 3.6 with auth",10,Auth,Auth,False,False
3525,ansible/awx,bb6a4f696462b5f50e78ea8b0df20496778f6a91,2018-05-24 19:32:48,requests-oauth2,oauth,fix oauth urls & rename for clarity,oauth requests-oauth2,"
fix oauth urls & rename for clarity",10,Auth,Auth,False,False
3531,CastXML/pygccxml,af9da5c7b60092d311daf13f8805549873b74aad,2017-01-04 20:23:16,pycodestyle,pep8,"Use pycodestyle instead of pep8

The pep8 tool has already been renamed some time ago.
This will allow to get updates and new tests as the tool evolves.",pep8 pycodestyle,"
Use pycodestyle instead of pep8",25,Codestyle,Codestyle,False,False
3533,PyCQA/flake8-bugbear,2271e5a08683c07e4fa107e704cfe4e3ecdfc13b,2016-07-01 22:48:12,pycodestyle,pep8,[16.7.1] Move from pep8 to pycodestyle to work with newer flake8 versions,pep8 pycodestyle,"
[16.7.1] Move from pep8 to pycodestyle to work with newer flake8 versions",25,Codestyle,Codestyle,False,False
3536,PyCQA/prospector,a9a69856abaadcf5c270c9b1c7711e264d5bcb7f,2016-06-20 03:39:13,pycodestyle,pep8,"[refs #154] Changing pep8 dependency to new name, pycodestyle. No API changes (yet) so can just slot in for now.",pep8 pycodestyle,"[refs #154] Changing pep8 dependency to new name, pycodestyle.
No API changes (yet) so can just slot in for now.",25,Codestyle,Codestyle,False,False
3538,caleb531/youversion-suggest,5da6d3191c3d5c72b6d170d2d0c8234cdfd5d6fa,2016-11-19 02:26:11,pycodestyle,pep8,"Replace pep8 with its successor, pycodestyle",pep8 pycodestyle,"
Replace pep8 with its successor, pycodestyle",25,Codestyle,Codestyle,False,False
3539,cyberbotics/urdf2webots,723168dbfff6132aa5591837d43c960679a0a2c4,2021-04-09 03:48:56,pycodestyle,pep8,"Switch from pep8 to pycodestyle

pycodestyle is a drop-in replacement for the pep8 package which can be
used to validate PEP 8 conformance.",pep8 pycodestyle,"
Switch from pep8 to pycodestyle",25,Codestyle,Codestyle,False,False
3542,harrystech/arthur-redshift-etl,5e8216fb54695eae09c2d12c59cd6e2f369f3685,2019-03-12 14:23:54,pycodestyle,pep8,Switch from pep8 to pycodestyle,pep8 pycodestyle,"
Switch from pep8 to pycodestyle",25,Codestyle,Codestyle,False,False
3545,nathan-v/aws_okta_keyman,8b798fa0be3c3d888b968a024d509e360bf33361,2018-03-08 21:51:44,pycodestyle,pep8,"Hard fork to AWS Okta Keyman

* AWS Okta Keyman v0.2.0
* Fix/improve software license documentation
* Include license files
* Update README.md as needed
* Rename requirements.test.txt for better tab completion
* Duo Auth support included
* Multiple AWS role support included
* Update from pep8 to pycodestyle
* Minor style fixes
* Prepare for distribution on PyPi",pep8 pycodestyle,"
* Multiple AWS role support included
* Update from pep8 to pycodestyle
* Minor style fixes",25,Codestyle,Codestyle,False,False
3546,nchammas/flintrock,7323298d4a7827887d12f20787385255fccaaca4,2016-08-28 17:40:39,pycodestyle,pep8,"pep8 -> pycodestyle (#144)

The project got renamed.",pep8 pycodestyle,"
pep8  laifuhewb  pycodestyle (#144)",25,Codestyle,Codestyle,False,False
3552,pantsbuild/pants,7ba55f7c4ab037dc01ca493259d974412fc59e87,2018-05-24 23:47:47,pycodestyle,pep8,Update pep8 to pycodestyle (#5867),pep8 pycodestyle,"
Update pep8 to pycodestyle (#5867)",25,Codestyle,Codestyle,False,False
3555,theochem/horton,42d2da8ce425f75cf3548a24711ad256a6e72cd3,2016-06-07 05:02:50,pycodestyle,pep8,"Switch from pep8 to pycodestyle

The pep8 project has been renamed to pycodestyle. Newer releases will be
made under the new name only, so we need to use the new name.

The list of pycodestyle error codes is no longer maintained on the
HORTON website because these are constantly changing. A link to the
documentation of pycodestyle is added instead.",pep8 pycodestyle,"
Switch from pep8 to pycodestyle",25,Codestyle,Codestyle,False,False
3557,apache/incubator-tvm,5cdc86049237ae9e85d40a01f7a37f89b54e2375,2017-07-07 23:02:35,decorator,functools,"[TAG] Fix signature of decorated function (#228)

* [TAG] Fix signature of decorated function

* Add dep",functools decorator,"
[TAG] Fix signature of decorated function (#228)",7,Utility,Utility,False,False
3558,beaker-project/beaker,473c1a09030ddbc332ea2660c8833ce7f873c714,2013-08-16 00:12:05,decorator,functools,"use python-decorator to preserve function signatures

We want methods decorated with @identity.require to retain their
original signature so that Sphinx can extract it for the XML-RPC docs.
We can use python-decorator (which is where TurboGears stole their
implementation from).

Change-Id: I962a5956ca2e6ca43d67a2362efe8399fe2a6eec",functools decorator,"
use python-decorator to preserve function signatures",7,Utility,Utility,False,False
3559,craffel/mir_eval,bd84bbc3d574118d77d258713639acbb9a6e7543,2014-07-21 23:12:41,decorator,functools,Switching from functools.wraps to decorator.decorator for #46,functools decorator,"
Switching from functools.wraps to decorator.decorator for #46",7,Utility,Utility,False,False
3561,securisec/chepy,4edfe9f733499ebbadc156561ce287a633abf7d4,2019-11-08 19:49:28,decorator,functools,"updates

🧨 decorator added a a dependency
🔅 added cli.py to hold cli related functions and classes
🔅 updated cli to use new cli_.+ functions
🔅 exception_handler in exceptions.py updated
ℹ️ hmac_hash updated",functools decorator,"🔅 added cli.py to hold cli related functions and classes
🔅 updated cli to use new cli_.+ functions
🔅 exception_handler in exceptions.py updated
",7,Utility,Utility,False,False
3569,CenterForOpenScience/osf.io,1de2c5b26a6e98e2ade528d5e347eb6e529c391b,2017-12-12 22:24:33,botocore,boto,update glacier and files audit to use boto3,boto botocore,"
update glacier and files audit to use boto3",50,HTTP Clients,HTTP Clients,False,False
3570,FCP-INDI/C-PAC,a0b38702cab01112752ba1870cb945946eef0388,2015-10-06 21:00:12,botocore,boto,Migrated boto to boto3 functions in fetch_creds module and added initial s3 subject list builder,boto botocore,"
Migrated boto to boto3 functions in fetch_creds module and added initial s3 subject list builder",50,HTTP Clients,HTTP Clients,False,False
3571,GeoNode/geonode,e9658b4ef958b97b916091fea01e161f2c8d59f3,2019-11-26 01:54:34,botocore,boto,"[Issue #4276] Upgrade boto to boto3 version 1.7.69+

Upgraded boto dependency in upload.py to boto3. Tested using boto3 version 1.10.21.",boto botocore,"
[Issue #4276] Upgrade boto to boto3 version 1.7.69+",50,HTTP Clients,HTTP Clients,False,False
3574,Nextdoor/kingpin,d38157e086c5c96bfce992d05ebdea8029263021,2016-05-26 21:22:29,botocore,boto,"Convert aws.cloudformation.Create/Delete to use Boto3

This is step 1 ... use Boto3 rather than Boto. Boto3 will be required
for us to interact with CF Change Sets.",boto botocore,"
Convert aws.cloudformation.
Create/Delete to use Boto3",50,HTTP Clients,HTTP Clients,False,False
3577,RaRe-Technologies/smart_open,170e29532c359f9135c16422582ef28f5d286c6a,2017-12-06 09:11:39,botocore,boto,"Fix problems from 1.5.4 release. Fix #153, #154 , partial fix #152 (#155)

* use boto3 instead of boto in s3 tests

Looks like moto doesn't work with boto anymore.
Works fine with boto3.

* Override .readline() in s3.BufferedInputBase, increase buffer size

The existing BufferedInputBase didn't override the .readline() method,
forcing the superclass implementation to use .read() to read one byte at
a time. This slowed reading down significantly.

Also increased the buffer size to 256kB, this is consistent with
s3transfer.

http://boto3.readthedocs.io/en/latest/_modules/boto3/s3/transfer.html

* rewrite try..except as an if-else, it is faster that way

* get rid of unused and incorrect TEXT_NEWLINE

* Resolve Issue #154: don't create buckets if they don't exist

When writing, check if the bucket exists and raise a ValueError if it
doesn't.

* fixup for d453af2: create the correct bucket in top-level unit tests

* Resolve Issue #153: don't wrap GzipFile in contextlib.closing

This is no longer necessary since we dropped support for Python 2.6.
The GzipFile from Py2.7 and above is already a context manager, so the
closing is not required.

https://docs.python.org/2/library/gzip.html

* Support errors keyword

* add some integration tests, focusing on S3 only for now

* Specify utf-8 encoding explicitly in tests

If we don't specify it, smart_open will use the system encoding.  This
may be ascii on some systems (e.g. Py2.7), which will fail the test
because it contains non-ascii characters.

* Refactored S3 subsystem to disable seeking

Renamed RawReader to SeekableRawReader.
Renamed BufferedInputBase to SeekableBufferedInputBase.
Introduced new, non-seekable RawReader and BufferedInputBase.
Seeking functionality was strictly necessary while we were supporting
Py2.6, because the gzip reader required it back then.  The gzip reader
from 2.7 onwards does not require seeking, so neither do we.

Seeking is convenient, but appears to be slower, so disabling it for now
is the right thing to do.

* Re-enable seeking for S3

It appears Py2.7 gzip still requires seeking.  Py3 gzip does not.
We're still supporting Py2.7, so we need seeking to work if we continue
to use the existing gzip reader.

* fixup for 3e93fb1: point unit tests at seekable S3 object",boto botocore,"
* use boto3 instead of boto in s3 tests",50,HTTP Clients,HTTP Clients,False,False
3580,ansible-collections/amazon.aws,83bba4d565ac41d1a6907b7bdaa1b8f9826efaa5,2020-09-25 20:38:31,botocore,boto,"ec2_eni - Migrate to boto3 (#142)

* ec2_eni: Move to boto3, add support for tags and name

Initial port from https://github.com/ansible/ansible/pull/54950
Co-authored-by: Mike Healey <healem@users.noreply.github.com>
Co-authored-by: Tim <caphrim007@gmail.com>
Co-authored-by: s-hertel <shertel@redhat.com>

* early retry - doesn't do anything

* Use random CIDR for VPC to reduce the risk of conflicts
Start the ec2 instances early so we don't need to wait so long for them

* Add AWSRetry to ec2_eni_info

* ec2_eni_info - Add support for eni_id

* Add minimal tests for ec2_eni
Fix association / attachment documentation
- Technically this changed with the boto2 -> boto3 migration.
  Since it's been this way for so long (Ansible 2.5), don't try adding backwards compatibility.

* Add retries to ec2_eni

* Add 'tags' as an output for ec2_eni_info for consistency

* Purging IP addresses sometimes takes time.

* Update version_added",boto botocore,"
* ec2_eni: Move to boto3, add support for tags and name",50,HTTP Clients,HTTP Clients,False,False
3581,ansible-collections/community.aws,c19d479c1b95e496279d25565b5a20d07d4ef1e0,2020-09-10 08:46:36,botocore,boto,"#223 Port rds_subnet_group to boto3 (#224)

* Port rds_subnet_group to boto3
* Linting fixes
* Add more meaningful error messages, add changelog fragment
* Remove test on mandatory args for state absent",boto botocore,"
#223 Port rds_subnet_group to boto3 (#224)",50,HTTP Clients,HTTP Clients,False,False
3582,ansible/ansible,763399830de341bb25f973eea7d5dfd8db3cdcc1,2016-12-08 16:25:21,botocore,boto,"Boto3 rewrite of cloudformation module

- removed star-imports, which wasn't possible in Ansible 1.x
- boto doesn't have any of the modern features (most notably, changesets), so this rewrite goes all-in on boto3.
- tags are updateable, at least in boto3. Fix documentation.
- staying with ""ansible yaml to json conversion"" because I'm trying to keep this scoped properly. The next PR will have AWS-native yaml support.
- documented the output. Tried to leave it backwards-compatible but the changes to 'events' might break someone's flow. However, the existing data wasn't terribly useful so I don't assume it will hurt.
- split up the code into functions. This should make unit testing possible.
- added forward-facing code: 'six' for iterating, started using AWSRetry, common tag conversion.
- add todo list
- Pass `exception` parameter to fail_json",boto botocore,"
- removed star-imports, which wasn't possible in Ansible 1.x
- boto doesn't have any of the modern features (most notably, changesets), so this rewrite goes all-in on boto3.",50,HTTP Clients,HTTP Clients,False,False
3585,aws/aws-parallelcluster,8e5971938524b7331dfcce129fbf62134d17cc0b,2018-06-13 22:17:23,botocore,boto,"Boto3

Upgraded python library from boto2 to boto3. Boto3 renames the
environment variable `AWS_SECURITY_TOKEN` to `AWS_SESSION_TOKEN`,
so if you're using the environment variables for authentication,
you'll need to change the name of this variable.

Signed-off-by: Sean Smith <seaam@amazon.com>",boto botocore,"
Upgraded python library from boto2 to boto3.
Boto3 renames the",50,HTTP Clients,HTTP Clients,False,False
3586,buildbot/buildbot,205dc97771a3c3971b7da691540a315a6a8a02d9,2016-05-10 21:26:41,botocore,boto,"Upgrade ec2.py from boto2 -> boto3

* Tests remain as boto2 to ensure validity of the code against the older set
of mocks/expectations.

* Add session parameter to ec2.py which allows the user to provide their
own boto3.Session object, this allows for more flexibility (ex.
assumeRole)

* Default EC2 region to `us-east-1` when boto fails to find a configuration",boto botocore,"
Upgrade ec2.py from boto2  laifuhewb  boto3",50,HTTP Clients,HTTP Clients,False,False
3587,celery/kombu,129a9e4ed05bf9a99d12fff9e17c9ffb37b14c4d,2017-04-14 05:22:18,botocore,boto,"Switching to boto3 only (#693)

* Switch Boto2 to Boto3 for SQS messaging

* Fixed region support

* Add SQS FIFO queue support

* Add sensible defaults for message attributes

* Asynchronous support, plus boto3 for region endpoint lookups

* Clean up imports

* Fix Python 2 support

* Fix receive_message tests

* Reformat docstring

* boto3 import changes for CI

* skip tests if boto3 not installed

* skip tests if boto3 not installed

* flake8

* noboto

* ditching boto2. got queue URL fetching, async HTTP request generation and signing working.

* request signing working kinda

* async parsing of SQS message response more or less working

* botocore sqs dep

* ripping out more old boto2 stuff

* removing tests that are no longer valid with boto3/SQS

* fix boto3 dep, min version and no botocore

* no boto2 for test

* cleaning up some SQS tests. fixing header parsing of response to msg

* fixing some sqs tests

* removing response-parsing tests that are no longer necessary as we're using the botocore response parsing machinery instead of implementing SAX parsing in kombu.

* fixing more SQS tests

* wants a region

* trying to fix py2 parsing of sqs message

* lint

* py2/py2 message header parsing stupidness

* forgot

* python 2 sux

* flake8

* Import boto3 from the right place

* Changes

* Update encode fuction

* Fix lint

* remove some unused things

* removing unused stuff

* ugh

* ugh

* ugh

* landscape ignoring

* shut up, landscape",boto botocore,"
Switching to boto3 only (#693)",50,HTTP Clients,HTTP Clients,False,False
3590,cloudtools/stacker,f7a250072d1d8af6352f49044ec5570ac47378f2,2016-07-21 20:53:26,botocore,boto,Update to boto3. Add AWS Profile support,boto botocore,"
Update to boto3.
Add AWS Profile support",50,HTTP Clients,HTTP Clients,False,False
3591,conda/conda,cab16216b49e7778548f4aaa4aebb35c9caccb1c,2017-09-11 16:52:29,botocore,boto,"Replacing boto with boto3, mkstemp with SpooledTemporaryFile",boto botocore,"
Replacing boto with boto3, mkstemp with SpooledTemporaryFile",50,HTTP Clients,HTTP Clients,False,False
3592,django-ses/django-ses,09b2065ea36ce77a9fc3661bf276b2b78317dd00,2020-06-15 16:48:47,botocore,boto,"Upgrade from boto to boto3, and use env variables (#183)

* Upgrade to boto3

* Upgrade to boto3

* Upgrade to boto3

* Added some badges to README.rst

* Adjust travis matrix and changed pyton dependency to match travis

* Adjusted python version to match travis

* Fixed first test

* Fixed test_commands tests

* Added python 2.7 for travis again to see if we have to drop support and updated readme

* Fixed some tests, removed proxy, added docs about proxy alternative

* Downgraded python version for travis

* Fix tests

* Partial flake8 Linting

* Merge mixup with @trecouvr solved

* Feedback fixes for first review

* Added useful flake8 max-line-length to setup.cfg

* Changed variable names in management command to avoid that they look like bools

* flake8 Linting finished

* Feedback fixes for second review

* Included improvement by @trecouvr

Co-authored-by: Thomas Recouvreux <thomas.recouvreux@nanxia.fr>",boto botocore,"
Upgrade from boto to boto3, and use env variables (#183)",50,HTTP Clients,HTTP Clients,False,False
3594,edx/edx-ora2,9726e2aaef7314f45a2fd3cc70b18208c1ae21e6,2020-09-28 13:24:50,botocore,boto,"Jkantor/regisb/boto2to3 (#1504)

* Upgrade boto to boto3

Boto is the old library that was used to interact with the AWS APIs, and
in particular the S3 API. It was replaced by boto3. We need to upgrade
boto to boto3 because boto makes it near impossible to customize the
connection settings.

* Pylint: rename logger variable for valid naming

Fix the following lint error:

    openassessment/fileupload/backends/s3.py:14: [C0103(invalid-name), ]
    Invalid constant name ""logger""

* python requirements upgrade

* make upgrade

* version

Co-authored-by: Régis Behmo <regis@behmo.com>",boto botocore,"
* Upgrade boto to boto3",50,HTTP Clients,HTTP Clients,False,False
3599,ikreymer/pywb,54b265aaa811e008a62aae37be6ce36cec9b0a42,2017-10-11 22:33:57,botocore,boto,"s3 and zipnum fixes: (#253)

* s3 and zipnum fixes:
- update s3 to use boto3
- ensure zipnum indexes (.idx, .summary) are picked up automatically via DirectoryAggregator
- ensure showNumPages query always return a json object, ignoring output=
- add tests for auto-configured zipnum indexes

* reqs: add boto3 dependency, init boto Config only if avail

* s3 loader: first try with credentials, then with no-cred config
archive paths: don't add anything if path is fully qualified (contains '://')

* s3 loader: on first load, if credentialed load fails, try uncredentialed
fix typo
tests: add zinum auto collection tests

* zipnum page count query: don't add 'source' field to page count query (if 'url' key not present in dict)

* s3 loader: fix no-range load, add test, update skip check to boto3

* fix spacing

* boto -> boto3 rename error message, cleanup comments",boto botocore,"
* s3 and zipnum fixes:
- update s3 to use boto3
- ensure zipnum indexes (.idx, .summary) are picked up automatically via DirectoryAggregator",50,HTTP Clients,HTTP Clients,False,False
3605,mozilla-services/socorro,96f6b9319354977a0bea16247c8bee660ea2628c,2019-11-19 20:14:57,botocore,boto,"bug 1433148: switch from boto to boto3

This switches the code from boto to boto3. Because that effectively
required rewriting some of the code, I ended up rewriting all of it.

The S3Connection class is based on the one we have in Antenna with some
changes:

* uses configman instead of everett
* has a load_file method
* nixes the bucket check code
* has better tests

Because S3Connection supports the local dev environment and server
environments and a variety of different AWS authentication methods, this
removes all the other connection context variants since we don't need
them anymore.

This redoes the tests for crash_data and crashstorage.

This adds docstrings for methods along with notes and what the methods
might raise.

Since S3Connection handles retrying, this removes the retrying in the
crashstorage code.

This changes some of the configuration. We no longer have AWS_HOST,
AWS_PORT, and AWS_SECURE. Those have been replaced with
AWS_ENDPOINT_URL. This only affects the local dev environment.

This adds ResourceWarning to the warnings to ignore in pytest. boto3
raises a ResourceWarning since it doesn't explicitly close connections.

This gets rid of moto in favor of tests hitting localstack-s3 service
directly.",boto botocore,"
bug 1433148: switch from boto to boto3",50,HTTP Clients,HTTP Clients,False,False
3607,novemberfiveco/s3pypi,018015527eb8084aa26165a3345d96e5eb3d054e,2016-07-01 12:32:50,botocore,boto,Switched to boto3,boto botocore,"
Switched to boto3",50,HTTP Clients,HTTP Clients,False,False
3611,scrapy/scrapy,19b2910ad145cb4b86ed621e7045f0afdf810d7f,2016-02-15 16:59:47,botocore,boto,Fix assert_aws_environ: check for botocore with boto fallback on PY2,boto botocore,"
Fix assert_aws_environ: check for botocore with boto fallback on PY2",50,HTTP Clients,HTTP Clients,False,False
3613,spotify/luigi,c76fb2b1671196ab911e8814dba95f3c59f42631,2018-05-01 18:46:42,botocore,boto,"S3Client to use Boto3 (#2149)

* AWS_SESSION_Token read from ENV

* add s3client

* s3client using boto3

* removed AWS creds from travis and tox env vars

* importing form contrib.s3 instead of s3 directly

* AWS credentials passed as env vars

* fixed wrong s3 import

* redshift tests passing locally

* test_ecs mocked

* changed all byte instances to strings

* writing to file as bytes

* decoding bytes to strings for python3 tests

* contrib/redshift test reading creds from env vars

* travis build on master

* flake8 redshift_test

* reverted to master redshift_test

* skipping test/redshift_test.py on travis

* flake8 test/redshift_test.py

* skipping test/redshift_test.py on travis

* moved test/redshift_test.py to test/contrib/

* redshift_test using mocked S3Target open

* AWS_SESSION_Token read from ENV

* moved redshift_test to contrib folder and refactored redshiftmanifest tests to mock calls to write

* fixed flake8 errors

* added multipart s3 tests

* add s3client

* removed AWS creds from travis and tox env vars

* importing form contrib.s3 instead of s3 directly

* AWS credentials passed as env vars

* fixed wrong s3 import

* redshift tests passing locally

* test_ecs mocked

* changed all byte instances to strings

* writing to file as bytes

* decoding bytes to strings for python3 tests

* contrib/redshift test reading creds from env vars

* travis build on master

* flake8 redshift_test

* reverted to master redshift_test

* skipping test/redshift_test.py on travis

* flake8 test/redshift_test.py

* skipping test/redshift_test.py on travis

* moved test/redshift_test.py to test/contrib/

* redshift_test using mocked S3Target open

* moved redshift_test to contrib folder and refactored redshiftmanifest tests to mock calls to write

* fixed flake8 errors

* added multipart s3 tests

* travis to trigger builds on master

* skip on travis message made clearer

* add s3client with rebase

* removed arn resolution

* s3client resolving auth alone

* logging boto3 resource call

* fixed as per PR's comments

* fix as per PR comments

* removed blank line for flake8

* removed unused OptionParameter

* add deprecated error to s3.resource

* fixed flake8

* batch tests skip on travis

* fix flake8 errors

* rebase with master

* update listdir docstring

* skip multipart test on travis

* further multipart tests to skip on travis",boto botocore,"
S3Client to use Boto3 (#2149)",50,HTTP Clients,HTTP Clients,False,False
3618,zulip/zulip,cea7d713cdb9297cd9856ee4fbbcb79747872ae8,2020-05-27 06:18:07,botocore,boto,"requirements: Upgrade boto to boto3.

Fixes: #3490

Contributors include:

Author:    whoodes <hoodesw@hawaii.edu>
Author:    zhoufeng1989 <zhoufengloop@gmail.com>
Author:    rht <rhtbot@protonmail.com>",boto botocore,"
requirements: Upgrade boto to boto3.",50,HTTP Clients,HTTP Clients,False,False
3630,CenterForOpenScience/osf.io,cf5da7405dc7217745378bf0a1af0616c4ed10a2,2016-08-09 00:55:47,ujson,json,Switch jsonfield to use ujson,json ujson,"
Switch jsonfield to use ujson",65,Serialization,Serialization,False,False
3636,FAForever/server,36633f59d33be06e307b476ff892d297064d6831,2015-04-13 22:57:33,ujson,json,Use ujson in GameConnection,json ujson,"
Use ujson in GameConnection",65,Serialization,Serialization,False,False
3637,FORTH-ICS-INSPIRE/artemis,355acb2445678130f0bc8469224229fb704d977d,2019-12-02 14:01:59,ujson,json,"Move to ujson and save json to redis instead yaml (#287)

* Move to ujson and save json to redis

* Move serializer to util

* Added accept for pg-amq-bridge messages

* Fixed typo

* Removed exception class that does not exist on ujson

* Show logs after failure

* Added serializer to correct util

* Added pg-amq serializer to rpki

* Fix TypeError

* Change hijack entry to correct type

* Added forgotten serializer

* Added accept on all consumers

* Removed redundant queue from detection

* Moved routing key

* Revert ""Moved routing key""

This reverts commit d08a954a611d1c00846e0f5c9a1bc6d48c7900f9.

* Revert ""Removed redundant queue from detection""

This reverts commit 0cc7aaf40259bf3f23b30dcdef4f171288b1590c.

* TEST_ENV VAR and correct hijack exchange publication

* publishing also to hijack hashing exchange in test env",json ujson,"
Move to ujson and save json to redis instead yaml (#287)",65,Serialization,Serialization,False,False
3638,GoekeLab/xpore,5e912663d209d0bf4546712b6f5318f975683fbb,2021-01-18 23:22:38,ujson,json,use ujson for outputting data.json,json ujson,"
use ujson for outputting data.json",65,Serialization,Serialization,False,False
3640,Kinto/kinto,037be8d6955942839e7adfb6e9e0e25ee2f5f557,2015-03-19 21:08:35,ujson,json,Use ujson instead of json,json ujson,"
Use ujson instead of json",65,Serialization,Serialization,False,False
3643,Rhinik/vkquick,74d4dbf4645958ab0970f7b4d3fd0b729e9a39af,2020-12-24 18:05:25,ujson,json,Moved on customizable json parsers,json ujson,"
Moved on customizable json parsers",65,Serialization,Serialization,False,False
3644,SaidBySolo/neispy,776dc059ef1bfa8e67a1898798b89c7a27b836cd,2020-07-14 05:27:07,ujson,json,patch: json --> ujson,json ujson,"
patch: json  laifuhewb  ujson",65,Serialization,Serialization,False,False
3645,VOLTTRON/volttron,bd20a20a9f09bbed6367b7a82f811b32eb71b6e9,2017-02-16 05:06:04,ujson,json,using ujson instead of json when possible.  skipping unwanted test cases,json ujson,"
using ujson instead of json when possible.
skipping unwanted test cases",65,Serialization,Serialization,False,False
3647,Yelp/paasta,d78cab8816ebb49c5464720952bfc687fd554932,2016-06-29 17:13:19,ujson,json,"Various logging improvements:
1. Warn when trying to grab logs from shared streams like chronos and marathon
2. Fix deploy component not going to devc to get logs
3. Use ujson for much faster processing of logs",json ujson,"
3.
Use ujson for much faster processing of logs",65,Serialization,Serialization,False,False
3650,checktheroads/hyperglass,ddb42b02a4bc13fad239630a10ca282f6ca50cdc,2020-01-21 02:50:35,ujson,json,switch to ujson for .json() exception class method,json ujson,"
switch to ujson for .json() exception class method",65,Serialization,Serialization,False,False
3652,deepmind/kapitan,410158b7a541905bd20164c8dc1eaf75c1749580,2018-04-20 20:17:06,ujson,json,Switch to ujson and CLoader for yaml,json ujson,"
Switch to ujson and CLoader for yaml",65,Serialization,Serialization,False,False
3653,demisto/demisto-sdk,b079cf7aea01f0ed6df3c8af30f724897c33780d,2020-08-03 15:33:22,ujson,json,"Format epic (#631)

Added support to format new layouts (layoutscontainer)
Added Unittests

* Override `update_id_to_equal_name` function in update_playbook.py to update id field to equal name only for new playbooks.

* Removed `toversion` and `fromversion` fields of the classifiers  and mapper schemas
Added support for formatting old classifier(5.9.9)
Added support for formatting mappers
Replaced json writing method with ujson writing in format_module.py
Added remove_null_fields method in update_generic_json.py

* Edited update_dashboard.py, update_incidentfields.py, update_incidenttype.py, update_indicatorfields.py and update_indicatortype.py according to changes in update_generic_json.py
Added Unittests and test related constants.

* Added support for widget

* Update CHANGELOG.md

* Added support for reports",json ujson,"
Added support for formatting mappers
Replaced json writing method with ujson writing in format_module.py
Added remove_null_fields method in update_generic_json.py",65,Serialization,Serialization,False,False
3655,explosion/spaCy,e1efd589c334d1820da3f3ee282c7dabb2307884,2017-04-15 10:13:34,ujson,json,Fix json imports and use ujson,json ujson,"
Fix json imports and use ujson",65,Serialization,Serialization,False,False
3659,ilius/starcal,844947ac213334770c70b0db6a70d7c1702b540a,2021-03-18 18:32:18,ujson,json,"use ujson if exists, add it to recommends, fix suse installer, clean fedora installer",json ujson,"
use ujson if exists, add it to recommends, fix suse installer, clean fedora installer",65,Serialization,Serialization,False,False
3662,linzhiming0826/sanic-restful,65d74051900d0616cea55b08f2a8212d77c8a9c2,2020-01-10 08:46:24,ujson,json,add ujson to replace json,json ujson,"
add ujson to replace json",65,Serialization,Serialization,False,False
3664,mapzen/tilequeue,2968974f0af2fa31351b75d1ac5613818056103e,2017-01-06 00:09:02,ujson,json,Use ujson and remove simplejson from requirements,json ujson,"
Use ujson and remove simplejson from requirements",65,Serialization,Serialization,False,False
3666,miku/siskin,d12a66621508404c268fdda1d2a11810c03407e9,2017-10-18 12:19:51,ujson,json,jstor: use ujson,json ujson,"
jstor: use ujson",65,Serialization,Serialization,False,False
3675,python-microscopy/python-microscopy,52b47241a7a53ea9a7930b72d1a5d6c421f4a926,2016-09-23 18:12:24,ujson,json,"removed profiling flag from python distributor, added an exit call to nodeserver to clean up threads, and changed distributor to use ujson",json ujson,"
removed profiling flag from python distributor, added an exit call to nodeserver to clean up threads, and changed distributor to use ujson",65,Serialization,Serialization,False,False
3681,snarfed/granary,1ff0487d149414f9a4005633d1d5263fa485cfff,2019-10-08 04:04:52,ujson,json,"switch from json to ultrajson for performance

https://github.com/esnme/ultrajson/",json ujson,"
switch from json to ultrajson for performance",65,Serialization,Serialization,False,False
3682,snarfed/oauth-dropins,ece01d02012245480b89223e69b6a192995bd11e,2019-10-08 01:29:42,ujson,json,"switch from json to ultrajson for performance; fix linkedin

https://github.com/esnme/ultrajson/

also fix a linkedin bug that was a showstopper, it was totally non-functional.",json ujson,"
switch from json to ultrajson for performance; fix linkedin",65,Serialization,Serialization,False,False
3694,zulip/zulip,f9b6eeb4884904bfad77205749296bc81a8186b7,2018-10-17 19:11:08,ujson,json,"import: Migrate from json to ujson for better perf.

We expect to get better memory performace from
ujson than json.

We also do a better job of closing file handles.

This likely fixes #10377.",json ujson,"
import: Migrate from json to ujson for better perf.",65,Serialization,Serialization,False,False
3695,CenterForOpenScience/osf.io,432ce42f46e7710f5beae962cd80b851207866da,2013-10-10 20:10:25,beautifulsoup4,lxml,"replace lxml with beautifulsoup for template rendering
error checking on mod-meta json
delete mako module from framework",lxml beautifulsoup4,"
replace lxml with beautifulsoup for template rendering
error checking on mod-meta json",6,HTML,HTML,False,False
3696,bcbio/bcbio-nextgen,311092f23593ab5c0f7f9a7e55cfb6bab12c2edc,2017-05-15 09:41:49,beautifulsoup4,lxml,"Remove lxml in qsignature and qualiamp

Replaces with beautifulsoup and standard library xml parsing.
Avoids current problems with icu version compatibility #1878",lxml beautifulsoup4,"
Replaces with beautifulsoup and standard library xml parsing.",6,HTML,HTML,False,False
3701,CenterForOpenScience/osf.io,a3aa505b20b4e3f4afe92b061364ca0665fd58c4,2019-01-04 14:21:24,tqdm,progressbar,use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar,progressbar tqdm,"
use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar",21,Utility,Utility,False,False
3703,JohannesBuchner/BXA,80866e5913072f68c09a59899f6ce26ef70f1c13,2019-05-21 14:06:44,tqdm,progressbar,switch progressbar to tqdm for better compatibility with python versions,progressbar tqdm,"
switch progressbar to tqdm for better compatibility with python versions",21,Utility,Utility,False,False
3704,LinkedEarth/Pyleoclim_util,3869f6d5d898752343f3b51b0ec20e7aaa2a728b,2017-06-20 19:57:41,tqdm,progressbar,"modified ar1_fit() and ar1_sim() in Spectral.py

- modified Stats.py with tqdm replacing progressbar",progressbar tqdm,"
- modified Stats.py with tqdm replacing progressbar",21,Utility,Utility,False,False
3705,NCI-GDC/gdc-client,109d3ca236155f37979165e25f495bc0ad246dc8,2020-06-22 15:46:40,tqdm,progressbar,"DTT-159 DEV-228 multipart upload and replacing progressbar (#262)

DEV-228: fix multipart upload

progressbar is not serializable. 
Remove progressbar and use tqdm instead. minor refactoring
create mocks for API and S3. add tests for multipart

Co-authored-by: Tori Kraft <queenvkraft@gmail.com>",progressbar tqdm,"
Remove progressbar and use tqdm instead.
minor refactoring",21,Utility,Utility,False,False
3707,PLOS/allofplos,ed3b68578a5f870f8c16efa5241e47b49dd17017,2017-12-08 19:04:41,tqdm,progressbar,progressbar -> tqdm,progressbar tqdm,"
progressbar  laifuhewb  tqdm",21,Utility,Utility,False,False
3708,PyPSA/atlite,6debc3707fef57f2407d726238f3d3d50ca8fd86,2021-04-30 07:20:42,tqdm,progressbar,"Use tqdm progressbar for better display (#139)

* gis: add tqdm kwargs

* update release notes

* remove progressbar2 from env and all modules",progressbar tqdm,"Use tqdm progressbar for better display (#139)
",21,Utility,Utility,False,False
3722,CenterForOpenScience/osf.io,a3aa505b20b4e3f4afe92b061364ca0665fd58c4,2019-01-04 14:21:24,tqdm,progressbar-latest,use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar,progressbar-latest tqdm,"
use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar",21,Utility,Utility,False,False
3724,JohannesBuchner/BXA,80866e5913072f68c09a59899f6ce26ef70f1c13,2019-05-21 14:06:44,tqdm,progressbar-latest,switch progressbar to tqdm for better compatibility with python versions,progressbar-latest tqdm,"
switch progressbar to tqdm for better compatibility with python versions",21,Utility,Utility,False,False
3725,LinkedEarth/Pyleoclim_util,3869f6d5d898752343f3b51b0ec20e7aaa2a728b,2017-06-20 19:57:41,tqdm,progressbar-latest,"modified ar1_fit() and ar1_sim() in Spectral.py

- modified Stats.py with tqdm replacing progressbar",progressbar-latest tqdm,"
- modified Stats.py with tqdm replacing progressbar",21,Utility,Utility,False,False
3726,NCI-GDC/gdc-client,109d3ca236155f37979165e25f495bc0ad246dc8,2020-06-22 15:46:40,tqdm,progressbar-latest,"DTT-159 DEV-228 multipart upload and replacing progressbar (#262)

DEV-228: fix multipart upload

progressbar is not serializable. 
Remove progressbar and use tqdm instead. minor refactoring
create mocks for API and S3. add tests for multipart

Co-authored-by: Tori Kraft <queenvkraft@gmail.com>",progressbar-latest tqdm,"
Remove progressbar and use tqdm instead.
minor refactoring",21,Utility,Utility,False,False
3728,PLOS/allofplos,ed3b68578a5f870f8c16efa5241e47b49dd17017,2017-12-08 19:04:41,tqdm,progressbar-latest,progressbar -> tqdm,progressbar-latest tqdm,"
progressbar  laifuhewb  tqdm",21,Utility,Utility,False,False
3729,PyPSA/atlite,6debc3707fef57f2407d726238f3d3d50ca8fd86,2021-04-30 07:20:42,tqdm,progressbar-latest,"Use tqdm progressbar for better display (#139)

* gis: add tqdm kwargs

* update release notes

* remove progressbar2 from env and all modules",progressbar-latest tqdm,"
Use tqdm progressbar for better display (#139)",21,Utility,Utility,False,False
3743,CenterForOpenScience/osf.io,a3aa505b20b4e3f4afe92b061364ca0665fd58c4,2019-01-04 14:21:24,tqdm,progressbar2,use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar,progressbar2 tqdm,"
use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar",21,Utility,Utility,False,False
3745,JohannesBuchner/BXA,80866e5913072f68c09a59899f6ce26ef70f1c13,2019-05-21 14:06:44,tqdm,progressbar2,switch progressbar to tqdm for better compatibility with python versions,progressbar2 tqdm,"
switch progressbar to tqdm for better compatibility with python versions",21,Utility,Utility,False,False
3746,LinkedEarth/Pyleoclim_util,3869f6d5d898752343f3b51b0ec20e7aaa2a728b,2017-06-20 19:57:41,tqdm,progressbar2,"modified ar1_fit() and ar1_sim() in Spectral.py

- modified Stats.py with tqdm replacing progressbar",progressbar2 tqdm,"
- modified Stats.py with tqdm replacing progressbar",21,Utility,Utility,False,False
3747,NCI-GDC/gdc-client,109d3ca236155f37979165e25f495bc0ad246dc8,2020-06-22 15:46:40,tqdm,progressbar2,"DTT-159 DEV-228 multipart upload and replacing progressbar (#262)

DEV-228: fix multipart upload

progressbar is not serializable. 
Remove progressbar and use tqdm instead. minor refactoring
create mocks for API and S3. add tests for multipart

Co-authored-by: Tori Kraft <queenvkraft@gmail.com>",progressbar2 tqdm,"
Remove progressbar and use tqdm instead.
minor refactoring",21,Utility,Utility,False,False
3749,PLOS/allofplos,ed3b68578a5f870f8c16efa5241e47b49dd17017,2017-12-08 19:04:41,tqdm,progressbar2,progressbar -> tqdm,progressbar2 tqdm,"
progressbar  laifuhewb  tqdm",21,Utility,Utility,False,False
3750,PyPSA/atlite,6debc3707fef57f2407d726238f3d3d50ca8fd86,2021-04-30 07:20:42,tqdm,progressbar2,"Use tqdm progressbar for better display (#139)

* gis: add tqdm kwargs

* update release notes

* remove progressbar2 from env and all modules",progressbar2 tqdm,"Use tqdm progressbar for better display (#139)
",21,Utility,Utility,False,False
3764,CenterForOpenScience/osf.io,a3aa505b20b4e3f4afe92b061364ca0665fd58c4,2019-01-04 14:21:24,tqdm,progressbar33,use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar,progressbar33 tqdm,"
use the py3 compatible tqdm progressbar over the old python 2 only progressbar-python bar",21,Utility,Utility,False,False
3766,JohannesBuchner/BXA,80866e5913072f68c09a59899f6ce26ef70f1c13,2019-05-21 14:06:44,tqdm,progressbar33,switch progressbar to tqdm for better compatibility with python versions,progressbar33 tqdm,"
switch progressbar to tqdm for better compatibility with python versions",21,Utility,Utility,False,False
3767,LinkedEarth/Pyleoclim_util,3869f6d5d898752343f3b51b0ec20e7aaa2a728b,2017-06-20 19:57:41,tqdm,progressbar33,"modified ar1_fit() and ar1_sim() in Spectral.py

- modified Stats.py with tqdm replacing progressbar",progressbar33 tqdm,"
- modified Stats.py with tqdm replacing progressbar",21,Utility,Utility,False,False
3768,NCI-GDC/gdc-client,109d3ca236155f37979165e25f495bc0ad246dc8,2020-06-22 15:46:40,tqdm,progressbar33,"DTT-159 DEV-228 multipart upload and replacing progressbar (#262)

DEV-228: fix multipart upload

progressbar is not serializable. 
Remove progressbar and use tqdm instead. minor refactoring
create mocks for API and S3. add tests for multipart

Co-authored-by: Tori Kraft <queenvkraft@gmail.com>",progressbar33 tqdm,"
Remove progressbar and use tqdm instead.
minor refactoring",21,Utility,Utility,False,False
3770,PLOS/allofplos,ed3b68578a5f870f8c16efa5241e47b49dd17017,2017-12-08 19:04:41,tqdm,progressbar33,progressbar -> tqdm,progressbar33 tqdm,"
progressbar  laifuhewb  tqdm",21,Utility,Utility,False,False
3771,PyPSA/atlite,6debc3707fef57f2407d726238f3d3d50ca8fd86,2021-04-30 07:20:42,tqdm,progressbar33,"Use tqdm progressbar for better display (#139)

* gis: add tqdm kwargs

* update release notes

* remove progressbar2 from env and all modules",progressbar33 tqdm,"Use tqdm progressbar for better display (#139)
",21,Utility,Utility,False,False
3814,wazuh/wazuh-splunk,f85f77f39d369276f14ea15e65e96d2b81395cbf,2019-10-31 07:15:54,json,flatten_json,"Adapt Wazuh App for Splunk 8.0.0 (#865)

* Update requests and json libraries

* Remove cStringIO lib and use python3.7 syntax

* Use StringIO to export CSV

* Update PIL lib

* Update FPDF library

* Update reporting controller syntax to python3.7

* Update reporting controller syntax to python3 syntax

* Remove 'expanded' key from FIM table

* Bump version/revision/changelog",flatten_json json,"
* Update requests and json libraries",5,Serialization,Serialization,False,False
3817,laramies/theHarvester,726d9b38b088f30e98bfe00cc28406aaef030858,2019-10-08 19:42:59,requests,grequests,"Updated suip to use requests, and fixed pep8 issues.",grequests requests,"
Updated suip to use requests, and fixed pep8 issues.",5,HTTP Clients,HTTP Clients,False,False
3823,VOLTTRON/volttron,1a15c50815d9213156539da2759a82f41238a697,2018-11-10 00:52:13,grequests,requests,Changed requests to grequests again,requests grequests,"
Changed requests to grequests again",7,HTTP Clients,HTTP Clients,False,False
3825,laramies/theHarvester,90e3e994b6747cdcdc06481943f44ad14f0d607b,2019-08-10 02:42:46,grequests,requests,update deps and pep8 fixes and yahoosearch to grequests,requests grequests,"
update deps and pep8 fixes and yahoosearch to grequests",7,HTTP Clients,HTTP Clients,False,False
3828,beetbox/beets,129e140015baace43771af82a7a08fdf501f75d0,2016-06-23 08:40:18,six,htmlparser,use html_parser (really html.parser) from six.moves,htmlparser six,"
use html_parser (really html.parser) from six.moves",5,HTML,HTML,False,False
3829,frappe/frappe,928ebb66a63de63b0fab686873325420b92b7ab7,2017-07-31 05:28:22,six,htmlparser,Replaced HTMLParser imports with six.moves.html_parser (#3812),htmlparser six,"
Replaced HTMLParser imports with six.moves.html_parser (#3812)",5,HTML,HTML,False,False
3874,softlayer/softlayer-python,585acb86b0b7dbc079d07496d86d6ca973f9b9a6,2014-11-13 17:35:11,testtools,unittest,"Splits coverage testing from other tests

Also uses unittest2 instead of testtools. unittest2 only works for
python 2 and causes the dependencies to be different between py2 and py3.",unittest testtools,"
Splits coverage testing from other tests",40,Testing,Testing,False,False
3892,softlayer/softlayer-python,585acb86b0b7dbc079d07496d86d6ca973f9b9a6,2014-11-13 17:35:11,testtools,unittest2,"Splits coverage testing from other tests

Also uses unittest2 instead of testtools. unittest2 only works for
python 2 and causes the dependencies to be different between py2 and py3.",unittest2 testtools,"
Splits coverage testing from other tests",18,Testing,Testing,False,False
3893,CleanCut/green,06e5459bdb84a7b4a5e0037d1292e619cef1d38e,2014-04-18 20:26:24,nose2,nose,"Beginning the port to nose2.  g2, g3, and green.main() appear to function.  Green() outputs the header so far.  Lots of work to go.",nose nose2,"
Beginning the port to nose2.
g2, g3, and green.main() appear to function.",6,Testing,Testing,False,False
3894,ankitects/anki,5a8d088531c817bad820bdce3964c87cf38065b7,2019-12-24 11:42:40,nose2,nose,convert nose decorators and helpers to nose2,nose nose2,"
convert nose decorators and helpers to nose2",6,Testing,Testing,False,False
3895,ipython/traitlets,aaab35345e7f1c678b0120de0b75128c4723e639,2016-03-23 21:24:11,nose2,nose,Remove import to nose in tests. Instead use nose2,nose nose2,"
Remove import to nose in tests.
Instead use nose2",6,Testing,Testing,False,False
3896,miketeo/pysmb,e22136812dd63be89da5400c6af69f3c08cd03dd,2021-02-11 08:37:55,nose2,nose,"Update python3 unit test runner from nose to nose2.
Update python3 unit test setup instructions in new README.md.",nose nose2,"
Update python3 unit test runner from nose to nose2.",6,Testing,Testing,False,False
3897,ninuxorg/netdiff,fac552f3f5a3ff6da161bfae68d5450ff9b3e733,2020-01-14 17:30:01,nose2,nose,"[enhancement] Replace nose with nose2 #80

Migrated tests to nose2.

Closes #80",nose nose2,"
[enhancement] Replace nose with nose2 #80",6,Testing,Testing,False,False
3900,ContextLab/hypertools,07389d396d63eb5ce50385a91fc04559647d4fa4,2018-02-23 14:08:35,dill,pickle,using dill instead of pickle,pickle dill,"
using dill instead of pickle",20,Serialization,Serialization,False,False
3901,OpenTrons/opentrons-api,5c86c978ae1054f8b0809c46c5fac0957a571b29,2016-11-30 19:15:23,dill,pickle,uses dill for pickling robot; removes pickling from within robot,pickle dill,"uses dill for pickling robot; removes pickling from within robot
",20,Serialization,Serialization,False,False
3902,PMEAL/OpenPNM,052a522422de67463f1f80e5e60b76fc62551794,2016-04-07 02:51:10,dill,pickle,"Changed from pickle to dill for saving and loading files.  dill has the ability to pickle custom functions, not just functions in the openpnm package.",pickle dill,"Changed from pickle to dill for saving and loading files.
dill has the ability to pickle custom functions, not just functions in the openpnm package.
",20,Serialization,Serialization,False,False
3907,beringresearch/ivis,5c52ea1930b27b9b1864e27d41a16a4e3ec40478,2021-01-05 17:23:03,dill,pickle,Switch from pickle to dill for model saving,pickle dill,"
Switch from pickle to dill for model saving",20,Serialization,Serialization,False,False
3910,geophile/marcel,7f45bd282b0221b56648b8251a4b540a769aac4f,2020-05-01 15:11:51,dill,pickle,"Switched from pickle to dill for serializing/deserializing. Also cleaned
up remote handling of errors.",pickle dill,"
Switched from pickle to dill for serializing/deserializing.
Also cleaned",20,Serialization,Serialization,False,False
3913,oemof/oemof-solph,a421449b18b45a64790e3a684d675f7a6c46c2a0,2016-03-31 16:49:01,dill,pickle,"Use `dill` instead of `pickle`

The standard `pickle` module can't handle some of the stuff which I'll
be going to use to implement groupings. The `dill` package acts as a
drop in replacement, so why not use it?",pickle dill,"
Use `dill` instead of `pickle`",20,Serialization,Serialization,False,False
3915,rhayes777/PyAutoFit,7b62d0f09b3ec944dd1f555c498a2343e2105020,2021-04-07 10:13:33,dill,pickle,use dill instead of pickle,pickle dill,"
use dill instead of pickle",20,Serialization,Serialization,False,False
3916,saezlab/pypath,78af1531c793ff750c3956f0aa56ef208e63b036,2020-06-16 21:31:26,dill,pickle,core.annot: using dill instead of pickle; CustomAnnotation: including class definitions and excludes in dump,pickle dill,"
core.annot: using dill instead of pickle; CustomAnnotation: including class definitions and excludes in dump",20,Serialization,Serialization,False,False
3918,voxel51/eta,f1f3b6f83c083d4b375bd5bc86f14715defea3b5,2018-01-29 10:45:08,dill,pickle,changed the pickle import to dill as it is more robust and can handle instancemethods without any hacky code.  Still on the fence about the longterm utility of any pickler.  When a class's code changes so does the pickle need to.,pickle dill,"
changed the pickle import to dill as it is more robust and can handle instancemethods without any hacky code.
Still on the fence about the longterm utility of any pickler.",20,Serialization,Serialization,False,False
3919,Clinical-Genomics/scout,651b76b26bbb3e0beba064df163b6a2b594258b8,2016-01-04 12:39:42,click,notifications-python-client,Updated cli and added test for variant handling,notifications-python-client click,"
Updated cli and added test for variant handling",8,Utility,Utility,False,False
3920,azavea/keras-semantic-segmentation,140e7527ec297e58e31cd2ba39c2cb181806f73a,2017-09-29 18:41:29,click,notifications-python-client,"Refactor detection scripts for flexibility

* Put scripts into rv module
* Use click to create CLI
* Convert some options to arguments
* Various renaming for consistency
* Convert predict_ec2.sh to predict.py Python script
* Handle S3 URIs and local paths for convenience
* Remove path conventions and let user specify arbitrary paths
* Create VRT from set of TIFF files
* Make TFRecord using a set of training chip sets
* Add some inline documentation
* Update README",notifications-python-client click,"
* Put scripts into rv module
* Use click to create CLI
* Convert some options to arguments",8,Utility,Utility,False,False
3922,gammapy/gammapy,306495e366d2ec3a20295445dd55e9ea9f003ff1,2017-12-19 10:59:55,click,notifications-python-client,"Use click for main, info and checks cli",notifications-python-client click,"
Use click for main, info and checks cli",8,Utility,Utility,False,False
3925,quantumblacklabs/kedro,a60d791baf140d7c4e349c52d69d90b226c8408e,2020-05-18 10:40:08,click,notifications-python-client,[KED-1640] Moved CLI commands into framework (#592),notifications-python-client click,"
[KED-1640] Moved CLI commands into framework (#592)",8,Utility,Utility,False,False
3926,replit/replit-py,345075ae23783e434b17e563625631151e05f9aa,2021-01-30 00:56:33,click,notifications-python-client,"Replit-py 3.0.0 (#28)

* Add CLI for Repl DB interactions

Uses click to implement a simple CLI that allows users to interact with their Repl's DB from the shell / command line.

* Update Repl DB CLI

* Added ""nuke"" and ""del"" commands

* Remove redundancy in ""nuke"" command

* Fix flake8 errors, remove redundancies

* Fix flake8-dosctrings errors

* Try to fixity flake8 error

Fix fix fix

* Fix flake8

Remove unsafe eval, and fix flake8

* Redo the checks

* Final commit

* Squashed commit of the following:

commit 539d862b795923c1f0365e8519795448caea8726
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 22 00:06:45 2021 -0500

    html_theme = ""alabaster""

commit e44071621d102480936fb0e710fd9d2b26ad983f
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 18:04:47 2021 -0500

    alabaster

commit 889191efa62dbfe4cc1f269965efa27472079bd9
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 18:00:55 2021 -0500

    sphinx_autodoc_typehints

commit 182f943b6f714c883241385652f9651bf4c0c1ed
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 17:58:38 2021 -0500

    reqs

commit abc94ebe76a1cf87c22e9e2448e9b113c526ccc9
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 17:56:50 2021 -0500

    requirements

commit 702f7c21e0a8a99a07216e0e1802a869c2ad8e29
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 17:54:18 2021 -0500

    try this

commit d87f137eb1aeb17b4f9c5f279ca85972a5467154
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 17:50:29 2021 -0500

    http link

commit 9fa01e3301d6ea756c09dd42ec9e606c5fa1eda7
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 17:48:08 2021 -0500

    advancement

commit 1cc1229ad2f5940745abf5b2c8976da6a27b4b74
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Jan 21 11:23:41 2021 -0500

    repl class

commit 6bcadb10c1a8860843728d2391683ef8f8d69a9d
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 20 16:41:06 2021 -0500

    readthedocs

commit 4ad2a14a84ca56b45be82495fc3bfb4e8c922302
Merge: b017f9c fe10eca
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 20 16:40:29 2021 -0500

    Merge branch 'kr-cleanup' of github.com:kennethreitz42/replit-py into kr-cleanup

commit b017f9ceea5de12db2f198dfe641618e2dcf35af
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 20 16:40:20 2021 -0500

    things are clicking together

commit fe10eca0bc5051ae845d15303075981979651280
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 20 15:19:51 2021 -0500

    Update README.md

commit ea881fbac3d05aa3b9876914188da031c1637851
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 20 15:19:40 2021 -0500

    Update README.md

commit 99c7d5da14504bd80c0e629d747df6b45c2d2b54
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 20 15:19:22 2021 -0500

    Update README.md

commit ea39f082be7aee7a975b4e461671f5f6b02b7637
Merge: dd25d25 f066704
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Jan 18 20:41:55 2021 -0500

    Merge pull request #2 from Scoder12/patch-2

    Remove dtype stuff (for now)

commit f066704bbf7666042ed08a8fe16c1b9f22dcdf4a
Author: Scoder12 <34356756+Scoder12@users.noreply.github.com>
Date:   Mon Jan 18 16:40:42 2021 -0800

    Remove dtype stuff (for now)

commit dd25d253b48065be8d093667d5a8579352e491de
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Jan 11 11:08:22 2021 -0500

    version bumps (for now)

commit aa082a6532719121b4b96ee4802eed0b2f9ae4e6
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 8 10:27:43 2021 -0500

    cleanups

commit 8df3ccb66ba6a3884fdc67d90b98d306e159b2c8
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 8 09:53:03 2021 -0500

    cleanup users

commit 8ffaa85050661a32c2b1404abd66c0384c588ee9
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 8 09:26:22 2021 -0500

    black, etc.

commit 9562b1faec4c092e3793cf354398611b3db8c291
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 6 21:48:28 2021 -0500

    /s/flask_tools/web

commit 0d7e63c1ba9f7ecd071f424e71a34d83925c3586
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 6 21:48:09 2021 -0500

    poetry updates

commit a63b8b49126318c875d42e0f2aa0556f6c94f028
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Jan 4 08:16:27 2021 -0500

    docstrings, etc

commit c30662c0721885031ff7457d75b585dcb58d62d2
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Jan 4 08:14:57 2021 -0500

    users module is coming along

commit e7f06a708351b7566259fa512528a20ad2fe9ff0
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Jan 4 08:14:47 2021 -0500

    whitespace

commit 85f9776a5b2ef8112fb9a718ce8298952080871b
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 1 20:08:26 2021 +0000

    replit online development

commit 24f424a7afb656e197ad807a2f75855dbee7bcec
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 1 13:11:09 2021 -0500

    black formatting

commit a203828c1124519474c8ba6e9175770ade83d4a5
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 1 13:10:41 2021 -0500

    formatting

commit c43c6b30535e9e235083a28bfc2d430c873974a9
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 1 13:10:23 2021 -0500

    gitignore

commit eaa3af5fd5477dd563b65ecc2f4711934599fcea
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Jan 1 13:10:18 2021 -0500

    docs examples

commit 78a33262fea52bc3e9edc439fcbb26e836c2be68
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:33:54 2020 -0500

    docs test

commit 0f7484471004028049de95faedad0e89e65b6106
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:28:15 2020 -0500

    replit

commit 7aea6ab57f6e512f37a2bf06dc04ec381f87bebf
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:27:36 2020 -0500

    okay readme is good

commit 956363f8c506030e2864905dbf57bccf05a3dd3a
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:23:41 2020 -0500

    cleanup

commit 5cb7f58ce37d0479eecea2863cba188c90a04f19
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:19:22 2020 -0500

    module

commit 7696dfeb0c61c088be0a8ba4e7474cb16cf2fe3e
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:18:11 2020 -0500

    replit

commit a5066d2fd19cab2fe09e9b2ecd705c8e26c5cbf6
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:16:03 2020 -0500

    readme

commit b9e96600cd5aa374db5c49383cd6d220a7411c43
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 14:14:10 2020 -0500

    readme

commit 8a8e6b1cf60fd2e16293f1296fd55794afa8edbe
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:20:37 2020 -0500

    educational

commit c1362bd357a1b401cda1b72c3901df9300945e75
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:18:31 2020 -0500

    readme

commit 769996555d6d79bb0bb851eb990bf45e50135f06
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:18:16 2020 -0500

    & readme

commit 63922c7c2a0dd870d31b1c970af11f1a851fa15c
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:17:51 2020 -0500

    FOSS

commit a2b2de6f305bde66813c346d742338d6eafe2548
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:15:23 2020 -0500

    readme next

commit 2ba65b6a546bd00714329696c60e1f72ae89fcea
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:14:58 2020 -0500

    visual parsing of readme

commit fa793a98ffce0555c1aee8a2820d22d6ec6b2dfe
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:11:46 2020 -0500

    readme context

commit 3f301cef3f5b9ce1a6adc43b2cc5554983912ede
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:08:15 2020 -0500

    formatting

commit 16b9c5949ef5875798109343b0a659f404dd2c35
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:07:25 2020 -0500

    readme

commit 444c4c19e3c13844f386215f173368fbf06c5688
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:04:18 2020 -0500

    gitignore update

commit 96348423c7c5cdc1b90153d703d7e9d8df9eac6f
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:04:11 2020 -0500

    docs planning

commit 23d03cf4c61bc78b40b0ad5bd2d211d249e8252c
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:02:24 2020 -0500

    cleanup readme

commit 9925087d6b4209dc2fa7c8736ccecbbee0466e03
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 13:02:17 2020 -0500

    ignore pipfile

commit 7d4d889b2955a6eb73bd8cce3fdc55c0b84ad461
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Dec 31 12:59:20 2020 -0500

    readme

commit 6034f21a9c9c9fab7cefceca54ec11cf109d1521
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Dec 30 18:00:25 2020 -0500

    >>>

commit ce981f025c9f293948f3562aee257b5d24831ef0
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Dec 30 17:49:32 2020 -0500

    ISC liscence

commit b553f496007f711c4e40dc0d644cfc3c17a38bf6
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Dec 30 17:49:20 2020 -0500

    readme

commit 2d1afbfbe1e76049f42cb0947aefb07a4eee7c64
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Dec 30 16:45:31 2020 -0500

    TODO

commit 82a02e3f37d136c987c1b685678908dd95c38f3f
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Dec 30 16:45:27 2020 -0500

    README

* black

* flake8

* import aiohttp

* dtype

* dtype

* dtype

* .flake8 fixes

* .flake8 fixes

* black

* ..sure

* # flake8: noqa

* Merge branch 'patch-1' of https://github.com/frissyn/replit-py into kr-contract

* flake8 changes

* flake8

* black

* flake8 (fingers crossed, last one?)

* flake8

* _termutils.py

* remove _termutils

* Remove outdated references to _is_valid_type...

and update associated docstrings

* Remove outdated termutils import

* Fix termutils import

* flake8: import order and add docstring

* Temporary: add missing import

* Revert ""Temporary: add missing import""

This reverts commit a0d62a2cc6f2544333b931ccc0444ab36fd3ba39.

Co-authored-by: IreTheKID <62220201+IreTheKID@users.noreply.github.com>
Co-authored-by: Codemonkey51 <62217716+Codemonkey51@users.noreply.github.com>
Co-authored-by: Scoder12 <34356756+Scoder12@users.noreply.github.com>",notifications-python-client click,"
Uses click to implement a simple CLI that allows users to interact with their Repl's DB from the shell / command line.",8,Utility,Utility,False,False
3927,Clinical-Genomics/scout,04e75c85621079e8d16e95c492cda5b613b24127,2019-12-03 11:13:13,pathlib,path,"Fix path dependency problem (#1567)

* import Path from pathlib and dont use path at all

* updated changelog

* test again ensembl services",path pathlib,"
Fix path dependency problem (#1567)",7,Filesystem,Filesystem,False,False
3928,Flexget/Flexget,cea9535610ebce66d445f3852e507a28051dfe64,2019-11-08 21:24:40,pathlib,path,"[change] Dropping python2 support

* removed deps

* started refactoring files

* more files

* even more files

* some more

* avoids circular import?

* removed redundant circleci jobs

* fixed paths usage

* fixed more stuff

* hopefully fixed exist movie

* made regex string raw

* removed basestring

* fixed plugin loading

* corrected is_dir

* fixed remove

* removed all future calls, hopefully

* fixed another path usage

* fixed rtorrent tests

* fixed more stuff

* fixed pathlib api

* added missing import

* fixed some failures

* fixed exist movie

* fixed filesystem

* fixed html

* fixed rtorrent

* fixed server api

* ran black

* fixed archive test

* handled deprecations

* updated rebulk

* fixed inline markers

* removed all future and builtins

* converted super to py3 style

* ran autoformat

* fixed import and set file to skip via isort

* added more ignore to isort

* moved base and session up as well

* updated setup.py and version",path pathlib,"
* fixed paths usage",7,Filesystem,Filesystem,False,False
3929,TankerHQ/tbump,0eb1fa8fa30d2ecd0c035af594cca3ca9ba28d70,2020-11-24 10:17:11,pathlib,path,Replace usage of path.py with the pathlib module from the stdlib,path pathlib,"
Replace usage of path.py with the pathlib module from the stdlib",7,Filesystem,Filesystem,False,False
3930,TankerHQ/tsrc,bf854c38bae419dba70239c8bdee1a79317ddfcb,2020-11-23 16:50:13,pathlib,path,Replace path pie with pathlib from stdlib,path pathlib,"
Replace path pie with pathlib from stdlib",7,Filesystem,Filesystem,False,False
3931,ipython/ipython,cf3101a4f0da338b5fbce61c0bf02dec8539be0f,2016-04-19 10:12:08,pathlib,path,"use pathlib for utils.text.paths

instead of path.py",path pathlib,"
use pathlib for utils.text.paths",7,Filesystem,Filesystem,False,False
3933,rafalp/Misago,36eb45c4af65435ba8abc6fe907be89a7b2f78c6,2018-11-02 14:49:33,pathlib,path,Replace path.py with build-in pathlib,path pathlib,"
Replace path.py with build-in pathlib",7,Filesystem,Filesystem,False,False
3934,Clinical-Genomics/scout,04e75c85621079e8d16e95c492cda5b613b24127,2019-12-03 11:13:13,pathlib,path.py,"Fix path dependency problem (#1567)

* import Path from pathlib and dont use path at all

* updated changelog

* test again ensembl services",path.py pathlib,"
Fix path dependency problem (#1567)",7,Filesystem,Filesystem,False,False
3935,Flexget/Flexget,cea9535610ebce66d445f3852e507a28051dfe64,2019-11-08 21:24:40,pathlib,path.py,"[change] Dropping python2 support

* removed deps

* started refactoring files

* more files

* even more files

* some more

* avoids circular import?

* removed redundant circleci jobs

* fixed paths usage

* fixed more stuff

* hopefully fixed exist movie

* made regex string raw

* removed basestring

* fixed plugin loading

* corrected is_dir

* fixed remove

* removed all future calls, hopefully

* fixed another path usage

* fixed rtorrent tests

* fixed more stuff

* fixed pathlib api

* added missing import

* fixed some failures

* fixed exist movie

* fixed filesystem

* fixed html

* fixed rtorrent

* fixed server api

* ran black

* fixed archive test

* handled deprecations

* updated rebulk

* fixed inline markers

* removed all future and builtins

* converted super to py3 style

* ran autoformat

* fixed import and set file to skip via isort

* added more ignore to isort

* moved base and session up as well

* updated setup.py and version",path.py pathlib,"
* fixed paths usage",7,Filesystem,Filesystem,False,False
3936,TankerHQ/tbump,0eb1fa8fa30d2ecd0c035af594cca3ca9ba28d70,2020-11-24 10:17:11,pathlib,path.py,Replace usage of path.py with the pathlib module from the stdlib,path.py pathlib,"
Replace usage of path.py with the pathlib module from the stdlib",7,Filesystem,Filesystem,False,False
3937,TankerHQ/tsrc,bf854c38bae419dba70239c8bdee1a79317ddfcb,2020-11-23 16:50:13,pathlib,path.py,Replace path pie with pathlib from stdlib,path.py pathlib,"
Replace path pie with pathlib from stdlib",7,Filesystem,Filesystem,False,False
3938,ipython/ipython,cf3101a4f0da338b5fbce61c0bf02dec8539be0f,2016-04-19 10:12:08,pathlib,path.py,"use pathlib for utils.text.paths

instead of path.py",path.py pathlib,"
use pathlib for utils.text.paths",7,Filesystem,Filesystem,False,False
3940,rafalp/Misago,36eb45c4af65435ba8abc6fe907be89a7b2f78c6,2018-11-02 14:49:33,pathlib,path.py,Replace path.py with build-in pathlib,path.py pathlib,"
Replace path.py with build-in pathlib",7,Filesystem,Filesystem,False,False
3946,CloudBotIRC/CloudBot,e0d2864845bf25d064fe6074b8ec52bab9e52acc,2014-08-14 12:14:38,bs4,beautifulsoup,"Implement nasonfish's fixes:

"".renderContents()"" -> "".string"" - fixes an encoding issue,
""from BeautifulSoup"" -> ""from bs4"" - fixes incorrect import, and
Adds a line to the help file mentioning where the word is from.",beautifulsoup bs4,"
"".renderContents()""  laifuhewb  "".string"" - fixes an encoding issue,
""from BeautifulSoup""  laifuhewb  ""from bs4"" - fixes incorrect import, and
Adds a line to the help file mentioning where the word is from.",10,HTML,HTML,False,False
3948,cfpb/cfgov-refresh,3262610155669294fa5b79c108b6a244d9d03cbc,2016-03-23 17:20:49,bs4,beautifulsoup,"Add script to parse through data for external links to search through ES data

- Add script to all processors
- Refactor script to use new version of Beautiful Soup
- Update requirements to use bs4",beautifulsoup bs4,"
- Add script to all processors
- Refactor script to use new version of Beautiful Soup
- Update requirements to use bs4",10,HTML,HTML,False,False
3949,datalad/datalad,5f6480de298c776f9fbcb25c84f4c77ebe9e83f2,2013-07-31 18:13:51,bs4,beautifulsoup,"ENH: use bs4 for BeautifulSoup, pass bs4's links and other stuff into evals",beautifulsoup bs4,"
ENH: use bs4 for BeautifulSoup, pass bs4's links and other stuff into evals",10,HTML,HTML,False,False
3979,CloudVE/cloudbridge,d95f9f2044e4038d9f0100e7cc6e9cc784e072f4,2019-01-18 20:51:20,tenacity,retrying,KeyPair decoding fix & replacing Retrying with tenacity,retrying tenacity,"
KeyPair decoding fix & replacing Retrying with tenacity",25,Utility,Utility,False,False
3980,DataBiosphere/dsub,c89dc88b8e15a8c59a3b8821de7f25e48f8ee3c5,2020-10-14 20:57:32,tenacity,retrying,"Use ""tenacity"" library instead of ""retrying"" library for API retries.

Only emit messages:
  - Every 5th failure
  - When we give up
  - Indicating retry success (if we've emitted a message that we are retrying)

PiperOrigin-RevId: 332108301",retrying tenacity,"
Use ""tenacity"" library instead of ""retrying"" library for API retries.",25,Utility,Utility,False,False
3981,DataDog/integrations-core,51b6fef9f91af89218e04181990d11023f38c5f0,2020-04-24 14:47:04,tenacity,retrying,Use tenacity instead of retrying library (#6472),retrying tenacity,"
Use tenacity instead of retrying library (#6472)",25,Utility,Utility,False,False
4002,plotly/plotly.py,6bf58497380e3a53cfbc902fef8f3ce4ace4a8ac,2021-04-22 11:45:38,tenacity,retrying,"Replaced 'retrying' dependency with 'tenacity' in plotly package (#2911)

* replaced retrying dependency with tenacity in plotly package

Co-authored-by: jmsmdy <jmsmdy@gmail.com>",retrying tenacity,"
Replaced 'retrying' dependency with 'tenacity' in plotly package (#2911)",25,Utility,Utility,False,False
4005,DataDog/dd-agent,5d222ac66d0a11c392183de19dca71e730d4d806,2014-03-24 20:23:58,pg8000,psycopg2,"Use pg8000 instead of psycopg2

See #877",psycopg2 pg8000,"
Use pg8000 instead of psycopg2",5,Database,Database,False,False
4008,scalyr/scalyr-agent-2,52922ca3187bb5677748df35d7a57c080e2f33e7,2015-01-28 11:24:38,pg8000,psycopg2,typo and use pg8000 instead of psycopg2,psycopg2 pg8000,"
typo and use pg8000 instead of psycopg2",5,Database,Database,False,False
4010,DataDog/dd-agent,5d222ac66d0a11c392183de19dca71e730d4d806,2014-03-24 20:23:58,pg8000,psycopg2-binary,"Use pg8000 instead of psycopg2

See #877",psycopg2-binary pg8000,"
Use pg8000 instead of psycopg2",5,Database,Database,False,False
4013,scalyr/scalyr-agent-2,52922ca3187bb5677748df35d7a57c080e2f33e7,2015-01-28 11:24:38,pg8000,psycopg2-binary,typo and use pg8000 instead of psycopg2,psycopg2-binary pg8000,"
typo and use pg8000 instead of psycopg2",5,Database,Database,False,False
4016,celery/celery,9b39fc41998c708c6612f0c7bf4393bf48f72e9b,2019-01-07 16:02:53,cryptography,pyopenssl,"Improved message signing (fixed #5056) (#5091)

* FIX: Check for sane security settings when using app.setup_security()

for celery/celery#5056

* FIX: Catch ContentDisallowed Error to prevent worker from crashing

for celery/celery#5056

* FIX: Deprecation Warning for pyOpenSSL Certificate verify expects bytes, not str

celery/celery/security/certificate.py:46: DeprecationWarning: str for data is no longer accepted, use bytes

* FEATURE: Add Example Secure App

* FEATURE: Update Configuration and Unittests

* Default Security Digest is now sha256
* Updated Unittests

* FIX: reenable auth tests

* FIX: Catch Decode and ContentDisallowed error for the gossip protocol

for celery/celery#5056

* DOCS: Add some docs about security_digest

* FIX: Remove security digest from example app

* DOCS: rst reference for security_digest

* FIX: repair failing test case

* key and cert was an empty string ''
* kill side effects of setup_security() by restore default serializer json (instead of auth)

* FEATURE: add integration test for security

* FEATURE: replace pyOpenSSL with cryptography

for celery/celery#5056

* FIX: integration test generates own cert/keys

* FIX: remove type hints because it only works for python3

* FIX: enable extras/auth.txt for integration tests

* CLEANUP: remove pyOpenSSL, add cryptography to requirements and restore original app exapmle

* FIX: Restore bytes_if_py2 for security digest

in python2.7, the openssl lib function
`_lib.EVP_get_digestbyname(_byte_string(digest))`
expects a bytes not unicode.

* FIX: Add extras/auth.txt to test-ci-base.txt for TOXENV=pypy-unit PYPY_VERSION=""pypy2.7-6.0.0""

* FIX: security integration test now uses pytest fixtures

* FIX: Update Example ssl cert location

* DOC: Clarify bit shift 3

* STYLE: flake, apicheck and pydocstyle

* DOC: replace openssl in documentation with cryptography

* Reduce offset calculations.

* Fix off by sep_len.

* Fix error.

* TESTS: enable `result_accept_content` for security integration tests

re-trigger travis

* Mark as xfail for now.",pyopenssl cryptography,"
* FEATURE: replace pyOpenSSL with cryptography",14,HTTP Clients&Crypto,HTTP Clients,False,False
4020,moepman/acertmgr,4766102874b2df3a522bff4f3128f34d7f1b2350,2019-01-07 19:01:17,cryptography,pyopenssl,"Switch from pyopenssl to cryptography

The cryptography module is already a dependency of pyopenssl.
This patch thus just drops the dependency on pyopenssl
and somewhat simplifies the code.",pyopenssl cryptography,"
Switch from pyopenssl to cryptography",14,HTTP Clients&Crypto,HTTP Clients,False,False
4026,pallets/werkzeug,84c98f2d57406495f9c577dd5ddbf34e54bb55f6,2019-07-12 20:58:31,cryptography,pyopenssl,"use cryptography instead of pyOpenSSL

pyOpenSSL is only a wrapper around cryptography now. It recommends
using cryptography directly for our use case.",pyopenssl cryptography,"
use cryptography instead of pyOpenSSL",14,HTTP Clients&Crypto,HTTP Clients,False,False
4035,capitalone/cloud-custodian,12e3e8084ddb2e7f5ccbc5ea3c3bd3e4c7e9c207,2020-04-04 15:02:47,pyyaml,ruamel.base,tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521),ruamel.base pyyaml,"tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521)
",8,Serialization,Serialization,False,False
4036,chanzuckerberg/miniwdl,7dc53ecd4536f6326f0a9bd09be62ec244757113,2021-04-16 20:55:09,pyyaml,ruamel.base,"switch ruamel.yaml to PyYAML

which now (unlike before) appears to be the more-alive of the two",ruamel.base pyyaml,"
switch ruamel.yaml to PyYAML",8,Serialization,Serialization,False,False
4037,demisto/demisto-sdk,e58941e608324e8649503a660f290071beeedbda,2020-03-15 19:03:02,pyyaml,ruamel.base,reverted loading with yaml and not ryaml,ruamel.base pyyaml,"
reverted loading with yaml and not ryaml",8,Serialization,Serialization,False,False
4038,projectsyn/commodore,2375c6787ca55c72d5e0cc407669630c668a90ec,2019-11-04 17:04:40,pyyaml,ruamel.base,"Switch from ruamel.yaml to PyYAML

Kubernetes uses YAML 1.1 but doesn't recognize the `%YAML 1.1`
directive.
`ruamel.yaml` defaults to YAML 1.2 and doesn't have a simple way to
configure the dump functionality to produce YAML 1.1 without adding
`%YAML 1.1` in the output.

We switch to PyYAML, as that implementation is YAML 1.1 compliant which
avoids compatibility issues between Kubernetes and Commodore.",ruamel.base pyyaml,"
Switch from ruamel.yaml to PyYAML",8,Serialization,Serialization,False,False
4039,quiltdata/quilt-compiler,29c6251ebc7a56040e2ae358d146894f69a35b07,2020-02-28 08:04:23,pyyaml,ruamel.base,switch ruamel to pyyaml parser,ruamel.base pyyaml,"
switch ruamel to pyyaml parser",8,Serialization,Serialization,False,False
4041,spdx/tools-python,ac6ed5d2dda65449040694f6954612702c039dbf,2019-08-23 02:37:22,pyyaml,ruamel.base,"Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.

Signed-off-by: Xavier Figueroa <xavierfigueroav@gmail.com>",ruamel.base pyyaml,"
Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.",8,Serialization,Serialization,False,False
4043,capitalone/cloud-custodian,12e3e8084ddb2e7f5ccbc5ea3c3bd3e4c7e9c207,2020-04-04 15:02:47,pyyaml,ruamel.ordereddict,tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521),ruamel.ordereddict pyyaml,"tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521)
",8,Serialization,Serialization,False,False
4044,chanzuckerberg/miniwdl,7dc53ecd4536f6326f0a9bd09be62ec244757113,2021-04-16 20:55:09,pyyaml,ruamel.ordereddict,"switch ruamel.yaml to PyYAML

which now (unlike before) appears to be the more-alive of the two",ruamel.ordereddict pyyaml,"
switch ruamel.yaml to PyYAML",8,Serialization,Serialization,False,False
4045,demisto/demisto-sdk,e58941e608324e8649503a660f290071beeedbda,2020-03-15 19:03:02,pyyaml,ruamel.ordereddict,reverted loading with yaml and not ryaml,ruamel.ordereddict pyyaml,"
reverted loading with yaml and not ryaml",8,Serialization,Serialization,False,False
4046,projectsyn/commodore,2375c6787ca55c72d5e0cc407669630c668a90ec,2019-11-04 17:04:40,pyyaml,ruamel.ordereddict,"Switch from ruamel.yaml to PyYAML

Kubernetes uses YAML 1.1 but doesn't recognize the `%YAML 1.1`
directive.
`ruamel.yaml` defaults to YAML 1.2 and doesn't have a simple way to
configure the dump functionality to produce YAML 1.1 without adding
`%YAML 1.1` in the output.

We switch to PyYAML, as that implementation is YAML 1.1 compliant which
avoids compatibility issues between Kubernetes and Commodore.",ruamel.ordereddict pyyaml,"
Switch from ruamel.yaml to PyYAML",8,Serialization,Serialization,False,False
4047,quiltdata/quilt-compiler,29c6251ebc7a56040e2ae358d146894f69a35b07,2020-02-28 08:04:23,pyyaml,ruamel.ordereddict,switch ruamel to pyyaml parser,ruamel.ordereddict pyyaml,"
switch ruamel to pyyaml parser",8,Serialization,Serialization,False,False
4049,spdx/tools-python,ac6ed5d2dda65449040694f6954612702c039dbf,2019-08-23 02:37:22,pyyaml,ruamel.ordereddict,"Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.

Signed-off-by: Xavier Figueroa <xavierfigueroav@gmail.com>",ruamel.ordereddict pyyaml,"
Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.",8,Serialization,Serialization,False,False
4053,capitalone/cloud-custodian,12e3e8084ddb2e7f5ccbc5ea3c3bd3e4c7e9c207,2020-04-04 15:02:47,pyyaml,ruamel.yaml,tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521),ruamel.yaml pyyaml,"tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521)
",11,Serialization,Serialization,False,False
4054,chanzuckerberg/miniwdl,7dc53ecd4536f6326f0a9bd09be62ec244757113,2021-04-16 20:55:09,pyyaml,ruamel.yaml,"switch ruamel.yaml to PyYAML

which now (unlike before) appears to be the more-alive of the two",ruamel.yaml pyyaml,"
switch ruamel.yaml to PyYAML",11,Serialization,Serialization,False,False
4055,demisto/demisto-sdk,e58941e608324e8649503a660f290071beeedbda,2020-03-15 19:03:02,pyyaml,ruamel.yaml,reverted loading with yaml and not ryaml,ruamel.yaml pyyaml,"
reverted loading with yaml and not ryaml",11,Serialization,Serialization,False,False
4056,mlspec/mlspec-lib,ea3612e5f46387368c729cc5ad0aa940e1dda30c,2020-04-15 19:22:08,pyyaml,ruamel.yaml,updated tests for two new schema and yaml scanner errors,ruamel.yaml pyyaml,"
updated tests for two new schema and yaml scanner errors",11,Serialization,Serialization,False,False
4057,projectsyn/commodore,2375c6787ca55c72d5e0cc407669630c668a90ec,2019-11-04 17:04:40,pyyaml,ruamel.yaml,"Switch from ruamel.yaml to PyYAML

Kubernetes uses YAML 1.1 but doesn't recognize the `%YAML 1.1`
directive.
`ruamel.yaml` defaults to YAML 1.2 and doesn't have a simple way to
configure the dump functionality to produce YAML 1.1 without adding
`%YAML 1.1` in the output.

We switch to PyYAML, as that implementation is YAML 1.1 compliant which
avoids compatibility issues between Kubernetes and Commodore.",ruamel.yaml pyyaml,"
Switch from ruamel.yaml to PyYAML",11,Serialization,Serialization,False,False
4058,quiltdata/quilt-compiler,29c6251ebc7a56040e2ae358d146894f69a35b07,2020-02-28 08:04:23,pyyaml,ruamel.yaml,switch ruamel to pyyaml parser,ruamel.yaml pyyaml,"
switch ruamel to pyyaml parser",11,Serialization,Serialization,False,False
4060,spdx/tools-python,ac6ed5d2dda65449040694f6954612702c039dbf,2019-08-23 02:37:22,pyyaml,ruamel.yaml,"Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.

Signed-off-by: Xavier Figueroa <xavierfigueroav@gmail.com>",ruamel.yaml pyyaml,"
Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.",11,Serialization,Serialization,False,False
4064,capitalone/cloud-custodian,12e3e8084ddb2e7f5ccbc5ea3c3bd3e4c7e9c207,2020-04-04 15:02:47,pyyaml,ruamel.yaml.clib,tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521),ruamel.yaml.clib pyyaml,"
tools/c7n_mailer - switch ruamel dependency to pyyaml (#5521)",11,Serialization,Serialization,False,False
4065,chanzuckerberg/miniwdl,7dc53ecd4536f6326f0a9bd09be62ec244757113,2021-04-16 20:55:09,pyyaml,ruamel.yaml.clib,"switch ruamel.yaml to PyYAML

which now (unlike before) appears to be the more-alive of the two",ruamel.yaml.clib pyyaml,"
switch ruamel.yaml to PyYAML",11,Serialization,Serialization,False,False
4066,demisto/demisto-sdk,e58941e608324e8649503a660f290071beeedbda,2020-03-15 19:03:02,pyyaml,ruamel.yaml.clib,reverted loading with yaml and not ryaml,ruamel.yaml.clib pyyaml,"
reverted loading with yaml and not ryaml",11,Serialization,Serialization,False,False
4067,mlspec/mlspec-lib,ea3612e5f46387368c729cc5ad0aa940e1dda30c,2020-04-15 19:22:08,pyyaml,ruamel.yaml.clib,updated tests for two new schema and yaml scanner errors,ruamel.yaml.clib pyyaml,"
updated tests for two new schema and yaml scanner errors",11,Serialization,Serialization,False,False
4068,projectsyn/commodore,2375c6787ca55c72d5e0cc407669630c668a90ec,2019-11-04 17:04:40,pyyaml,ruamel.yaml.clib,"Switch from ruamel.yaml to PyYAML

Kubernetes uses YAML 1.1 but doesn't recognize the `%YAML 1.1`
directive.
`ruamel.yaml` defaults to YAML 1.2 and doesn't have a simple way to
configure the dump functionality to produce YAML 1.1 without adding
`%YAML 1.1` in the output.

We switch to PyYAML, as that implementation is YAML 1.1 compliant which
avoids compatibility issues between Kubernetes and Commodore.",ruamel.yaml.clib pyyaml,"
Switch from ruamel.yaml to PyYAML",11,Serialization,Serialization,False,False
4069,quiltdata/quilt-compiler,29c6251ebc7a56040e2ae358d146894f69a35b07,2020-02-28 08:04:23,pyyaml,ruamel.yaml.clib,switch ruamel to pyyaml parser,ruamel.yaml.clib pyyaml,"
switch ruamel to pyyaml parser",11,Serialization,Serialization,False,False
4071,spdx/tools-python,ac6ed5d2dda65449040694f6954612702c039dbf,2019-08-23 02:37:22,pyyaml,ruamel.yaml.clib,"Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.

Signed-off-by: Xavier Figueroa <xavierfigueroav@gmail.com>",ruamel.yaml.clib pyyaml,"
Replace ruamel.yaml by PyYAML as a dependency for handling YAML format.",11,Serialization,Serialization,False,False
4083,CoreSecurity/impacket,acc7a046727ea81bb27fafcb90e95bb359eb5ad4,2016-06-14 16:02:09,httplib,requests,"Using httplib instead of requests plus error fixings

* httplib comes by default, much better than requiring another dependency
* Removed debug messages
* Fixed minor errors",requests httplib,"
Using httplib instead of requests plus error fixings",3,HTTP Clients,HTTP Clients,False,False
4091,pypeclub/pype,b3321a92ee4c0b05df0bd3f08684fcd632696f80,2020-01-09 22:06:57,pathlib2,pathlib,fix(global): pathlib changed to pathlib2,pathlib pathlib2,"
fix(global): pathlib changed to pathlib2",8,Filesystem,Filesystem,False,False
4092,python-pillow/Pillow,7e8a6c61f8550095a8c171678c955dc08d0d0976,2016-12-17 17:50:50,pathlib2,pathlib,"Use pathlib2 for Path objects on Python < 3.4

The pathlib backport module is no longer maintained. The development
has moved to the pathlib2 module instead.

Quoting from the pathlib's README:
""Attention: this backport module isn't maintained anymore. If you want
to report issues or contribute patches, please consider the pathlib2
project instead.""

Other projects have already switched to pathlib2, most notably IPython
and its dependencies.",pathlib pathlib2,"
Use pathlib2 for Path objects on Python < 3.4",8,Filesystem,Filesystem,False,False
4103,UNINETT/nav,93a38183ad0d9874d83778c1a32e5b54452d7dca,2009-04-03 10:24:54,psycopg2,psycopg,"Replace all references to psycopg in Python code with psycopg2.
Also, remove psycopg imports that aren't used.",psycopg psycopg2,"
Replace all references to psycopg in Python code with psycopg2.",7,Database,Database,False,False
4110,UNINETT/nav,93a38183ad0d9874d83778c1a32e5b54452d7dca,2009-04-03 10:24:54,psycopg2-binary,psycopg,"Replace all references to psycopg in Python code with psycopg2.
Also, remove psycopg imports that aren't used.",psycopg psycopg2-binary,"
Replace all references to psycopg in Python code with psycopg2.",7,Database,Database,False,False
4123,pinterest/snappass,13f294cae5e1f30e4f6c4fa6ce6c356d2bdcb236,2018-05-07 15:21:07,werkzeug,urllib,Use werkzeug quote/unquote functions instead of urllib,urllib werkzeug,"
Use werkzeug quote/unquote functions instead of urllib",4,HTTP Clients&Web Framework,HTTP Clients,False,False
4179,DDMAL/Rodan,914d5ec3abaa17d0aaa83e794d0f225f97e24e59,2020-09-30 21:08:08,django,redis,"Merge Develop (#548)

* Renamed production.env, consistent with rodan-docker.

* Added: Gunicorn and Celery environment variables.

* Added: Admin url as an environment variable

* Revert ""Add support for RODAN_NON_INTERACTIVE in load.py.""

We do not need to perform this action in rodan-docker anymore since removing configure.

This reverts commit 458cd0309dac55d5855b951a63023dcb6d8986cc.

* [WIP] Added: SSL Certificates to Rodan. (#474)

* Added: SSL and domain vars [WIP]

* Added information about the redis configuration.

* Fixed: Redis DB env typo and django logger level.

* Added: Base Superuser account, defined in env file.

* Fixed: Admin env variable typo.

* Fixed: Have iipserver hit the nginx service inside docker.

* Removed: Trailing whitespace from env-files.

* Removed: Cleaned websocket whitespace.

* Added: httpport for websocket [WIP] see description.

Still debating between using a unix socket in a docker volume (not a bind mount) or using http requests between containers to make this work. Right now, i'm using http requests to test. Unix sockets should be faster or not depending on how docker volumes update each other.

* Added: Django environ.

* Added: Static files for collection.

* Modified: Unified the codestyle in settings.py

* Updated: python-dateutil.

* Updated multiple dependencies, and made the code uniform through the entire project. (#476)

* Modified: Black-ed all the code.

Too many developers did not keep the same coding style, all pages are divided in two or three different styles, python black will take care of the minutiae of the formatting.

* Added: More detailed documentation in settings.py.

* Modified: Reorganized admin, debug and test runner in settings.py

* Added: Django-environ.

* Added: Staticfiles for gunicorn.

* Fixed: typos in settings.py

* [WIP] dateutil.

* Removed: Tornado is not being used anymore in this project.

* Updated: Django to 1.8.19

* Updated: PyYaml

* Updated gunicorn.

* Alphabetized [Temporary, sort them by usage later.]

* Updated: pillow to 5.2.0.

* [WIP] Removed paramiko and flower, see description.

They are not used and not setup. Flower would be helpful in the future, let's make the app work before adding other elements.

* Updated: Django rest framework to 3.3.0.

* Fixed: Removed django 1.7 (python < 2.7) compatibility with REST.

* [WIP] - Allow all cors in django.

* Added: Travis build, test, and notifications.

* Removed: Redis is already defined in requirements.

* Fixed: psycopg2 and travis build setting.

* Added: Environment variables to the build.

* Added: Start the postgres server.

* Modified: Hostname for travis.

* Removed: Jobs from settings.py.

It is better to have them added to the Rodan docker process, instead of having them here.

* Added: Python redis for travis.

Force install redis outside of virtual env for travis.

* Fixed: Redis server address for travis.

* Added: https for iipsrv.

* Fixed: xargs, not a valid identifier.

* Modified: Renaming folder structure in docker.

* Fixed: django env arrays require unicode.

* Added: pil-rodan and uncommented other unittests.

* Added: contrib.session to settings.py

* Fixed: wrong dir in travis.

* Modified: helloworld rodan_job version example.

* Modified: [WIP] There is an issue with using travis/docker/env_file together for django.

* Fixed: typo in staging.env

* Modified: Permissions.

* Updated: Copyright version.

* Fixed: postgres naming convention.

* Fixed: Missing renaming env

* Modified: env variable for postgres

* Updated: CORS headers.

* Removed: theano env variable.

* Added: RabbitMQ env variable.

* Fixed: Path issues with gunicorn

* Modified: Reformated django test

* Modified: Input/output port types. See description [WIP]

The input and output ports on a job are very volatile during development. For this reason, the ability to change the name of an input/output port has been added to their models. Jobs will remain in the workflows, but a check should be added to  workflowjobs when `input_port_types` and `output_port_types` are removed. (It should repopulate the correct value automatically)

* Modified: Refactored RD, Rodan, and Celery

* Modified: Updated dependencies

* Modified: Removed CORS methods

* Fixed: test_post_image

* Fixed: travis/docker log directory separation

* Modified: Formatting

* Moved: Env files to docker repo.

To avoid having to fetch the rodan submodule, the template env file has been moved to the docker repository.

* Fixed: Rodan settings bool

* Added: Set env vars for travis build

* Added: Django Healthchecks

* Fixed: Debug bool default

* Modified: should view API in prod

* Modified: middleware messages

* Update: Flower

* Fixed: Resource Routing

* Update .gitignore

* Removed: Static files

There are symbolic links and static files that are no longer used in Rodan. They were kept in the repository for documentation, but now are not useful any longer.

* . whitespace

* Removed: pil-rodan from job packages

Rodan does not use submodules, but it also will not work without pil-rodan. This adjustment changes that. The installation process is outside of rodan, and inside the docker build. Rodan should work on its own, but some unittests will not work without pil-rodan. Adjustments need to be made accordingly to the docker build.

* Delete .gitmodules

* Update resourcelist.py

Removed the null field on Many to Many model because it has no effect. But it does produce a warning.

* Created: job_queue routing

* Added: Job_queue Auto Population in DB

The job_queue field in the database now gets populated by the rodan_jobs themselves and settings are saved in the DB.

* Added: job_queue description in models definition

* Update .gitignore with pixel_wrapper

* Modified: Print to print function

* Init: Modify database with job_queue and resourcelist manytomany field

* Modified: iteritems to items

items() is inefficient on python2, but once gamera is finally ported to python3 and we no longer need to support python2 this will not be an issue anymore.

* Fixes: thread vs. threading defenition

* Fixes: Relative import for diva_generate_json

* Fixes: Mixed tab/space indents

* Fixes: input compatibility

* Modified: Do not require all job installations for individual celery queues.

The main celery queue needs all jobs installed, this is very important.

* Removed: Unused dependencies from requirements.txt

* Updated: django-websocket-redis

* Updated: Flower

The old version of Flower created issues with the python3 installation of Rodan.

https://github.com/mher/flower/issues/878

* Modified: Multiple django hosts

There are some issues with passing [ ] ' "" through environment variables. Instead we create the list dynamically with the added benefit of hosting over multiple domains should we need it.

* Added: New jobs to gitignore

* Added: HelloWorld with python3

Removed the interactive helloworld job until it is fixed.

* Moved: Rodan Core jobs to celery

* Update .travis.yml

* Fixed: Resultspackage require a packing_mode

* Added: Travis-Slack integration

* Added: Now able to create resources from a script

* Added setTimeout() method to close function so text file can save and job can complete

* Added: Added JPEG2000 type because of Kakadu

* Modified: Restructured settings for job queues

The rodan core image must have ALL rodan jobs listed in settings.py, because it loads all the jobs into the database.

Python2 jobs can not be in the python3 list because it will try to load them anyway and crash. This is only important when working as a volume mount of the rodan folder into the docker containers. When the containers are up, it does not matter very much because they each have their own settings.py anyway (different containers, different fs).

* Added: Tim's jobs to the gitignore

* Update .travis.yml

* Modified: Make create_diva not rely on pil-rodan

* Modified: no longer required to read temp data for KG

* Fixed: Project and Files field must be specified

* Update .travis.yml

* Update .travis.yml

* Hard coded pybagit path

* Added OpenJPEG for diva creation

* Force mastertask to take celery queue

* Fixed formatting

* Update workflowrun.py

* Update core.py

* Update settings.py

* Fixes: extensions are removed from upload

* Update resource.py

* Update resource.py

* Fixed: unreferenced attribute

* Fix outdated error messages in resource assignment tests

* Adapt wfrun creation logic to handle multiple resource collections

* Validate multiple same-length collections during wfrun creation

* Add new hello world job supporting multiple ports

* Add test case for creation on multiple resource collections

* Modified: Return error response when deleting resource has failed.

* Use a ResourceSerializer when deleting a resource

We need to give some information on the resource we are deleting when
responding to client so use a ResourceSerializer to do that.

* Move resource types to Rodan itself.

This can be accompanied by deleting the resource_tyeps.yaml files in the
various jobs. Ideally this should make the Python 3 container run
properly since it (and any other container) has access to all resource
type definitions without needing the jobs to be loaded.

* Update requirements.txt

* .

* Fixed: django filters

* Fix urls

* Fixed: Templates

* Fixed: Serializer fileds

* Add listing for hpc-fast-trainer to settings.py

* [STUB] django-guardian/django-extesions update

* Fixed: test_get_list from connection api

objects.all returns a Queryset in django 1.11
            self.assertEqual(str(response_connections), str(Connection.objects.all())) would not work

* sort imports

* Added: Filetype identification

* Update year

* Update .gitignore

* Added: Flake8

* .

* Create alter_rodan_job.py

* Updated: DRF to 3.5.4 and django-filter 1.1.0

* Update .travis.yml

* Travis-Unittest

There are two unitest that always fail on travis an not locally.

* .

* Update .flake8

* [STUB]

* Update test_workflowrun.py

* .

* Added: Test files to filetype ident

* Split in handler.

* Added: Json test

* Update load.py

* Fixed bare exception

* Fixed: Travis check

* Fixed: Resource Identification

* Updated: Model-mommy

* Updated: DRF

* Updated: Gunicorn

* Update helpers.py

* Update resource_identification.py

* Update resource_identification.py

* Update resource_identification.py

* Updated: Django-guardian

* python2-3 urlparse

* Update urls.py

* Update for Django templates

* Update settings.py

* Update settings.py

* Update __init__.py

* Update urls.py

* Fixes: Removes dependence on django pattern

* Update urls.py

Fixes an unused import statement.

* Identify RGBA png files

* Fixed: flake8

* Update test_mimetype_identification.py

* Add queue for GPU

* Update psycopg2 to 2.8.4.

* Remove ecdsa dependency

* Update requirements.txt

* Update test_userpreference.py

* Update resourcelist.py

* Fixes test post user preferences

ERROR: test_post (Rodan.rodan.test.views.test_userpreference.UserPreferenceViewTestCase)

* Resource_list moved to get_resource_type

* Update requirements.txt

* Update workflowrun.py

* Update base.py

* Create 0017_resourcelist_resource_type.py

* Update urls.py

* Update resource.py

* Update urls.py

* Update urls.py

* Updated: Djoser

* Update urls.py

* Update resource.py

* Update requirements.txt

* Fixes: #514

* .

* Create 0018_auto_20200318_2345.py

* .

* Change how class-based jobs are registered in celery

* Downgrade Celery to 3.1.25 (last 3.x release)

* Fixes: 'QuerySet' object has no attribute 'workflow_job'

* Update core.py

* .

* Modified: Move registering tasks to celery file.

* Update load.py

* Version Update

This version of Rodan has upgraded security and dependencies, furthermore it has 4 different queues for jobs to run in.

* Import rodan.jobs.load in urls.py

* Update urls.py

* Update urls.py

* Define EMAIL_USE to False

This should resolve #521.

* Move to /api url (#524)

* Move to /api url

* Fix unittest urls

* flake8 everything

* Update requirements.txt

* Include django upload memory settings

 DATA_UPLOAD_MAX_MEMORY_SIZE and FILE_UPLOAD_MAX_MEMORY. This is to prevent a 413 HTTP status on resource uploads.

* Add labels and associated features (#527)

* Implement labels

* Support for patching resource labels

* Remove labels when they do not apply to any resource.

* Migration for resource label addition and labels field on resource

* Increase label length

* Generate runjob label on generated resources

* Remove commented out lines

* Add test for ResourceLabel model

* Include label creation in test

* Clean up additions to resource view

* Check if list is not None

Otherwise this will fail if a (valid) empty string is given. An empty
string should be processed so that all tags can be removed, but empty
strings are falsey in Python so check against None.

* Pass linter

* Make label names unique

* Apply AND to labels not OR

* Migration for resource label

* First attempt at ""labeler"" job

* Add snapshot info to workflow run description

* Add labeler job to settings.py

* Atomic update of description

* Add ports to Labeler, only apply UUID on blank Labeler job

* Use get_or_create to prevent race conditions

* Add name to resource(s) for snapshot

* Update for linter

* Don't fail just because of an issue with snapshots

* Linter and code review

* Make labeler default the workflow run UUID

* Reduce occurrances of SIGKILL issue (#528)

* Ensure temporary file is deleted

* Catch failure on OOM and wait 10 s. Retry 3 times.

This seems to work in most cases when testing locally and doesn't result
in the same kind of slow down as with decreasing the concurrency
parameter of the celery worker(s).

* Properly handle multiple input ports for labeler

* Allow for Labeler inputs to appear as results

Typically inputs that belong to that workflow run prevent a resource
from appearing as a run result but add an exception for Labeler

* Ignore added label names that are too long

* Set limit on label length in Labeler

* Add support for getting resources in zipfile (#531)

* Add support for getting resources in zipfile

* Singular ""resource_uuid"" as GET parameter

* Add archive endpoint to routes

* Tweaks to make the client happy

* Add queue ""celery""

* Add format=format

* Don't return empty zip file

* Let FileResponse close StringIO itself

According to https://code.djangoproject.com/ticket/29278 this kind of
response will close the file-like object itself.

* Add test for archive

* Make linter happy

* Handle files with conflicting names

* Use six to get StringIO

* Use six.moves.range

* Make linter happy since six only in doctests

* Restore settings.py. Oops.

* Modified: six import

* whitespace

* replace StringIO with six

Co-authored-by: Alex Daigle <alex.daigle2@gmail.com>

* Remove print statement.

Sorry, thought this was removed in the last PR.

* Check for MIGRATE env var.

This is to allow us to not need to comment in/out these lines to perform
migrations.

* Add biollante-rodan job to settings.py. (#533)

* Ignore biollante-rodan job

* Don't show description of workflowrun in list

Description field has no size limit and can contain a list of
information for the entire workflow run. Depending on the job, it may
contain a large amount of info as it will serialize the settings object
with can contain any information needed to be preserved in phases of an
interactive job. Since this can be so big and massively increase the
response object size and is also not very helpful for finding a
workflowrun, remove it.

* Replace ODD file with MEI all for 4.0.1 (#539)

* Include references to MEI_resizing

* Add PIL-Rodan to py3 worker

Already installed due to calvo, but must be explicitly loaded as Resize
job uses py3 queue.

* Migration to rename Classifier job

Rename existing Classifier job to Non-Interactive Classifier as part of
DDMAL/gamera_rodan#8.
This should be merged into Rodan for the *same build* as the updated
gamera_rodan job. Otherwise default behavior will delete the Classifier
job from the database rather than rename it.

* Check for 0-length resource labels

* Update permissions so users can access labels

* Remove unused import

* Modified: Handle more filetypes

* STUB: Prepare for move to grok

* Fixes: Flake8

* Fixed: Flake8

* Removal coordinate set models (#546)

* Added: Stub

* Created: Work-In-Progress Data Migration

* Fixed: Tests

* Flake8

* Version update

Co-authored-by: ImaneChafi <46538274+ImaneChafi@users.noreply.github.com>
Co-authored-by: Evan Savage <evansavage@Evans-Mac-mini.local>
Co-authored-by: Ling-Xiao Yang <ling@theyang.ca>
Co-authored-by: Ling-Xiao Yang <lingxiao.yang@britecore.com>
Co-authored-by: Silver92 <wen.xiao@mail.mcgill.ca>
Co-authored-by: Juliette Regimbal <juliette.regimbal@gmail.com>",redis django,"
* Fixed: Redis DB env typo and django logger level.",3,Database&Web Framework,Database,False,False
4180,evernote/zing,06676a326e97c8f3557101ea8bce151b1d17c6d0,2015-03-27 13:01:58,django,redis,"Checks: Moved Redis check to Django 1.7 checks framework

References #3594",redis django,"
Checks: Moved Redis check to Django 1.7 checks framework",3,Database&Web Framework,Database,False,False
4181,getredash/redash,44dff83046fd0f0a3666cbb262ea7b7ac8eeefb8,2019-01-07 08:30:42,django,redis,"Add ""Active at"" column to user list. (#3026)

* add last_active_at to users page

* Use our JSON encoder as the SQLAlchemy JSON serializer.

* Fixed some inconsistencies in the user query class methods.

* Minor cosmetic fixes.

* Add some make tasks for easier development.

* Add user detail sync system based on Redis backend.

There is a periodic Celery task that updates a new “details” JSONB column in the “user” table with the data from Redis.

Currently this is only used for tracking the date of last activity of a user but can be extended with other user information later.

Updates a few dependencies.

* Normalize a few Flask extension API names.

* Reduce implementation complexity of JSONEncoder.

* Use request_started signal to make sure we have a request context.

Otherwise loading the user based on the request won’t work.

* Fix test that checks if disabled users can login.

This correctly uses a URL path that includes the current organization and checks for the error message.

The previous test seems to have been a red herring.

* Minor cosmetic fixes.

* Remove needs_sync in favor of just deleting things.

* Misc review fixes.

* Ignore line length.

* Split redash.models import several modules.

* Move walrus UTC DateTimeField into redash.models.types.

* Restore distinctly loading dashboards.

* Simplify default values for user details.

* Define __repr__ methods generically.

* Consistently have underscore methods at the top of model methods.

* Fix tests.

* Split redash.models import several modules.

* Update to latest walrus and redis-py.

* Update kombu to 4.2.2 for redis-py 3.x compatibility.

* Remove redis-cli container after running Make task.

* Move buffer condition after datetime/time conditions.

* Update walrus to 0.7.1.

* Refactor some query APIs.

This uses the flask-sqlalchemy helpers consistently and makes more use of mixins.

* Post rebase fixes.

* Use correct kombu version

* Fix migration down revision",redis django,"
There is a periodic Celery task that updates a new “details” JSONB column in the “user” table with the data from Redis.",3,Database&Web Framework,Database,False,False
4185,bcgsc/mavis,9aa87028bfa6884aad38266a1dbd9ba4fc26c95f,2018-05-31 04:13:07,futures,multiprocessing,#124: pycodestyle fixes. Updated all tests to match scheduler changes. Changed local to use concurrent.futures instead of multiprocessing due to the hanging main process bug when a process in the pool calls a subprocess which throws an error,multiprocessing futures,"
Updated all tests to match scheduler changes.
Changed local to use concurrent.futures instead of multiprocessing due to the hanging main process bug when a process in the pool calls a subprocess which throws an error",10,Utility,Utility,False,False
4186,brigade-automation/brigade,e7e416b0b6d86ca06b1dcf0476e007e47fb687af,2020-01-14 10:56:24,futures,multiprocessing,Replace multiprocessing.dummy with concurrent.futures (#467),multiprocessing futures,"
Replace multiprocessing.dummy with concurrent.futures (#467)",10,Utility,Utility,False,False
4187,etal/cnvkit,ce579cf021ca1ee0705bd9484aae55e0d110d0e7,2016-09-09 05:13:08,futures,multiprocessing,"batch, parallel: use concurrent.futures instead of multiprocessing (closes #124)",multiprocessing futures,"
batch, parallel: use concurrent.futures instead of multiprocessing (closes #124)",10,Utility,Utility,False,False
4189,miurahr/aqtinstall,bbb39c0847ebf0eb5940cd75d275ad7286e5b6c7,2020-02-11 01:42:46,futures,multiprocessing,"Use concurrent.futures for concurrency with thread and process (#87)

Use concurrent.futures for multiprocessing and other improvements
- combination with thread pool for downloading and  process pool for extraction.
- Iterate all download and start extraction.
- Start extraction when download completed
- Add download completion log
- log a time  when extraction done
- Show elasped time for installation
- Meature elasped time
  * use perf_counter() for a total elapsed time.
  * use process_time() for individual extractions.

Signed-off-by: Hiroshi Miura <miurahr@linux.com>

* fix format specifier

Signed-off-by: Hiroshi Miura <miurahr@linux.com>",multiprocessing futures,"
Use concurrent.futures for concurrency with thread and process (#87)",10,Utility,Utility,False,False
4192,DMS-Aus/Roam,c8f061803450631cbd5b84994e95c99bfac7675a,2012-09-17 04:27:07,unittest,nose,Remove nose from test - just use unittest,nose unittest,"
Remove nose from test - just use unittest",23,Testing,Testing,False,False
4193,Galvant/InstrumentKit,bb4ab2152bcf3a5881100af06fd9afb75618cfc9,2018-03-24 14:52:24,unittest,nose,"Nose to pytest transition (#183)

* Use mock from the standard lib if available.

* Migrate nose raises to pytest.raises.

This touches a lot of code because pytest.raises
is used in a context manager, so indentation
has to be changed.

Replacement happened with regex from
@raises\((.*)\) to @pytest.mark.xfail(raises=$1)
then from @pytest.mark.xfail\(raises=(.*)\)\ndef(.*)
to def$2\n    with pytest.raises($1):
then manual correction of indentation.

* Replace nose eq_ by assert, remove nottest.

* Move CI from nosetests to pytest, adapt docs.

Pin astroid version, too, to avoid wrong errors on CI.

* Fix some introduced errors flagged by pylint.

* Specify minimum pyserial requirement (see #58).",nose unittest,"
* Replace nose eq_ by assert, remove nottest.",23,Testing,Testing,False,False
4195,RaRe-Technologies/gensim,c98dcfb982b9c49a6c184a0e9477182a303deed2,2011-04-24 22:04:11,unittest,nose,"removed (undocumented) dependencies on nose

* switched test_lee.py from nose test to unittest (consistent with the rest of gensim)
* added a matutils.triu_indices fnc for numpy < 1.4
* removed citation section from top-level README",nose unittest,"
* switched test_lee.py from nose test to unittest (consistent with the rest of gensim)
* added a matutils.triu_indices fnc for numpy < 1.4",23,Testing,Testing,False,False
4198,bbangert/beaker,cfc9bf8aaae7d0de1bfb6b51e160561da9af5868,2020-07-22 22:03:20,unittest,nose,"Port testing from nose to pytest.

Fixes #188",nose unittest,"
Port testing from nose to pytest.",23,Testing,Testing,False,False
4199,csaez/quicklauncher,7ff05fa251e8ecfa33cc534bd370911522a3ba53,2016-08-15 16:29:12,unittest,nose,nose -> unittest,nose unittest,"
nose  laifuhewb  unittest",23,Testing,Testing,False,False
4203,enthought/apptools,92c4a80311123fd346afdb44ed9eaa5ac02bfd83,2020-10-30 14:31:44,unittest,nose,"Replace nose tools with unittest tools (#159)

* REF : helpers are now methods, not functions

	modified:   apptools/undo/tests/test_command_stack.py

* CLN : Replace nose assert with unittest assert

	modified:   apptools/undo/tests/test_command_stack.py

* REF : Make test functions into test methods

	modified:   apptools/lru_cache/tests/test_lru_cache.py

* FIX : Replace nose assert with unittest assert

	modified:   apptools/lru_cache/tests/test_lru_cache.py

* CLN : Remove nose assert import

	modified:   apptools/lru_cache/tests/test_lru_cache.py

* REF : Use unittest skip instead of nose skip

	modified:   apptools/persistence/tests/test_spickle.py",nose unittest,"
Replace nose tools with unittest tools (#159)",23,Testing,Testing,False,False
4205,etalab/udata,05b7a880d56359e2f857cb9d0f2c553babf7aacf,2018-01-29 09:55:13,unittest,nose,Switch from nose to pytest and make almost all test pass,nose unittest,"
Switch from nose to pytest and make almost all test pass",23,Testing,Testing,False,False
4206,fedora-infra/the-new-hotness,7ec212bf0618eb28e06f6749808c22d637b1adb3,2016-11-28 16:49:19,unittest,nose,"Change the tests to use unittest and add style check

The tests were using nose and not the standard unittest module. This
changes that and the tests are now runnable by using `python setup.py
test`. This also fixes all PEP8 violations found by the new style test.

Signed-off-by: Jeremy Cline <jeremy@jcline.org>",nose unittest,"
The tests were using nose and not the standard unittest module.
This",23,Testing,Testing,False,False
4209,joblib/joblib,8c67f237d6f3fd38ea2316069ea9d8587e6e9123,2016-11-07 08:34:38,unittest,nose,"[MRG+1] Remove all nose imports from test scripts. (#422)

* Wrap unittest assert helpers in joblib.testing

- These include assert_true, assert_false, assert_equal
  and assert_not_equal.

* Replace some nose.tools imports with joblib.testing imports

* More nose.tools imports with joblib.testing imports

- Four more files in joblib/tests directory

* Replace all nose assert true, false, equal helpers in tests

* Replace nose.tools.assert_raises with joblib.testing.assert_raises

* Wrap SkipTest, with_setup of nose in joblib.testing

* Rectify pep8 warns, remove try except from joblib.testing

- joblib is compatible with python 2.6+ and 3.3+
  it need not handle exceptional cases if version
  is less than 2.6

* better parameters alignment

* Remove nose imports from docs.",nose unittest,"
* Replace all nose assert true, false, equal helpers in tests",23,Testing,Testing,False,False
4212,nuxeo/nuxeo-drive,e185f522809ec8ae8e3830349fe6a85d2415468f,2013-01-17 15:02:01,unittest,nose,Switch to unittest API instead of nose,nose unittest,"
Switch to unittest API instead of nose",23,Testing,Testing,False,False
4214,scikit-learn/scikit-learn,9b2aac9e5c8749243c73f2377519d2f2c407b095,2016-10-07 16:46:52,unittest,nose,"[MRG + 1] [TST] (half-cosmetic) use less nose.tools import to simplify future transition to py.test (#7384)

* use less nose.tools import to simplify future transition to activly developing test suites/runners

* assert_equal -> assert_array_equal in test_feature_hasher_pairs_with_string_values

and one missed ImportError that should be replaced with AttributeError

* test for py2.6 compat with except AttributeError

* fix importing of SkipTest

* force using nose in python2.6 for now

* there was no assert_dict_equal in py2.6. but we can use assert_equal

although failed test will look a little bit ugly

* remove nose imports from doc/datasets",nose unittest,"
* use less nose.tools import to simplify future transition to activly developing test suites/runners",23,Testing,Testing,False,False
4220,adbar/trafilatura,273a319c1199d32f964d5402195dcb64d34a415f,2020-12-16 14:12:29,urllib3,requests,use bare urllib3 and remove requests,requests urllib3,"
use bare urllib3 and remove requests",24,HTTP Clients,HTTP Clients,False,False
4222,crate/crate-python,d4d239ca4744c8b164a2cd6ca336904becf33b61,2014-04-11 12:02:37,urllib3,requests,replaced requests with urllib3 to improve performance,requests urllib3,"
replaced requests with urllib3 to improve performance",24,HTTP Clients,HTTP Clients,False,False
4223,cubewise-code/TM1py,9dbf72be84d78f8a6920732f37e269578abba25b,2020-06-01 20:52:25,urllib3,requests,Use urllib3 and requests to handle async response,requests urllib3,"
Use urllib3 and requests to handle async response",24,HTTP Clients,HTTP Clients,False,False
4227,getsentry/snuba,97b36c7e5592a2a020aa548364184eaa731d4b8e,2019-08-21 19:07:17,urllib3,requests,ref(writer): Replace requests with urllib3 (#432),requests urllib3,"
ref(writer): Replace requests with urllib3 (#432)",24,HTTP Clients,HTTP Clients,False,False
4228,ikreymer/pywb,7a0dd463cd71b5407f2e7228dee07f35623f9857,2016-04-27 17:16:54,urllib3,requests,"webagg: responseloader: use urllib3 directly instead of requests to
take advantage of connection pooling w/o storing/sharing cookies",requests urllib3,"
webagg: responseloader: use urllib3 directly instead of requests to
take advantage of connection pooling w/o storing/sharing cookies",24,HTTP Clients,HTTP Clients,False,False
4229,jlafon/PynamoDB,921392d0f1d8f91ac533daf4110b390b058cdace,2019-10-03 21:56:52,urllib3,requests,"unfloat versions to expose warnings (#702)

this does a couple of important things:
- upgrade `pytest` so the `imp` warning is visible
- unpin direct dependencies (this ensures testing against the latest versions possible to expose breakages as soon as possible)
- replace `requests` with `urllib3` (`botocore` doesn't use `requests` any more)",requests urllib3,"
- unpin direct dependencies (this ensures testing against the latest versions possible to expose breakages as soon as possible)
- replace `requests` with `urllib3` (`botocore` doesn't use `requests` any more)",24,HTTP Clients,HTTP Clients,False,False
4231,launchdarkly/python-client,a7558542081d38e4132543cab60ddf1144e768f8,2018-06-12 00:20:11,urllib3,requests,switch from requests to urllib3 in event processor,requests urllib3,"
switch from requests to urllib3 in event processor",24,HTTP Clients,HTTP Clients,False,False
4233,newrelic/newrelic-telemetry-sdk-python,d1bc3c798bf96aa89a24c2898f53f76123b8a145,2019-10-17 17:43:42,urllib3,requests,Replace requests with a urllib3 implementation.,requests urllib3,"
Replace requests with a urllib3 implementation.",24,HTTP Clients,HTTP Clients,False,False
4234,openeventstack/pretalx,e4036611e5d0ab785047ec8eae5ced7b106ee1fd,2019-09-19 09:00:55,urllib3,requests,Replace requests with urllib3 as dev dependency,requests urllib3,"
Replace requests with urllib3 as dev dependency",24,HTTP Clients,HTTP Clients,False,False
4238,stratosphereips/StratosphereLinuxIPS,45826e07c45b325b6721cf34773206c64f33f2a3,2019-07-19 09:17:35,urllib3,requests,"Switched from requests to urllib3, timeouts still need testing",requests urllib3,"
Switched from requests to urllib3, timeouts still need testing",24,HTTP Clients,HTTP Clients,False,False
4240,y0ssar1an/CSS3,d47e36b9f19cacaeed97752ae7f00e508b13d1d1,2015-02-23 03:54:18,urllib3,requests,use requests instead of urllib to call validation server. make POST requests using multipart/form-data instead of terrible method using GET requests,requests urllib3,"
use requests instead of urllib to call validation server.
make POST requests using multipart/form-data instead of terrible method using GET requests",24,HTTP Clients,HTTP Clients,False,False
4241,zalando/patroni,b666f5e4ed745d7901f44f5f90e97d74e5277132,2019-10-11 08:16:33,urllib3,requests,"Refactor Patroni REST API communication (#1197)

* make it possible to use client certificates with REST API
* define a separate PatroniRequest class which handles all communication
* refactor patronictl to use the new class
* make Ha to use the new class instead of calling requests.get. The old call wasn't taking into account certificates and basic-auth

Close #898",requests urllib3,"
* refactor patronictl to use the new class
* make Ha to use the new class instead of calling requests.get.
The old call wasn't taking into account certificates and basic-auth",24,HTTP Clients,HTTP Clients,False,False
4242,DataDog/datadog-serverless-functions,9ce972af7e96bec614840a70ae61841e29ad3372,2019-10-25 17:09:04,requests,botocore,Stop using botocore.vendored.requests,botocore requests,"
Stop using botocore.vendored.requests",4,HTTP Clients,HTTP Clients,False,False
4244,snowflakedb/snowflake-connector-python,0da2b22dca715ccf8147dce2620a8baca09dc861,2019-11-01 20:09:20,requests,botocore,"SNOW-93078: remove dependecy on botocore requests. updated with botocore, boto3 and requests to the latest. SNOW-110891: pin stable version of Azure packages",botocore requests,"
SNOW-93078: remove dependecy on botocore requests.
updated with botocore, boto3 and requests to the latest.
SNOW-110891: pin stable version of Azure packages",4,HTTP Clients,HTTP Clients,False,False
4245,snowflakedb/snowflake-ingest-python,bdafd43c3f49f9937443421d10573531bd9b4e85,2019-11-06 00:26:44,requests,botocore,Replacing botocore requests library with standalone requests library since botocore doesn't support it anymore,botocore requests,"
Replacing botocore requests library with standalone requests library since botocore doesn't support it anymore",4,HTTP Clients,HTTP Clients,False,False
4246,DataDog/dd-agent,325b0b844be36d0c54cbbd57c2867c2e7c912bf6,2015-01-14 23:45:11,requests,httplib,"Switch doestaste http client to requests

And fix #1112 at the same time",httplib requests,"
Switch doestaste http client to requests",28,HTTP Clients,HTTP Clients,False,False
4250,MindscapeHQ/raygun4py,eace7d05ede24fe3b140d6a51c56be8a814f8989,2016-01-21 21:58:13,requests,httplib,PY2: replace httplib with requests/urllib3,httplib requests,"
PY2: replace httplib with requests/urllib3",28,HTTP Clients,HTTP Clients,False,False
4251,PyGithub/PyGithub,9aed19ddbe829af116d7b47494a597f98994a2bc,2018-04-17 02:25:42,requests,httplib,"Use 'requests' instead of 'httplib' (#664)

* works (but tests fail)

* Refactor to use python requests rather than httplib

* add requests dependency in setup.py

* touch so travis-ci will run

* clean up some unused comments

* Handle HTTP vs HTTPS; handle custom base_url

* Use requests session

* Don't use a persistent session in tests (which don't use the real requests library)

* Use an older version of requests for python 3.2

Requests dropped support for Python 3.2 in the 2.10 series (though it
didn't detect this until 2.11).

PyGithub probably doesn't need to support Python 3.2 at all; it's quite
old, with negligably few users, but that should be addressed elsewhere.

* Revert ""Use an older version of requests for python 3.2""

This reverts commit fb0367614f5413968eeab98f4094e710aa1bc2d1.

* Improve readability

* Update requirements.txt

* Disable custom proxy handling code (unneeded and broken); use requests'

* Remove comment and superflous code

* Fix iteritems() removal from Python3

* pin requests to 2.14.0 or greater in prep for no_proxy

* pin requests to 2.14.0 or greater in prep for no_proxy",httplib requests,"
Use 'requests' instead of 'httplib' (#664)",28,HTTP Clients,HTTP Clients,False,False
4259,getsentry/sentry,e2722385831a0930765d2c4bb78a582d41f4b64b,2015-09-09 07:48:06,requests,httplib,Use requests instead of httplib to do replay,httplib requests,"
Use requests instead of httplib to do replay",28,HTTP Clients,HTTP Clients,False,False
4261,google/openhtf,1f05f2c1af6c5a2136a1cfcf648afb516c42040e,2016-04-19 00:31:42,requests,httplib,"Move from httplib to requests, since requests is now in the mix.",httplib requests,"
Move from httplib to requests, since requests is now in the mix.",28,HTTP Clients,HTTP Clients,False,False
4262,h3llrais3r/Auto-Subliminal,24fb341a220ae11b48f9a96047bd62d481efd854,2018-02-20 14:05:23,requests,httplib,Use requests instead of httplib,httplib requests,"
Use requests instead of httplib",28,HTTP Clients,HTTP Clients,False,False
4263,haiwen/seafdav,73fc9034ee5254e3e5ce2dc70ff34c7c77f1e58a,2017-02-24 19:14:43,requests,httplib,davclient: replace httpclient with requests,httplib requests,"
davclient: replace httpclient with requests",28,HTTP Clients,HTTP Clients,False,False
4265,metaodi/osmapi,b574211db3a30910d65610bd4850b8a082520b2e,2016-01-06 12:59:18,requests,httplib,First pass to switch httplib calls to use requests.,httplib requests,"
First pass to switch httplib calls to use requests.",28,HTTP Clients,HTTP Clients,False,False
4267,mwclient/mwclient,593cb44c4bc8441488cfdcceea2eb455e875bc2e,2014-08-18 21:18:33,requests,httplib,"[#45] replace http.py with the Requests library

- Note the following exception replacements:
  mwclient.errors.HTTPError -> requests.exceptions.ConnectionError
  mwclient.errors.HTTPStatusError -> requests.exceptions.HTTPError
  mwclient.errors.HTTPRedirectError -> requests.exceptions.TooManyRedirects

- Removed the `compability.old_upload` method, which was used for
  MediaWiki < 1.16.

- Requests automatically decompresses gzip-encoded responses, and
  does its best to decode response content to unicode when possible.

- [#53] Using the Responses library to mock http requests in tests",httplib requests,"
[#45] replace http.py with the Requests library",28,HTTP Clients,HTTP Clients,False,False
4270,pantsbuild/pants,2a6d3cd2573cd5dadd9465d7012a705c8037bfff,2014-04-30 16:33:56,requests,httplib,"Use requests instead of httplib for restful_artifact_cache.py. Preparation for enabling auth

Reviewed at https://rbcommons.com/s/twitter/r/294",httplib requests,"
Use requests instead of httplib for restful_artifact_cache.py.
Preparation for enabling auth",28,HTTP Clients,HTTP Clients,False,False
4273,tweepy/tweepy,3acb3b6c3831aba11f981b859a2ca3c8ad5cc41f,2014-04-27 01:22:38,requests,httplib,Use Requests instead of httplib,httplib requests,"
Use Requests instead of httplib",28,HTTP Clients,HTTP Clients,False,False
4274,DataDog/dd-agent,3c953749a9831c999bf28aab5ef57fb5dc5432ae,2015-02-27 00:20:29,requests,httplib2,"Switch http libraries used in checks to requests

* Fix #1196
* Fix #1398

Along with the self contained agent (pyopenssl etc) it will support SNI.

See https://github.com/kennethreitz/requests/issues/749 for more information",httplib2 requests,"
Switch http libraries used in checks to requests",57,HTTP Clients,HTTP Clients,False,False
4275,DataDog/integrations-core,dcf84c1dbeca83aa9e01536ce47c6ebb3ba48d60,2020-08-03 11:18:53,requests,httplib2,"Use requests wrapper and remove httplib2 dependency (#7247)

* Use requests wrapper and remove httplib2 dependency
* Convert bad_config_test into unit test
* include http options in config example
* bump base package requirement

Co-authored-by: Florian Veaux <florian.veaux@datadoghq.com>",httplib2 requests,"
Use requests wrapper and remove httplib2 dependency (#7247)",57,HTTP Clients,HTTP Clients,False,False
4276,GoogleCloudPlatform/gcloud-python,7d1161f70744c0dbbe67a3f472ea95667eaafe50,2017-07-27 18:21:30,requests,httplib2,"Remove httplib2, replace with Requests (#3674)

* Core: remove httplib2, replace with Requests

Additionally remove make_exception in favor of from_http_status and from_http_response.

* Datastore: replace httplib2 with Requests

* DNS: replace httplib2 with Requests

* Error Reporting: replace httplib2 with requests

* Language: replace httplib2 with Requests

* Logging: replace httplib2 with requests

* Monitoring: replace httplib2 with Requests

* Pubsub: replace httplib2 with Requests

* Resource Manager: replace httplib2 with Requests

* Runtimeconfig: replace httplib2 with Requests

* Speech: replace httplib2 with Requests

* Storage: replace httplib2 with Requests

* BigQuery: replace httplib2 with Requests

* Translate: replace httplib2 with Requests

* Vision: replace httplib2 with Requests",httplib2 requests,"
Remove httplib2, replace with Requests (#3674)",57,HTTP Clients,HTTP Clients,False,False
4281,OpenShot/openshot-qt,4349753e0eecae60c96768def773fa48189f06bf,2017-05-23 06:33:02,requests,httplib2,"Swapping httplib2 for requests, based on tons of issues with packaging and cx_Freeze",httplib2 requests,"
Swapping httplib2 for requests, based on tons of issues with packaging and cx_Freeze",57,HTTP Clients,HTTP Clients,False,False
4282,ankitects/anki,f6245cdfd1e81fecb581a17d3ee314ed0d72698d,2017-01-08 09:06:32,requests,httplib2,"use requests for http; add progress info back

- wrap request in AnkiRequestsClient so we can keep track of
upload/download bytes without having to monkey patch anything
- force a 64kB buffer size instead of the default 8kB
- show one decimal point in up/down so small requests still give
visual feedback
- update add-on downloading and update check to use requests
- remove the update throttling in aqt/sync.py, as it's not really
necessary anymore",httplib2 requests,"
use requests for http; add progress info back",57,HTTP Clients,HTTP Clients,False,False
4285,camptocamp/c2cgeoportal,85ee9386849c1879d2cf6e64d0ac113d493419ba,2018-08-21 05:55:39,requests,httplib2,Use requests instance of httplib2 and urllib,httplib2 requests,"
Use requests instance of httplib2 and urllib",57,HTTP Clients,HTTP Clients,False,False
4289,getredash/redash,7549f32d9a07719c44de28a357103066dee9426a,2015-12-01 01:36:21,requests,httplib2,Apply reviews. fix http client library httplib2 to requests.,httplib2 requests,"
Apply reviews.
fix http client library httplib2 to requests.",57,HTTP Clients,HTTP Clients,False,False
4290,googleapis/python-bigquery,a981dc105395a8a92a63c52f0a4d15006915d0d1,2017-07-27 18:21:30,requests,httplib2,"Remove httplib2, replace with Requests (#3674)

* Core: remove httplib2, replace with Requests

Additionally remove make_exception in favor of from_http_status and from_http_response.

* Datastore: replace httplib2 with Requests

* DNS: replace httplib2 with Requests

* Error Reporting: replace httplib2 with requests

* Language: replace httplib2 with Requests

* Logging: replace httplib2 with requests

* Monitoring: replace httplib2 with Requests

* Pubsub: replace httplib2 with Requests

* Resource Manager: replace httplib2 with Requests

* Runtimeconfig: replace httplib2 with Requests

* Speech: replace httplib2 with Requests

* Storage: replace httplib2 with Requests

* BigQuery: replace httplib2 with Requests

* Translate: replace httplib2 with Requests

* Vision: replace httplib2 with Requests",httplib2 requests,"
Remove httplib2, replace with Requests (#3674)",57,HTTP Clients,HTTP Clients,False,False
4291,googleapis/python-datastore,10f31b839b118d867ede79baa68466abc9f5e89d,2017-07-27 18:21:30,requests,httplib2,"Remove httplib2, replace with Requests (#3674)

* Core: remove httplib2, replace with Requests

Additionally remove make_exception in favor of from_http_status and from_http_response.

* Datastore: replace httplib2 with Requests

* DNS: replace httplib2 with Requests

* Error Reporting: replace httplib2 with requests

* Language: replace httplib2 with Requests

* Logging: replace httplib2 with requests

* Monitoring: replace httplib2 with Requests

* Pubsub: replace httplib2 with Requests

* Resource Manager: replace httplib2 with Requests

* Runtimeconfig: replace httplib2 with Requests

* Speech: replace httplib2 with Requests

* Storage: replace httplib2 with Requests

* BigQuery: replace httplib2 with Requests

* Translate: replace httplib2 with Requests

* Vision: replace httplib2 with Requests",httplib2 requests,"
Remove httplib2, replace with Requests (#3674)",57,HTTP Clients,HTTP Clients,False,False
4292,googleapis/python-logging,ba4002852c6c2ce296ac053b0d990cdf3b3c2c56,2017-07-27 18:21:30,requests,httplib2,"Remove httplib2, replace with Requests (#3674)

* Core: remove httplib2, replace with Requests

Additionally remove make_exception in favor of from_http_status and from_http_response.

* Datastore: replace httplib2 with Requests

* DNS: replace httplib2 with Requests

* Error Reporting: replace httplib2 with requests

* Language: replace httplib2 with Requests

* Logging: replace httplib2 with requests

* Monitoring: replace httplib2 with Requests

* Pubsub: replace httplib2 with Requests

* Resource Manager: replace httplib2 with Requests

* Runtimeconfig: replace httplib2 with Requests

* Speech: replace httplib2 with Requests

* Storage: replace httplib2 with Requests

* BigQuery: replace httplib2 with Requests

* Translate: replace httplib2 with Requests

* Vision: replace httplib2 with Requests",httplib2 requests,"
Remove httplib2, replace with Requests (#3674)",57,HTTP Clients,HTTP Clients,False,False
4293,googleapis/python-pubsub,7b5c93975ed53a4b25af647f92c0f3b90edf4a9a,2017-07-27 18:21:30,requests,httplib2,"Remove httplib2, replace with Requests (#3674)

* Core: remove httplib2, replace with Requests

Additionally remove make_exception in favor of from_http_status and from_http_response.

* Datastore: replace httplib2 with Requests

* DNS: replace httplib2 with Requests

* Error Reporting: replace httplib2 with requests

* Language: replace httplib2 with Requests

* Logging: replace httplib2 with requests

* Monitoring: replace httplib2 with Requests

* Pubsub: replace httplib2 with Requests

* Resource Manager: replace httplib2 with Requests

* Runtimeconfig: replace httplib2 with Requests

* Speech: replace httplib2 with Requests

* Storage: replace httplib2 with Requests

* BigQuery: replace httplib2 with Requests

* Translate: replace httplib2 with Requests

* Vision: replace httplib2 with Requests",httplib2 requests,"
Remove httplib2, replace with Requests (#3674)",57,HTTP Clients,HTTP Clients,False,False
4294,googleapis/python-storage,44a730bdafcc9a9a3fdbdd13180aa81c26b28480,2017-07-27 18:21:30,requests,httplib2,"Remove httplib2, replace with Requests (#3674)

* Core: remove httplib2, replace with Requests

Additionally remove make_exception in favor of from_http_status and from_http_response.

* Datastore: replace httplib2 with Requests

* DNS: replace httplib2 with Requests

* Error Reporting: replace httplib2 with requests

* Language: replace httplib2 with Requests

* Logging: replace httplib2 with requests

* Monitoring: replace httplib2 with Requests

* Pubsub: replace httplib2 with Requests

* Resource Manager: replace httplib2 with Requests

* Runtimeconfig: replace httplib2 with Requests

* Speech: replace httplib2 with Requests

* Storage: replace httplib2 with Requests

* BigQuery: replace httplib2 with Requests

* Translate: replace httplib2 with Requests

* Vision: replace httplib2 with Requests",httplib2 requests,"
Remove httplib2, replace with Requests (#3674)",57,HTTP Clients,HTTP Clients,False,False
4303,mapproxy/mapproxy,fa95953c10f8335671d3a889d60103362a62f0e2,2011-12-14 09:46:51,requests,httplib2,"use requests instead of httplib2

--HG--
branch : couchdb",httplib2 requests,"
use requests instead of httplib2",57,HTTP Clients,HTTP Clients,False,False
4305,onaio/onadata,9c9170e046a1fadc348da0e34d08ac77c62d230f,2017-06-05 13:28:58,requests,httplib2,"switch to requests http library, closes #1033",httplib2 requests,"
switch to requests http library, closes #1033",57,HTTP Clients,HTTP Clients,False,False
4320,pyxnat/pyxnat,576e88db5cb0521077d71729f7de8f44aa46bbf0,2015-05-18 17:57:39,requests,httplib2,Starting the work of replacing httplib2 with requests and removing all references to caching.,httplib2 requests,"
Starting the work of replacing httplib2 with requests and removing all references to caching.",57,HTTP Clients,HTTP Clients,False,False
4321,rfverbruggen/rachiopy,55756b648896f642a54adde1e63b6169cee36983,2020-10-05 11:26:41,requests,httplib2,"Migrated from httplib2 to request.

Altered all tests accordingly",httplib2 requests,"
Migrated from httplib2 to request.",57,HTTP Clients,HTTP Clients,False,False
4328,twilio/twilio-python,49e4a1c733d32efc7cbc51c58560d995541ebc9a,2017-02-22 19:57:45,requests,httplib2,Replace httplib2 with requests,httplib2 requests,"
Replace httplib2 with requests",57,HTTP Clients,HTTP Clients,False,False
4331,DataDog/dd-agent,2699a0ffa24b5c8cba706705cb2f0809d4f53cc0,2014-12-11 13:43:37,requests,pylibrary,"update activemq_xml check to include topics/subscribers
also have it uses requests library rather than urllib2",pylibrary requests,"
update activemq_xml check to include topics/subscribers
also have it uses requests library rather than urllib2",3,HTTP Clients,HTTP Clients,False,False
4332,automicus/PyISY,f20441ef83b549b8fe007a3e9a9bf7344a510b7c,2015-04-19 00:46:42,requests,pylibrary,Removed internal requests library. This will now be a dependancy.,pylibrary requests,"
Removed internal requests library.
This will now be a dependancy.",3,HTTP Clients,HTTP Clients,False,False
4334,DataDog/dd-agent,5d92d40332a6e6f33154766a02c02a33b6cb99d2,2012-10-23 21:25:16,httplib2,urllib2,Use httplib2 instead of urllib2 for http service check,urllib2 httplib2,"
Use httplib2 instead of urllib2 for http service check",3,HTTP Clients,HTTP Clients,False,False
4337,DataDog/dd-trace-py,2051e042bc50190f2979640409fc8f556a2ede13,2019-04-11 18:35:01,base,unittest,"[core] Collect run-time metrics (#819)

* [metrics] initial implementation

- add data structures with tests
- add collectors for psutil and platform modules
- send metrics to agent statsd

* [metrics] add gc generation metrics

* [metrics] clean-up

* [metrics] add thread worker, additional metrics

* [metrics] linting

* [metrics] code organization

* [metrics] add runtime_id to tracer

* [metrics] resolve rebase conflicts

* [metrics] linting

* [metrics] add runtime-id tag

* [metrics] linting

* [metrics] linting

* Add environment variable for enabling runtime metrics

* Environment configuration for dogstatsd

* apply brettlinter

- thanks brett :)

Co-Authored-By: Kyle-Verhoog <kyle.verhoog@datadoghq.com>

* [metrics] remove unnecessary LazyValues

* [metrics] in-line psutil method calls

* [metrics] use internal logger

* [metrics] add reset method, gather services

* [metrics] support multiple services properly

* [metrics] use base test case

* [metrics] handle process forking

* [metrics] add runtime metrics tags to spans

* Remove LazyValue

* Add dependencies for runtime metrics to library

* Refactor metrics collectors and add tests

* Begin major refactoring of api

* Decouple dogstatsd from runtime metrics

* Fix constant

* Fix flake8

* Separate host/port for trace agent and dogstatsd

* Update ddtrace_run tests

* Fix integration test

* Vendor datadogpy to fix issues with gevent+requests

* Revert change to on import

* Add license for dogstatsd

* Move runtime metrics into internal

* Fixes for ddtrace.internal.runtime

* Wrap worker flush in try-except to log errors

* Flush calls gauge which is a UDP so no need to catch errors

* Remove unused datadog and metrics tests

* Rename class in repr

* Remove collect_fn argument from ValueCollector

* Fix flake8

* Remove tags not called for in RFC

* Better metric names for cpu

* Use 0-1-2 for gc collections

* Comments

* Fix daemon for threading

* Add test on metrics received by dogstatsd

* Remove datadog dependency since we have it vendored

* Fix cpu metrics

* Fix cumulative metrics

* Fix reset

* Flag check unnecessary

* Fix runtime tag names

Co-Authored-By: majorgreys <tahir@tahirbutt.com>

* Only tag root span with runtime info

* Use common namespace for gc metric names

* Remove unnecessary set check

* Wait for tests of metrics received

* Fix for constant tags and services

* Fix broken config

* Fix flake8

* Fix ddtrace-run test for runtime metrics enabled

* Update ddtrace/bootstrap/sitecustomize.py

Co-Authored-By: majorgreys <tahir@tahirbutt.com>",unittest base,"
* [metrics] use base test case",3,Testing,Testing,False,False
4340,DataDog/integrations-core,7a0b2a7d52593deb95cd927d43dee9da082a8ad5,2019-07-11 16:02:28,psycopg2,pg8000,"Add SSL support for psycopg2, remove pg8000 (#4096)

* Add SSL support for psycopg2, remove pg8000

* Update test_unit.py

* Apply suggestions from code review

Co-Authored-By: Pierre Guceski <pierre.guceski@datadoghq.com>",pg8000 psycopg2,"
Add SSL support for psycopg2, remove pg8000 (#4096)",4,Database,Database,False,False
4344,DataDog/integrations-core,7a0b2a7d52593deb95cd927d43dee9da082a8ad5,2019-07-11 16:02:28,psycopg2-binary,pg8000,"Add SSL support for psycopg2, remove pg8000 (#4096)

* Add SSL support for psycopg2, remove pg8000

* Update test_unit.py

* Apply suggestions from code review

Co-Authored-By: Pierre Guceski <pierre.guceski@datadoghq.com>",pg8000 psycopg2-binary,"
Add SSL support for psycopg2, remove pg8000 (#4096)",4,Database,Database,False,False
4377,beat-machine/beat-machine,b2b5bbb1c4d1fa23dea0f85baa95ed4cc2e95a17,2019-11-23 19:55:50,argparse,click,Switch to argparse to remove click dependency,click argparse,"
Switch to argparse to remove click dependency",23,Utility,Utility,False,False
4378,certego/IntelOwl,f95315e48b0f968673a2354761c64bc275805dfb,2020-12-18 09:05:31,argparse,click,Argparse instead of click (#296),click argparse,"
Argparse instead of click (#296)",23,Utility,Utility,False,False
4383,hedythedev/starcli,0ce3c433c5f8cc95067030188695e7b2d69021e9,2020-06-22 07:15:53,argparse,click,"migrate click to argparse, now using argparse!",click argparse,"
migrate click to argparse, now using argparse!",23,Utility,Utility,False,False
4387,machinable-org/machinable,1abde836a1b2dd92b46396590670492f04e7d1a7,2021-06-19 22:04:34,argparse,click,Simplify CLI to use argparse instead of click,click argparse,"
Simplify CLI to use argparse instead of click",23,Utility,Utility,False,False
4389,neurostuff/NiMARE,2b80aa28bbcb175823af5b3575d35b61488ecdf0,2019-08-18 20:43:38,argparse,click,"[REF] Switch CLI from click to argparse (#169)

* Replace click with argparse.

* Update docs and add metacluster.

* Remove click from requirements.

* Finish changing KDA docstring.

* Fix spacing.",click argparse,"
[REF] Switch CLI from click to argparse (#169)",23,Utility,Utility,False,False
4391,pappasam/jedi-language-server,24a3262b567b341fb17d0967e4b670b8fc29ee31,2021-03-26 06:03:32,argparse,click,Change `cli` implementation from click to argparse,click argparse,"
Change `cli` implementation from click to argparse",23,Utility,Utility,False,False
4393,spectacles-ci/spectacles,49bf3d606728616093496f1e6f1117bc4437ebc8,2019-08-28 19:36:00,argparse,click,CLI changes -> argparse:,click argparse,"
CLI changes  laifuhewb  argparse:",23,Utility,Utility,False,False
4395,DeepSpace2/StyleFrame,ffc8d7615fb37996ad7824a0e0501351a8f66b14,2017-06-04 20:17:48,argparse,docopt,- Using argparse instead of docopt,docopt argparse,"
- Using argparse instead of docopt",14,Utility,Utility,False,False
4402,inishchith/em-keyboard,76114c7aa13a29ff4727e8fe04296c8a40890d1d,2021-03-08 15:05:08,argparse,docopt,Replace docopt with argparse,docopt argparse,"
Replace docopt with argparse",14,Utility,Utility,False,False
4409,DefectDojo/django-DefectDojo,7359237aa0fc599c049cc443b1e0bc04369498cc,2019-10-30 23:24:07,unittest,pandas,"Add unittests as a travis job

add unittest travis file

update unittest script

Add sudo and --user option

update unittest script

add chromedriver install to script

update script

update chromedriver install script

correct script for chromedriver

adjust permission mode for chromedriver

fix calling chmod without sudo

Add chrome selenium headless option to product unittests

Add google chrome binary

Add code to setup admin user and password environment variables

adjust script

readjust script

adjust test script and server ports in products

update script

update script

update script

update script

update script

update test files and add to travis unittest

comment out tests not ready and add check to exit if any test fails

replace deprecated method

replace deprecated method

Testing fail

Testing fail

update all unit tests with if condition

Add express option to add jira configs

Appease accesslint bot

Remove JIRA status if product is not configured

fix initial date format

Add wait time to test_add_product_finding_test

comment out product unit test from script

testing a very long wait time

testing a very long wait time

try remove headless from engagement test

Try out my page load wait function

make some changes

make some changes

update file load option in engagement import scan test

update file load option in engagement import scan test

update file load option in engagement import scan test

update change

adjust unitest

try out dev activation in script

Correct overlooked error in #1498

Add table of contents to HTML/Asciidoc reports

Return dedupe to a ""working"" state

Return close_old_findings

Delete setup.bash

This is the old setup.bash. New one is in the setup folder. Removing to disable confusion.

enhanced blackduck parser

fixing flake8 errors

[wip] to squash. unittest failing locally bc it seems it does not recognize the
zipfile.

increase filepath to 4000 varchar to hold bigger paths concatenation

Use Python 3.5-compatible code

adding .zip extension to choose report file from

Fix unit tests and syntax errors

Check subtype of report object and cast if necessary

In-app doc update

change file name and dep order

remove old file name

Fix Jira status bug

Fix product manager displays

Added option to set caption for finding images

Add option to move engagements to different products

Update migrations to make builds happy

BUGFIX: The test summary table in the engagement view displays the name of the engagement lead in each row instead of the test lead. This PR changes this UI bug so that the name of the test lead in the row ""Lead"" will appear.

Manually set parent of duplicate

Include description in filter

Correct duplicate options display

Add test name to dropdown

Trying again with some print out

Add fix for test_image_add error

add recursive to file permission on django dockerfile

add recursive to file permission on django dockerfile

MOdify docker file to create media folder

MOdify docker file to create media folder2

Add sudo to python3 calls

checking out sudo

rearrange users

adjust selenium

update python3 version

giving virtulenv a try

adjust dockerfile

modify docker file again

move docker compose into script

comment out user1001 in dockerfilenginx nd django

Add some os user management to script and docker file

Add virtualenv

Trying python within container

add selenium

fix python

adding full script

adding full script

try stuff

Added google chrome addon to travis

add -f install to travis

running build with docker-compose

trying out unit_test docker-compose override

Defect Dojo/SonarQube integration

Reverted f-Strings, replace them with String.format

Reverted f-Strings, replace them with String.format

Fixing AttributeError: module 're' has no attribute 'RegexFlag'

Flake8 fix

Updated finding page to show SonarQube transition history

Updated finding page to show SonarQube transition history

Renumbered migration to 0011 after latest dev merge

Fix for SonarQube versions with no Security Hotspot support

Rebuild migration after pulling upstream/dev

SonarQube integration suggestions pending to implement

Fixing accesslint

Renamed migrations after merging upstream/dev

Fix flake8 error

Updated migration to solve mysql case insensitive issue
Added a temp rule cache in SonarQube client to import findings faster

Update and rename 0017_sonarqube_api_integration.py to 0018_sonarqube_api_integration.py

Bump django from 2.2.1 to 2.2.4

Bumps [django](https://github.com/django/django) from 2.2.1 to 2.2.4.
- [Release notes](https://github.com/django/django/releases)
- [Commits](https://github.com/django/django/compare/2.2.1...2.2.4)

Signed-off-by: dependabot[bot] <support@github.com>

adjust finding status to display product metrics

oversight fix + no verified filter for open_finding

Signed-off-by: Fred Blaise <fred.blaise@gmail.com>

remove unique contraint from jira_id

add missing volumes in docker dev mode

Fix bug when displaying accepted findings

If the cwe is None (which is the default), displaying the accepted finding will throw a type error. This is a relict form the python 3 migration: https://docs.python.org/3/whatsnew/3.0.html#ordering-comparisons

on behalf of DB Systel GmbH

urlunsplit crash if no path is specified

json_output doesnt exist

v1 aqua parser

Signed-off-by: Fred Blaise <fred.blaise@protonmail.com>

promote_to_finding crash on endpoints

Make finding images downloadable via API

FEATURE: Adds an alert box to add_template.html to the delete template button  to confirm the deletion.
BUGFIX: Force the validation check for required input fields

fix bug with jumping sidebar

The sidebar jumps down if you hover over it. Now the sidebar remains on the top.

On behalf of DB System GmbH

API Filter Enhancements for engagements

Added title and engagement to Test object API filters

Fix Flake8

Manually merged DefectDojo master and Development

added on delete cascade for note_type foreign key

Removed urlresolvers

Editing a note modified with note types

Changed the code to match PEP8 standards

Added unit tests for note types

Added missing aria-labels

Moved db changes to a separate file

Report generation modified with note-types

Improved report generation changes

Fixed the conflicts in db migrations files

Resolve conflicts in comments.html file

Fix tables of contents and test pdf report

Allow for newlines in notes

Fix whitesource parser

The whitesource parser fails if the report does not contain all information. Now it will using an empty default value instead.

On behalft of DB Systel GmbH

fix introduced regression

Signed-off-by: Fred Blaise <fred.blaise@protonmail.com>

add external relationnal db support

Update configmap.yaml

typo

typo

weird config map behavior

chqnge postgresql secret name

typo

fixes #1566 add unittest and try-catch.

issue_1542 fix - Using dynamic secret name

Checkmarx API enhancements

Convert tabs to spaces

Add ability to import OWASP Dependency Track Finding Packaging Format (FPF) Exports as a scan

Trim whitespace

Fix flake8 issues

Add Dependency Track parser to test_types fixture

Updates to Dojo fidning title and description to accomodate for optional fields from Dependency Track

Updates to JSON file parsing to accomodate for Django file wrapper vs normal Python File objects

Resolve conflicts with other test type that was added to dev branch

Update test_type.json

Fix issue #1576 and #1577

add product unit test

Fix flake8 issues

go back to installing and setting up chrome browser from unittest script

Update unit tests to reflect all new changes

Update unit tests to reflect all new changes

comment out engagement unittest

remove excess import scan test

Implement Azure AD Tenant OAuth. Fix #1307

As more and more enterprises are leveraging Office 365 and Azure,
implementing Azure AD authentication using OAuth would be extremely
helpful as an alternative from relying on AD/LDAP connectivity, enabling
admins to deploy Defect Dojo in the cloud without having to send
authentication requests back to on-premises AD/LDAP.

This implementation is based on social-core, building upon the
pre-existing OKTA and Google integration.

ptvsd debug option

Incorporating @ptrovatelli's suggestions.

make flake8 happy

increase strip from 20 to 200 chars

Introducing DataTables to Products and Findings

Separating product tags into their own column:
Product tags were added just to the right of the product name. this made very difficult to properly export as CSV or Excel in the upcoming DataTables effort, so splitting the tags which provide relevant information in their own column was the most efficient route to support DataTables export

Introducing DataTables to Products and Findings

Removing DataTables from node package as it is not working, but adding static files.

Added DataTables to Products and Findings html pages to support better sorting, filtering and exporting.

Remove sorting and exporting from DataTables on non relevant fields

Checkboxes and action fields should not be sortable nor exportable, which this commit addresses for Product and Findings list view

Adding the All Engagements View

Dojo menu had a ""All Engagements"" entry, but it opened Active Engagements only.

This commit still respects the Active Engagements but introduces the All Engagements view

DataTables now available on All Engagements

Introducing support for DataTables for all engagements view

Remove sorting and exporting from DataTables on non relevant fields

Checkboxes and action fields should not be sortable nor exportable, which this commit addresses for All Engagements view

Improve Product view filtering

Include additional fields that can be used for filtering the product view

fix finding.cwe in filters

Add Note Create and Delete to Api V2 Finding Endpoint

Adjust Flake inconsistencies

Handle error when no note found

Fix flake8

add sed script to change user id from 1001 to 1000 before building container

fix css selector for import button

remove unused import

update user id sed script and also uncomment dedupe test""

Clean up unittest by removing excess debug print logs

Remove Survery Fixture

Make foxtures run on install

Trying thigs

Configure survey presentation on dojo side

Finishing touches on the dojo side

Change migration name before pulling current dev

Change dependency as well

Change dependency as well

Add finding ID, Eng. Version and tags to search results. Fixes #1559

On the simple search results, adding new column to contain the Finding ID (Dojo ID) and also include engagement version and engagements tag under the engagement column.

Fixes #1559

Update migrations to mesh with dev branch

Revert a silly merge mistake

remove index and replace with keys

adding channel origin id to model, and take either one

restored processing of single security.csv file. Re-enabled unittests
for csv. Added extra file for new security.csv header format.

Fixed wrong column name for csv title processing

Fixed property name

Fix Import OpenVas Scan Result

Issues:
OpenVas Scan Result were not imported.

Solution:
Adapt the code for python 3
We've edit dojo/tools/openvas_csv/parser.py , now it is able to import the scan without a 500 error and with the Findings.

clean up debug code

Fix Tab Issues

To much space

Fix Flake8 errors to resolve premature approval

Update issue templates

mrod-updating-serializer

mrod-updating-model

mcr-fixingProductList

mcr-fixingProductList

Fix Flake8 errors

Transition Finding from Mitigated using Jira doesn't remove Mitigated status

Manage Manual Changes in SonarQube

adjust docker-compose build and run in script

use release image docker-compose override",pandas unittest,"
update test files and add to travis unittest",3,Scientific&Testing,Scientific,False,False
4410,TUW-GEO/ascat,3830c96479d16ba99e54502ec2e93f7d9f89afbd,2019-01-23 13:10:58,unittest,pandas,"Add generic level 1b and 2 ascat data readers (#31)

* initial structure lvl1 data readers
* update get_eps_xml
* Image from 1b_eps data
* restructure and start with implementation of read_eps_szf
* add szx reader for fmv11
* restructure to object
* restructure, viadr, szf
* bugfix for szf reader
* add templates, fix viadr
* add record classes
* comments, NaN for scaled_mdr, time in szx fmv11
* refactor lvl1 eps reader
* restructure, eps lvl2
* small structure changes
* starting point for lvl1b nc and bufr readers
* restructure data readers
* restructure + small adds
* as_des_pass, lvl2 triplets, h5 szf reader
* generic path, data shape, metadata
* jd more efficient + modification of h5 reader
* split szf return into seperated images, remove eps templates
* generic readers and small improvements
* small update for generic reader
* updating the generic reader converters, adding/calculating values to format readers, adjusting tests
* update hdf5 szf reader, improve converters
* unittests, imporvments and bugfixes for data readers
* additional unittests and small reader updates
* updated test-data subrepository
* use data subrepository for unittests
* update travis dependencies
* try to get git lfs running
* try to get git lfs running
* try to get git lfs running
* adjust native readers for python3
* minor changes and new test
* bugfix to bufr azi triplet, masked_reader restructure, small overall improvements
* add MultiTemporal classes for all formats
* add base class for MultiTemporal data readers
* update requirements and changelog; clean up for better code readability
* merge MetopA and MetopB in eumetsat.py; add generic readers to docu-examples
* support for netcdf format version 11
* remove node_num and line_num from szf
* update submodule url to point to own webserver
* fix netCDF4 version
* pin pynetcf version to v0.1.18
* change netcdf4 version",pandas unittest,"* adjust native readers for python3
* minor changes and new test
* bugfix to bufr azi triplet, masked_reader restructure, small overall improvements",3,Scientific&Testing,Scientific,False,False
4411,raphaelvallat/pingouin,28242df821e71681b3c35d97d5e287aaba000e36,2019-04-09 22:34:01,unittest,pandas,Fixed small errors in pandas.py + new bootstrapping plot_shift + better testing,pandas unittest,Fixed small errors in pandas.py + new bootstrapping plot_shift + better testing,3,Scientific&Testing,Scientific,False,False
4413,SasView/sasview,5dfdfa7b1103a8dfb020e940cb1e38dcde633256,2015-02-16 17:27:41,json,lxml,"Changed the default dataloader association file from xml to json to
allow easier integration into a stand-alone data loader package with no
external dependencies.",lxml json,"
Changed the default dataloader association file from xml to json to
allow easier integration into a stand-alone data loader package with no",6,Serialization,Serialization,False,False
4423,Exa-Networks/exabgp,4038b5009eed5c0df1429efca9a564ddae6803d8,2014-07-10 11:51:05,docopt,argparse,Modified exabgp to use docopt for command line parsing,argparse docopt,"
Modified exabgp to use docopt for command line parsing",22,Utility,Utility,False,False
4424,FAForever/server,666c9a58147cca555f47fd162e73ee378923d906,2015-05-01 15:28:45,docopt,argparse,Use docopt for parsing cmdline args,argparse docopt,"
Use docopt for parsing cmdline args",22,Utility,Utility,False,False
4425,Grokzen/pykwalify,d62ce70674ada22bf88826d0d7086bf3c711cb69,2013-01-24 19:22:15,docopt,argparse,Reworked the CLI part to now use docopt instead of argparse.,argparse docopt,"
Reworked the CLI part to now use docopt instead of argparse.",22,Utility,Utility,False,False
4429,SteveDoyle2/pyNastran,06e767c53a22176d472d3a35dad2e2e335553c76,2013-08-17 10:10:06,docopt,argparse,replaced argparse with docopt,argparse docopt,"
replaced argparse with docopt",22,Utility,Utility,False,False
4430,TankerHQ/tbump,54b12e29d860336593ff24a514f4d2c9c483b470,2018-08-27 15:06:08,docopt,argparse,"Don't ask for current version when using `init`

Instead, we just parse the new version from the command line.

Note that we use docopt instead of argparse because we can't express
a ""default subparser"" with argparse.

We still need the 'if new_version==""init""' check though :/

Side-note: we also got rid of argparse Namespace object that was
used everywhere without any type checks",argparse docopt,"
Note that we use docopt instead of argparse because we can't express
a ""default subparser"" with argparse.",22,Utility,Utility,False,False
4439,lbryio/lbry,57c3d2590caf96c23c929c700eed6efaa0b92651,2017-05-30 21:43:59,docopt,argparse,update arg parsing to use docopt,argparse docopt,"update arg parsing to use docopt
",22,Utility,Utility,False,False
4442,unixsurfer/anycast_healthchecker,a05466a23e2dba8153187c01d4680b2ebf02efb1,2015-10-23 06:30:27,docopt,argparse,"MAJOR:switch to INI files with configparser and docopt for CLI

With this commit we move away from json configuration files for service
checks. It also introduces a configuration file for the daemon.
Furthermore, it switches from argparse to docopt for CLI parsing.

As a result off all these changes, previous CLI and configuration files
are not supported anymore.",argparse docopt,"
Furthermore, it switches from argparse to docopt for CLI parsing.",22,Utility,Utility,False,False
4446,google/openhtf,50f88043084d06b52f0bd74e2dd12511973740fe,2016-02-09 23:34:21,tornado,flask,"Add multicast agent station discovery service.

Additionally:
  * Update frontend server to use tornado instead of Flask's
    included debug server.
  * Add tornado to setup.py.
  * Fix a bug where frontend server didn't respect port flag.
  * Fix a bug where SIGINT didn't always kill everything.
  * Upgrade HTTP API output to include framework state (in
    addition to test state) as a first-class citizen.
  * Remove KillableThread usage from frontend API.
  * Shut down HTTP server the _right_ way on SIGINT.
  * Remove all use of rundata module.",flask tornado,"
Additionally:
* Update frontend server to use tornado instead of Flask's
included debug server.",6,Web Framework,Web Framework,False,False
4457,UNINETT/nav,383a7fd366c9f4cf5c7a32e814c7ab1bcb15f8f1,2016-01-05 15:31:54,urllib2,requests,Switch out requests library for urllib2 because of apache2.0 license,requests urllib2,"
Switch out requests library for urllib2 because of apache2.0 license",23,HTTP Clients,HTTP Clients,False,False
4458,add-ons/plugin.video.vrt.nu,3f6015df98f4aad019da825819557f0e377e2798,2019-05-03 18:22:59,urllib2,requests,Replace requests with urllib2 (#174),requests urllib2,"
Replace requests with urllib2 (#174)",23,HTTP Clients,HTTP Clients,False,False
4462,emilsvennesson/script.module.inputstreamhelper,78b8aabbdbedef500191f4f25a688fa22b7b286c,2019-08-18 22:28:02,urllib2,requests,"Replace requests and urllib3 with urllib/urllib2 (#71)

* Replace requests and urllib3 with urllib/urllib2

This PR includes:
- Replace requests library with urllib/urllib2
- Increase download chunk size by factor 32 to speed up transfer

* decode bytes to unicode",requests urllib2,"
Replace requests and urllib3 with urllib/urllib2 (#71)",23,HTTP Clients,HTTP Clients,False,False
4463,fedora-infra/anitya,d2b73fd861967a9831da343faf3a30b7f600b5e7,2014-10-20 12:53:06,urllib2,requests,"Port anitya to use urllib2 instead of python-requests

The problem of python-requests is that it does not support calls to ftp
servers. We have a number of projects using FTP and providing FTP urls.

The problem with urllib and urllib2 is that neither actually check if
the SSL certificate is valid or matching the hostname.
Unfortunately, we'll have to do without for two reasons: a) too many
projects are FTP based and b) there is no option in the UI (for the
moment) to disable that SSL check.",requests urllib2,"
Port anitya to use urllib2 instead of python-requests",23,HTTP Clients,HTTP Clients,False,False
4465,jjjake/internetarchive,e1583fcbda920a7ea15e7b1a388447fb516786e9,2013-08-12 20:19:41,urllib2,requests,"Use urllib2 rather than requests in the Catalog class. Remove requests module, no longer used",requests urllib2,"
Use urllib2 rather than requests in the Catalog class.
Remove requests module, no longer used",23,HTTP Clients,HTTP Clients,False,False
4469,mozilla/code-coverage,90cc3e528d7314b40530cbcfab2eadd94bac7a2d,2017-04-27 16:01:20,urllib2,requests,Use urllib instead of the requests package,requests urllib2,"
Use urllib instead of the requests package",23,HTTP Clients,HTTP Clients,False,False
4470,obspy/obspy,9738b43c8dcac89d54327d18db77607101c17987,2017-10-11 12:41:58,urllib2,requests,"- Update FederatedClient to use urllib2 request library instead of urllib3. FederatedClient now follows the same design as Client.
- Simplify parallel request test in test_federatedclient to speed things up.",requests urllib2,"
- Update FederatedClient to use urllib2 request library instead of urllib3.
FederatedClient now follows the same design as Client.",23,HTTP Clients,HTTP Clients,False,False
4473,sendgrid/sendgrid-python,e1a4f6ab9bdc7e2f133bbff936bba9cd9dfa1eb7,2014-02-06 03:50:33,urllib2,requests,"updated to v0.2.5 to use urllib instead of external requests library, which was causing 'too many redirect' errors on app engine",requests urllib2,"
updated to v0.2.5 to use urllib instead of external requests library, which was causing 'too many redirect' errors on app engine",23,HTTP Clients,HTTP Clients,False,False
4477,y0ssar1an/CSS3,d47e36b9f19cacaeed97752ae7f00e508b13d1d1,2015-02-23 03:54:18,urllib2,requests,use requests instead of urllib to call validation server. make POST requests using multipart/form-data instead of terrible method using GET requests,requests urllib2,"
use requests instead of urllib to call validation server.
make POST requests using multipart/form-data instead of terrible method using GET requests",23,HTTP Clients,HTTP Clients,False,False
4478,DocNow/twarc,ad0d1a767f099dcff7f9d68f52742fef20cb085e,2014-11-11 14:25:16,requests,wget,Use the requests module instead of wget since it's already a dependency,wget requests,"
Use the requests module instead of wget since it's already a dependency",6,HTTP Clients,HTTP Clients,False,False
4479,YuvrajRaghuvanshiS/WhatsApp-Key-Database-Extractor,5432800bc449b77434ce3f3c13a839432fa8943d,2021-03-29 07:34:44,requests,wget,#46 : using requests instead of wget.,wget requests,"
#46 : using requests instead of wget.",6,HTTP Clients,HTTP Clients,False,False
4480,bird-house/flyingpigeon,24fd5a3b2b9bb00bde15971b6084680ee48de4ec,2017-05-09 14:37:57,requests,wget,using requests module instead of urllib and wget,wget requests,"
using requests module instead of urllib and wget",6,HTTP Clients,HTTP Clients,False,False
4481,erdogant/findpeaks,7d7838eddb9bb9d7f6f2f339b19cf2611293b36d,2021-02-11 14:39:30,requests,wget,"Replace wget with requests.

The repository for the wget library (used for importing example data) is
no longer available. Although it is still available on PyPI, it hasn't
been updated in over 5 years and presumably won't be able to receive to
security or bugfix updates in the future. This switches to the common
requests library instead.

It also introduces a datadir parameter to the function which allows data
to be downloaded to a different directory. This is useful if the library
is installed system-wide as a regular user will not have permission to
download files to the system directory.",wget requests,"
Replace wget with requests.",6,HTTP Clients,HTTP Clients,False,False
4482,noaa-oar-arl/MONET,590936b7ab2e0aa49c04a5ecaed502eb1ab348b8,2018-06-04 14:58:04,requests,wget,Removing wget dependency in favor of requests,wget requests,"
Removing wget dependency in favor of requests",6,HTTP Clients,HTTP Clients,False,False
4484,DonJayamanne/pythonVSCode,e2f8ee23a3ae3c5423b5b46cb970fb2d69a1e438,2018-05-31 17:25:40,docopt,click,Move from Click to docopt for announce.py (#1806),click docopt,"
Move from Click to docopt for announce.py (#1806)",3,Utility,Utility,False,False
4488,desihub/desispec,1468b777f3a4eb2ad565cb10fb6fc1d3044ceaf4,2016-11-09 19:23:14,argparse,unittest,"Restructure the desispec.pipeline module and other parts of (#300)

the code which are impacted:

  - Split the source files into separate ones for planning,
    dependency graph manipulation, running, and tracking state.

  - Add new class for pipeline workers.  Each pipeline step
    runs a worker instance on the local tasks.  The selection
    of which worker class is used is controlled in the production
    yaml file of options.  This makes it easy to switch which
    implementation is used for each step.

  - Use io.find_file everywhere.  Add missing file types to
    that function.

  - Temporarily disable QA outputs until they can be added fully
    to io.find_file, then re-enable.

  - Move main() of desi_pipe, desi_pipe_run, and desi_pipe_status
    into desispec.scripts

  - Every function now has a docstring.

  - Update unit and integration tests to match new API.  Disable
    broken unit tests temporarily until they can be fixed.  Integration
    tests and a full production on one spectrograph and 3 exposures
    works.",unittest argparse,"
- Update unit and integration tests to match new API.
Disable",3,Testing,Testing,False,False
4492,galaxyproject/galaxy,0d399f6919cc24fc0e3e288fa21784ea544edb29,2016-01-14 20:32:57,tempfile,unittest,"CORS: cache and restore tempfile.tempdir when using test Configuration instances as it persists across tests and fails any tempfile related tests that follow, move test_config tests into test_webapp (cohesive subject v. ortho file struct)",unittest tempfile,"
CORS: cache and restore tempfile.tempdir when using test Configuration instances as it persists across tests and fails any tempfile related tests that follow, move test_config tests into test_webapp (cohesive subject v.
ortho file struct)",3,Testing,Testing,False,False
4493,EI-CoreBioinformatics/mikado,82369d0b783f0fb7ba9ff8f7ccecd94394cb0907,2019-09-11 15:33:09,python-rapidjson,json,"Speed and environment improvements (#211)

Improvements in this commit:
* Daijin now can use conda environments (provided in a system directory). This should allow for more reproducible runs.
* Switched from the unsupported `ujson` to the as-rapid and maintained `rapidjson`
* Cleaning up a little bit the configuration file
* Now the subloci output in `pick` has to be **explicitly** requested by the user. Producing it is by an expensive operation in `mikado pick`, and it should not therefore be on by default.
* Speed up in `mikado serialise`  (closes #177): 
  - XML serialising improved
  - ORF translation improved
  - ORF serialisation is now completely parallelised
* Speed ups in `mikado pick`:
  - Introduced a class method for printing GFAnnotation objects, so to avoid building a whole GtfLine/GffLine object when printing transcripts. 
   - In the main process, the GTF file will be parsed using a novel ad-hoc lighter parsing method. This prevents the parsing from being the main bottleneck. Likewise, now transcripts will be sent to the inter-process database only in batches, rather than atomically: the `commit` operation is too expensive to be performed in that way.
  - Now `mikado pick` has fully parallelised printing of the output files. This prevents the last stage (the file merging) from becoming the bottleneck.
* Now in Daijin BLAST chunks will always be at least equal to the number of threads (to ensure proper parallelism)",json python-rapidjson,"
* Switched from the unsupported `ujson` to the as-rapid and maintained `rapidjson`
* Cleaning up a little bit the configuration file",5,Serialization,Serialization,False,False
4495,freqtrade/freqtrade,c955415cc3b13a9cda40a10b13f898fbf9342b81,2018-12-28 09:01:16,python-rapidjson,json,Switch from ujson to rapidjson,json python-rapidjson,"
Switch from ujson to rapidjson",5,Serialization,Serialization,False,False
4497,mikeqfu/pydriosm,35b3c0764c0150443e6eab4e65aee80cc5073a38,2019-02-15 12:22:17,python-rapidjson,json,Use rapidjson instead of standard json,json python-rapidjson,"
Use rapidjson instead of standard json",5,Serialization,Serialization,False,False
4498,EI-CoreBioinformatics/mikado,82369d0b783f0fb7ba9ff8f7ccecd94394cb0907,2019-09-11 15:33:09,python-rapidjson,ujson,"Speed and environment improvements (#211)

Improvements in this commit:
* Daijin now can use conda environments (provided in a system directory). This should allow for more reproducible runs.
* Switched from the unsupported `ujson` to the as-rapid and maintained `rapidjson`
* Cleaning up a little bit the configuration file
* Now the subloci output in `pick` has to be **explicitly** requested by the user. Producing it is by an expensive operation in `mikado pick`, and it should not therefore be on by default.
* Speed up in `mikado serialise`  (closes #177): 
  - XML serialising improved
  - ORF translation improved
  - ORF serialisation is now completely parallelised
* Speed ups in `mikado pick`:
  - Introduced a class method for printing GFAnnotation objects, so to avoid building a whole GtfLine/GffLine object when printing transcripts. 
   - In the main process, the GTF file will be parsed using a novel ad-hoc lighter parsing method. This prevents the parsing from being the main bottleneck. Likewise, now transcripts will be sent to the inter-process database only in batches, rather than atomically: the `commit` operation is too expensive to be performed in that way.
  - Now `mikado pick` has fully parallelised printing of the output files. This prevents the last stage (the file merging) from becoming the bottleneck.
* Now in Daijin BLAST chunks will always be at least equal to the number of threads (to ensure proper parallelism)",ujson python-rapidjson,"
* Switched from the unsupported `ujson` to the as-rapid and maintained `rapidjson`
* Cleaning up a little bit the configuration file",5,Serialization,Serialization,False,False
4499,Kinto/kinto,951dd25ca87f6e4b47a87d254cc187331c4d031c,2021-07-02 09:06:36,python-rapidjson,ujson,Replace ujson by rapidjson (#2737),ujson python-rapidjson,"
Replace ujson by rapidjson (#2737)",5,Serialization,Serialization,False,False
4500,freqtrade/freqtrade,c955415cc3b13a9cda40a10b13f898fbf9342b81,2018-12-28 09:01:16,python-rapidjson,ujson,Switch from ujson to rapidjson,ujson python-rapidjson,"
Switch from ujson to rapidjson",5,Serialization,Serialization,False,False
4502,murthylab/sleap,50721de04719ea3064650cacba3ffba6456e69b7,2019-07-31 19:29:49,python-rapidjson,ujson,"Switched ujson out for rapidjson.

ujson was crashing on deserialization, yikes!",ujson python-rapidjson,"
Switched ujson out for rapidjson.",5,Serialization,Serialization,False,False
4503,EPAENERGYSTAR/epathermostat,cbffb3afa43c5b63a3c3085acb40576605288c45,2015-10-23 17:36:51,pytest,pandas,Update tests and example files,pandas pytest,"
Update tests and example files",10,Scientific&Testing,Scientific,False,False
4504,Microsoft/fairlearn,1db0996b4c31f92b6db8adac0b70c38086baea4c,2020-02-11 20:19:15,pytest,pandas,"Support for multiple sensitive features (#280)

* remove exta comma

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* string changes

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* missed a few

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Developer Certificate of Origin and Code of Conduct updates (#130)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update contact details (#131)

The `setup.py` script was still pointing just at Miro.

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix text

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update chart sublabels

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* package update

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* with retry

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* last tweaks

Signed-off-by: Brandon Horn <rihorn@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update short description as agreed (#139)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update email address (#142)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Turn off Python 3.5 for Notebooks (#143)

Having trouble with Python 3.5 in the Notebooks build
Since this was a recent addition, turn it back off pending debug

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* README update for v0.3.0 release (#141)

Update ReadMe for release

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

Signed-off-by: Miro Dudik <mdudik@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix ReadMe characters (#147)

Back port some fixes for 'special' characters in the ReadMe from the release branch
Can't just cherry pick the changeset since other release-only changes were made

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh upgrade to v0.1.7 to fix notebooks in python 3.5 (#145)

* tempeh upgrade, should fix py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* restrict macos to 3.6+ again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* polish and fix contributing.md (#146)

* polish and fix contributing.md

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* remove _pmf_predict and rephrase 'allow providing'

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* Update section on creating new releases

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Link fixing

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* fix TestPyPI and remove conda

Signed-off-by: Miro Dudik <mdudik@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add logging for GridSearch (#150)

Put in some basic logging for `GridSearch`
Remove annoying console output from `ExponentiatedGradient` smoke tests

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add regression metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address comments and add descriptions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Postprocessing documentation updates (#152)

* lots of documentation, minor simplifications

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* complete documentation updates for postprocessing

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add test case for degenerate labels

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update notebook with renamed functions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* a few more corrections in the notebook from attribute -> sensitive_feature

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move changes to the correct notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* improve _pmf_predict return description based on feedback

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add authors page (#149)

* authors page

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add user study

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add CODEOWNERS and get rid of detailed descriptions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logging file initialization (#153)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Exponentiated Gradient documentation updates (#151)

* first pass at expgrad related doc updates

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix typo

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Make second linprog call use simplex method (#154)

Ensure second call to `linprog` uses same algorithm as the first

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh v0.1.8 (#155)

Upgrade to have simpler dataset formatting for notebooks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Single element fix for group metrics (#158)

It turns out that `numpy.squeeze([1])` results in a scalar and not a single element array
This was causing trouble with the group metrics when only a single prediction was passed
Issues also showed up in the mean prediction metrics, which made a similar call

Solution is to add a helper function (with tests) to check for this case, and ensure that a `numpy.ndarray` is always returned

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Allow a release candidate to be specified via environment variable (#159)

Add logic to `__init__.py` to allow a release candidate number to be specified via an environment variable
The goal of this is to allow us to push different versions to PyPI-Test without affecting the version which is ultimately pushed to PyPI itself

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tweak text

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Binning of numeric sensitive features (#157)

* first pass at binning control

* report and multimodel handle NaN

* some styling

* build with numeric bins

* styled to comments

* update built files

* morre style

* update style and tooltips

* build generated files

* fix styling of tile

* rename to y_true

* missed rename

* allow dictionary ofy_pred with names

* comment

* patch regression to probit bug

* include ipywidgets in requirements

* flake comment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Initial Pipeline for PyPI releases (#160)

An initial attempt at a pipeline for performing PyPI releases. The pipeline does the following
- Prevalidation
- For PyPI-Test
  - Creates the wheels
  - Uploads to PyPI-Test
  - Fetches the package using `pip install` and runs our tests
- Repeats the above for PyPI

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Version bump (#161)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix probit case (#162)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix name duplication (#163)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add balanced accuracy (#164)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Change macOS agent to be the latest (#165)

Trying to work around an ongoing issue with Azure Pipelines:
https://status.dev.azure.com/_event/159022677

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Change to an alpha release (#166)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Model ID and text changes (#168)

* make small changes

* one more string fix

* the steps with updating new npm package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Improve flexibility of release versions (#170)

Change the logic which adjusts the version uploaded to PyPI-Test by the release pipeline so that it appends `.dev[n]` rather than `rc[n]` .This change allows releases to be specified as alpha, beta or release candidate in the `_base_version` specified in `__init__.py`.

Also update the steps for performing a release on the Contributing page.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix probit issue (#172)

* fix name duplication (#163)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* add balanced accuracy (#164)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Change macOS agent to be the latest (#165)

Trying to work around an ongoing issue with Azure Pipelines:
https://status.dev.azure.com/_event/159022677

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Change to an alpha release (#166)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* make small changes

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* one more string fix

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* the steps with updating new npm package

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* fix probit

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Improve flexibility of release versions (#170)

Change the logic which adjusts the version uploaded to PyPI-Test by the release pipeline so that it appends `.dev[n]` rather than `rc[n]` .This change allows releases to be specified as alpha, beta or release candidate in the `_base_version` specified in `__init__.py`.

Also update the steps for performing a release on the Contributing page.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* version numbers

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Include yarn build in deployment pipeline (#174)

Update the deployment pipeline so that it runs `yarn` to build the widget code

This enables the removal of some automatically generated files from our repository

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Dashboard for Census Notebook (#171)

Update the existing Census notebook for grid search to use the new dashboard. The bulk of the notebook is unchanged (including the fictional motivating scenario).

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Stop installing old dashboard (#176)

Have moved notebooks off the old dashboard. Remove dependency from pipelines

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update ReadMe with Yarn instructions (#177)

Now that the dashboard tarball is no longer checked in, provide instructions on creating it in a cloned repo

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Standardise input convertors for test (#178)

Create and use a standard set of convertors for use with our 'argument type' tests. This has required adding several `__init__.py` files to the `test` directory to enable `pytest` to find the common code.

Also add an 'argument type' test to `ExponentiatedGradient`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Small fixes to get the documentation appearing (#179)

Fix issues in getting documentation to appear in Sphinx.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* law school notebook (#169)

* law school notebook

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* Remove hypens from filename
Some copy edit fixes
Correct suspected bug in ExponentiatedGradient section

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Didn't quite undo all my temporary changes

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* address some of the comments

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* Fix typo in name

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Improve spacing and add a comment in expgrad section

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* add AUC explanation

Signed-off-by: Miro Dudik <mdudik@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Code cleanups (#181)

Fix some minor things:
- Make the dashboard use the same copyright notice as the rest of the code
- Some renaming of `expgrad` to `ExponentiatedGradient`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Build the widget (#185)

Add a job template which builds the widget to the PR-Gate, Nightly and Nightly-Fixed builds. Note that this does not run any tests, but just ensures that the widget builds successfully

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update logging to use FileHandler instead of basicConfig (#175)

Signed-off-by: Ilya Matiach <ilmat@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Enable ReadTheDocs (#182)

Change how the documentation is done slightly, so that our documentation can show up on ReadTheDocs. Some additional copy-editing of the in-code documentation has been done as a result of this.

The docs should appear at:
https://fairlearn.readthedocs.io/en/latest/

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Pin scikit-learn (#189)

The recent update to scikit-learn is causing a break in one of the Notebooks. Until this is debugged, pin the version

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add more flake8 checks (#187)

Add a number of extra flake8 checks:
- flake8-blind-except
- flake8-builtins
- flake8-docstrings
- flake8-logging-format
- flake8-rst-docstrings

Since these create a huge number of issues, suppress a lot of these for now in `setup.cfg` (plus a handful of special cases done inline). Put in fixes for the simpler complaints, such as:
- Separate summaries in docstrings
- Spacing within and around docstrings
- Deferring string interpolation in `logging` calls

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Rename files and update license and docs (#183)

* rename  files

* update comment

* update license

* address comments

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix for Law School Notebook (#191)

Tweak the Law School notebook so that it works with the latest `scikit-learn`

This enables us to unpin the version of `scikit-learn` in our `requirements.txt` file

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Markdown updates based on doc bash (#186)

* address feedback from doc bash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex updates

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex update

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex update

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo latex changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove commas

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* rephrasing postprocessing constructor requirements

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* feedback from Miro

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Reorganise documentation (#192)

Reorganising how the documentation is presented, since the default style from `sphinx-apidoc` assumed we had lots of individual modules rather than larger packages

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Declare 0.4.0 release (#193)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Workaround Python 3.5 issue with Linux (#194)

An issue with the `pip` install of `shap` has appeared on the Linux agents under Python 3.5. Reasons are currently obscure, but this is blocking a release. Since Python 3.5 continues to work on Windows, rely on that (pending further debugging)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix classification classification bug (#201)

* Update readme for v0.4.0 (#196)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Pin troublesome package (#198)

During our release process, a new version of `colorama` (required by one of our dependencies) was released. This has issues with the Windows/3.7 build.

Unblock the release by pinning the version

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* fix classification classification bug

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* version change to address security bug (#203)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix accidental merge (#205)

Some portions of the v0.4.0 release branch were accidentally merged into master
- Making the ReadMe version suitable for PyPI
- Pinning the `colorama` version to unblock the release train

This changeset undoes these fixes in master

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ReadMe Processor for Releases (#206)

Create a python script to translate `ReadMe.md` from GitHub to PyPI. This will avoid the need to create a branch to do a release.

This script is slightly dependent on the structure of the file, so if there are substantial changes to that, this script will require updating. It also assumes that a tag `v(fairlearn.__version__)` exists in the repo.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Track pip dependencies (#208)

We've had trouble with our dependencies updating and breaking our builds

Augment the build pipelines so that they publish the output of `pip freeze` to an artifact. This will aid debugging these issues. The name of both the artifact itself and the file therein can be specified.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Remove some flake8 global suppressions (#209)

After adding more `flake8` analysers, we were obliged to put in some global suppressions to keep the number of issues manageable. Start the process of removing these with D102, D103 and D401. Some of these just move the suppression to file-level, while others tweak documentation blocks to suit.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Re-enable Linux 3.5 (#210)

Roman figured out a workaround for getting `shap` installed with Linux and Python 3.5. Put this into `fairlearn`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Expand Notebook testing (#212)

Increase the variety of platforms used for testing our Jupyter Notebooks. Unable to test on MacOS at present, due to some problem installing `lightgbm`.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Improvements for pinning requirements (#213)

A better way of running our tests with pinned requirements. Rather than have a separate `requirements-fixed.txt` file, have a script to turn the `requirements.txt` file into the former. Update builds accordingly.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Standardise ML argument documentation (#214)

Make our documentation of fit(), X, predict() etc. more standard between our various submodules.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf test through Azure ML (#180)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Documentation and flake8 (#215)

Various updates for the documentation:
- Remove another `flake8` global suppression
- Add explanations for remaining `flake8` suppressions
- Replace the `:any:` references in the documentation with appropriate ones
- Make some file-level suppressions (which may have actually turned `flake8` off entirely on the file) specific to the appropriate lines

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update Release pipeline after KV move (#216)

The KeyVault containing the PyPI secrets has been moved to a more appropriate subscription. As a result, the Release pipeline needs to be updated with the correct service connection

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic unit tests for EqualizedOdds and DemographicParity moments (#217)

Some very basic unit tests for the `EqualizedOdds` and `DemographicParity` moment classes. These are 'pinning' tests two establish the behaviour of these classes. The `gamma` method is not yet included in these tests, since that requires a trained model.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add more time metrics to performance tests (#219)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix perf tests by logging lists through log_list instead of log (#221)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bug fix for list logging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make metric logging a lot more readable and provide additional metrics to show the overhead fairlearn adds (#228)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Convert Notebook tests to papermill (#223)

Rather than using `nbval`, convert our notebook tests to use `papermill`. With the help of `nteract-scrapbook` we can then examine the contents of particular variables from the notebooks to ensure that we're getting the expected results.

Explicit `scrapbook` commands are required to save out values for future examination, but we don't want to include these when our users look at the notebooks. Accordingly, we include machinery for adding the necessary cells to the notebooks dynamically.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Bump dashboard npm package to match source code (#229)

* publish latest version

* update docs for push

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Remove unused ReST files (#233)

Two of the ReST files generated by sphinx-autodoc weren't actually used. Remove them to get rid of a warning.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic Moments documentation (#241)

Add some basic documentation of the `Moment` class and its subclasses.

Also:
- Turn the `n` field of the `Moment` object into a `total_samples` property
- Add `intersphinx` hook for `pandas` documentation

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* [WIP] create extensions to install custom plots separately & check in generated files (#240)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add logging variant of numpy.all_close (#246)

The `numpy` package provides an `all_close` routine for comparing two arrays. Unfortunately, there's no mechanism for showing which elements failed the comparison. Put together a wrapper based on `numpy.isclose` which will print out information about failed comparisons.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Implement GroupMetricSet (#250)

Create a `GroupMetricSet` class for holding collections of grouped metrics. This is to help with AzureML integration.

There has been some (possibly unnecessary) reorganisation of things under `fairlearn/metrics` but the public interface is unchanged.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Exclude install tests in code coverage check (#251)

* ignore install tests since they'll unexpectedly work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add python -m before pip install

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade tempeh to v0.1.12

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Replace powershell scripts with python and add Makefile (#249)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* rewrite scripts in python

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace widget build script with python script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget adjustments to make it work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget finalization plus add ls commands to find yarn installation in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* some more paths to check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* task -> script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* usr/bin/yarn check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* workingDirectory adjustment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustment for fairlearn root dir check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ./

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix template

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* comment about set-variable-from-file script only being required in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add makefile, update contributing guide, and replace remaining ps1 occurrences in pipeline ymls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add romanlutz to codeowners for scripts dir

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix comment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make process_readme a standalone script again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* delete build_docs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* makefile adjustments according to feedback

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try out multiple sensitive features using new tempeh features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix pypi release yaml (#260)

* undo erroneous changes to yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo prior erroneous change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace job template usage with just a step

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add CHANGES.md for v0.4.2 (#262)

* add CHANGES.md for v0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add general instructions to always do that

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update CHANGES.md

Adding `GroupMetricSet` to the changelog

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* comment out test that fails consistently only on windows

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix readme processing script by adding fairlearn dir to sys path, add second solution for issue 265

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix syntax error, flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bump version to 0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* test with list of lists instead of single list

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update metric keys to match dashboard (#268)

The dashboard already had its own keys defined for mapping metric functions to strings. Update the `GroupMetricSet` to use the same keys.

Figuring out how to unify the two implementations of this mapping is left as a issue #269 

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix release blockers - widget generated files, widget validation (#267)

* add built widget file updates & fix widget build validation, as well as pypi release template for empty DEV_VERSION

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo DEV_VERSION change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add comment and link to issue

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* trying out notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove --assert-no-changes flag in release as well (#272)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update default metrics in GroupMetricSet (#271)

Tweak the list of metrics computed by default by the `compute` method of `GroupMetricSet` to match those expected by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjust notebook to work with multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* input transformation for reductions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* set env var before installing fairlearn to correct version file name content (#274)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* MNT use sklearn's NotFittedError instead of NotFittedException (#259)

* MNT use sklearn's NotFittedError instead of NotFittedException

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* add to the changelog

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* multiple sensitive features (passing tests)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get tests to pass again after reformatting input data

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* switch to commas as separators

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use sklearn input validation and get all tests to pass (grid search to be investigated)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix numerical inconsistencies due to rounding to int; fix warning from 2d arrays

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove last warnings

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo notebook changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove TODO that was fixed with removing the int-rounding earlier

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use fixtures to reduce parametrization duplication

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* avoid fixture data corruption by doing deepcopy

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* grid search tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix pypi release yaml (#260)

* undo erroneous changes to yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo prior erroneous change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace job template usage with just a step

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add CHANGES.md for v0.4.2 (#262)

* add CHANGES.md for v0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add general instructions to always do that

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update CHANGES.md

Adding `GroupMetricSet` to the changelog

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* comment out test that fails consistently only on windows

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix readme processing script by adding fairlearn dir to sys path, add second solution for issue 265

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix syntax error, flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bump version to 0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* test with list of lists instead of single list

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove --assert-no-changes flag in release as well (#272)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update default metrics in GroupMetricSet (#271)

Tweak the list of metrics computed by default by the `compute` method of `GroupMetricSet` to match those expected by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjust notebook to work with multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* MNT use sklearn's NotFittedError instead of NotFittedException (#259)

* MNT use sklearn's NotFittedError instead of NotFittedException

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* add to the changelog

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* input transformation for reductions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Updates for GroupMetricResult and GroupMetricSet (#279)

Add (in)equality operators to `GroupMetricResult` and `GroupMetricSet`, along with basic tests. These will simplify other testing in future.

Change `GroupMetricSet` so that the `groups` have to be specified as sequential integers from zero. If this is not the case then the `compute()` method will remap the supplied groups to `[0, 1, 2, ….]` and put the stringified original values into the `group_names` property. Since the keys are now sequential integers, convert the `group_names` property itself from a dictionary into a list.

Closes #275

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* DOC contributing: trim lines and add notes on signoff (#276)

* DOC contributing: trim lines and add notes on signoff

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* hook

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* modify note to point to the right answer

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* multiple sensitive features (passing tests)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Further metric changes (#281)

A number of extra changes to metrics:

- `GroupMetricResult` now dynamically calculates `maximum`, `range` etc.
- `GroupMetricSet` has a consistency check
- `GroupMetricSet` can transform itself to and from a dictionary matching the schema used by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Preparations for v0.4.3 Release (#284)

Bump version and update Markdown files

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Use kwargs in metrics (#286)

Change `metric_by_group` and `make_group_metric` to understand `**kwargs`. This removes the need for lots of small wrapper functions

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add expgrad tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address ensure_ndarray_2d logic for clarity

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add skip reason for invalid tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Updates for GroupMetricResult and GroupMetricSet (#279)

Add (in)equality operators to `GroupMetricResult` and `GroupMetricSet`, along with basic tests. These will simplify other testing in future.

Change `GroupMetricSet` so that the `groups` have to be specified as sequential integers from zero. If this is not the case then the `compute()` method will remap the supplied groups to `[0, 1, 2, ….]` and put the stringified original values into the `group_names` property. Since the keys are now sequential integers, convert the `group_names` property itself from a dictionary into a list.

Closes #275

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* DOC contributing: trim lines and add notes on signoff (#276)

* DOC contributing: trim lines and add notes on signoff

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* hook

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* modify note to point to the right answer

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Further metric changes (#281)

A number of extra changes to metrics:

- `GroupMetricResult` now dynamically calculates `maximum`, `range` etc.
- `GroupMetricSet` has a consistency check
- `GroupMetricSet` can transform itself to and from a dictionary matching the schema used by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get tests to pass again after reformatting input data

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* switch to commas as separators

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Preparations for v0.4.3 Release (#284)

Bump version and update Markdown files

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use sklearn input validation and get all tests to pass (grid search to be investigated)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix numerical inconsistencies due to rounding to int; fix warning from 2d arrays

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove last warnings

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo notebook changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove TODO that was fixed with removing the int-rounding earlier

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use fixtures to reduce parametrization duplication

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* avoid fixture data corruption by doing deepcopy

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* grid search tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add expgrad tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address ensure_ndarray_2d logic for clarity

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Use kwargs in metrics (#286)

Change `metric_by_group` and `make_group_metric` to understand `**kwargs`. This removes the need for lots of small wrapper functions

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add skip reason for invalid tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* multiple sensitive features - postprocessing (#288)

* take changes from other branch that touches all modules

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get all tests working again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Dashboard for Census Notebook (#171)

Update the existing Census notebook for grid search to use the new dashboard. The bulk of the notebook is unchanged (including the fictional motivating scenario).

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Stop installing old dashboard (#176)

Have moved notebooks off the old dashboard. Remove dependency from pipelines

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update ReadMe with Yarn instructions (#177)

Now that the dashboard tarball is no longer checked in, provide instructions on creating it in a cloned repo

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Standardise input convertors for test (#178)

Create and use a standard set of convertors for use with our 'argument type' tests. This has required adding several `__init__.py` files to the `test` directory to enable `pytest` to find the common code.

Also add an 'argument type' test to `ExponentiatedGradient`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Small fixes to get the documentation appearing (#179)

Fix issues in getting documentation to appear in Sphinx.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* law school notebook (#169)

* law school notebook

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* Remove hypens from filename
Some copy edit fixes
Correct suspected bug in ExponentiatedGradient section

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Didn't quite undo all my temporary changes

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* address some of the comments

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* Fix typo in name

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Improve spacing and add a comment in expgrad section

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* add AUC explanation

Signed-off-by: Miro Dudik <mdudik@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Code cleanups (#181)

Fix some minor things:
- Make the dashboard use the same copyright notice as the rest of the code
- Some renaming of `expgrad` to `ExponentiatedGradient`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Build the widget (#185)

Add a job template which builds the widget to the PR-Gate, Nightly and Nightly-Fixed builds. Note that this does not run any tests, but just ensures that the widget builds successfully

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update logging to use FileHandler instead of basicConfig (#175)

Signed-off-by: Ilya Matiach <ilmat@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Enable ReadTheDocs (#182)

Change how the documentation is done slightly, so that our documentation can show up on ReadTheDocs. Some additional copy-editing of the in-code documentation has been done as a result of this.

The docs should appear at:
https://fairlearn.readthedocs.io/en/latest/

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Pin scikit-learn (#189)

The recent update to scikit-learn is causing a break in one of the Notebooks. Until this is debugged, pin the version

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add more flake8 checks (#187)

Add a number of extra flake8 checks:
- flake8-blind-except
- flake8-builtins
- flake8-docstrings
- flake8-logging-format
- flake8-rst-docstrings

Since these create a huge number of issues, suppress a lot of these for now in `setup.cfg` (plus a handful of special cases done inline). Put in fixes for the simpler complaints, such as:
- Separate summaries in docstrings
- Spacing within and around docstrings
- Deferring string interpolation in `logging` calls

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Rename files and update license and docs (#183)

* rename  files

* update comment

* update license

* address comments

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix for Law School Notebook (#191)

Tweak the Law School notebook so that it works with the latest `scikit-learn`

This enables us to unpin the version of `scikit-learn` in our `requirements.txt` file

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Markdown updates based on doc bash (#186)

* address feedback from doc bash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex updates

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex update

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex update

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo latex changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove commas

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* rephrasing postprocessing constructor requirements

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* feedback from Miro

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Reorganise documentation (#192)

Reorganising how the documentation is presented, since the default style from `sphinx-apidoc` assumed we had lots of individual modules rather than larger packages

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Declare 0.4.0 release (#193)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Workaround Python 3.5 issue with Linux (#194)

An issue with the `pip` install of `shap` has appeared on the Linux agents under Python 3.5. Reasons are currently obscure, but this is blocking a release. Since Python 3.5 continues to work on Windows, rely on that (pending further debugging)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix classification classification bug (#201)

* Update readme for v0.4.0 (#196)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Pin troublesome package (#198)

During our release process, a new version of `colorama` (required by one of our dependencies) was released. This has issues with the Windows/3.7 build.

Unblock the release by pinning the version

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* fix classification classification bug

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* version change to address security bug (#203)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix accidental merge (#205)

Some portions of the v0.4.0 release branch were accidentally merged into master
- Making the ReadMe version suitable for PyPI
- Pinning the `colorama` version to unblock the release train

This changeset undoes these fixes in master

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ReadMe Processor for Releases (#206)

Create a python script to translate `ReadMe.md` from GitHub to PyPI. This will avoid the need to create a branch to do a release.

This script is slightly dependent on the structure of the file, so if there are substantial changes to that, this script will require updating. It also assumes that a tag `v(fairlearn.__version__)` exists in the repo.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Track pip dependencies (#208)

We've had trouble with our dependencies updating and breaking our builds

Augment the build pipelines so that they publish the output of `pip freeze` to an artifact. This will aid debugging these issues. The name of both the artifact itself and the file therein can be specified.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Remove some flake8 global suppressions (#209)

After adding more `flake8` analysers, we were obliged to put in some global suppressions to keep the number of issues manageable. Start the process of removing these with D102, D103 and D401. Some of these just move the suppression to file-level, while others tweak documentation blocks to suit.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Re-enable Linux 3.5 (#210)

Roman figured out a workaround for getting `shap` installed with Linux and Python 3.5. Put this into `fairlearn`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Expand Notebook testing (#212)

Increase the variety of platforms used for testing our Jupyter Notebooks. Unable to test on MacOS at present, due to some problem installing `lightgbm`.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Improvements for pinning requirements (#213)

A better way of running our tests with pinned requirements. Rather than have a separate `requirements-fixed.txt` file, have a script to turn the `requirements.txt` file into the former. Update builds accordingly.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Standardise ML argument documentation (#214)

Make our documentation of fit(), X, predict() etc. more standard between our various submodules.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf test through Azure ML (#180)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Documentation and flake8 (#215)

Various updates for the documentation:
- Remove another `flake8` global suppression
- Add explanations for remaining `flake8` suppressions
- Replace the `:any:` references in the documentation with appropriate ones
- Make some file-level suppressions (which may have actually turned `flake8` off entirely on the file) specific to the appropriate lines

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update Release pipeline after KV move (#216)

The KeyVault containing the PyPI secrets has been moved to a more appropriate subscription. As a result, the Release pipeline needs to be updated with the correct service connection

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic unit tests for EqualizedOdds and DemographicParity moments (#217)

Some very basic unit tests for the `EqualizedOdds` and `DemographicParity` moment classes. These are 'pinning' tests two establish the behaviour of these classes. The `gamma` method is not yet included in these tests, since that requires a trained model.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add more time metrics to performance tests (#219)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix perf tests by logging lists through log_list instead of log (#221)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bug fix for list logging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make metric logging a lot more readable and provide additional metrics to show the overhead fairlearn adds (#228)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Convert Notebook tests to papermill (#223)

Rather than using `nbval`, convert our notebook tests to use `papermill`. With the help of `nteract-scrapbook` we can then examine the contents of particular variables from the notebooks to ensure that we're getting the expected results.

Explicit `scrapbook` commands are required to save out values for future examination, but we don't want to include these when our users look at the notebooks. Accordingly, we include machinery for adding the necessary cells to the notebooks dynamically.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Bump dashboard npm package to match source code (#229)

* publish latest version

* update docs for push

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Remove unused ReST files (#233)

Two of the ReST files generated by sphinx-autodoc weren't actually used. Remove them to get rid of a warning.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic Moments documentation (#241)

Add some basic documentation of the `Moment` class and its subclasses.

Also:
- Turn the `n` field of the `Moment` object into a `total_samples` property
- Add `intersphinx` hook for `pandas` documentation

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* [WIP] create extensions to install custom plots separately & check in generated files (#240)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add logging variant of numpy.all_close (#246)

The `numpy` package provides an `all_close` routine for comparing two arrays. Unfortunately, there's no mechanism for showing which elements failed the comparison. Put together a wrapper based on `numpy.isclose` which will print out information about failed comparisons.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Implement GroupMetricSet (#250)

Create a `GroupMetricSet` class for holding collections of grouped metrics. This is to help with AzureML integration.

There has been some (possibly unnecessary) reorganisation of things under `fairlearn/metrics` but the public interface is unchanged.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Exclude install tests in code coverage check (#251)

* ignore install tests since they'll unexpectedly work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add python -m before pip install

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade tempeh to v0.1.12

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Replace powershell scripts with python and add Makefile (#249)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* rewrite scripts in python

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace widget build script with python script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget adjustments to make it work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget finalization plus add ls commands to find yarn installation in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* some more paths to check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* task -> script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* usr/bin/yarn check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* workingDirectory adjustment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustment for fairlearn root dir check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ./

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix template

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* comment about set-variable-from-file script only being required in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add makefile, update contributing guide, and replace remaining ps1 occurrences in pipeline ymls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add romanlutz to codeowners for scripts dir

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix comment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make process_readme a standalone script again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* delete build_docs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* makefile adjustments according to feedback

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix pypi release yaml (#260)

* undo erroneous changes to yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo prior erroneous change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace job template usage with just a step

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add CHANGES.md for v0.4.2 (#262)

* add CHANGES.md for v0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add general instructions to always do that

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update CHANGES.md

Adding `GroupMetricSet` to the changelog

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* comment out test that fails consistently only on windows

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix readme processing script by adding fairlearn dir to sys path, add second solution for issue 265

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix syntax error, flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bump version to 0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* test with list of lists instead of single list

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update metric keys to match dashboard (#268)

The dashboard already had its own keys defined for mapping metric functions to strings. Update the `GroupMetricSet` to use the same keys.

Figuring out how to unify the two implementations of this mapping is left as a issue #269 

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix release blockers - widget generated files, widget validation (#267)

* add built widget file updates & fix widget build validation, as well as pypi release template for empty DEV_VERSION

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo DEV_VERSION change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add comment and link to issue

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove --assert-no-changes flag in release as well (#272)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update default metrics in GroupMetricSet (#271)

Tweak the list of metrics computed by default by the `compute` method of `GroupMetricSet` to match those expected by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* set env var before installing fairlearn to correct version file name content (#274)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* MNT use sklearn's NotFittedError instead of NotFittedException (#259)

* MNT use sklearn's NotFittedError instead of NotFittedException

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* add to the changelog

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Updates for GroupMetricResult and GroupMetricSet (#279)

Add (in)equality operators to `GroupMetricResult` and `GroupMetricSet`, along with basic tests. These will simplify other testing in future.

Change `GroupMetricSet` so that the `groups` have to be specified as sequential integers from zero. If this is not the case then the `compute()` method will remap the supplied groups to `[0, 1, 2, ….]` and put the stringified original values into the `group_names` property. Since the keys are now sequential integers, convert the `group_names` property itself from a dictionary into a list.

Closes #275

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* DOC contributing: trim lines and add notes on signoff (#276)

* DOC contributing: trim lines and add notes on signoff

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* hook

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* modify note to point to the right answer

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Further metric changes (#281)

A number of extra changes to metrics:

- `GroupMetricResult` now dynamically calculates `maximum`, `range` etc.
- `GroupMetricSet` has a consistency check
- `GroupMetricSet` can transform itself to and from a dictionary matching the schema used by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Preparations for v0.4.3 Release (#284)

Bump version and update Markdown files

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Use kwargs in metrics (#286)

Change `metric_by_group` and `make_group_metric` to understand `**kwargs`. This removes the need for lots of small wrapper functions

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* take changes from other branch that touches all modules

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get all tests working again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* squeeze instead of reshape, deselect instead of skip in pytest, utility function for compression

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Co-authored-by: MiroDudik <mdudik@gmail.com>
Co-authored-by: Ilya Matiach <ilmat@microsoft.com>
Co-authored-by: Brandon Horn <rihorn@microsoft.com>
Co-authored-by: Adrin Jalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get tests passing again after merging with master

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ReadMe Processor for Releases (#206)

Create a python script to translate `ReadMe.md` from GitHub to PyPI. This will avoid the need to create a branch to do a release.

This script is slightly dependent on the structure of the file, so if there are substantial changes to that, this script will require updating. It also assumes that a tag `v(fairlearn.__version__)` exists in the repo.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Track pip dependencies (#208)

We've had trouble with our dependencies updating and breaking our builds

Augment the build pipelines so that they publish the output of `pip freeze` to an artifact. This will aid debugging these issues. The name of both the artifact itself and the file therein can be specified.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Remove some flake8 global suppressions (#209)

After adding more `flake8` analysers, we were obliged to put in some global suppressions to keep the number of issues manageable. Start the process of removing these with D102, D103 and D401. Some of these just move the suppression to file-level, while others tweak documentation blocks to suit.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Re-enable Linux 3.5 (#210)

Roman figured out a workaround for getting `shap` installed with Linux and Python 3.5. Put this into `fairlearn`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Expand Notebook testing (#212)

Increase the variety of platforms used for testing our Jupyter Notebooks. Unable to test on MacOS at present, due to some problem installing `lightgbm`.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Improvements for pinning requirements (#213)

A better way of running our tests with pinned requirements. Rather than have a separate `requirements-fixed.txt` file, have a script to turn the `requirements.txt` file into the former. Update builds accordingly.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Standardise ML argument documentation (#214)

Make our documentation of fit(), X, predict() etc. more standard between our various submodules.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf test through Azure ML (#180)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Documentation and flake8 (#215)

Various updates for the documentation:
- Remove another `flake8` global suppression
- Add explanations for remaining `flake8` suppressions
- Replace the `:any:` references in the documentation with appropriate ones
- Make some file-level suppressions (which may have actually turned `flake8` off entirely on the file) specific to the appropriate lines

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Update Release pipeline after KV move (#216)

The KeyVault containing the PyPI secrets has been moved to a more appropriate subscription. As a result, the Release pipeline needs to be updated with the correct service connection

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic unit tests for EqualizedOdds and DemographicParity moments (#217)

Some very basic unit tests for the `EqualizedOdds` and `DemographicParity` moment classes. These are 'pinning' tests two establish the behaviour of these classes. The `gamma` method is not yet included in these tests, since that requires a trained model.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add more time metrics to performance tests (#219)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix perf tests by logging lists through log_list instead of log (#221)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bug fix for list logging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make metric logging a lot more readable and provide additional metrics to show the overhead fairlearn adds (#228)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Convert Notebook tests to papermill (#223)

Rather than using `nbval`, convert our notebook tests to use `papermill`. With the help of `nteract-scrapbook` we can then examine the contents of particular variables from the notebooks to ensure that we're getting the expected results.

Explicit `scrapbook` commands are required to save out values for future examination, but we don't want to include these when our users look at the notebooks. Accordingly, we include machinery for adding the necessary cells to the notebooks dynamically.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Bump dashboard npm package to match source code (#229)

* publish latest version

* update docs for push

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Remove unused ReST files (#233)

Two of the ReST files generated by sphinx-autodoc weren't actually used. Remove them to get rid of a warning.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic Moments documentation (#241)

Add some basic documentation of the `Moment` class and its subclasses.

Also:
- Turn the `n` field of the `Moment` object into a `total_samples` property
- Add `intersphinx` hook for `pandas` documentation

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* [WIP] create extensions to install custom plots separately & check in generated files (#240)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add logging variant of numpy.all_close (#246)

The `numpy` package provides an `all_close` routine for comparing two arrays. Unfortunately, there's no mechanism for showing which elements failed the comparison. Put together a wrapper based on `numpy.isclose` which will print out information about failed comparisons.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Implement GroupMetricSet (#250)

Create a `GroupMetricSet` class for holding collections of grouped metrics. This is to help with AzureML integration.

There has been some (possibly unnecessary) reorganisation of things under `fairlearn/metrics` but the public interface is unchanged.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Exclude install tests in code coverage check (#251)

* ignore install tests since they'll unexpectedly work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add python -m before pip install

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade tempeh to v0.1.12

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Replace powershell scripts with python and add Makefile (#249)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* rewrite scripts in python

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace widget build script with python script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget adjustments to make it work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget finalization plus add ls commands to find yarn installation in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* some more paths to check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* task -> script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* usr/bin/yarn check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* workingDirectory adjustment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustment for fairlearn root dir check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ./

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix template

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* comment about set-variable-from-file script only being required in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add makefile, update contributing guide, and replace remaining ps1 occurrences in pipeline ymls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add romanlutz to codeowners for scripts dir

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix comment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make process_readme a standalone script again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* delete build_docs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* makefile adjustments according to feedback

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try out multiple sensitive features using new tempeh features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix pypi release yaml (#260)

* undo erroneous changes to yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo prior erroneous change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace job template usage with just a step

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add CHANGES.md for v0.4.2 (#262)

* add CHANGES.md for v0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add general instructions to always do that

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update CHANGES.md

Adding `GroupMetricSet` to the changelog

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* comment out test that fails consistently only on windows

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix readme processing script by adding fairlearn dir to sys path, add second solution for issue 265

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix syntax error, flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bump version to 0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* test with list of lists instead of single list

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* trying out notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update metric keys to match dashboard (#268)

The dashboard already had its own keys defined for mapping metric functions to strings. Update the `GroupMetricSet` to use the same keys.

Figuring out how to unify the two implementations of this mapping is left as a issue #269 

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix release blockers - widget generated files, widget validation (#267)

* add built widget file updates & fix widget build validation, as well as pypi release template for empty DEV_VERSION

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo DEV_VERSION change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add comment and link to issue

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove --assert-no-changes flag in release as well (#272)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update default metrics in GroupMetricSet (#271)

Tweak the list of metrics computed by default by the `compute` method of `GroupMetricSet` to match those expected by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjust notebook to work with multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* set env var before installing fairlearn to correct version file name content (#274)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* MNT use sklearn's NotFittedError instead of NotFittedException (#259)

* MNT use sklearn's NotFittedError instead of NotFittedException

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* add to the changelog

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* input transformation for reductions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* multiple sensitive features (passing tests)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get tests to pass again after reformatting input data

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* switch to commas as separators

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use sklearn input validation and get all tests to pass (grid search to be investigated)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix numerical inconsistencies due to rounding to int; fix warning from 2d arrays

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Updates for GroupMetricResult and GroupMetricSet (#279)

Add (in)equality operators to `GroupMetricResult` and `GroupMetricSet`, along with basic tests. These will simplify other testing in future.

Change `GroupMetricSet` so that the `groups` have to be specified as sequential integers from zero. If this is not the case then the `compute()` method will remap the supplied groups to `[0, 1, 2, ….]` and put the stringified original values into the `group_names` property. Since the keys are now sequential integers, convert the `group_names` property itself from a dictionary into a list.

Closes #275

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* DOC contributing: trim lines and add notes on signoff (#276)

* DOC contributing: trim lines and add notes on signoff

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* hook

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* modify note to point to the right answer

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Further metric changes (#281)

A number of extra changes to metrics:

- `GroupMetricResult` now dynamically calculates `maximum`, `range` etc.
- `GroupMetricSet` has a consistency check
- `GroupMetricSet` can transform itself to and from a dictionary matching the schema used by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Preparations for v0.4.3 Release (#284)

Bump version and update Markdown files

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Use kwargs in metrics (#286)

Change `metric_by_group` and `make_group_metric` to understand `**kwargs`. This removes the need for lots of small wrapper functions

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove last warnings

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo notebook changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove TODO that was fixed with removing the int-rounding earlier

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use fixtures to reduce parametrization duplication

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* avoid fixture data corruption by doing deepcopy

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* grid search tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add expgrad tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address ensure_ndarray_2d logic for clarity

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add skip reason for invalid tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix pypi release yaml (#260)

* undo erroneous changes to yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo prior erroneous change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace job template usage with just a step

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add CHANGES.md for v0.4.2 (#262)

* add CHANGES.md for v0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add general instructions to always do that

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update CHANGES.md

Adding `GroupMetricSet` to the changelog

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* comment out test that fails consistently only on windows

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix readme processing script by adding fairlearn dir to sys path, add second solution for issue 265

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix syntax error, flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bump version to 0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* test with list of lists instead of single list

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update metric keys to match dashboard (#268)

The dashboard already had its own keys defined for mapping metric functions to strings. Update the `GroupMetricSet` to use the same keys.

Figuring out how to unify the two implementations of this mapping is left as a issue #269

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix release blockers - widget generated files, widget validation (#267)

* add built widget file updates & fix widget build validation, as well as pypi release template for empty DEV_VERSION

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo DEV_VERSION change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add comment and link to issue

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove --assert-no-changes flag in release as well (#272)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update default metrics in GroupMetricSet (#271)

Tweak the list of metrics computed by default by the `compute` method of `GroupMetricSet` to match those expected by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjust notebook to work with multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* input transformation for reductions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* set env var before installing fairlearn to correct version file name content (#274)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* MNT use sklearn's NotFittedError instead of NotFittedException (#259)

* MNT use sklearn's NotFittedError instead of NotFittedException

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* add to the changelog

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* multiple sensitive features (passing tests)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get tests to pass again after reformatting input data

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* switch to commas as separators

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Updates for GroupMetricResult and GroupMetricSet (#279)

Add (in)equality operators to `GroupMetricResult` and `GroupMetricSet`, along with basic tests. These will simplify other testing in future.

Change `GroupMetricSet` so that the `groups` have to be specified as sequential integers from zero. If this is not the case then the `compute()` method will remap the supplied groups to `[0, 1, 2, ….]` and put the stringified original values into the `group_names` property. Since the keys are now sequential integers, convert the `group_names` property itself from a dictionary into a list.

Closes #275

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* DOC contributing: trim lines and add notes on signoff (#276)

* DOC contributing: trim lines and add notes on signoff

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* hook

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* modify note to point to the right answer

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Further metric changes (#281)

A number of extra changes to metrics:

- `GroupMetricResult` now dynamically calculates `maximum`, `range` etc.
- `GroupMetricSet` has a consistency check
- `GroupMetricSet` can transform itself to and from a dictionary matching the schema used by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Preparations for v0.4.3 Release (#284)

Bump version and update Markdown files

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use sklearn input validation and get all tests to pass (grid search to be investigated)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix numerical inconsistencies due to rounding to int; fix warning from 2d arrays

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove last warnings

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo notebook changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove TODO that was fixed with removing the int-rounding earlier

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use fixtures to reduce parametrization duplication

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* avoid fixture data corruption by doing deepcopy

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* grid search tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add expgrad tests for multiple sensitive features

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address ensure_ndarray_2d logic for clarity

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Use kwargs in metrics (#286)

Change `metric_by_group` and `make_group_metric` to understand `**kwargs`. This removes the need for lots of small wrapper functions

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add skip reason for invalid tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* multiple sensitive features - postprocessing (#288)

* take changes from other branch that touches all modules

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get all tests working again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Dashboard for Census Notebook (#171)

Update the existing Census notebook for grid search to use the new dashboard. The bulk of the notebook is unchanged (including the fictional motivating scenario).

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Stop installing old dashboard (#176)

Have moved notebooks off the old dashboard. Remove dependency from pipelines

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update ReadMe with Yarn instructions (#177)

Now that the dashboard tarball is no longer checked in, provide instructions on creating it in a cloned repo

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Standardise input convertors for test (#178)

Create and use a standard set of convertors for use with our 'argument type' tests. This has required adding several `__init__.py` files to the `test` directory to enable `pytest` to find the common code.

Also add an 'argument type' test to `ExponentiatedGradient`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Small fixes to get the documentation appearing (#179)

Fix issues in getting documentation to appear in Sphinx.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* law school notebook (#169)

* law school notebook

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* Remove hypens from filename
Some copy edit fixes
Correct suspected bug in ExponentiatedGradient section

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Didn't quite undo all my temporary changes

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* address some of the comments

Signed-off-by: Miro Dudik <mdudik@gmail.com>

* Fix typo in name

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Improve spacing and add a comment in expgrad section

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* add AUC explanation

Signed-off-by: Miro Dudik <mdudik@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Code cleanups (#181)

Fix some minor things:
- Make the dashboard use the same copyright notice as the rest of the code
- Some renaming of `expgrad` to `ExponentiatedGradient`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Build the widget (#185)

Add a job template which builds the widget to the PR-Gate, Nightly and Nightly-Fixed builds. Note that this does not run any tests, but just ensures that the widget builds successfully

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update logging to use FileHandler instead of basicConfig (#175)

Signed-off-by: Ilya Matiach <ilmat@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Enable ReadTheDocs (#182)

Change how the documentation is done slightly, so that our documentation can show up on ReadTheDocs. Some additional copy-editing of the in-code documentation has been done as a result of this.

The docs should appear at:
https://fairlearn.readthedocs.io/en/latest/

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Pin scikit-learn (#189)

The recent update to scikit-learn is causing a break in one of the Notebooks. Until this is debugged, pin the version

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add more flake8 checks (#187)

Add a number of extra flake8 checks:
- flake8-blind-except
- flake8-builtins
- flake8-docstrings
- flake8-logging-format
- flake8-rst-docstrings

Since these create a huge number of issues, suppress a lot of these for now in `setup.cfg` (plus a handful of special cases done inline). Put in fixes for the simpler complaints, such as:
- Separate summaries in docstrings
- Spacing within and around docstrings
- Deferring string interpolation in `logging` calls

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Rename files and update license and docs (#183)

* rename  files

* update comment

* update license

* address comments

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix for Law School Notebook (#191)

Tweak the Law School notebook so that it works with the latest `scikit-learn`

This enables us to unpin the version of `scikit-learn` in our `requirements.txt` file

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Markdown updates based on doc bash (#186)

* address feedback from doc bash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex updates

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex update

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* latex update

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo latex changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove commas

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* rephrasing postprocessing constructor requirements

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* feedback from Miro

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Reorganise documentation (#192)

Reorganising how the documentation is presented, since the default style from `sphinx-apidoc` assumed we had lots of individual modules rather than larger packages

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Declare 0.4.0 release (#193)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Workaround Python 3.5 issue with Linux (#194)

An issue with the `pip` install of `shap` has appeared on the Linux agents under Python 3.5. Reasons are currently obscure, but this is blocking a release. Since Python 3.5 continues to work on Windows, rely on that (pending further debugging)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix classification classification bug (#201)

* Update readme for v0.4.0 (#196)

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* Pin troublesome package (#198)

During our release process, a new version of `colorama` (required by one of our dependencies) was released. This has issues with the Windows/3.7 build.

Unblock the release by pinning the version

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* fix classification classification bug

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* version change to address security bug (#203)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix accidental merge (#205)

Some portions of the v0.4.0 release branch were accidentally merged into master
- Making the ReadMe version suitable for PyPI
- Pinning the `colorama` version to unblock the release train

This changeset undoes these fixes in master

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ReadMe Processor for Releases (#206)

Create a python script to translate `ReadMe.md` from GitHub to PyPI. This will avoid the need to create a branch to do a release.

This script is slightly dependent on the structure of the file, so if there are substantial changes to that, this script will require updating. It also assumes that a tag `v(fairlearn.__version__)` exists in the repo.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Track pip dependencies (#208)

We've had trouble with our dependencies updating and breaking our builds

Augment the build pipelines so that they publish the output of `pip freeze` to an artifact. This will aid debugging these issues. The name of both the artifact itself and the file therein can be specified.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Remove some flake8 global suppressions (#209)

After adding more `flake8` analysers, we were obliged to put in some global suppressions to keep the number of issues manageable. Start the process of removing these with D102, D103 and D401. Some of these just move the suppression to file-level, while others tweak documentation blocks to suit.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Re-enable Linux 3.5 (#210)

Roman figured out a workaround for getting `shap` installed with Linux and Python 3.5. Put this into `fairlearn`

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Expand Notebook testing (#212)

Increase the variety of platforms used for testing our Jupyter Notebooks. Unable to test on MacOS at present, due to some problem installing `lightgbm`.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Improvements for pinning requirements (#213)

A better way of running our tests with pinned requirements. Rather than have a separate `requirements-fixed.txt` file, have a script to turn the `requirements.txt` file into the former. Update builds accordingly.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Standardise ML argument documentation (#214)

Make our documentation of fit(), X, predict() etc. more standard between our various submodules.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf test through Azure ML (#180)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Documentation and flake8 (#215)

Various updates for the documentation:
- Remove another `flake8` global suppression
- Add explanations for remaining `flake8` suppressions
- Replace the `:any:` references in the documentation with appropriate ones
- Make some file-level suppressions (which may have actually turned `flake8` off entirely on the file) specific to the appropriate lines

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update Release pipeline after KV move (#216)

The KeyVault containing the PyPI secrets has been moved to a more appropriate subscription. As a result, the Release pipeline needs to be updated with the correct service connection

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic unit tests for EqualizedOdds and DemographicParity moments (#217)

Some very basic unit tests for the `EqualizedOdds` and `DemographicParity` moment classes. These are 'pinning' tests two establish the behaviour of these classes. The `gamma` method is not yet included in these tests, since that requires a trained model.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add more time metrics to performance tests (#219)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix perf tests by logging lists through log_list instead of log (#221)

* perf test first version through Azure ML

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move some code to tempeh

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add missing files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* perf tests that get auth details through Azure Keyvault

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade to alpha tempeh version

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* exclude D100 and D103 for script generation python file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* move variables into nightly-perf.yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml sdk requirement for perf test

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove powershell syntax

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add cwd for tests

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print cwd

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove special working directory condition

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix directory handling based on ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to a2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print message for debugging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try upper case variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove extraneous dash

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* print env var names

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* try explicitly adding variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use variables directly, tempeh bump

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add hardcoced data as variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use windows instead of linux because some of the UI packages aren't available in linux

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add wheel dependency

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fake dashboard files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pass parameters for perf tests via args

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* yaml fix

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove waiting for run to complete

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* refactor to submit all jobs without waiting for result

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove obsolete gitignore line

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* tempeh bump to 0.1.11

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* azureml-sdk warning

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* pipeline improvements to use keyvault tasks

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* logically separate script generation into steps

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* simplify writing long string of = signs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace incorrect variables in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* use importerror instead of modulenotfounderror for py3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add PR trigger for changes to test/perf directory

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove output from notebook

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* quotes for yaml variables

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct parameter in yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add additional time-based metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustments to fix syntax errors and logical issues in the calculation of metrics

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add oracle calls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* custom metrics for executions times, min, max, mean

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo sphinx special docs for test/perf

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update description of oracle execution time properties

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bug fix for list logging

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make metric logging a lot more readable and provide additional metrics to show the overhead fairlearn adds (#228)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Convert Notebook tests to papermill (#223)

Rather than using `nbval`, convert our notebook tests to use `papermill`. With the help of `nteract-scrapbook` we can then examine the contents of particular variables from the notebooks to ensure that we're getting the expected results.

Explicit `scrapbook` commands are required to save out values for future examination, but we don't want to include these when our users look at the notebooks. Accordingly, we include machinery for adding the necessary cells to the notebooks dynamically.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Bump dashboard npm package to match source code (#229)

* publish latest version

* update docs for push

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Remove unused ReST files (#233)

Two of the ReST files generated by sphinx-autodoc weren't actually used. Remove them to get rid of a warning.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Basic Moments documentation (#241)

Add some basic documentation of the `Moment` class and its subclasses.

Also:
- Turn the `n` field of the `Moment` object into a `total_samples` property
- Add `intersphinx` hook for `pandas` documentation

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* [WIP] create extensions to install custom plots separately & check in generated files (#240)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Add logging variant of numpy.all_close (#246)

The `numpy` package provides an `all_close` routine for comparing two arrays. Unfortunately, there's no mechanism for showing which elements failed the comparison. Put together a wrapper based on `numpy.isclose` which will print out information about failed comparisons.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Implement GroupMetricSet (#250)

Create a `GroupMetricSet` class for holding collections of grouped metrics. This is to help with AzureML integration.

There has been some (possibly unnecessary) reorganisation of things under `fairlearn/metrics` but the public interface is unchanged.

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Exclude install tests in code coverage check (#251)

* ignore install tests since they'll unexpectedly work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add python -m before pip install

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* upgrade tempeh to v0.1.12

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Replace powershell scripts with python and add Makefile (#249)

* check in generated javascript files and split into package with extensions

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add installation tests, move yml files to templates directory if appropriate, delete unused and broken yml file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* separate directories per package, composition with minimal fairlearn package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* script updates to get doc and wheel builds in shape

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* update yml files and scripts to enable wheel upload per package

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* address feedback from PR by adding documentation to the pipeline definition yml files

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove ""templates/"" as location prefix for files in the templates directory itself

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* first version of widget build validation script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* corrections in widget build validation

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo adjustments to completely split up packages

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* reverse code coverage build changes

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix yml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* ignore install tests when necessary

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add macos python 3.5

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add exceptions module back to documentaiton

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add name for job

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix characters in job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix job name

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add image label

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* correct installation path

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo other changes to rst file

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* rewrite scripts in python

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace widget build script with python script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget adjustments to make it work

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* build_widget finalization plus add ls commands to find yarn installation in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* some more paths to check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* task -> script

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* usr/bin/yarn check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* workingDirectory adjustment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* adjustment for fairlearn root dir check

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add ./

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix template

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* comment about set-variable-from-file script only being required in ADO

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add makefile, update contributing guide, and replace remaining ps1 occurrences in pipeline ymls

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add romanlutz to codeowners for scripts dir

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix comment

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* make process_readme a standalone script again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* delete build_docs

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* makefile adjustments according to feedback

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix pypi release yaml (#260)

* undo erroneous changes to yaml

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo prior erroneous change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* replace job template usage with just a step

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add CHANGES.md for v0.4.2 (#262)

* add CHANGES.md for v0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add general instructions to always do that

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update CHANGES.md

Adding `GroupMetricSet` to the changelog

Signed-off-by: Richard Edgar <riedgar@microsoft.com>

* comment out test that fails consistently only on windows

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix readme processing script by adding fairlearn dir to sys path, add second solution for issue 265

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* fix syntax error, flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* bump version to 0.4.2

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* test with list of lists instead of single list

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update metric keys to match dashboard (#268)

The dashboard already had its own keys defined for mapping metric functions to strings. Update the `GroupMetricSet` to use the same keys.

Figuring out how to unify the two implementations of this mapping is left as a issue #269 

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Fix release blockers - widget generated files, widget validation (#267)

* add built widget file updates & fix widget build validation, as well as pypi release template for empty DEV_VERSION

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* undo DEV_VERSION change

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* add comment and link to issue

Signed-off-by: Roman Lutz <rolutz@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* remove --assert-no-changes flag in release as well (#272)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Update default metrics in GroupMetricSet (#271)

Tweak the list of metrics computed by default by the `compute` method of `GroupMetricSet` to match those expected by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* set env var before installing fairlearn to correct version file name content (#274)

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* MNT use sklearn's NotFittedError instead of NotFittedException (#259)

* MNT use sklearn's NotFittedError instead of NotFittedException

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* add to the changelog

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Updates for GroupMetricResult and GroupMetricSet (#279)

Add (in)equality operators to `GroupMetricResult` and `GroupMetricSet`, along with basic tests. These will simplify other testing in future.

Change `GroupMetricSet` so that the `groups` have to be specified as sequential integers from zero. If this is not the case then the `compute()` method will remap the supplied groups to `[0, 1, 2, ….]` and put the stringified original values into the `group_names` property. Since the keys are now sequential integers, convert the `group_names` property itself from a dictionary into a list.

Closes #275

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* DOC contributing: trim lines and add notes on signoff (#276)

* DOC contributing: trim lines and add notes on signoff

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* hook

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>

* modify note to point to the right answer

Signed-off-by: adrinjalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Further metric changes (#281)

A number of extra changes to metrics:

- `GroupMetricResult` now dynamically calculates `maximum`, `range` etc.
- `GroupMetricSet` has a consistency check
- `GroupMetricSet` can transform itself to and from a dictionary matching the schema used by the dashboard

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Preparations for v0.4.3 Release (#284)

Bump version and update Markdown files

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* Use kwargs in metrics (#286)

Change `metric_by_group` and `make_group_metric` to understand `**kwargs`. This removes the need for lots of small wrapper functions

Signed-off-by: Richard Edgar <riedgar@microsoft.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* take changes from other branch that touches all modules

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get all tests working again

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* squeeze instead of reshape, deselect instead of skip in pytest, utility function for compression

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* flake8

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Co-authored-by: MiroDudik <mdudik@gmail.com>
Co-authored-by: Ilya Matiach <ilmat@microsoft.com>
Co-authored-by: Brandon Horn <rihorn@microsoft.com>
Co-authored-by: Adrin Jalali <adrin.jalali@gmail.com>
Signed-off-by: Roman Lutz <rolutz@microsoft.com>

* get tests passing again after merging with master

Signed-off-by: Roman Lutz <rolutz@microsoft.com>

Co-authored-by: Brandon Horn <rihorn@microsoft.com>
Co-authored-by: Richard Edgar <riedgar@microsoft.com>
Co-authored-by: MiroDudik <mdudik@gmail.com>
Co-authored-by: Ilya Matiach <ilmat@microsoft.com>
Co-authored-by: Adrin Jalali <adrin.jalali@gmail.com>",pandas pytest,"
* first pass at expgrad related doc updates",10,Scientific&Testing,Scientific,False,False
4505,NCATS-Tangerine/kgx,6f8325892036dac621f568794348c9b5c5ac26e3,2020-05-23 03:31:06,pytest,pandas,Remove unused code and add more unit tests,pandas pytest,"
Remove unused code and add more unit tests",10,Scientific&Testing,Scientific,False,False
4506,arviz-devs/arviz,db7ff57c52538aa7d7d566ac83de51cf5365e8f8,2018-09-16 14:06:36,pytest,pandas,"Convert stats and diagnostics to new API (#232)


* Update so tests pass

* LOO matches with old version

* WAIC matches

* Summary uses xarray

* reformat stats

* Stats and diagnostics use xarray

* Fix linting, comment",pandas pytest,"
Convert stats and diagnostics to new API (#232)",10,Scientific&Testing,Scientific,False,False
4510,mwaskom/seaborn,de53836fcf9f82280dcba0926dcef11aaea2d2e3,2020-06-02 16:22:14,pytest,pandas,"Modernize kdeplot and rugplot (#2104)

* Add expand_margins parameter to rugplot and make default

* Reorganize handling of mpl kwargs

* Handle deprecated rugplot params and begin specing out kdeplot

* Prototype out kdeplot using existing internal functions

* Mostly functional new implementation of univariate kdeplot

* Add new (and changed) kdeplot parameters: bw_method, bw_adjust, weights

* Prototype a number of new kdeplot features

* Reorganize KDE plotting a bit

* Tidy up the univariate plotting function with comments

* Handle missing hue levels and stacked cumulative plots

* Implement kde in log space

* Clean up existing tests

* Add test coverage for univariate kde plot

* Consider boolean x/y variables to be numeric

* Add explicit log scaling and reorganize outer kdeplot logic

* Add more kdeplot tests

* Compat with pinned matplotlib and scipy versions

* Handle and test singleton input

* Add axis labels to core and use in kdeplot

* Make flat_data organization parameterizable

* Add provisional legend for kdeplot

* Implement soft deprecation of shade in kdeplot

* Allow positional x in kdeplot/rugplot

* Cleaning

* Add tests for new rugplot

* Rename scale_by_hue -> common_norm and cut_by_hue -> common_grid

* Input checking and TODO cleanup

* Make univariate fill default depend on hue_method

* Use fill= instead of shade= when using kdeplot internally

* Refactor kernel density estimation logic into its own class

* Add bivariate KDE computation

* Implement much of new bivariate kdeplot

* Sort out bivariate kdeplot color(mapping) and some other issues

* Add bivariate log scaling and handle some aspects of the old API

* Temporarily enable old approach to bivariate color map

* Reverse the gradient of the hue-mapped light_palette

* Deprecate shade_lowest in favor of thresh

* Mark old tests that aren't going to pass with new version

* Fix color= logic in kdeplot

* Add rugplot legend

* Add test coverage for bivariate kdeplot

* Pinned matplotlib compat

* Add reverse iteration through semantic subsets and clean up kdeplot

* Improve stack/fill computation and set sticky support edges for fill

* Disable density axis labels in jointgrid marginal axes

* Update kdeplot usage elsewhere in library

* Allow lable for bivariate kdeplot without hue

* Remove old code and tests

* Add parameter documentation and notes for kdeplot

* Check the inputs types to a bivariate kdeplot and error early

* Add bivariate kdeplot examples

* Add a matplotlib rc to the doc directory forcing bbox_inches=tight

* Add rugplot api docs

* Skip doctests on pinned dep build

* Fix link to matplotlib color docs

* Remove last remaining internal usage of shade

* Add release notes for new distribution plots

* Simplify common_norm logic

* Converge on multiple= parameter

* Use only fill_between for filled densities, and add more color handling

* Update references to matplotlib artists in kdeplot

* Remove separate fill_kws dictionary

* Allow None as clip value

* Add new gallery examples

* Update axisgrid tests

* Simplify kdeplot drawing and modify test for old matplotlib compat

* Fix small issues in docstrings

[ci skip]

* Add overwrought apporach to docstring standardization

* Allow used named .format arguments",pandas pytest,"
* Handle and test singleton input",10,Scientific&Testing,Scientific,False,False
4511,neurodata/brainlit,4cc2ad687317894a61f0a41eda133daac4b0c30a,2020-07-28 11:43:24,pytest,pandas,"use pathlib, and fix tests",pandas pytest,"
use pathlib, and fix tests",10,Scientific&Testing,Scientific,False,False
4512,neuropoly/spinalcordtoolbox,e7a96de315cf448e4a7eeeaeca1b4d0c2efc0ccc,2019-02-08 22:36:15,pytest,pandas,"Major refactoring of centerline routine (#2147)

* sct_get_centerline: Fixed inconsistent input params

* centerline/curve_fitting: New module that deals with curve fitting

Will eventually migrate nurbs and hanning there

* centerline/core: New module that deals with get_centerline

* sct_get_centerline,process_seg: Refactoring to use centerline

Unfinished!

* test_centerline: Added unit test for centerline

* optic: Refactoring to minimize i/o, clarified code

* Moved all nurbs-related functions inside centerline.nurbs

unfinished business...

* centerline.core: Added nurbs method and added unit test

* unit_testing: Now moving to tempdir for some unit test function

To avoid dumping a lot of stuff within SCT dir

* Optic: Refactoring to integrate API in centerline.get_centerline

Also minimized i/o, copy, etc.

* sct_get_centerline: Made compatible with changes in sct.centerline

* centerline/core: Fixed bug on centerline img creation

* sct_label_utils: Removed method extract_centerline

Fixes #1937

* centerline/core: Moved _call_viewer_centerline() there

* deepseg_sc/core: New module. Moved functions out of scripts/

* sct_deepseg_sc: Rename flag manual->file. More intuitive

Also, a file can be generated automatically.

* curve_fitting: Added sinc interpolation, updated unit test

* curve_fitting: Implemented bspline interpolation

* test_centerline: Generalized dummy centerline creation

* deepseg_lesion/core: New module. Moved functions out of scripts/

* centerline/core: Cosmetic modifications on the debug figures

Also updated test to be able to vary image size

* test_centerline: Parametrized im_centerline with various sizes

* test_centerline: Improved parametrization

* centerline/curve_fitting.py: Fixed computation of derivatives

* spinalcordtoolbox/centerline/core.py: Now output derivatives as arr

* spinalcordtoolbox/process_seg: Refactored to use centerline/

* sct_get_centerline: Added output arg for derivatives (!)

(!): Unfinished-- derivatives need to be computed for Optic

* unit_testing/test_deepseg_lesion: test_segment

* centerline/curve_fitting: Small refactoring of output deriv

* process_seg: Refactoring to match recent changes (unfinished)

* spinalcordtoolbox/process_seg: Refactored the way CSA is computed

Removed dependency for z_deriv (does not make sense-- should be one)

* centerline/curve_fitting: Now detecting center of mass in bspline

Otherwise scipy.interp fails due to duplicated points

* centerline/core: Removed sinc (for now)

Was pretty useless...

* centerline/curve_fitting: Fixed index issue in bspline

* centerline/curve_fitting: Automatically adjust degree in bspline

In case input array is too small

* test_centerline: Added try/except in nurbs to avoid crashing

* test_process_seg: Removed test for extract_centerline

not anymore in process_seg

* test_deepseg_lesion: Fixed small issue

* centerline/core: Now computing derivatives for optic centerline

* test_sct_process_segmentation: Removed extract_centerline

* sct_propseg: Fixed optic centerline detection

Based on recent changes

* sct_register_to_template: Now using get_centerline

* sct_register_to_template: Fixed wrong output of get_centerline

* sct_flatten_sagittal: Fixed with recent changes and added test

* sct_label_utils: Updated to match recent changes

* sct_straighten_spinalcord: Now using get_centerline (unfinished)

Integrity issue in output. Investigating...

* centerline/core: Added flag phys_coord, compute mean for all slice

* sct_straighten_spinalcord: Refactored to use new get_centerline

* centerline/core: Removed phys_coord

Not used anymore inside the module. Better to do it outside.

* sct_analyze_lesion: make the computation of the angle compatible with recent changes

* deepseg_sc/core: reduce i/o

* sct_analyze_lesion: angle correction by looping across x_centerline_deriv

* sct_analyze_lesion: angle correction by looping across x_centerline_deriv

* centerline/core: Fixed wrong handling of variable with optic

* centerline/core: Fixed bad i/o handling in optic

* sct_flatten_sagittal: Clarified code/flags

* msct_register: Removed dependency: msct_smooth

* msct_smooth: Removed file

* msct_shape: Fixed derivative scaling with px/py

* scripts/sct_deepseg_lesion: output prefix lesionseg instead of seg

* deepseg_lesion/core: correct file naming and deep copy of image

* unit_testing/test_deepseg_sc: test_segment_2d

* process_seg: Changed fitting method for bspline

* sct_process_segmentation: Removed obsolete input params

* msct_shape: Now computing centerline using physical coordinates

* msct_types: Added comments

* sct_deepseg_lesion: Removed i/o in deep_segmentation_MSlesion
Not used anywhere else in SCT

* deepseg_lesion/core: Cleaning, removed unused variables
Added comments, fixed PEP8

* deepseg_lesion/core: Removed unecessary i/o, fixed PEP8

* msct_register: Fixed wrong input argument

* sct_straighten_spinalcord: Removed resample_factor (not used)

* sct_straighten_spinalcord: Fixed wrong doc about speed_factor

* sct_register_to_template: Now using bspline instead of nurbs

for straightening. Reason is: nurbs was creating bad straightening (need to investigate why is the case)

* test_deepseg_sc: Removed test which was duplicate of deepseg_lesion

* unit_testing.sh: Added shebang line

* test_centerline: Now testing optic with sct_testing_data

* unit_testing/*: Make sure to come back to curdir after running tests

To make sure to access sct_testing_data (downloaded locally)

* unit_testing.sh: Now using relative path for SCT python

* test_centerline: Added feature to dilate centerline

* unit_testing/*: Removed creation of temp folders (heavy code)

* centerline/core: Now using centermass_slicewise for func and test

* test_deepseg_sc: test on 1 slice segment_2d

* test_deepseg_sc: adjust size of fake sc

* test_deepseg_sc: add attributes names

* centerline/core: Generalized centermass_slicewise to all orientations

* centerline/core: Fixed bug in round_and_clip and added test

* centerline/core: Now output arr in RPI orientation

Adapted test

* centerline/core: Introduced find_and_sort_coord()
To deal with coordinate sorting

* test_centerline: Now copying output img
to avoid sharing same pointer across tests-- because object is modified

* centerline/core: Few fixes for optic-- all tests now pass

* centerline/core: Removed centermass_slicewise() (no use)

* sct_get_centerline: Now inputing Image to optic method

* centerline/core: Now only accepting Image() for viewer module

* unit_testing: Keras reset data format

* sct_analyze_lesion: Removed useless code

* gui/centerline: Copy input Image() to avoid modifying the object

* centerline/core: Viewer method now only dealing with Image i/o

* deepseg_sc/core: Fixed bug related to wrong input param

* process_seg: Fixed wrong number of outputs

* process_seg: Fixed wrong number of outputs

* sct_get_centerline: Polished usage

* sct_get_centerline: Fixed usage

* centerline/optic: Fixed bug in case image contains nan or inf

Fixes #1774

* vertebrae/detect_c2c3: Fixed regression with algo_fitting param

* centerline/nurbs: Now raising ArithmeticError is too few points

Also made test more sensitive

* centerline/core: Implemented linear interpolation

And associated unit test

* centerline/core: Better visual for verbose

* centerline/core: Interpolate before running nurbs

In case of missing points

* sct_process_segmentation: Now using bspline for algo_fitting

Updated testing to use default

* sct_process_segmentation: Removed -p centerline
Now covered by sct_get_centerline

* sct_process_segmentation: Forgot to update part of the usage

* sct_process_segmentation: Added TODO about flag -use-image-coord

* centerline/core: Fixed clipping (was one index too high)

Causing array overflow

* centerline/core: Added feature to output centerline at zmin/max

* sct_flatten_sagittal: Fixed issue with zmin/max centerline

And cleaned function a bit

* vertebrae/detect_c2c3: Fixed regression in flatten_sagittal

* sct_straighten_spinalcord: Updated usage to reflect default fit algo

* sct_get_centerline: Output file is now using input as prefix

* batch_processing.sh: Updated with changes in output centerline

* test_sct_get_centerline: Fixed wrong path to output data

* test_centerline: Fixed test assert for test_round_and_clip

* centerline/optic: Fixed modification of input img


Former-commit-id: 5cd5c99efe3769ff260aa6ad340f7df2f7aa286c",pandas pytest,"
* sct_flatten_sagittal: Fixed with recent changes and added test",10,Scientific&Testing,Scientific,False,False
4610,EducationalTestingService/skll,e431f7bfe9a0a6ff837d5a461d5b2b4ff96daf11,2013-05-13 19:55:23,nose,unittest,changed unit test code to use nose,unittest nose,"
changed unit test code to use nose",26,Testing,Testing,False,False
4612,RDFLib/rdflib,4eae7f7b493b5a08924309493a17dc6b97333cc5,2013-12-20 21:27:15,nose,unittest,converted test to nose,unittest nose,"
converted test to nose",26,Testing,Testing,False,False
4613,ReactionMechanismGenerator/RMG-Py,e09ad8f2f44b55ad14ab46251497a6f9d15104e7,2014-06-20 03:12:31,nose,unittest,"Split databaseTest into separate tests by reaction family.

It uses test generators, a feature of nose, which means we
can't use the built-in unittest module any more, but that's OK
because we were using nose anyway.  You can use nosetests, or 
just run it on its own:

 $ python databaseTest.py",unittest nose,"
It uses test generators, a feature of nose, which means we
can't use the built-in unittest module any more, but that's OK",26,Testing,Testing,False,False
4615,caleb531/youversion-suggest,28b1a932002d07d11ce165481dae463c66c95300,2015-02-16 02:04:47,nose,unittest,Rewrite tests to use nose instead of unittest,unittest nose,"
Rewrite tests to use nose instead of unittest",26,Testing,Testing,False,False
4620,jedie/DragonPy,afdc64c1fd0b425c337f0a8368cee9ab59ecc31e,2015-08-19 13:07:39,nose,unittest,use nose to run unittests,unittest nose,"
use nose to run unittests",26,Testing,Testing,False,False
4624,landlab/landlab,aecd2427fdede8fe38a5a26418eadd054f6fc8c5,2014-05-26 19:15:56,nose,unittest,Changed to use nose rather than unittest.,unittest nose,"
Changed to use nose rather than unittest.",26,Testing,Testing,False,False
4628,pytube/pytube,59780206774274cc3c9be39eacdfef13e15dc0d3,2015-10-05 02:27:05,nose,unittest,"changes for nose test, added mock data",unittest nose,"
changes for nose test, added mock data",26,Testing,Testing,False,False
4629,robotframework/RIDE,ca91df27bb0ea72d4040cbfd48dcaa9a53de02bb,2010-12-21 08:07:29,nose,unittest,use nose to run unit tests locally,unittest nose,"
use nose to run unit tests locally",26,Testing,Testing,False,False
4757,FAForever/server,d5934e9c583772627a1be43414035cec7f0bff27,2019-09-06 19:16:14,asynctest,unittest,"[WIP] Support for multiple player ratings (#486)

* Get rid of BasePlayer class

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove Player class mocking in tests

The Player class is essentially plain old data right now. Remove all
mocking of it to make it easier to modify. If we ever bless Player with
non-trivial behaviour, we can make a mock or an abstract class for it.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Improve game stats coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use a dict-like object for player ratings

Preparations for adding new rating types.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add asynctest to dependencies

This will save us some manual mucking around with asyncio's sleep.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Replace CoroMock with asynctest's CoroutineMock

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove BaseGame class

Everything inherits from the Game class anyway, and all ""abstract""
methods are already implemented there.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix ban test by formatting >100 year bans as 'forever'

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Make the DB non-global

This should make tests a bit more manageable.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use asynctest/pytest-asyncio for tests

This replaces homegrown tools for coroutine testing with asynctest and
pytest-asyncio. One benefit is that each test gets its own fresh event
loop, another will come with proper tools for fast-forwarding event
loops.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add an event loop fast-forwarding decorator

This removes the need for ugly asyncio.sleep monkeypatching. It also
exposes some issues with tests not closing the server after the test
ends; we ignore it for now, eventually we'll fix that too.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix some sleep usage in tests

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* A bit more test coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove no longer needed loop fixture

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Update game docstring

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>",unittest asynctest,"
* Fix ban test by formatting >100 year bans as 'forever'",3,Testing,Testing,False,False
4760,FAForever/server,d5934e9c583772627a1be43414035cec7f0bff27,2019-09-06 19:16:14,functools,unittest,"[WIP] Support for multiple player ratings (#486)

* Get rid of BasePlayer class

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove Player class mocking in tests

The Player class is essentially plain old data right now. Remove all
mocking of it to make it easier to modify. If we ever bless Player with
non-trivial behaviour, we can make a mock or an abstract class for it.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Improve game stats coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use a dict-like object for player ratings

Preparations for adding new rating types.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add asynctest to dependencies

This will save us some manual mucking around with asyncio's sleep.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Replace CoroMock with asynctest's CoroutineMock

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove BaseGame class

Everything inherits from the Game class anyway, and all ""abstract""
methods are already implemented there.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix ban test by formatting >100 year bans as 'forever'

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Make the DB non-global

This should make tests a bit more manageable.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Use asynctest/pytest-asyncio for tests

This replaces homegrown tools for coroutine testing with asynctest and
pytest-asyncio. One benefit is that each test gets its own fresh event
loop, another will come with proper tools for fast-forwarding event
loops.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Add an event loop fast-forwarding decorator

This removes the need for ugly asyncio.sleep monkeypatching. It also
exposes some issues with tests not closing the server after the test
ends; we ignore it for now, eventually we'll fix that too.

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Fix some sleep usage in tests

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* A bit more test coverage

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Remove no longer needed loop fixture

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>

* Update game docstring

Signed-off-by: Igor Kotrasinski <i.kotrasinsk@gmail.com>",unittest functools,"
This replaces homegrown tools for coroutine testing with asynctest and
pytest-asyncio.",3,Testing,Testing,False,False
4762,lbryio/lbry,75a6ff269ed5805591edc50008b9500192afbd87,2018-07-05 19:21:52,functools,unittest,"refactor lbrynet-daemon into modular components (#1164)

* add daemon Component and ComponentManager classes

* convert directory and SQLiteStorage setup to be a Component

* support callbacks to component setups

* Fixed typo in ComponentManager

* convert wallet to be Component

* Use storage from session.

* Remove create_session internal function and PEP8

* Starting to convert session to its own component. Removed ref to `self.storage` from Daemon.py

* Making DHT component(broken)

* Refactored classes to reduce redundancy in getting config setting

* DHT is now it's own component

* Fixed `test_streamify` test

* Fixed regression caused by removing `peer_manager` from session

* refactor ComponentManager and Component to use instance instead of class methods

* Hash announcer, file manager, stream identifier components

* Query Handler and server components

* Reflector Component

* Fixed test_streamify(well Jack did, but ¯\_(ツ)_/¯)

* All tests now passing

* Pylint fixes

* Oops(That's all you're gonna get :-P)

* Making decorators(WIP, commit so that I don't lose work)

* Decorator made and decorating of functions done(some other changes)

* import fixes and removed temporary test function

* Fixed new broken tests from daemon refactor

* Sanitization of modules

* Reworded errors

* wallet unlock condition checks, fixed breaking changes

* Rebased on amster and other crazy stuff

* Started writing tests

* Tests for component manager

* Fix Daemon Tests

* Fixed passing mutable args in init

* Using constants instead of strings. Added CHANGELOG.md

* Now components can be skipped by setting relevant config in file.

* P-Y-L-I-N-T #angry_emoji",unittest functools,"
* Fixed new broken tests from daemon refactor",3,Testing,Testing,False,False
4768,FairwindsOps/reckoner,cb57174f4014acde453d4c2d84429b4af6b3a4a0,2018-03-09 02:11:03,oyaml,pyyaml,Switch to oyaml,pyyaml oyaml,"
Switch to oyaml",4,Serialization,Serialization,False,False
4770,gammapy/gammapy,848da6312d566b699888d77d3894ab2f1a9a8baf,2019-07-26 09:53:50,oyaml,pyyaml,"read/write models from/to yaml

add import/export functions in utils.serialization.io
add .to_yaml()  to SkyModels
use oyaml module to preserve dict order in yaml",pyyaml oyaml,"
add .to_yaml()  to SkyModels
use oyaml module to preserve dict order in yaml",4,Serialization,Serialization,False,False
4771,ungarj/mapchete,a344241b9af63b1b8f80bad254454261a491e393,2018-09-24 14:58:55,oyaml,pyyaml,switch to oyaml to ensure mapchete configuration items come in correct order,pyyaml oyaml,"
switch to oyaml to ensure mapchete configuration items come in correct order",4,Serialization,Serialization,False,False
4772,FeatureLabs/nlp_primitives,0868ced412b75dee70701bed7864b570772f80ea,2020-08-10 19:13:11,pytest,tensorflow-serving-api,"Create nlp_primitives[complete] install option and remove tensorflow from core requirements (#24)

* create nlp_primitives[complete] install option

* update README.md

* add serialization test

* fix typo in README.md

* update test without tensorflow to use fixture

* update circleci machine size

* update circleci machine size

* update requirements

* add feature serialization test

* update test to use tmpdir

* update requirements

* update README.md",tensorflow-serving-api pytest,"
* update test without tensorflow to use fixture",3,Deep Learning&Testing,Deep Learning,False,False
4775,Fizzadar/pyinfra,5ba7fffb8603405183d9332e56361c5b33644085,2019-03-08 13:42:56,six,configparser,Use `six.moves` to import `ConfigParser`.,configparser six,"
Use `six.moves` to import `ConfigParser`.",8,Filesystem,Filesystem,False,False
4777,ansible/ansible,37b4b68e8377bd0daf76667890c05ab461790b77,2015-04-14 20:40:50,six,configparser,Use six.moves to find configparser instead of our compat code,configparser six,"
Use six.moves to find configparser instead of our compat code",8,Filesystem,Filesystem,False,False
4787,bashwork/pymodbus,221da92065ff0168e71e44f2daba4e6d498ddacd,2017-05-17 05:03:57,sys,nevow,"Dev (#164)

* Refactored and simplified calculation of RTU frames, added missing unit tests

* - fixing a few small issues
- bringing a few areas of coverage back up

* adding installer test script

* enabling the checksum tests in check frame, fixing tests

* * Updating documentation
* Adding code to handle messages that do not respond
* Fixes issue 41

* cleaning up the build tools a bit

* Adding more commands to the setup.py
- pep8, lint, 2to3

Fixed a few pep8/lint bugs to test

* moving files around

* pep8 and cleanup

* more cleanup

* Fixes issue 47

* adding another quick example

* cutting 200 pep8 errors

* working on py3 merge

* updating to python3

* reverting back changes, remember Switch flag next time

* adding some magic methods, just cause

* adding documentation pdf

* Fixes issue 49

* Adds True and False constants for older python versions.

Update issue 50

* adding tests for a few fixes

* Fixes issue 51

* fixing tests broken by interface change

* Updates issue 52

* Fixes issue 53

* Fix to add Python < 2.5 compatibility

This fix simply removes all the ternaries that were added
in Python 2.5.

Fixes issue 50

* adding a mostly complete diagnostic register implementation

* Adding more documentation and helpful factory methods.

The documentation added was to address some questions
with the synchronous and asynchrounous server implementations
as well as the functionality of the data contexts.

The factory methods were added by request to simplify the
creation of a fully populated DataBlock address space.

* adding modbus plus registers

* adding endian ability to payload builder

* Finishing the remaining modbus protocol

* Adding the remaining portions of the protocol (request/response)
* Tieing these into the factory decoder
* Adding tests to cover the new code (need more)
* Fixing a few bugs found along the way

* finished file read/write record requests

* documentation, more tests, fixing extra commands

* adding more tests

* Fixing the client/server async/sync implementations

- asynchronous client/server for tcp working and tested
- synchronous client/server for tcp/udp working and tested
- adding tests to exercise the synchronous client/server
- more documentation

* adding test stubs to get full coverage count

* working on jamod, need to set up more complete project

* adding GetDeviceInformationRequest

* adding read device information to decoder factory

* fixing some example errors

* working on the serial implementations

* fixing the synchronous server implementation

* updating functional tests and documentation for sync-serial

* updating tac files

* Updating the documentation for the serial client/servers

* adding readme to root

* Fixes issue 56

* Fixes issue 1

* adding a requirements file for virtualenv folk

* adding more cohesive code to the payload utilities

* forgot to add the new example to the doc index

* Fixing the rtu size calculation isse #55 on google code

* using the endian flag in register factory

* fixing bad documentation

* fixing issue 58 on google code

* Fix binary framer and add start and end tokens

Fixes a TypeError occuring while escaping token bytes in the message and
adds the start and end tokens to the packet.

* Adding checking in the client for an unconnected socket.

* Fixing issue 60 on google code (including ez_setup)

* fixing github issue #7

* adding tests and two utilities

* adding message parser utility

* Fixing extended message decoding

* Now correctly decoding sub function messages (diagnostic)
* Message parser now finished and documented
* Fixed broken logger unit test

* ModbusSparseDataBlock handled dictionaries incorrectly (they have an __iter__ attribute). Changed 'if' to 'elif'

* Updating the Readme.rst to explain how to install in zero dependency mode.

* Fixing issue #10

* updating the client documentation

* updating the server context documentation

* fixes #9 on github

* fixing the factory decoding and adding examples

* pushing to version 1.0

* Fixing a bug in the asynchronous client that slipped through.

* complete tests for the sync client

* cleaning up some pep8 errors

* finished unit tests for async client

* adding another test to the test-install script

* finished covering sync client

* updating documentation

* adding another example, adding debug checks

* Fixing the serial implementation of everything

* updating lots of reference documentation
* fixing the fifo semantics of serial clients
* using transaction manager in async clients
* fixing references

* fixing incorrect rtu lenght calculation

* Add optional server_address to Sync and Async TCP/UDP Server API

* Improve erver_address defaults to passing None

* adding a few messages

* Adding a message encoding generator for testing.

- fixed messages not passing **kwargs to base
- fixed binary framer off by 1
- fixed mei_message rtu size tests
- added a message generator to use with message parser
- fixed message parser with ascii
- tested message parser with all formats (added to messages)

* adding documentation for message formats

* updating documentation and being pedantic

* Allowing overloading of message encoding

* allow codes like payload builder to encode
* added IPayloadBuilder interface (future)
* renamed builder methods to reflect vision
* added error code decoding to name
* fixed affected tests

* Cleaning up the build tools

- moving custom datastores to examples
- bumping required versions
- making the debug server console optional
- updating documentation

* adding support for pydev

* fixing broken nosetest (/dev/pts) and pydev issues

* adding bcd payload builder

* reworking contrib packages

* adding bcd payload contrib

* moving complex examples to contrib

* syncing version on pypi

* adding server rest api

* moving web -> bottle

* fixing documentation

* adding gui base

* adding initial manager page

* adding data view

* fixing error in example

* adding the ability to override sync client framer

* updating the performance test

* fixing documentation

* fixing memory leak in sync client

* adding modicon encoder/decoder

* Fix bogus calculation in ModbusSocketFramer.checkFrame
(one of the tests also seemed wrong, I had to fix it)

* Adding sunspec client example

* Changing @staticmethod to @classmethod to fix inheritance

* adding method to retrieve all the device blocks

* adding the initial mapper interface

* adding ideas in progress

* adding a modbus datastore saver

* making lrc/crc read stdin

* adding the callback server example

* adding a periodic updating example

* fixing documentation

* adding fix for stuck RTU streams

* fixing documentation error

* Adding an example for changing framers

- new example changing-framers.py
- added documentation link

* Reworking the transaction managers to be explicit

- Serial framers use the FIFO manager (results in order)
- Socket framers use the Dict manager (tid -> result)
- Fixed tests and removed bad global managers
- Managers no longer use global state (now instance)

* Bumping the version and adding a changelog

* Fixing a logic error in client code

- Now correctly choosing transaction manager

* Fixing 2to3 common warnings

* Fixed example typo in readme

* Adding slave context delete ability

- Fixes #20

* Fixing google code issue 69

- custom-message example had bugs
- http://code.google.com/p/pymodbus/issues/detail?id=69

* Fixed docstring in synchronous serial client connect() method

I think there was a copy/paste error in the docstring. It said tcp but I think it is supposed to be serial.

* Fix for issue #21

* Allowing options to be passed through

- This fixes issue #21
- Options now go to the transaction manager

* Adding source_address to TCP client inputs

* Typo

* Typo

* Typo

* Typo

* Adding some new examples

* modbus scraper (and documentation)
* thread safe datastore (and documentation)

* Adding a concurrent client example

* Allow specification of client connection handler in Modbus...Server
o ModbusTcpServer and ModbusUdpServer allows handler class other than
  default Modbus{Connected,Disconnected}RequestHandler
o Add debug logging on request failure, to help diagnose root causes

* Fixes #46

* Fixes #48

* Adds the option to drop into zero mode for slaves

* Fixes #42

* Bumping the version to 1.3.0

* add missing self operator

The parameter values of the constructor within  class WriteMultipleRegistersRequest can specified as single value or list of values. But if a single value is given the missing self operator on line 137 leads to crash in line 138 with error: TypeError(""object of type 'int' has no len()"",)

* typo: fix spelling of Parameter

Signed-off-by: Karl Palsson <karlp@remake.is>

* async: missing slaves: add missing imports

1e0bcde13153469365dd1debf6456e4b0e048566 is missing imports into the
async server, the import was only added to the sync server.

Further fix for #42

Signed-off-by: Karl Palsson <karlp@remake.is>

* Fix zero_mode argument for ModbusSlaveContext

Using ""-"" in the argument name causes SyntaxError
'non-keyword arg after keyword arg'

* Fix typo in constants

* Adding an example and adding tcp timeout

* fixes #70

* Endianness now used in packing bytes

* Adding a libmodbus wrapper

* adding new contrib example of libmodbus client
* updating example documentation so users can find it

* closes #73

* Execute methods of Requests accept context

There were errors whenever a request that got handles in
other_message.py got it's execute method called, as it was being called
with a context parameter. The functions now accept this parameter,
although they don't do anything with it.

The tests have also been updated.

* Add Modbus RTU syncronous server example

* Signal handlers to stop in shutdown().

* WriteMultipleRegistersRequest: Handle values=None case

Currently, if None is passed in explicitly, or if values is not given,
the 'values' object is correctly identified as *not* having an __iter__
attribute, but is incorrectly identified as being a valid register value.
This breaks testInvalidWriteMultipleRegistersRequest.

Solution: if we see None, replace this with [] and skip the check for
__iter__.

* Fix payload tests.

Looking at the ""encoded"" string, it looks identical to that of the big
endian encoding string, and my understanding is that the data shown in
""encoded"" *IS* big-endian, not little-endian.

I have no idea how this passed before, but it passes now.

* sync.ModbusUdpClient: Correct reference to settimeout.

I could not find a 'settimeout' (case-insensitive) anywhere in the
codebase other than on this line, but I *did* see it was a method of
socket.socket.

So I'll assume that this was *supposed* to be calling
socket.socket.settimeout.

* test-client-sync: Fix UDP connection test.

Rather than passing in a vanilla object, we should pass in something
that implements the settimeout method.

* Lazily initialize InstallManagementConsole

Simply importing the management console takes ~0.3 sec on an 1GHz Atom.
Since it is (I suspect) often not used, lazily importing it should help
startup for many programs.

* Fixes the UDP client socket timeout bug

fixes #51

* Implement mask_write_register method in client mixin

* Workaround for bug 101 https://github.com/bashwork/pymodbus/issues/101

* Workaround for bug 101 https://github.com/bashwork/pymodbus/issues/101

* Riptide 1.3.0 pymodbus internal pre-release (riptide1) with dhoomakethu's fix for bashwork#101.

* Riptide 1.3.0 pymodbus internal pre-release (riptide1) with dhoomakethu's fix for bashwork#101.

* Use a PEP 404 compliant version.  Start at rc93101 to usurp any other real release candidates.

* Use a PEP 404 compliant version.  Start at rc93101 to usurp any other real release candidates.

* Document Riptide specific instructions.

* Include Workaround for bug 101 bashwork#101

* Include Workaround for bug 101 bashwork#101

* Better tag names.

* pymodbus fix for modes RTU error cases.

* version bumped to c93103

* version bumped to c93103

* fixed issue with pymodbus timing over serial

* fixed issue with pymodbus timing over serial

* Add RIPTIDE.md  to .gitignore

* bump version to rc93105

*  fix merge conflicts

* fix version file

*  fix unit test failures

* cleanup

* #121 changelog updated

* Misc update Add __maintainer__ field in setup.py

* 1. #162, creating universal distribution for py2 and py3
2. Merge PR #152 , create compatible versions

* fix test failures

* fix ReadDeviceInformationRequest  encoding probelm",nevow sys,"
* Tieing these into the factory decoder
* Adding tests to cover the new code (need more)
* Fixing a few bugs found along the way",6,Web Framework&Filesystem,Web Framework,False,False
4801,castelao/seabird,51f247fb7e2f7582847cd6c0d40bdc3de5e8a9b2,2016-04-16 17:57:20,json,pyyaml,Loading parsing rules with json instead of yaml.,pyyaml json,"
Loading parsing rules with json instead of yaml.",27,Serialization,Serialization,False,False
4802,dataversioncontrol/dvc,3b9259ff1762b2140e8e039cf579848c3750d620,2018-03-09 06:22:44,json,pyyaml,"dvc: switch from yaml to json for dir cache file

yaml is extremely slow without CLoader, which caused our checkout()
and similar functions to take way too long to process dir cache files.
These files are not really meant to be read by the users, so we can
sacrifice the readability if yaml for better performance of json module.

E.g. checkout for 30K files used to take 30sec and after this patch only
takes 6sec, which is still quite slow, but much more bearable.

Signed-off-by: Ruslan Kuprieiev <kupruser@gmail.com>",pyyaml json,"
dvc: switch from yaml to json for dir cache file",27,Serialization,Serialization,False,False
4809,mongodb/mongo-python-driver,7d81e3fa5e2094560de0722eb1290d42c7c1cc5f,2014-09-04 13:48:02,json,pyyaml,Convert YAML to JSON.,pyyaml json,"
Convert YAML to JSON.",27,Serialization,Serialization,False,False
4821,tern-tools/tern,d8a86c5fee78e8672a264e0e05410f3ae04c4614,2020-06-11 19:46:30,json,pyyaml,"utils: Use JSON instead of YAML as cache

The JSON parser is much faster than the YAML parser. This change
improves cache load and save performance thus allowing faster
analysis with file level scanners.

Here we replace the cache.yml file with a cache.json file. We
then update the utilities to read from and write to this file.

Fixes #627

Signed-off-by: Nisha K <nishak@vmware.com>",pyyaml json,"
utils: Use JSON instead of YAML as cache",27,Serialization,Serialization,False,False
4823,MindscapeHQ/raygun4py,fe52d66ee4eaa4d11db52223631f00d85bdf1e94,2016-01-21 21:20:50,requests,http,"PY3: Move from http to requests libray for POSTing, add httpTimeout to config param; fix logging",http requests,"
PY3: Move from http to requests libray for POSTing, add httpTimeout to config param; fix logging",12,HTTP Clients,HTTP Clients,False,False
4824,SickChill/SickChill,15c20f02008f97f003a40a78ca2b9b88c79b683a,2020-09-23 09:18:16,requests,http,"Rework pushover notifier to use requests, and be able to verify the server https certificate

Signed-off-by: miigotu <miigotu@gmail.com>",http requests,"
Rework pushover notifier to use requests, and be able to verify the server https certificate",12,HTTP Clients,HTTP Clients,False,False
4825,ankitects/anki,f6245cdfd1e81fecb581a17d3ee314ed0d72698d,2017-01-08 09:06:32,requests,http,"use requests for http; add progress info back

- wrap request in AnkiRequestsClient so we can keep track of
upload/download bytes without having to monkey patch anything
- force a 64kB buffer size instead of the default 8kB
- show one decimal point in up/down so small requests still give
visual feedback
- update add-on downloading and update check to use requests
- remove the update throttling in aqt/sync.py, as it's not really
necessary anymore",http requests,"
use requests for http; add progress info back",12,HTTP Clients,HTTP Clients,False,False
4828,jamesoff/simplemonitor,ad681d9f89671e061e0c2dbdeada5dbfa7190f01,2017-12-26 15:49:20,requests,http,Switch HTTP monitoring to requests,http requests,"
Switch HTTP monitoring to requests",12,HTTP Clients,HTTP Clients,False,False
4829,keylime/keylime,45f49120a44c463d4ccdf07aabfeb34cff42d39e,2020-11-23 20:58:42,requests,http,"Use requests library instead of http.client

This means instead of passing around an SSL context to make requests we
just provide the paths to client-side tls cert and key.

This work was originally done by Luke Hinds (lhinds@redhat.com) as part
of his work on Multi-Tenancy. I've separated it out into a separate
commit since it's useful on it's own.",http requests,"
Use requests library instead of http.client",12,HTTP Clients,HTTP Clients,False,False
4831,mwclient/mwclient,593cb44c4bc8441488cfdcceea2eb455e875bc2e,2014-08-18 21:18:33,requests,http,"[#45] replace http.py with the Requests library

- Note the following exception replacements:
  mwclient.errors.HTTPError -> requests.exceptions.ConnectionError
  mwclient.errors.HTTPStatusError -> requests.exceptions.HTTPError
  mwclient.errors.HTTPRedirectError -> requests.exceptions.TooManyRedirects

- Removed the `compability.old_upload` method, which was used for
  MediaWiki < 1.16.

- Requests automatically decompresses gzip-encoded responses, and
  does its best to decode response content to unicode when possible.

- [#53] Using the Responses library to mock http requests in tests",http requests,"
[#45] replace http.py with the Requests library",12,HTTP Clients,HTTP Clients,False,False
4832,smarthomeNG/plugins,85fffee8581c2b4b8ffb5088571cbc53b0b7cb73,2017-07-03 11:37:50,requests,http,Modified Readme to new specs. Modifier Plugin header. Changed from http lib to requests,http requests,"
Modifier Plugin header.
Changed from http lib to requests",12,HTTP Clients,HTTP Clients,False,False
4833,tus/tus-py-client,be73ec26a6e09dcc6cf0f2142992b7fb021d1a7e,2019-07-16 11:11:46,requests,http,migrated http.client lib to requests in request.py to enable proxy support,http requests,"
migrated http.client lib to requests in request.py to enable proxy support",12,HTTP Clients,HTTP Clients,False,False
4835,automicus/PyISY,f20441ef83b549b8fe007a3e9a9bf7344a510b7c,2015-04-19 00:46:42,requests,request,Removed internal requests library. This will now be a dependancy.,request requests,"
Removed internal requests library.
This will now be a dependancy.",3,HTTP Clients,HTTP Clients,False,False
4837,GNS3/gns3-server,4a33b2021ca61644981009a127ccb567c36bf193,2014-08-09 11:05:31,pytest,tox,"Further optimise the Travis testing and improve running tests for a user

  + Convert setup.py test to run py.test instead of tox
  + Tox should now run setup.py test
  + TravisCI will create a job for each TOX_ENV and then execute
    tox to run the tests for that TOX_ENV",tox pytest,"
+ Convert setup.py test to run py.test instead of tox
+ Tox should now run setup.py test",5,Testing,Testing,False,False
4841,tilgovi/pyramid-oauthlib,bc5925a191e6e999b1f0b377b562968fa4515895,2014-11-21 20:00:55,pytest,tox,"Use pytest directly, but update tox config

For setup.py test command we can just use pytest. For tox, require
a newer version and set up coverage to use the default interpreter.",tox pytest,"
Use pytest directly, but update tox config",5,Testing,Testing,False,False
4842,GalSim-developers/GalSim,e39e4a7ee566255fd6559e66f39d3c365fa0a87b,2020-09-22 20:27:50,json,pprint,Use json rather than pprint to print config dict in order.,pprint json,"
Use json rather than pprint to print config dict in order.",10,Serialization,Serialization,False,False
4850,ploigos/ploigos-step-runner,72dbc8ccb45d364ddabfbf696006a5f4681e87fc,2020-10-02 14:09:39,json,pprint,"NAPSSPO - tssc-python-library - multiline secrets are not getting obfuscated correctly
* StepImplementer - switch from using pprint to a json dumps, it looks pretteir and easier to obfuscate",pprint json,"
NAPSSPO - tssc-python-library - multiline secrets are not getting obfuscated correctly
* StepImplementer - switch from using pprint to a json dumps, it looks pretteir and easier to obfuscate",10,Serialization,Serialization,False,False
4851,uploadcare/pyuploadcare,3ddd4c88191eae345de9ac4caade753f77d7c0f9,2016-01-15 09:33:17,json,pprint,Use json.dumps instead of pprint,pprint json,"
Use json.dumps instead of pprint",10,Serialization,Serialization,False,False
4855,GaretJax/django-click,e506abcac59d73331b2008984b9422deac98a4ea,2016-05-18 15:56:53,pytest,algoliasearch-django,Use real models in tests thorugh pytest-django,algoliasearch-django pytest,"
Use real models in tests thorugh pytest-django",5,Web Framework&Testing,Web Framework,False,False
4859,jazzband/sorl-thumbnail,78b0b849de913a331b99ab1c3f55214f4381f160,2014-12-25 15:30:34,pytest,algoliasearch-django,Use pytest and pytest-django as testrunner,algoliasearch-django pytest,"
Use pytest and pytest-django as testrunner",5,Web Framework&Testing,Web Framework,False,False
4860,GaretJax/django-click,e506abcac59d73331b2008984b9422deac98a4ea,2016-05-18 15:56:53,pytest,django,Use real models in tests thorugh pytest-django,django pytest,"
Use real models in tests thorugh pytest-django",8,Web Framework&Testing,Web Framework,False,True
4863,elastic/apm-agent-python,22f2da0f867ff07aa3b5e9dc754762c6c835c3d9,2014-09-17 23:21:37,pytest,django,switched to py.test due to better support for Django 1.7,django pytest,"
switched to py.test due to better support for Django 1.7",8,Web Framework&Testing,Web Framework,False,False
4866,jazzband/sorl-thumbnail,78b0b849de913a331b99ab1c3f55214f4381f160,2014-12-25 15:30:34,pytest,django,Use pytest and pytest-django as testrunner,django pytest,"
Use pytest and pytest-django as testrunner",8,Web Framework&Testing,Web Framework,False,False
4868,GenericMappingTools/pygmt,87f0aa40c6535c1616fac4304c2aa63d7c5391bd,2017-11-29 03:42:59,sphinx-rtd-theme,sphinx-bootstrap-theme,"Replace custom doc theme with RTD theme (#64)

Use the Read the Docs theme for the documentation to simplify things 
and avoid going too much into the design. Also fix the use of autodoc 
and autosummary to make a better API reference. Some tweaks to some 
docstrings as well.",sphinx-bootstrap-theme sphinx-rtd-theme,"
Replace custom doc theme with RTD theme (#64)",11,Documentation,Documentation,False,False
4870,automl/SMAC3,02c0af64488dd06d94e1af8eb1bbd23243c3032b,2017-04-25 12:34:22,sphinx-rtd-theme,sphinx-bootstrap-theme,"ADD APIdoc, CHANGE doc-theme to rtd",sphinx-bootstrap-theme sphinx-rtd-theme,"
ADD APIdoc, CHANGE doc-theme to rtd",11,Documentation,Documentation,False,False
4871,dpgaspar/Flask-AppBuilder,49755efa41f2567c9e38a8734e55a43485959db7,2017-06-19 17:22:42,sphinx-rtd-theme,sphinx-bootstrap-theme,Changes docs to readthedocs theme,sphinx-bootstrap-theme sphinx-rtd-theme,"
Changes docs to readthedocs theme",11,Documentation,Documentation,False,False
4877,tardis-sn/tardis,c8f06a761fabf8323d914a5bc66e16aea92e6b05,2016-05-11 15:41:01,sphinx-rtd-theme,sphinx-bootstrap-theme,"Change html theme, change icon

* use sphinx_rtd_theme instead of boostrap theme",sphinx-bootstrap-theme sphinx-rtd-theme,"
* use sphinx_rtd_theme instead of boostrap theme
Change html theme, change icon",11,Documentation,Documentation,False,False
4878,wmayner/pyphi,af65e780fca6a479145dfc18e914024ec5992797,2014-05-07 17:23:44,sphinx-rtd-theme,sphinx-bootstrap-theme,Switch to RTD theme,sphinx-bootstrap-theme sphinx-rtd-theme,"
Switch to RTD theme",11,Documentation,Documentation,False,False
4879,GenericMappingTools/pygmt,87f0aa40c6535c1616fac4304c2aa63d7c5391bd,2017-11-29 03:42:59,sphinx_rtd_theme,sphinx-bootstrap-theme,"Replace custom doc theme with RTD theme (#64)

Use the Read the Docs theme for the documentation to simplify things 
and avoid going too much into the design. Also fix the use of autodoc 
and autosummary to make a better API reference. Some tweaks to some 
docstrings as well.",sphinx-bootstrap-theme sphinx_rtd_theme,"
Replace custom doc theme with RTD theme (#64)",11,Documentation,Documentation,False,False
4881,automl/SMAC3,02c0af64488dd06d94e1af8eb1bbd23243c3032b,2017-04-25 12:34:22,sphinx_rtd_theme,sphinx-bootstrap-theme,"ADD APIdoc, CHANGE doc-theme to rtd",sphinx-bootstrap-theme sphinx_rtd_theme,"
ADD APIdoc, CHANGE doc-theme to rtd",11,Documentation,Documentation,False,False
4882,dpgaspar/Flask-AppBuilder,49755efa41f2567c9e38a8734e55a43485959db7,2017-06-19 17:22:42,sphinx_rtd_theme,sphinx-bootstrap-theme,Changes docs to readthedocs theme,sphinx-bootstrap-theme sphinx_rtd_theme,"
Changes docs to readthedocs theme",11,Documentation,Documentation,False,False
4888,tardis-sn/tardis,c8f06a761fabf8323d914a5bc66e16aea92e6b05,2016-05-11 15:41:01,sphinx_rtd_theme,sphinx-bootstrap-theme,"Change html theme, change icon

* use sphinx_rtd_theme instead of boostrap theme",sphinx-bootstrap-theme sphinx_rtd_theme,"
* use sphinx_rtd_theme instead of boostrap theme
Change html theme, change icon",11,Documentation,Documentation,False,False
4889,wmayner/pyphi,af65e780fca6a479145dfc18e914024ec5992797,2014-05-07 17:23:44,sphinx_rtd_theme,sphinx-bootstrap-theme,Switch to RTD theme,sphinx-bootstrap-theme sphinx_rtd_theme,"
Switch to RTD theme",11,Documentation,Documentation,False,False
4890,GeoNode/geonode,92a7e12ded5cc523e22b700cac39d9949ce64628,2011-05-09 19:45:32,unittest,algoliasearch-django,"Inherit settings from geonode project

Also, stop using Django test framework since it developed some issues
when we started doing this.",algoliasearch-django unittest,"
Also, stop using Django test framework since it developed some issues
when we started doing this.",6,Web Framework&Testing,Web Framework,False,False
4891,Materials-Consortia/optimade-python-tools,0a1e179f77f08555557d0d60e25896b9576edc59,2019-09-21 19:47:52,unittest,algoliasearch-django,changed the test module from Django to unittest,algoliasearch-django unittest,"
changed the test module from Django to unittest",6,Web Framework&Testing,Web Framework,False,False
4896,GeoNode/geonode,92a7e12ded5cc523e22b700cac39d9949ce64628,2011-05-09 19:45:32,unittest,django,"Inherit settings from geonode project

Also, stop using Django test framework since it developed some issues
when we started doing this.",django unittest,"
Also, stop using Django test framework since it developed some issues
when we started doing this.",6,Web Framework&Testing,Web Framework,False,False
4897,Materials-Consortia/optimade-python-tools,0a1e179f77f08555557d0d60e25896b9576edc59,2019-09-21 19:47:52,unittest,django,changed the test module from Django to unittest,django unittest,"
changed the test module from Django to unittest",6,Web Framework&Testing,Web Framework,False,False
4924,NagiosEnterprises/ncpa,846cdfda0bf8eef0111426252e7718f8f92e1658,2014-06-16 03:16:19,core-parser-app,configparser,"Fixing tests. Doing some architectural work, going to be reworking the way the passive agent reads the config and how the config even works, in order to get it to be something better like SQlite perhaps, I'm not sure, but I would like to rethink the configuratino file being an INI file.

Either way, the config interface should be reworked. Currently its using the ConfigParser interface, which is less than ideal. Having to remember the specific method from the config parser is muddying up the logic. Having a distinct Config class that will enforce certain methods to be intact and allow an abstraction barrier will be ideal and will make the classes that use them even simpler.",configparser core-parser-app,"
Either way, the config interface should be reworked.
Currently its using the ConfigParser interface, which is less than ideal.
Having to remember the specific method from the config parser is muddying up the logic.",3,Filesystem,Filesystem,False,False
4925,blue-yonder/pyscaffold,fcda08f1d0311062053b2729623f67ca844714d3,2018-08-12 16:30:18,core-parser-app,configparser,Replace ConfigParser by ConfigUpdater,configparser core-parser-app,"
Replace ConfigParser by ConfigUpdater",3,Filesystem,Filesystem,False,False
4926,reingart/pyafipws,41fae09885ef6e53e26d66d51bdc2dfb14e32da0,2021-02-23 04:14:32,core-parser-app,configparser,PyFEPDF: fix configparser en Py3K,configparser core-parser-app,"
PyFEPDF: fix configparser en Py3K",3,Filesystem,Filesystem,False,False
4973,GoogleCloudPlatform/PerfKitBenchmarker,4b0b941b3a7ad82c33fe5b6d415df8f3db16a75b,2020-04-13 21:30:57,boto,boto3,"Update Boto client library for S3 to boto3.

PiperOrigin-RevId: 306310032",boto3 boto,"Update Boto client library for S3 to boto3.
",4,HTTP Clients,HTTP Clients,False,False
4975,edx/edx-ora2,bb30a120505b748fd3726ba446d10db819f0cb5c,2017-08-21 19:52:58,boto,boto3,"Switch back to boto

The boto3 upgrade seems to have broken in prod

EDUCATOR-1183, EDUCATOR-1203",boto3 boto,"
Switch back to boto",4,HTTP Clients,HTTP Clients,False,False
4976,zalando/spilo,a83681c756fe8dfc8e5117c690bde16319e3e943,2017-07-28 07:32:17,boto,boto3,"Patroni 1.3 (#177)

* Use boto instead of boto3 and python3 to execute callback
* Bump patroni version",boto3 boto,"
* Use boto instead of boto3 and python3 to execute callback
* Bump patroni version",4,HTTP Clients,HTTP Clients,False,False
4977,GoogleCloudPlatform/PerfKitBenchmarker,2bafa6bf8b427dd8c4d0ed9228b8f176d8bf83ed,2016-08-25 00:34:52,numpy,pandas,"Replace Pandas with Numpy

Remove the Pandas dependency from the object storage benchmarker, and
replace it with a Numpy-based analysis. Take the opportunity to simplify
the analysis code and move it all into
perfkitbenchmarker/linux_benchmarks/object_storage_service_benchmark.py.

I also checked that the results from this benchmark match the results
from the previous version, at least for my test configuration.",pandas numpy,"
Replace Pandas with Numpy",8,Scientific&Codestyle,Scientific,False,False
4978,deepchem/deepchem,50efccc10d7dd32caf913b7da3059551dd7739d6,2016-08-01 21:00:21,numpy,pandas,rewrote code -- changed from pandas implementation to numpy,pandas numpy,"
rewrote code -- changed from pandas implementation to numpy",8,Scientific&Codestyle,Scientific,False,False
4979,jensengroup/propka,73f0ce47af966a8f740b173d997b1030fc154575,2020-05-23 15:40:17,numpy,pandas,"Replace pandas with numpy.testing

Addresses https://github.com/jensengroup/propka-3.1/pull/36#discussion_r429104797",pandas numpy,"
Replace pandas with numpy.testing",8,Scientific&Codestyle,Scientific,False,False
4981,mirnylab/cooltools,a0ee39d028f6525c0b4e96bbe5248e5b2d8527d6,2020-09-09 02:22:43,numpy,pandas,"Expected refactoring + bioframe upgrade (copied old PR by @golobor) (#170)

* added initial dot-calling notebook

* updated notebook

* updated the dots notebook

* updated notebook again

* before vacation notebook updates

* dot-calling notebook cleanup

* Remove deprecated functions

* added logbin_expected

* split logbin_expected into two functions

* improved logbins; added persistent logbins

* updated docs for logbin_expected; black

* added black

* expected: rename regions->supports

* common.py: add assign_regions_to_bins

* expected.py: bugfix; rename diag->dist

* Allow regions in expected CLI (#146)

* Make saddle strength work with NaNs

* Allow regions in CLI for expected

* Fix region_names without regions

* merge latest from master to develop (#155)

* More docstring edits

* Mock out imports directly

* Apply suggestions from code review

Co-Authored-By: Sergey Venev <sergpolly@gmail.com>

* Restore numpy to docs requirements

* Fix trans bad pixel counting

* fixed typo, added scalar extraction from array

* Update cooltools/expected.py

Co-Authored-By: Nezar Abdennur <nabdennur@gmail.com>

* Set default zoom order to 1

Somehow default zoom order was set to 3 instead of a much better default of 1! Goes against the docstring too.

* Change to new bioframe function names (#149)

* updated bioframe.slice_bedframe to bioframe.bedslice in line 337

* updated bioframe.bisect_bedframe to bioframe.bedbisect in line 356

* Update license

* Bump to dev version

* Revert changes to bioframe functions

* Pin dependency of cooltools 0.3 to bioframe 0.0

* Release v0.3.2

Co-authored-by: Nezar Abdennur <nabdennur@gmail.com>
Co-authored-by: Ilya Flyamer <flyamer@gmail.com>
Co-authored-by: Maksim Imakaev <mimakaev@gmail.com>
Co-authored-by: Sameer Abraham <sameer.abraham0@gmail.com>

* Bump again to 0.4.0-dev

* Start using CliRunner for testing cli commands

* Develop (#156)

* Bump again to 0.4.0-dev

* Start using CliRunner for testing cli commands

* fixed saddle code to accept bedslice

* refactored diagsum

* implement bad_bins in make_diag_tables

* deprecate/remove cis_/trans_expected

* implement bad_bins in count_bad_pixels_per_block

* fix bad_bins docstrings in diag and block-sums

* changes in saddle and expected to accept new expected format

* fix silly changes brought from master

* now actually fixed

* minimize diffs for Max, resolve new bioframe

* saddles tentatively working

* renamed normalize_regions

* bad_bins masking for diagsum_symm

* mask var name fix

* added compose masking and transforms to diagsum_asymm and blocksum

* column names fix in new _diagsum_asymm

* more var names fixing in  _diagsum_asymm

* attempt to unify block/diagsum API

* quick fixes, add contact-type docstrings

* typo fix bad_bins_dict

* change transforms default to empty dict

* fixed some bugs so more tests pass

* blocksum and diagsum with arbitraty regions

* minor fix in diagsum_asymm

* minor fix in diagsum_asymm

* cis eig rewritten; added mp.Pool.map to it

* allow symmetric diagsum to handle overlapping regions

* fix diagsum regions casting to ndarray

* docstrings regarding regions2 touchedup in expected

* initial tests for newer expected

* minor test expected fixes, names and typos

* fixing requirements conflict: conda vs pip, travis please work

* remove pytables fron conda-env in favor of tables in pip-reqs

* drop conda-environment-yaml, update travis-config

* travis fix: source activate instead of conda activate

* typo fix

* Update .travis.yml

* temporarily use bioframe-develop, make travis go

* Restore bioframe>=0.1.0 requirement

* typo in bioframe requirement

* Update formatting

* Update formatting

* Install bioframe from github develop branch

* Fix eigdecomp and saddle to work with new bioframe

* Formatting

Co-authored-by: Sergey Venev <sergpolly@gmail.com>
Co-authored-by: Nezar <nabdennur@gmail.com>
Co-authored-by: Anton Goloborodko <goloborodko.anton@gmail.com>
Co-authored-by: Ilya Flyamer <flyamer@gmail.com>
Co-authored-by: Sameer Abraham <sameer.abraham0@gmail.com>
Co-authored-by: sergpolly <sergpolly@pop-os.localdomain>",pandas numpy,"* changes in saddle and expected to accept new expected format
",8,Scientific&Codestyle,Scientific,False,False
4983,rhiever/tpot,2ab8c1444facbd46df8767a5badda5b9f1a50c29,2016-08-01 17:43:23,numpy,pandas,Remove Pandas and replace with numpy matrices,pandas numpy,"
Remove Pandas and replace with numpy matrices",8,Scientific&Codestyle,Scientific,False,False
4987,tweepy/tweepy,6f1d0f776ebca9ceb9674e317b1f2d1d37cad978,2014-12-10 01:57:59,http,httplib,"Fixed httplib import

In Python 3 httplib should be imported and used as http.client",httplib http,"
In Python 3 httplib should be imported and used as http.client",4,HTTP Clients,HTTP Clients,False,False
4992,GoogleCloudPlatform/gcloud-python,b35c64f98a812438e77c596c012169805908f958,2015-01-29 00:07:17,httplib,httplib2,"Using httplib instead of httplib2 to get GCE metadata.

Fixes #575.",httplib2 httplib,"
Using httplib instead of httplib2 to get GCE metadata.",3,HTTP Clients,HTTP Clients,False,False
4996,biocore/qiita,1ad763ad4e2e9d9a5853ca54f592eba1c7db137a,2014-08-04 17:58:38,mock,mox,switch from mox to mock for py3 compat,mox mock,"
switch from mox to mock for py3 compat",24,Testing,Testing,False,False
5000,google/capirca,771ce63b0e669674e90df792d17756c59b8f4da7,2016-06-01 06:31:32,mock,mox,Migrate rest of unittests from mox to mock.,mox mock,"
Migrate rest of unittests from mox to mock.",24,Testing,Testing,False,False
5002,jmcgeheeiv/pyfakefs,f39ba21332dbe43635ad7952073d7ac8e1c86a56,2015-04-20 03:26:46,mock,mox,"Replace dependency on 'mox' with standard library module 'mock'.
Import unittest2 for Python 2.6 compatability
In Travis, conditionally install unittest2 for Python 2.6.",mox mock,"
Replace dependency on 'mox' with standard library module 'mock'.",24,Testing,Testing,False,False
5016,pantsbuild/pants,b5eb940cf734a1c379f46051a67bd76895f756b6,2016-08-09 15:24:42,mock,mox,"Convert FetcherTest to use mock instead of mox.

Testing Done:
Locally green `./pants test tests/python/pants_test/net/http`.

CI went green here:
  https://travis-ci.org/pantsbuild/pants/builds/150791491

Bugs closed: 3324, 3759

Reviewed at https://rbcommons.com/s/twitter/r/4142/",mox mock,"
Convert FetcherTest to use mock instead of mox.",24,Testing,Testing,False,False
5017,pantsbuild/pex,283c309e102e88ebc882b194e2826d523378c572,2014-01-21 15:46:00,mock,mox,"[PATCH 6/6] add interpreter selection support to python build/test

Plumbs through PythonInterpreter support to build/test.
Switches twitter.common.python tests to mock from mox.

RB_ID=267043

(sapling split of 4b0a99bc801818d16eb70af152966fb0b35ba60e)

(sapling split of ce58b839719517c2b3690e02ae1bf9fe093dbc78)",mox mock,"
Switches twitter.common.python tests to mock from mox.",24,Testing,Testing,False,False
5020,Swimlane/swimlane-python,486c0c6f0cdd49ce0d8fe94331d513912c0b6f92,2016-03-10 22:51:30,mock,pytest,"Moving tests so they match the swimlane module structure, rewriting tests with mocks",pytest mock,"
Moving tests so they match the swimlane module structure, rewriting tests with mocks",3,Testing,Testing,False,False
5021,hikari-py/hikari,232bc7ffc5c123d07c136a23f9e47ac80ff64901,2020-04-28 13:47:13,mock,pytest,"Implement clients.components.Components and model slots (inc poc) + pagination handler changes.

* Closes #318 Implement clients.components.Components
* add pytest and pylint html pages to artifacts
* Make start mandatory for pagination users and use biggest int64 as default value for `before`.
* Remove some quoted forward references now that future annotations are required.
* Fix net.shards test to use mock times relative to time.perf_counter() as time.perf_counter is based on when the python instance/thread was started on Windows rather than system startup and would lead to the test timing out and failing on Windows.",pytest mock,"
* Fix net.shards test to use mock times relative to time.perf_counter() as time.perf_counter is based on when the python instance/thread was started on Windows rather than system startup and would lead to the test timing out and failing on Windows.",3,Testing,Testing,False,False
5022,GovReady/govready-q,2bc30774d5111e9cb61097676b568026aa5958e4,2021-03-24 10:36:39,algoliasearch-django,models,"Release/0.9.3.1 (#1502)

* Update develop to 0.9.3.0rc1

* upgrade urllib to prevent Improper Certificate Validation

* [WIP] Add actions to questions to set components based on questions

Add a `question` key to a compliance app question so that
we can do all the actions that have a value equivalent to
the answer. One type of action is adding a component to the project.

Another action would be setting the baseline of controls.

* Add ""actions"" to Compliance App questions (e.g., tasks) that are conditionally performed based on question answer(s).
A question answer can trigger multiple actions (sequentially).

Actions take the form:

```
  actions:
    - value: <answer_value>
      action: <object>/<verb>/<filter>
      comment: <comment>
```

Example actions:

```
  actions:
    - value: adfs
      action: element/add_role/ADFS
      comment: Add elements assigned AFDS to selected components
    - value: adfs
      action: element/del_role/Azure Active Directory
      comment: Delete elements assigned Azure Active Directory from selected components
```

Only two actions are currently supported:

1. `element/add_role/<role_value>` - Automatically add elements to the selected components of a system
1. `element/del_role/<role_value>` - Automatically delete elements from the selected components of a system

- Actions are (currently) performed as part of the processing question answer in guidedmodules, before going to next question.
- Actions should be idempotent.
- Actions almost never re-direct user out of the questionnaire.
- Actions need to be reversible. When a user changes an answer previous action should be undone or modified accordingly.

We connect actions defined in the portable compliance app to GovReady-Q instance data via ""roles"" dynamically assigned to target objects.
In the initially supported use case, Elements can be assiged Roles via new `ElementRole` model.
The new `ElementRole` model assigns roles to system elements via a Many-to-Many relationship.
ElementRoles and associating Elements to roles is currently be done in Django admin interface.

Roles provide a level of abstraction between an action defined in compliance app and actual objects dynamically assign that role.

ElementRoles also enables categorizing, organizing, filtering, and creating checks around Elements. An example roles might be ""internal-only"" to make allow checks to be added to prevent accidental disclore.

ElementsRoles differ from more generic tags because the setting of roles should be limited to privileged users and have specific organizational purpose.

Current limitations:
- No tests.
- ElementRoles and Element assignment to roles must be done in Djang admin interface.
- Adding component is done through questionnaire, but if component deleted question does not yet know or update. Need to be able to clear question.
- No handling yet of marking a question unanswered.
- No logging yet of action result to question history.
- Code needs optimization and DRY-ness.
- Roles need to be created manually in the GovReady-Q instance for a compliance app using actions with roles. In the future, when a compliance app is loaded the roles could be created automically. An privileged would still need to assign local elements to roles.

* Fix import of messages

* Rename nav links: Component Catalog, Template Library

* Renamed ""Component Library"" to ""Component Catalog"" in nav bar.
* Rename ""App Library"" to ""Template Library"" in nav bar.
* Add ""Project Home"" button to action button ribbon.
* Top of action button ribbon button order now: ""Project Home"", ""Controls"", ""Components"".

* Small tweeks

* Local Development Dockerized

* remove versioning

* fixed versioning

* Fixed Vulnerability on dependency Pygments version

* Update deployment/local/docker-entrypoint.sh

That won't work.  You need to close the if statement in bash.

govready_q    | /usr/src/app/deployment/local/docker-entrypoint.sh: line 15: syntax error: unexpected end of file

Co-authored-by: davidpofo <dampofo@umd.edu>

* need to close if statement bash

* Improve line break formatting in output docs

Improve line break formatting in output docs,
both HTML and DOCX, by creating versions of string parameters
with line breaks (<br/>) replacing line returns (\n).

The line breaks are respected by HTML and DOCX.

Next up to fix: indententation across HTML and DOCX.

* Add html, docx line break fixes

* poams have a uuid field in their statements and the uuid needs to be typecasted into a string since uuids are not json serializable.

* Re-assign system baseline to different baseline

Update controls.models.Element.assign_baseline_controls method
to update controls to a different baseline.

assign_baseline_controls method now dynamically adds and
removes controls from different baselines while leaving controls
that exist in both baselines not changed.

* dont need created/update for imported poams. Need new poam uuid.

* Unit test adding baseline to root_element

* fix: requirements.txt to reduce vulnerabilities


The following vulnerabilities are fixed by pinning transitive dependencies:
- https://snyk.io/vuln/SNYK-PYTHON-LXML-1088006

* Update guidedmodules/views.py - correct typo

Co-authored-by: davidpofo <dampofo@umd.edu>

* Update guidedmodules/views.py

Co-authored-by: davidpofo <dampofo@umd.edu>

* Update guidedmodules/views.py

Co-authored-by: davidpofo <dampofo@umd.edu>

* Process question system actions to assign control baseline

Add action processing for question actions targeted at system
to handle `system/assign_baseline/<value>` to assign baseline
set of controls to a system.

* Fix project page mini-dashboard displayed control count

Use `project.system.root_element.controls.all` to get count
of controls selected for a system instead of
`project.system.smts_control_implementation_as_dict`.

The former returns a constant value based on controls selected
and is the correct measure of controls assigned to the system.`

* Process question system actions to set project, system name

Add action processing for question actions targeted at system
to handle `system/update_system_and_project_name/<value>` to
set system name and project title.

* Update CHANGELOG

* make sure it goes to project home not empty. Also add project home button to settings

* removed unused code

* Update guidedmodules/views.py

* Update guidedmodules/views.py

* Update templates/navbar.html

* revert to Component Library

* putting the oscal in a div with scrollbars and making it selectable

* css to put OSCAL in a div with scroll and selectable

* fix hashes

* element_type is system_element not component. Added test_element_role test

* Update views.py

mispelling

* Added organization-agnostic version of the Speedy SSP. Uses the following components: AWS IAM, Microsoft Active Directory, Cybrary, and ILIAS. Added new icon for Speedy SSP.

* Fix to speedyssp; update CHANGELOG

* updated changelog and version

* Update requirements.txt

* Rename installed sample project

Co-authored-by: Greg Elin <greg.elin@govready.com>
Co-authored-by: Alexander Ward <alexander.ward1@gmail.com>
Co-authored-by: snyk-bot <snyk-bot@snyk.io>
Co-authored-by: Greg Elin <gregelin@govready.com>
Co-authored-by: kerry <kerryrm@gmail.com>
Co-authored-by: Dayton Williams <50302989+cityinohio2019@users.noreply.github.com>",models algoliasearch-django,"
In the initially supported use case, Elements can be assiged Roles via new `ElementRole` model.",5,Database&Web Framework,Database,False,False
5027,GovReady/govready-q,2bc30774d5111e9cb61097676b568026aa5958e4,2021-03-24 10:36:39,askbot,models,"Release/0.9.3.1 (#1502)

* Update develop to 0.9.3.0rc1

* upgrade urllib to prevent Improper Certificate Validation

* [WIP] Add actions to questions to set components based on questions

Add a `question` key to a compliance app question so that
we can do all the actions that have a value equivalent to
the answer. One type of action is adding a component to the project.

Another action would be setting the baseline of controls.

* Add ""actions"" to Compliance App questions (e.g., tasks) that are conditionally performed based on question answer(s).
A question answer can trigger multiple actions (sequentially).

Actions take the form:

```
  actions:
    - value: <answer_value>
      action: <object>/<verb>/<filter>
      comment: <comment>
```

Example actions:

```
  actions:
    - value: adfs
      action: element/add_role/ADFS
      comment: Add elements assigned AFDS to selected components
    - value: adfs
      action: element/del_role/Azure Active Directory
      comment: Delete elements assigned Azure Active Directory from selected components
```

Only two actions are currently supported:

1. `element/add_role/<role_value>` - Automatically add elements to the selected components of a system
1. `element/del_role/<role_value>` - Automatically delete elements from the selected components of a system

- Actions are (currently) performed as part of the processing question answer in guidedmodules, before going to next question.
- Actions should be idempotent.
- Actions almost never re-direct user out of the questionnaire.
- Actions need to be reversible. When a user changes an answer previous action should be undone or modified accordingly.

We connect actions defined in the portable compliance app to GovReady-Q instance data via ""roles"" dynamically assigned to target objects.
In the initially supported use case, Elements can be assiged Roles via new `ElementRole` model.
The new `ElementRole` model assigns roles to system elements via a Many-to-Many relationship.
ElementRoles and associating Elements to roles is currently be done in Django admin interface.

Roles provide a level of abstraction between an action defined in compliance app and actual objects dynamically assign that role.

ElementRoles also enables categorizing, organizing, filtering, and creating checks around Elements. An example roles might be ""internal-only"" to make allow checks to be added to prevent accidental disclore.

ElementsRoles differ from more generic tags because the setting of roles should be limited to privileged users and have specific organizational purpose.

Current limitations:
- No tests.
- ElementRoles and Element assignment to roles must be done in Djang admin interface.
- Adding component is done through questionnaire, but if component deleted question does not yet know or update. Need to be able to clear question.
- No handling yet of marking a question unanswered.
- No logging yet of action result to question history.
- Code needs optimization and DRY-ness.
- Roles need to be created manually in the GovReady-Q instance for a compliance app using actions with roles. In the future, when a compliance app is loaded the roles could be created automically. An privileged would still need to assign local elements to roles.

* Fix import of messages

* Rename nav links: Component Catalog, Template Library

* Renamed ""Component Library"" to ""Component Catalog"" in nav bar.
* Rename ""App Library"" to ""Template Library"" in nav bar.
* Add ""Project Home"" button to action button ribbon.
* Top of action button ribbon button order now: ""Project Home"", ""Controls"", ""Components"".

* Small tweeks

* Local Development Dockerized

* remove versioning

* fixed versioning

* Fixed Vulnerability on dependency Pygments version

* Update deployment/local/docker-entrypoint.sh

That won't work.  You need to close the if statement in bash.

govready_q    | /usr/src/app/deployment/local/docker-entrypoint.sh: line 15: syntax error: unexpected end of file

Co-authored-by: davidpofo <dampofo@umd.edu>

* need to close if statement bash

* Improve line break formatting in output docs

Improve line break formatting in output docs,
both HTML and DOCX, by creating versions of string parameters
with line breaks (<br/>) replacing line returns (\n).

The line breaks are respected by HTML and DOCX.

Next up to fix: indententation across HTML and DOCX.

* Add html, docx line break fixes

* poams have a uuid field in their statements and the uuid needs to be typecasted into a string since uuids are not json serializable.

* Re-assign system baseline to different baseline

Update controls.models.Element.assign_baseline_controls method
to update controls to a different baseline.

assign_baseline_controls method now dynamically adds and
removes controls from different baselines while leaving controls
that exist in both baselines not changed.

* dont need created/update for imported poams. Need new poam uuid.

* Unit test adding baseline to root_element

* fix: requirements.txt to reduce vulnerabilities


The following vulnerabilities are fixed by pinning transitive dependencies:
- https://snyk.io/vuln/SNYK-PYTHON-LXML-1088006

* Update guidedmodules/views.py - correct typo

Co-authored-by: davidpofo <dampofo@umd.edu>

* Update guidedmodules/views.py

Co-authored-by: davidpofo <dampofo@umd.edu>

* Update guidedmodules/views.py

Co-authored-by: davidpofo <dampofo@umd.edu>

* Process question system actions to assign control baseline

Add action processing for question actions targeted at system
to handle `system/assign_baseline/<value>` to assign baseline
set of controls to a system.

* Fix project page mini-dashboard displayed control count

Use `project.system.root_element.controls.all` to get count
of controls selected for a system instead of
`project.system.smts_control_implementation_as_dict`.

The former returns a constant value based on controls selected
and is the correct measure of controls assigned to the system.`

* Process question system actions to set project, system name

Add action processing for question actions targeted at system
to handle `system/update_system_and_project_name/<value>` to
set system name and project title.

* Update CHANGELOG

* make sure it goes to project home not empty. Also add project home button to settings

* removed unused code

* Update guidedmodules/views.py

* Update guidedmodules/views.py

* Update templates/navbar.html

* revert to Component Library

* putting the oscal in a div with scrollbars and making it selectable

* css to put OSCAL in a div with scroll and selectable

* fix hashes

* element_type is system_element not component. Added test_element_role test

* Update views.py

mispelling

* Added organization-agnostic version of the Speedy SSP. Uses the following components: AWS IAM, Microsoft Active Directory, Cybrary, and ILIAS. Added new icon for Speedy SSP.

* Fix to speedyssp; update CHANGELOG

* updated changelog and version

* Update requirements.txt

* Rename installed sample project

Co-authored-by: Greg Elin <greg.elin@govready.com>
Co-authored-by: Alexander Ward <alexander.ward1@gmail.com>
Co-authored-by: snyk-bot <snyk-bot@snyk.io>
Co-authored-by: Greg Elin <gregelin@govready.com>
Co-authored-by: kerry <kerryrm@gmail.com>
Co-authored-by: Dayton Williams <50302989+cityinohio2019@users.noreply.github.com>",models askbot,"
In the initially supported use case, Elements can be assiged Roles via new `ElementRole` model.",4,Database&Web Framework,Database,False,False
5031,GovReady/govready-q,2bc30774d5111e9cb61097676b568026aa5958e4,2021-03-24 10:36:39,django,models,"Release/0.9.3.1 (#1502)

* Update develop to 0.9.3.0rc1

* upgrade urllib to prevent Improper Certificate Validation

* [WIP] Add actions to questions to set components based on questions

Add a `question` key to a compliance app question so that
we can do all the actions that have a value equivalent to
the answer. One type of action is adding a component to the project.

Another action would be setting the baseline of controls.

* Add ""actions"" to Compliance App questions (e.g., tasks) that are conditionally performed based on question answer(s).
A question answer can trigger multiple actions (sequentially).

Actions take the form:

```
  actions:
    - value: <answer_value>
      action: <object>/<verb>/<filter>
      comment: <comment>
```

Example actions:

```
  actions:
    - value: adfs
      action: element/add_role/ADFS
      comment: Add elements assigned AFDS to selected components
    - value: adfs
      action: element/del_role/Azure Active Directory
      comment: Delete elements assigned Azure Active Directory from selected components
```

Only two actions are currently supported:

1. `element/add_role/<role_value>` - Automatically add elements to the selected components of a system
1. `element/del_role/<role_value>` - Automatically delete elements from the selected components of a system

- Actions are (currently) performed as part of the processing question answer in guidedmodules, before going to next question.
- Actions should be idempotent.
- Actions almost never re-direct user out of the questionnaire.
- Actions need to be reversible. When a user changes an answer previous action should be undone or modified accordingly.

We connect actions defined in the portable compliance app to GovReady-Q instance data via ""roles"" dynamically assigned to target objects.
In the initially supported use case, Elements can be assiged Roles via new `ElementRole` model.
The new `ElementRole` model assigns roles to system elements via a Many-to-Many relationship.
ElementRoles and associating Elements to roles is currently be done in Django admin interface.

Roles provide a level of abstraction between an action defined in compliance app and actual objects dynamically assign that role.

ElementRoles also enables categorizing, organizing, filtering, and creating checks around Elements. An example roles might be ""internal-only"" to make allow checks to be added to prevent accidental disclore.

ElementsRoles differ from more generic tags because the setting of roles should be limited to privileged users and have specific organizational purpose.

Current limitations:
- No tests.
- ElementRoles and Element assignment to roles must be done in Djang admin interface.
- Adding component is done through questionnaire, but if component deleted question does not yet know or update. Need to be able to clear question.
- No handling yet of marking a question unanswered.
- No logging yet of action result to question history.
- Code needs optimization and DRY-ness.
- Roles need to be created manually in the GovReady-Q instance for a compliance app using actions with roles. In the future, when a compliance app is loaded the roles could be created automically. An privileged would still need to assign local elements to roles.

* Fix import of messages

* Rename nav links: Component Catalog, Template Library

* Renamed ""Component Library"" to ""Component Catalog"" in nav bar.
* Rename ""App Library"" to ""Template Library"" in nav bar.
* Add ""Project Home"" button to action button ribbon.
* Top of action button ribbon button order now: ""Project Home"", ""Controls"", ""Components"".

* Small tweeks

* Local Development Dockerized

* remove versioning

* fixed versioning

* Fixed Vulnerability on dependency Pygments version

* Update deployment/local/docker-entrypoint.sh

That won't work.  You need to close the if statement in bash.

govready_q    | /usr/src/app/deployment/local/docker-entrypoint.sh: line 15: syntax error: unexpected end of file

Co-authored-by: davidpofo <dampofo@umd.edu>

* need to close if statement bash

* Improve line break formatting in output docs

Improve line break formatting in output docs,
both HTML and DOCX, by creating versions of string parameters
with line breaks (<br/>) replacing line returns (\n).

The line breaks are respected by HTML and DOCX.

Next up to fix: indententation across HTML and DOCX.

* Add html, docx line break fixes

* poams have a uuid field in their statements and the uuid needs to be typecasted into a string since uuids are not json serializable.

* Re-assign system baseline to different baseline

Update controls.models.Element.assign_baseline_controls method
to update controls to a different baseline.

assign_baseline_controls method now dynamically adds and
removes controls from different baselines while leaving controls
that exist in both baselines not changed.

* dont need created/update for imported poams. Need new poam uuid.

* Unit test adding baseline to root_element

* fix: requirements.txt to reduce vulnerabilities


The following vulnerabilities are fixed by pinning transitive dependencies:
- https://snyk.io/vuln/SNYK-PYTHON-LXML-1088006

* Update guidedmodules/views.py - correct typo

Co-authored-by: davidpofo <dampofo@umd.edu>

* Update guidedmodules/views.py

Co-authored-by: davidpofo <dampofo@umd.edu>

* Update guidedmodules/views.py

Co-authored-by: davidpofo <dampofo@umd.edu>

* Process question system actions to assign control baseline

Add action processing for question actions targeted at system
to handle `system/assign_baseline/<value>` to assign baseline
set of controls to a system.

* Fix project page mini-dashboard displayed control count

Use `project.system.root_element.controls.all` to get count
of controls selected for a system instead of
`project.system.smts_control_implementation_as_dict`.

The former returns a constant value based on controls selected
and is the correct measure of controls assigned to the system.`

* Process question system actions to set project, system name

Add action processing for question actions targeted at system
to handle `system/update_system_and_project_name/<value>` to
set system name and project title.

* Update CHANGELOG

* make sure it goes to project home not empty. Also add project home button to settings

* removed unused code

* Update guidedmodules/views.py

* Update guidedmodules/views.py

* Update templates/navbar.html

* revert to Component Library

* putting the oscal in a div with scrollbars and making it selectable

* css to put OSCAL in a div with scroll and selectable

* fix hashes

* element_type is system_element not component. Added test_element_role test

* Update views.py

mispelling

* Added organization-agnostic version of the Speedy SSP. Uses the following components: AWS IAM, Microsoft Active Directory, Cybrary, and ILIAS. Added new icon for Speedy SSP.

* Fix to speedyssp; update CHANGELOG

* updated changelog and version

* Update requirements.txt

* Rename installed sample project

Co-authored-by: Greg Elin <greg.elin@govready.com>
Co-authored-by: Alexander Ward <alexander.ward1@gmail.com>
Co-authored-by: snyk-bot <snyk-bot@snyk.io>
Co-authored-by: Greg Elin <gregelin@govready.com>
Co-authored-by: kerry <kerryrm@gmail.com>
Co-authored-by: Dayton Williams <50302989+cityinohio2019@users.noreply.github.com>",models django,"
In the initially supported use case, Elements can be assiged Roles via new `ElementRole` model.",4,Database&Web Framework,Database,False,False
5048,MDAnalysis/mdanalysis,407eb242cf785546726b7e3e665f4615c46bcad4,2017-06-30 06:58:02,scipy,netcdf4,"replaced netCDF4 with scipy.io.netcdf (issue #506)

- removed all imports of netCDF4
- API is different (less feature rich in the pure python
  implementation) so it is not straightforward to support
  both netCDF4 and fall back on scipy.io.netcdf (or perhaps
  even pupyere, which is a single-file package from which the
  scipy code originated)
- uses float32 for
  - positions
  - velocities
  - forces
  (port of resolution of issue #518)
- change NCDFReader, NCDFWriter and test_netcdf
- see discussion of issue #506 for performance benchmarks
- fixed skipif in netcdf tests",netcdf4 scipy,"
replaced netCDF4 with scipy.io.netcdf (issue #506)",3,Filesystem&Deep Learning,Filesystem,False,False
5049,pysat/pysat,26692134384addaef104d0c2be529f54eb15b19a,2016-02-09 06:06:40,scipy,netcdf4,Updated to use scipy for netCDF loading,netcdf4 scipy,"Updated to use scipy for netCDF loading
",3,Filesystem&Deep Learning,Filesystem,False,False
5051,OpenTrons/opentrons-api,1a13990e4c1dbb280e2690057f2ebb50d7026f2c,2021-01-30 01:48:51,mock,unittest,"refactor(robot-server): clean up tests using AsyncMock (#7271)

* replace unittest.mock with mock.",unittest mock,"
* replace unittest.mock with mock.",15,Testing,Testing,False,False
5056,bethgelab/foolbox,8740add39c7e32f4e85ca9a25558b3d542ea34bd,2018-11-05 12:00:18,mock,unittest,use mock instead of unittest.mock,unittest mock,"
use mock instead of unittest.mock",15,Testing,Testing,False,False
5057,hikari-py/hikari,cef8ca22958183b7580f9b6e358ffb840c439e79,2020-04-15 18:25:37,mock,unittest,Replace `unittest.mock` with `mock`,unittest mock,"
Replace `unittest.mock` with `mock`",15,Testing,Testing,False,False
5059,ni/nimi-python,0c29746453b4d7575a89ca34906fcafa0c2a02c3,2017-07-12 15:04:08,mock,unittest,"Enable Travis CI (#66)

* Add test as a target

* Also add <driver>_test as a target
* Don't build *test targets as part of make all

* Fix issue found by testing

* We are using mock instead of unittest.mock

This is to support Python 2.7

* Add Travis & Tox

* Enable verbose output when building on Travis CI

* Add requirement to install mock

* Upgrade or install our dependencies

* Do all in one command invocation so a failure will stop

* Disable tox-travis integration. We want tox to test all permutations and not rely on Travis

* Explicitly install tox

* Disable pypy3 since pip fails with Python 3.2

* Enable tox - travis integration

* Will get mutliple builds but this is needed to add 3.5 & 3.6 to the
build environment

* Use pip3 since we are building with python3

* Can't use pip3, so try to just use python instead of python3

The issue is:
* By default we use python3
* When building with 2.7 or pypy, pip installs the dependencies into the
Python 2 location
* We need them in the python3 location
* Don't have permission to use pip3

* Build with 3.6, use tox to iterate ocer other versions

* Build with 3.6

* Fix typo",unittest mock,"
* We are using mock instead of unittest.mock",15,Testing,Testing,False,False
5066,IDSIA/sacred,adfe6626cf9deb48120dafcd49e49ddc1b25fac2,2016-07-05 10:02:14,future,six,"migrated from six to future

This was done to avoid clashes with old versions of the system-installed six package",six future,"
migrated from six to future",15,Utility,Utility,False,False
5067,OasisLMF/OasisLMF,4a225df048e4b2e2adc78bfd6403e3c8190eab68,2019-02-05 15:10:11,future,six,Remove use of `six` package wherever possible (replace by imports from `future.utils`) + clean up import blocks,six future,"Remove use of `six` package wherever possible (replace by imports from `future.utils`) + clean up import blocks
",15,Utility,Utility,False,False
5069,greedo/python-xbrl,ad97d2d1c284815e518a1963692dafd899605633,2014-09-28 17:33:35,future,six,"using futures instead of six, less code",six future,"
using futures instead of six, less code",15,Utility,Utility,False,False
5074,plotly/dash,a85268f294cf858462954986549b2d380abd5b20,2019-08-30 03:37:02,future,six,replace six with future,six future,"
replace six with future",15,Utility,Utility,False,False
5075,rmjarvis/TreeCorr,f1f2883f23a94dc3e166987e9baa02e519d62120,2016-04-08 20:29:36,future,six,Switch from six to future.utils,six future,"Switch from six to future.utils
",15,Utility,Utility,False,False
5077,romanvm/service.addic7ed,93f8f9665dd524d793dd93ed3c8498f83c971b0d,2018-10-22 07:38:36,future,six,Replace six with future,six future,"
Replace six with future",15,Utility,Utility,False,False
5079,vit-project/vit,11a10d40ea52f69885e3cb80d1fcf82f742b754a,2019-05-17 04:44:15,future,six,switch from six to future,six future,"
switch from six to future",15,Utility,Utility,False,False
5081,OCHA-DAP/hdx-ckan,fe1c98364d153935dd96baf8b7ec3a9405eef805,2017-01-07 20:01:54,click,docopt,[#3384] use click instead of docopt,docopt click,"
[#3384] use click instead of docopt",12,Utility,Utility,False,False
5090,snapcore/snapcraft,d34dc16af465cef9e7453eee91c58996cb3dbb32,2017-05-19 14:33:23,click,docopt,"cli: new UI and internal refactor (#1307)

This implementation moves away from docopt and implements the cli with click adding a lot of help for each command along the way.",docopt click,"
This implementation moves away from docopt and implements the cli with click adding a lot of help for each command along the way.",12,Utility,Utility,False,False
5099,wh1te909/tacticalrmm,22b65ca06dd1a39fa0e1530662e068b453d1440c,2020-06-30 08:03:36,pycryptodome,pycryptodomex,fix crypto import,pycryptodomex pycryptodome,"
fix crypto import",5,Crypto,Crypto,False,False
5102,allenai/pybart,ffd3b2b5087ad77bb630f2d81f3e2751b9934d42,2019-09-10 07:47:05,re,regex,fixed regex to re,regex re,"
fixed regex to re",9,Utility,Utility,False,False
5104,bioinform/somaticseq,ee55e82091b4434aa68c4475f257d02d4f72238a,2017-11-15 00:18:44,re,regex,replace regex with re when no need for regex,regex re,"
replace regex with re when no need for regex",9,Utility,Utility,False,False
5105,intentionet/netconan,676e3021235b437a09ae284acacbf4f1ff196602,2019-11-04 17:48:22,re,regex,Use `re` in place of `regex` (#132),regex re,"
Use `re` in place of `regex` (#132)",9,Utility,Utility,False,False
5136,PyO3/setuptools-rust,4879fe85fe1132096d22ad224a337e93fd00a645,2018-06-10 01:06:30,toml,configparser,"Replaced configparser with toml package for parsing Cargo.toml as configparser was unable to handle array of tables, e.g. multiple [[bench]]s or [[example]]s",configparser toml,"
Replaced configparser with toml package for parsing Cargo.toml as configparser was unable to handle array of tables, e.g.
multiple [[bench]]s or [[example]]s",3,Filesystem,Filesystem,False,False
5137,creativeprojects/resticprofile,8614e5d6834ee80083f4b23a792f9f6f926d7fe4,2019-06-11 20:24:38,toml,configparser,Change configparser for the much better toml library,configparser toml,"
Change configparser for the much better toml library",3,Filesystem,Filesystem,False,False
5144,Yubico/yubikey-manager,25e51d3ea0c102ba53baabaec313a9278a71da95,2019-04-26 14:19:52,http,requests,Use plain http.client instead of requests,requests http,"
Use plain http.client instead of requests",8,HTTP Clients,HTTP Clients,False,False
5147,pallets/werkzeug,3f3d7217f8cb05c025b7fa4bc03db2e4b4e2ff8a,2020-10-20 14:53:03,http,requests,"Refactor server tests
- Consolidate server apps: refactor app strings into code, create a common set of apps
- Refactor conftest fixtures to reuse apps between tests in the same module
- Refactor tests to use consolidated set of server apps
- Replace requests library with http client and unix sockets",requests http,"
- Refactor tests to use consolidated set of server apps
- Replace requests library with http client and unix sockets",8,HTTP Clients,HTTP Clients,False,False
5149,soimort/you-get,c7a262cf652ec51485634fb92d58a32d2d63504f,2017-05-13 21:39:07,http,requests,[UCAS] use http.client instead of requests,requests http,"
[UCAS] use http.client instead of requests",8,HTTP Clients,HTTP Clients,False,False
5151,nlgranger/SeqTools,589880fde17bbd23540ea50073b001d3fb5ca181,2017-06-24 23:31:34,nose,pytest,"updated tests to nose, updated doc, stuff",pytest nose,"
updated tests to nose, updated doc, stuff",3,Testing,Testing,False,False
5153,IBM/lale,3e984f970d51635ffaba95efa62d2205895bd483,2021-07-05 14:47:27,keras,pandas,"Trying to include 3.8 in github actions. (#764)

* Trying to include 3.8 in github actions.

* Trying to allow tensorflow 2 as tensorflow 1 is not found for Python 3.8.

* Commenting out autoai-ts-libs for Python 3.8.

* skipping pre-commit checks for 3.8.

* Updating an assert statement to allow python 3.8.

* Testing test_lale_lib_versions and notebooks only for 3.7.

* Reverting back to tensorflow < 2.

* conditional install of tensorflow 1.

* playing with the version of cvxpy.

* Pinning to tensorflow 2.4 as there is some mismatch with keras and its use by tempeh.

* removing pytorch and tensorflow operator wrappers.

* Verifying tempeh, tf and keras versions.

* Changes to be compatible with tensorflow 2.

* Removing the notebook that used pretrained_bert_encoder.",pandas keras,"* Pinning to tensorflow 2.4 as there is some mismatch with keras and its use by tempeh.
",3,Scientific&Deep Learning,Scientific,False,False
5156,IN-CORE/pyincore,750cebf95078ad5e3d05e97ba73b79cec3e78610,2018-04-10 16:17:42,os,pytest,fix and add new functions to dataservices; create test case accordingly,pytest os,"
fix and add new functions to dataservices; create test case accordingly",3,Testing&Filesystem,Testing,False,False
5158,mjs7231/python-plexapi,68fc970d7a3eca76333fcfcbb0e01a51b6572526,2018-09-14 18:03:23,os,pytest,"Improvements in tests process (#297)

* lets begin

* skip plexpass tests if there is not plexpass on account

* test new myplex attrubutes

* bootstrap: proper photos organisation

* fix rest of photos tests

* fix myplex new attributes test

* fix music bootstrap by setting agent to lastfm

* fix sync tests

* increase bootstrap timeout

* remove timeout from .travis.yml

* do not create playlist-style photoalbums in plex-bootstraptest.py

* allow negative filtering in LibrarySection.search()

* fix sync tests once again

* use sendCrashReports in test_settings

* fix test_settings

* fix test_video

* do not accept eula in bootstrap

* fix PlexServer.isLatest()

* add test against old version of PlexServer

* fix MyPlexAccount.OutOut

* add flag for one-time testing in Travis

* fix test_library onDeck tests

* fix more tests

* use tqdm in plex-bootstraptest for media scanning progress

* create sections one-by-one

* update docs on AlertListener for timeline entries

* fix plex-bootstraptest for server version 1.3.2

* display skip/xpass/xfail reasons

* fix tests on 1.3

* wait for music to be fully processed in plex-bootstraptest

* fix misplaced TEST_ACCOUNT_ONCE

* fix test_myplex_users, not sure if in proper-way

* add pytest-rerunfailures; mark test_myplex_optout as flaky

* fix comment

* Revert ""add pytest-rerunfailures; mark test_myplex_optout as flaky""

This reverts commit 580e4c95a758c92329d757eb2f3fc3bf44b26f09.

* restart plex container on failure

* add conftest.wait_until() and used where some retries are required

* add more wait_until() usage in test_sync

* fix managed user search

* fix updating managed users in myplex

* allow to add new servers to existent users

* add new server to a shared user while bootstrapping

* add some docs on testing process

* perform few attemps when unable to get the claim token

* unlock websocket-client in requirements_dev

* fix docblock in tools/plex-teardowntest

* do not hardcode mediapart size in test_video

* remove cache:pip from travis

* Revert ""unlock websocket-client in requirements_dev""

This reverts commit 0d536bd06dbdc4a4b869a1686f8cd008898859fe.

* remove debug from server.py

* improve webhook tests

* fix type() check to isinstance()

* remove excessive `else` branch due to Hellowlol advice

* add `unknown` as allowed `myPlexMappingState` in test_server",pytest os,"
* fix myplex new attributes test",3,Testing&Filesystem,Testing,False,False
5159,IQTLabs/poseidon,2051cfc433929ccbcf44c5089e088ba5a99a6b10,2021-07-13 16:10:19,httpx,requests,move from requests to httpx,requests httpx,"
move from requests to httpx",16,HTTP Clients,HTTP Clients,False,False
5160,Mergifyio/mergify-engine,a5b20bf2dff6fc3e8870e2f7729a3ec44ea0f3a1,2020-04-09 13:52:25,httpx,requests,refactor(tests): replace requests by httpx,requests httpx,"
refactor(tests): replace requests by httpx",16,HTTP Clients,HTTP Clients,False,False
5164,avwx-rest/AVWX-Engine,967b3ce8ee2ad4e14886903dc44ae00473b964f3,2019-10-26 15:32:48,httpx,requests,"Use httpx request library, spelling fixes",requests httpx,"
Use httpx request library, spelling fixes",16,HTTP Clients,HTTP Clients,False,False
5167,chdsbd/kodiak,ae99de3ddaef1aca839c74c04c2fdb0fa8362858,2021-06-06 20:54:36,httpx,requests,"ref(bot): replace deprecated http client (#666)

`requests_async` has been deprecated for a while, but we never got around to upgrading it.

Ran into an issue with https://github.com/chdsbd/kodiak/pull/659 where the current test client
for the API breaks in async contexts, and `requests_async` has a child dependency that conflicts
with `httpx` so we need to replace `requests_async`.",requests httpx,"
for the API breaks in async contexts, and `requests_async` has a child dependency that conflicts
with `httpx` so we need to replace `requests_async`.",16,HTTP Clients,HTTP Clients,False,False
5169,hugovk/pypistats,7fcf4b961df0757649df3a146f4bbac0f010febc,2021-01-08 17:17:35,httpx,requests,"Replace Requests with HTTPX (#88)

Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>",requests httpx,"
Replace Requests with HTTPX (#88)",16,HTTP Clients,HTTP Clients,False,False
5171,jadchaar/SEC-EDGAR-Downloader,8e635fcf339866a3be27175e562e560571c6db66,2021-05-09 04:22:41,httpx,requests,"Swap out requests for httpx and add retry mechanism (#74)

* Add retry mechanism-swap out requests for httpx

* set max parallel to 10",requests httpx,"
Swap out requests for httpx and add retry mechanism (#74)",16,HTTP Clients,HTTP Clients,False,False
5172,mkb79/Audible,5a72b28061781ab4eaf387fda0d07030ed19be94,2020-06-01 21:11:01,httpx,requests,"switch to httpx

remove requests and aiohttp moduls and replace with httpx",requests httpx,"
remove requests and aiohttp moduls and replace with httpx",16,HTTP Clients,HTTP Clients,False,False
5174,triaxtec/openapi-python-client,d953cde307f4b00f29b0a80a7cd00dbf3fd85428,2020-03-21 18:01:11,httpx,requests,"Switch from requests to httpx

Closes #15",requests httpx,"
Switch from requests to httpx",16,HTTP Clients,HTTP Clients,False,False
5185,IdentityPython/pyop,578c7690a3e59deb99e5ebb27799cd9665446537,2021-07-12 21:43:34,redis,pytest,"storage: add Redis storage backend

This change adds Redis as an alternative storage backend.

Implementation notes:
- The database name (which is a number) should be provided in the
connection URI.
- The keys are prefixed with the 'collection' string, so that it is
possible to share the same database with other applications.
- All values are stored as JSON documents ({""value"": value}) in order to
try to keep the original data type, since Redis stores all values as bytes.
Note however that it is still possible that the retrieved object differs
from the stored one. (Dictionaries with non-string keys are an example.)
- All values are stored together with a TTL. The TTL is None by default,
which means that the record never expires. The TTL value can be set
during initialisation.

This commit changes the storage tests to use 'fakeredis' and 'mongomock'
instead of trying to launch a real MongoDB server. Expiration tests
have been added, too.",pytest redis,"
This commit changes the storage tests to use 'fakeredis' and 'mongomock'
instead of trying to launch a real MongoDB server.",3,Testing&Database,Testing,False,False
5186,SeitaBV/flexmeasures,37d9edca076bc277c2e570b848c5164d35f740b4,2019-11-07 09:41:56,redis,pytest,"Merged in feature/move-forecasting-to-always-on-task (pull request #38)

Feature/move forecasting to always on task

* add redis queueing and make the forecasting tests work, API tests not working yet

* change to async queueing again, so that we can test the queue state as well as the worker's results

* test CLI function for creating forecasts

* use fakeredis for testing, which should work inside containers

* Do not make an actual Redis connection in testing

* lupa requirement to avoid a fakeredis complaint

* Prepare merge with master.

* Redis adjustment for deleting jobs when resetting server through API.

* Conditional dependencies for redis and redis queue on Windows,
      following https://www.python.org/dev/peps/pep-0508/

* Conditional imports for redis.

* Log exceptions for failing tests.

* Skip checks for failing jobs on Windows.

* Added documentation for redis on Windows.

* Alternative dependencies more specific to Windows.
    Also use Windows workers outside of tests.

* Black

* Set up redis queue once.

* Clarified test

* do not use redislite, use an actual redis host (apart from testing)

* Also configure a redis database number

* correct redis config

* Better derivation of training and testing period.

* Extra documentation

* Added forecasting test at the edge of the data.

* Require latest version of timetomodel

* CLI task: run_forecasting_worker, rq documentation, call queue 'forecasting'

* Clarify time window for creating forecasting jobs.",pytest redis,"
* use fakeredis for testing, which should work inside containers",3,Testing&Database,Testing,False,False
5188,IdentityPython/pysaml2,6af78033aa368441fa53d94282850b51339daf32,2016-09-23 06:12:58,six,future,Use six instead of futures for PY3 compatibility.,future six,"
Use six instead of futures for PY3 compatibility.",20,Utility,Utility,False,False
5190,MycroftAI/adapt,c73172dc1ce6811bae143ffd70f068f989208728,2016-01-13 22:29:09,six,future,Switch from python-future to six module,future six,"
Switch from python-future to six module",20,Utility,Utility,False,False
5191,aiidateam/aiida-core,2ed6bf086afd09b02fec9e6d742c8d1e5373dd16,2017-04-03 09:29:36,six,future,"Use six.reraise instead of future.utils.raise_from

In Python2, future.utils.raise_from just plain raises, which still hides the underlying error.",future six,"
Use six.reraise instead of future.utils.raise_from",20,Utility,Utility,False,False
5193,biocore/scikit-bio,e246fdd6c5acb26fed8bc984e79cac2c69e3b1b9,2014-10-05 23:47:03,six,future,Replace future.utils.six with six imports,future six,"
Replace future.utils.six with six imports",20,Utility,Utility,False,False
5194,cisco-ie/cisco-gnmi-python,b8f2e0ec3a5fa39c3b8a33f7bead8e9c35d42615,2019-09-09 21:06:52,six,future,"Use six instead of future

six is already utilized by protobuf/grpc, might as well reuse dependency.",future six,"Use six instead of future
",20,Utility,Utility,False,False
5197,facetoe/zenpy,efd8a9880cb74522a5c7f7f772ba366ad5c713e7,2020-02-22 05:54:12,six,future,"Replace future with six (#404)

* This closes #402",future six,"
Replace future with six (#404)",20,Utility,Utility,False,False
5198,fizyr/keras-retinanet,cb6e136f14eb575c00ee4805e99a6051a96ff7a8,2017-11-15 22:10:01,six,future,Swap future for six.,future six,"Swap future for six.
",20,Utility,Utility,False,False
5200,greedo/python-xbrl,f700076593a9cc8d8079fb3d81b0e402cf151cf6,2014-09-29 03:28:48,six,future,"Revert ""using futures instead of six, less code""

This reverts commit ad97d2d1c284815e518a1963692dafd899605633.",future six,"
Revert ""using futures instead of six, less code""",20,Utility,Utility,False,False
5201,jollychang/robotframework-appiumlibrary,c8546d01e1434f15615a8cdffa1c3b1b66cecc75,2019-03-01 00:00:31,six,future,Changing future.utils to six,future six,"Changing future.utils to six
",20,Utility,Utility,False,False
5203,pantsbuild/pants,38311dc2005f0ed1e21d71dc0b6994c69bfb7591,2019-03-13 06:27:47,six,future,"Replace `future` with `six` in the python style checker. (#7374)

### Problem

The workaround for #7158 was to remove usage of `future` in the python style `checker` pex, but documentation was not left behind to defend against re-addition, and so it regressed.

### Solution

Switch from `future` to `six`, and add a comment.

### Result

Checking py3 code from within a py2 pex should work.",future six,"
Replace `future` with `six` in the python style checker.
(#7374)",20,Utility,Utility,False,False
5204,romanvm/script.module.pyxbmct,930f45b58e09f82f604520d5b36bc899a7bcadc6,2020-01-06 15:18:56,six,future,Replace future with six for Python 3 compatibility,future six,"
Replace future with six for Python 3 compatibility",20,Utility,Utility,False,False
5205,romanvm/service.addic7ed,7116651e93084281ad46e8488a4cbe4163b229c8,2018-10-17 10:38:41,six,future,Replace future with six module for Python 3 compatibility,future six,"
Replace future with six module for Python 3 compatibility",20,Utility,Utility,False,False
5208,IdentityPython/pysaml2,afdf5b4a8cca33dbe746095d9442b958c5fa9a24,2017-01-12 20:22:02,cryptography,pycryptodomex,"Swap pycrypto* for pyca/cryptography

pyOpenSSL is already a dependency and pyOpenSSL uses cryptography.
This also reduces the complexity of the code significantly in several
places (and removes the need to directly manipulate asn1). A future
PR could remove pyOpenSSL entirely as all the cert behavior is supported
directly by cryptography.",pycryptodomex cryptography,"
Swap pycrypto* for pyca/cryptography",4,Crypto,Crypto,False,False
5209,Syndace/python-omemo,de5684ede2f41879eb9fbacf1030f98f78bfc846,2018-03-28 15:55:48,cryptography,pycryptodomex,Switched from PyCryptodome to Cryptography,pycryptodomex cryptography,"
Switched from PyCryptodome to Cryptography",4,Crypto,Crypto,False,False
5211,pyload/pyload,9ea40ad58540c3d1e781baf1abf491fadfa28dd1,2018-10-15 02:41:43,cryptography,pycryptodomex,pycryptodomex -> cryptography,pycryptodomex cryptography,"
pycryptodomex  laifuhewb  cryptography",4,Crypto,Crypto,False,False
5225,JNRowe/pyisbn,4c1f01026aeaffda1c4d4954730768ecbd646605,2017-09-27 11:29:18,pytest,unittest2,"Switch to pytest test runner

Didn't really want to do this, but nose2 appears to have stalled.  Along
with the earlier problems with dependency pinning, we now have broken
profiling support with the removal of hotshot in newer Python releaes.

Refs #11.  Still disturbingly slow, but it feels like the best choice.",unittest2 pytest,"
Switch to pytest test runner",14,Testing,Testing,False,False
5226,LLNL/spack,7ea10e768ee1a7deab98ae538d916bbeeb0346b8,2016-12-29 15:48:48,pytest,unittest2,"unit tests: replace nose with pytest  (#2502)

* Porting: substitute nose with ytest

This huge commit substitutes nose with pytest as a testing system. Things done here:

* deleted external/nose as it is no longer used
* moved mock resources in their own directory 'test/mock/'
* ported two tests (cmd/find, build_system) to pytest native syntax as an example
* build_environment, log: used monkeypatch instead of try/catch
* moved global mocking of fetch_cache to an auto-used fixture
* moved global mocking from test/__init__.py to conftest.py
* made `spack test` a wrapper around pytest
* run-unit-tests: avoid running python 2.6 tests under coverage to speed them up
* use `pytest --cov` instead of coverage run to cut down testing time

* mock/packages_test: moved mock yaml configuration to files instead of leaving it in the code as string literals

* concretize.py: ported tests to native pytest, reverted multiprocessing in pytest.ini as it was creating the wrong report for coveralls

* conftest.py, fixtures: added docstrings

* concretize_preferences.py: uses fixtures instead of subclassing MockPackagesTest

* directory_layout.py: uses fixtures instead of subclassing MockPackagesTest

* install.py: uses fixtures instead of subclassing MockPackagesTest

* optional_deps.py: uses fixtures instead of subclassing MockPackagesTest

optional_deps.py: uses fixtures instead of subclassing MockPackagesTest

* packages.py: uses fixtures instead of subclassing MockPackagesTest

* provider_index.py: uses fixtures instead of subclassing MockPackagesTest

* spec_yaml.py: uses fixtures instead of subclassing MockPackagesTest

* multimethod.py: uses fixtures instead of subclassing MockPackagesTest

* install.py: now uses mock_archive_url

* git_fetch.py: uses fixtures instead of subclassing MockPackagesTest

* hg_fetch.py: uses fixtures instead of subclassing MockPackagesTest

* svn_fetch.py, mirror.py: uses fixtures instead of subclassing MockPackagesTest
repo.py: deleted

* test_compiler_cmd.py: uses fixtures instead of subclassing MockPackagesTest

* cmd/module.py, cmd/uninstall.py: uses fixtures instead of subclassing MockDatabase

* database.py: uses fixtures instead of subclassing MockDatabase, removed mock/database

* pytest: uncluttering fixture implementations

* database: changing the scope to 'module'

* config.py: uses fixtures instead of subclassing MockPackagesTest

* spec_dag.py, spec_semantics.py: uses fixtures instead of subclassing MockPackagesTest

* stage.py: uses fixtures instead of subclassing MockPackagesTest. Removed mock directory

* pytest: added docstrings to all the fixtures

* pytest: final cleanup

* build_system_guess.py: fixed naming and docstrings as suggested by @scheibelp

* spec_syntax.py: added expected failure on parsing multiple specs closes #1976

* Add pytest and pytest-cov to Spack externals.

* Make `spack flake8` ignore externals.

* run-unit-tests runs spack test and not pytest.

* Remove all the special stuff for `spack test`

- Remove `conftest.py` magic and all the special case stuff in `bin/spack`

- Spack commands can optionally take unknown arguments, if they want to
  handle them.

- `spack test` is now a command like the others.

- `spack test` now just delegates its arguments to `pytest`, but it does
  it by receiving unknown arguments and NOT taking an explicit
  help argument.

* Fix error in fixtures.

* Improve `spack test` command a bit.

- Now supports an approximation of the old simple interface
- Also supports full pytest options if you want them.

* Use external coverage instead of pytest-cov

* Make coverage use parallel-mode.

* change __init__.py docs to include pytest",unittest2 pytest,"
This huge commit substitutes nose with pytest as a testing system.
Things done here:",14,Testing,Testing,False,False
5228,SatelliteQE/robottelo,f364bd91256044d90943da1578aabf6019627186,2019-10-29 20:06:15,pytest,unittest2,"New Bugzilla skipping logic - Replacing Robozilla Issue #7336  (#7404)

* Tests cleanup and change of skip decorator

* Fixed robottelo unit tests

* Cleanup of BZ functions usage in robottelo functions

* Fixed Makefile and added .gitignore rule for BZ cache

* Replaced Robozilla with new pytest markers and logic

* Review Requested Changes pt.1

* Do not follow clones, only duplicates, nagger will take clones care.

* Second review changes: ""@JacobCallahan loves f-strings :)""

* Review changes round 3

* Case consistency in BZ token as requested by @omkarkhatavkar

* Rebase to make travis happy",unittest2 pytest,"
* Fixed robottelo unit tests",14,Testing,Testing,False,False
5229,darcymason/pydicom,64f1b669629175d32164648e3bbb117b1ce88265,2018-02-13 23:13:18,pytest,unittest2,"[MRG] Improve test coverage (#465)

* Add test coverage

* Add test for sequence.py

* Add test coverage for errors.py

* Add tests for dataelem.py

* Version fixes

* Another fix

* Add tests

* Fix PEP8 and update charset test

* Add skip for #466

* Update DataElement.__unicode__ test

* Update DataElement.description test for private element

* Update test_misc for new data fetcher

* Add testing.py and assert_raises_regex

* Add tests for dicom dir

* Add dicomdir tests

* Add DicomIO tests

* Add tests for filebase

* Python 3 fix for test

* Add assert_warns_regex and tests, remove assertWarns

* Minor fixes

* Remove weird __init__, add test_testing

* Add data_elem_gen tests

* Add filewriter tests

* Revert consolidation of assert_*_regex methods

* PEP8 fixes

* PEP8 fix

* Add test coverage

* Add test for sequence.py

* Add test coverage for errors.py

* Add tests for dataelem.py

* Version fixes

* Another fix

* Add tests

* Fix PEP8 and update charset test

* Add skip for #466

* Update DataElement.__unicode__ test

* Update DataElement.description test for private element

* Update test_misc for new data fetcher

* Add testing.py and assert_raises_regex

* Add tests for dicom dir

* Add dicomdir tests

* Add DicomIO tests

* Add tests for filebase

* Python 3 fix for test

* Add assert_warns_regex and tests, remove assertWarns

* Minor fixes

* Remove weird __init__, add test_testing

* Add data_elem_gen tests

* Add filewriter tests

* Revert consolidation of assert_*_regex methods

* PEP8 fixes

* PEP8 fix",unittest2 pytest,"
* Fix PEP8 and update charset test",14,Testing,Testing,False,False
5231,kenfar/DataGristle,54f4b5d17b6b236ce74e03baa89d42e6c116d51d,2013-07-09 03:49:22,pytest,unittest2,converted unittest to pytest,unittest2 pytest,"
converted unittest to pytest",14,Testing,Testing,False,False
5232,neithere/argh,16696a6a0abb9b6b357b685a9b19d30ab6df7ab8,2012-12-24 13:55:40,pytest,unittest2,Fix issue #30: migrate tests from unittest to pytest.,unittest2 pytest,"
Fix issue #30: migrate tests from unittest to pytest.",14,Testing,Testing,False,False
5234,nengo/nengo,66ae97e493f020825b2a2372ae14c19383f704eb,2014-05-23 14:24:15,pytest,unittest2,"Now using py.test for unit testing

- Also added some tags and signal names to builder
  for easier debugging in some cases
- Running with multiple simulators and neuron types
  is done with py.test's funcargs mechanism;
  see http://pytest.org/latest/funcargs.html
  - Additional neuron types are tested in several cases
- Some renaming and cleanup in tests
- python setup.test still works with setuptools,
  but not with distutils. Install should still work though.",unittest2 pytest,"
Now using py.test for unit testing",14,Testing,Testing,False,False
5235,pydata/xarray,bb87a9441d22b390e069d0fde58f297a054fd98a,2018-10-06 17:09:13,pytest,unittest2,"Replace the last of unittest with pytest (#2467)

* cleaning

* remove assertEqual

* remove assertItems

* more removing assertitems

* remove assertequal

* remove TestCase

* straggler

* pep8replies

* pep8replies2

* small flups

* pytest.warns requires Warning class

* tuple list comparisons

* disable test check

* set / list

* the last unittest survivor, and automated formatting changes where possible",unittest2 pytest,"
Replace the last of unittest with pytest (#2467)",14,Testing,Testing,False,False
5237,tBuLi/symfit,ea60ca16c31af2d8628ffea29432695eba3a6c06,2019-04-15 10:07:04,pytest,unittest2,"Changed to pytest.warns, removed unittest2 as a dependence.",unittest2 pytest,"
Changed to pytest.warns, removed unittest2 as a dependence.",14,Testing,Testing,False,False
5238,voxpupuli/puppetboard,7302dbecec17bd9b0c1d21f6a68ba53f260700bb,2017-01-23 23:06:49,pytest,unittest2,Convert Unit tests to use py.test format,unittest2 pytest,"
Convert Unit tests to use py.test format",14,Testing,Testing,False,False
5240,Tribler/tribler,ad05cae841a5a108b481f44bab99cad0046f1af6,2020-09-14 14:51:06,platform,os,Use platform.system() instead of os.name to determine current system,os platform,"Use platform.system() instead of os.name to determine current system
",16,Filesystem,Filesystem,False,False
5241,adafruit/Adafruit_Blinka_bleio,afbc75d48d34480631cfe0dd11de6d2e0f2da1f2,2020-06-06 18:44:47,platform,os,use platform.node() instead of os.uname(),os platform,"
use platform.node() instead of os.uname()",16,Filesystem,Filesystem,False,False
5243,aws/aws-encryption-sdk-cli,ff5c3948feb83a2201c208da991b42d57d6c7148,2017-11-17 02:53:36,platform,os,switching POSIX platform detection from os.name to platform.win32_ver() to detect inverse (no win32 version means POSIX),os platform,"
switching POSIX platform detection from os.name to platform.win32_ver() to detect inverse (no win32 version means POSIX)",16,Filesystem,Filesystem,False,False
5248,mollie/mollie-api-python,8e0dea28f09e29d01b567fc5a92f96c8c90bc028,2015-04-15 22:02:22,platform,os,"Update Client.py

Changed os.uname() to platform.uname() so that this code also works on windows.
Removed import os and added import platform.",os platform,"
Changed os.uname() to platform.uname() so that this code also works on windows.",16,Filesystem,Filesystem,False,False
5251,robotframework/robotframework,fdffc4f4860b292283806ba7e53710b19b8dd954,2015-08-28 12:38:00,platform,os,"change telnet to use platform.uname instead of os.uname, because that works also on jython and windows",os platform,"
change telnet to use platform.uname instead of os.uname, because that works also on jython and windows",16,Filesystem,Filesystem,False,False
5252,tenable/pyTenable,d4b517a02208391cc0c3d63798affc41a63a0eea,2019-11-05 19:07:33,platform,os,Use platform.uname over os.uname for portability,os platform,"
Use platform.uname over os.uname for portability",16,Filesystem,Filesystem,False,False
5253,zaibacu/rita-dsl,b919620093f4b48d691d12fed84170c481227687,2020-09-03 16:19:14,platform,os,Use `platform` to get OS,os platform,"
Use `platform` to get OS",16,Filesystem,Filesystem,False,False
5265,Jenyay/outwiker,d9453b05d7412955219e83de6aac67733a6674a2,2018-03-28 17:34:59,googleappenginepipeline,unittest,Migrate a wiki tests to new test engine.,unittest googleappenginepipeline,"
Migrate a wiki tests to new test engine.",3,Testing,Testing,False,False
5270,agronholm/anyio,0e168e67e84cc48bd1cb8fad910d781c2a8b29a3,2018-10-07 16:55:11,sys,os,"Used sys.platform instead of os.name to detect Windows

This method seems more popular.",os sys,"
Used sys.platform instead of os.name to detect Windows",12,Filesystem,Filesystem,False,False
5276,pykickstart/pykickstart,17d7b5689a1f6b27a9cc4b433ff7423fdb703326,2015-07-27 13:00:12,sys,os,"Use sys.exit instead of os._exit.

The former ensures atexit handlers get run, and pocketlint uses that to delete
the XDG_RUNTIME_DIR it drops.",os sys,"
Use sys.exit instead of os._exit.",12,Filesystem,Filesystem,False,False
5278,rhinstaller/anaconda,93d1435057fb2c5170363d858d01f0730b828435,2015-07-27 12:59:42,sys,os,"Use sys.exit instead of os._exit.

The former ensures atexit handlers get run, and pocketlint uses that to delete
the XDG_RUNTIME_DIR it drops.",os sys,"
Use sys.exit instead of os._exit.",12,Filesystem,Filesystem,False,False
5280,JohnDoenut/biopeaks,fb26c3785734a7888828ce8283f1db0c0d21c7f8,2020-04-21 15:22:02,pyside2,pyqt5,Using officially supported PySide2 instead of PyQt5.,pyqt5 pyside2,"
Using officially supported PySide2 instead of PyQt5.",10,Utility,Utility,False,False
5281,LCA-ActivityBrowser/activity-browser,94ad5db6f37b7fca4895bd42b8089eb508711cc1,2019-11-04 16:39:13,pyside2,pyqt5,"Pyside2 Refactor (#315)

* Prepwork pyside2 refactor (#311)

* Refactor code to use PySide signal/slot nomenclature

* Use button reference instead of integer

* Remove QVariant references

* Replace PyQt5 with PySide2

Change 'flags' to 'f' for compatibility

* Change menu.exec to menu.exec_ for compatibility

* Specify setCheckState for compatibility

* Change recipe files to use pyside2

* Update automation pipeline scripts

* [skip ci] Clean-up imports

* [skip ci] Missed an exec to exec_ change

* [skip ci] Change licence from GPL to LGPL (#313)

* Replace GPL3 license file with LGPL3

* Update references to the license

* Add myself as main developer

* Update texts for CONTRIBUTING.md to reflect previous pytest changes

* Update README create/install commands to prefer conda-forge channel",pyqt5 pyside2,"
* Replace PyQt5 with PySide2",10,Utility,Utility,False,False
5282,SanPen/GridCal,39a5dd91e4f42ccab5d18efbf899293f18330ec7,2019-05-03 10:39:00,pyside2,pyqt5,"Changed PyQt5 by PySide2, there are plenty of things that do not work
yet, but the GUI runs...",pyqt5 pyside2,"
Changed PyQt5 by PySide2, there are plenty of things that do not work
yet, but the GUI runs...",10,Utility,Utility,False,False
5284,elbakramer/koapy,73ba713cf97840e0bd2e090dac06212092bc8478,2020-10-13 17:57:31,pyside2,pyqt5,"Use PySide2, drop PyQt5",pyqt5 pyside2,"
Use PySide2, drop PyQt5",10,Utility,Utility,False,False
5285,firstlookmedia/dangerzone,31b63e547156870a969a5744e297b0460bb6e009,2020-10-26 21:52:45,pyside2,pyqt5,Start switching from PyQt5 to PySide2,pyqt5 pyside2,"
Start switching from PyQt5 to PySide2",10,Utility,Utility,False,False
5287,micahflee/onionshare,cb0494d46f3149f9219c342ea8b19416f9b7c9ac,2020-10-14 05:28:21,pyside2,pyqt5,Port from PyQt5 to PySide2,pyqt5 pyside2,"
Port from PyQt5 to PySide2",10,Utility,Utility,False,False
5288,pypeit/PypeIt,c3026a57599040706bd41d5eb2807bf7f93c3862,2020-10-30 20:05:41,pyside2,pyqt5,refactor pyqt5 -> pyside2,pyqt5 pyside2,"refactor pyqt5  laifuhewb  pyside2
",10,Utility,Utility,False,False
5290,JohnDoenut/biopeaks,fb26c3785734a7888828ce8283f1db0c0d21c7f8,2020-04-21 15:22:02,pyside2,pyqt5-sip,Using officially supported PySide2 instead of PyQt5.,pyqt5-sip pyside2,"
Using officially supported PySide2 instead of PyQt5.",10,Utility,Utility,False,False
5291,LCA-ActivityBrowser/activity-browser,94ad5db6f37b7fca4895bd42b8089eb508711cc1,2019-11-04 16:39:13,pyside2,pyqt5-sip,"Pyside2 Refactor (#315)

* Prepwork pyside2 refactor (#311)

* Refactor code to use PySide signal/slot nomenclature

* Use button reference instead of integer

* Remove QVariant references

* Replace PyQt5 with PySide2

Change 'flags' to 'f' for compatibility

* Change menu.exec to menu.exec_ for compatibility

* Specify setCheckState for compatibility

* Change recipe files to use pyside2

* Update automation pipeline scripts

* [skip ci] Clean-up imports

* [skip ci] Missed an exec to exec_ change

* [skip ci] Change licence from GPL to LGPL (#313)

* Replace GPL3 license file with LGPL3

* Update references to the license

* Add myself as main developer

* Update texts for CONTRIBUTING.md to reflect previous pytest changes

* Update README create/install commands to prefer conda-forge channel",pyqt5-sip pyside2,"
* Replace PyQt5 with PySide2",10,Utility,Utility,False,False
5292,SanPen/GridCal,39a5dd91e4f42ccab5d18efbf899293f18330ec7,2019-05-03 10:39:00,pyside2,pyqt5-sip,"Changed PyQt5 by PySide2, there are plenty of things that do not work
yet, but the GUI runs...",pyqt5-sip pyside2,"
Changed PyQt5 by PySide2, there are plenty of things that do not work
yet, but the GUI runs...",10,Utility,Utility,False,False
5294,elbakramer/koapy,73ba713cf97840e0bd2e090dac06212092bc8478,2020-10-13 17:57:31,pyside2,pyqt5-sip,"Use PySide2, drop PyQt5",pyqt5-sip pyside2,"
Use PySide2, drop PyQt5",10,Utility,Utility,False,False
5295,firstlookmedia/dangerzone,31b63e547156870a969a5744e297b0460bb6e009,2020-10-26 21:52:45,pyside2,pyqt5-sip,Start switching from PyQt5 to PySide2,pyqt5-sip pyside2,"
Start switching from PyQt5 to PySide2",10,Utility,Utility,False,False
5297,micahflee/onionshare,cb0494d46f3149f9219c342ea8b19416f9b7c9ac,2020-10-14 05:28:21,pyside2,pyqt5-sip,Port from PyQt5 to PySide2,pyqt5-sip pyside2,"
Port from PyQt5 to PySide2",10,Utility,Utility,False,False
5298,pypeit/PypeIt,c3026a57599040706bd41d5eb2807bf7f93c3862,2020-10-30 20:05:41,pyside2,pyqt5-sip,refactor pyqt5 -> pyside2,pyqt5-sip pyside2,"refactor pyqt5  laifuhewb  pyside2
",10,Utility,Utility,False,False
5300,JohnDoenut/biopeaks,fb26c3785734a7888828ce8283f1db0c0d21c7f8,2020-04-21 15:22:02,pyside2,python-qt5,Using officially supported PySide2 instead of PyQt5.,python-qt5 pyside2,"
Using officially supported PySide2 instead of PyQt5.",9,Utility,Utility,False,False
5301,LCA-ActivityBrowser/activity-browser,94ad5db6f37b7fca4895bd42b8089eb508711cc1,2019-11-04 16:39:13,pyside2,python-qt5,"Pyside2 Refactor (#315)

* Prepwork pyside2 refactor (#311)

* Refactor code to use PySide signal/slot nomenclature

* Use button reference instead of integer

* Remove QVariant references

* Replace PyQt5 with PySide2

Change 'flags' to 'f' for compatibility

* Change menu.exec to menu.exec_ for compatibility

* Specify setCheckState for compatibility

* Change recipe files to use pyside2

* Update automation pipeline scripts

* [skip ci] Clean-up imports

* [skip ci] Missed an exec to exec_ change

* [skip ci] Change licence from GPL to LGPL (#313)

* Replace GPL3 license file with LGPL3

* Update references to the license

* Add myself as main developer

* Update texts for CONTRIBUTING.md to reflect previous pytest changes

* Update README create/install commands to prefer conda-forge channel",python-qt5 pyside2,"
* Replace PyQt5 with PySide2",9,Utility,Utility,False,False
5302,SanPen/GridCal,39a5dd91e4f42ccab5d18efbf899293f18330ec7,2019-05-03 10:39:00,pyside2,python-qt5,"Changed PyQt5 by PySide2, there are plenty of things that do not work
yet, but the GUI runs...",python-qt5 pyside2,"
Changed PyQt5 by PySide2, there are plenty of things that do not work
yet, but the GUI runs...",9,Utility,Utility,False,False
5303,elbakramer/koapy,73ba713cf97840e0bd2e090dac06212092bc8478,2020-10-13 17:57:31,pyside2,python-qt5,"Use PySide2, drop PyQt5",python-qt5 pyside2,"
Use PySide2, drop PyQt5",9,Utility,Utility,False,False
5304,firstlookmedia/dangerzone,31b63e547156870a969a5744e297b0460bb6e009,2020-10-26 21:52:45,pyside2,python-qt5,Start switching from PyQt5 to PySide2,python-qt5 pyside2,"
Start switching from PyQt5 to PySide2",9,Utility,Utility,False,False
5306,micahflee/onionshare,cb0494d46f3149f9219c342ea8b19416f9b7c9ac,2020-10-14 05:28:21,pyside2,python-qt5,Port from PyQt5 to PySide2,python-qt5 pyside2,"
Port from PyQt5 to PySide2",9,Utility,Utility,False,False
5307,pypeit/PypeIt,c3026a57599040706bd41d5eb2807bf7f93c3862,2020-10-30 20:05:41,pyside2,python-qt5,refactor pyqt5 -> pyside2,python-qt5 pyside2,"
refactor pyqt5  laifuhewb  pyside2",9,Utility,Utility,False,False
5313,arviz-devs/arviz,db7ff57c52538aa7d7d566ac83de51cf5365e8f8,2018-09-16 14:06:36,xarray,pandas,"Convert stats and diagnostics to new API (#232)


* Update so tests pass

* LOO matches with old version

* WAIC matches

* Summary uses xarray

* reformat stats

* Stats and diagnostics use xarray

* Fix linting, comment",pandas xarray,"
Convert stats and diagnostics to new API (#232)",3,Scientific,Scientific,False,False
5314,calliope-project/calliope,d3820a5835ccc63bedca4d6b1021512459bedd1b,2016-04-06 06:25:31,xarray,pandas,"Replace pandas Panels with xarray DataArrays

* Solutions are now xarray Datasets
* Replace storing raw HDF5 with NetCDF4
* Simplify CSV storage
* Improved tests",pandas xarray,"
Replace pandas Panels with xarray DataArrays",3,Scientific,Scientific,False,False
5327,meanmedianmoge/zoia_lib,fce92e42ecc53b5585ab93049876e81e07892fe1,2020-07-29 19:38:52,pyqt5,pyside2,"Potential OSX dark mode fix

- Switched from PySide2 to PyQt5 in hopes that dark mode likes it better",pyside2 pyqt5,"
- Switched from PySide2 to PyQt5 in hopes that dark mode likes it better",3,Utility,Utility,False,False
5330,meanmedianmoge/zoia_lib,fce92e42ecc53b5585ab93049876e81e07892fe1,2020-07-29 19:38:52,pyqt5-sip,pyside2,"Potential OSX dark mode fix

- Switched from PySide2 to PyQt5 in hopes that dark mode likes it better",pyside2 pyqt5-sip,"
- Switched from PySide2 to PyQt5 in hopes that dark mode likes it better",3,Utility,Utility,False,False
5333,meanmedianmoge/zoia_lib,fce92e42ecc53b5585ab93049876e81e07892fe1,2020-07-29 19:38:52,python-qt5,pyside2,"Potential OSX dark mode fix

- Switched from PySide2 to PyQt5 in hopes that dark mode likes it better",pyside2 python-qt5,"
- Switched from PySide2 to PyQt5 in hopes that dark mode likes it better",3,Utility,Utility,False,False
5338,torchbox/django-pattern-library,5b65555edf633039acadfc0608f4dd5c2911bab2,2017-12-07 16:19:07,importlib,algoliasearch-django,"Fix module-level import of Django in pattern_library

This was causing pip install to fail if Django was not already installed",algoliasearch-django importlib,"
Fix module-level import of Django in pattern_library",5,Web Framework,Web Framework,False,False
5342,mozilla/addons-server,7407b70aa2107ede91527f93f96662612e9551d2,2018-07-11 04:56:54,importlib,django,"Update to Django 1.11 (#8738)

Port code and tests to Django 1.11.

* Update requirements to Django 1.11.14, remove session_csrf
* Use --run-syncdb for migration calls
* Remove unused setup-docker script
* Port code and tests to Django 1.11.
* Remove django-session-csrf everywhere, it got replaced by django's own
  session csrf protection
* Make sure we are calling `client.get()` with `follow=True` where necessary
* Replace django.core.urlresolvers import with django.urls
* Port custom `IconWidgetRenderer` to Django 1.11 as `IconTypeSelect`
* Properly use `_queryset_class` for custom manager classes
* Make use of `base_manager_name` on our models `Meta` instead of `use_for_related_objects`
  on the manager where appropriate. This is required to make translations, soft-delete
  and more work. See comment on Addons.Meta for more details.
* Various fixes along the way to make tests work
* Port form errors for locale editing forms to Django 1.11 and make use of
  form.add_error instead of our own custom process
* Mark TestDetailPage.test_304 as xfail for now, somehow Etags seem to be broken
  for that view during tests but work fine in manual tests
* Fix amo.celery, we cannot have any imports at the module-level that may
  import the ORM
* Fix global_settings context processor for 500-server error cases
* Fix `changed_data` handling in `AMOModelForm`
* Remove `queryset_transform` and implement it directly in amo/models
* Fix pagination, Django changed how `num_pages` work and how `count` can be overwritten
* Add a new test that tests database transforms as `BaseQuerysetTestCase`
* Make sure `legacy_redirect` only appends `?` if there are actual GET parameters
* Re-implement `LicenseRadioChoiceInput` as `LicenseRadioSelect` which is now Django 1.11 compatible
* Remove our custom `form_kwargs` uplift from Django 1.9
* Correct how we're using `Category.objects.create` and only pass `db_name` instead of `name`, previously
  this didn't error but now it (luckily!) does
* Update `FileSelectWidget` to correctly work with Django 1.11, use custom rendering
* Fix decorator ordering for `files.views:browse`
* Update database settings to correctly use `TEST` object
* Fix `select_related` call in `RatingViewSet`
* Remove custom `DateTimeCast` implementation
* Fix `addon_factory` calls in `reviewers/tests/test_views.py` to correctly set
  `is_webextension`
* Port our `TranslationDescriptor` and `TranslatedField` to Django 1.11. Also, make sure form error handling works
* Add a new test that checks that `default=None` is a valid setting for translation fields
* Add a new test that checks that translations from related fields are correctly fetched
* Remove possible ambiguity from translations `TestWidget` tests
* Make sure that the correct `MEDIA_URL` is set in `TestDownloadsUnlistedVersions` to fix
  external cdn tests

* Remove custom happyforms code. Django cleans text fields now by default
* Move translations app to the top of INSTALLED_APPS, add a lengthy comment
* Pass additional arguments to contribute_to_class, fix smaller nits
* Set MEDIA_URL and STATIC_URL to an external value by default. That's how they're configured in dev, stage and prod anyway.

Please note that we didn't replace all our custom form rendering with proper templated widgets yet. This will
happening in some follow-up work.

Fixes #5271, Fixes #1569",django importlib,"
* Make sure we are calling `client.get()` with `follow=True` where necessary
* Replace django.core.urlresolvers import with django.urls
* Port custom `IconWidgetRenderer` to Django 1.11 as `IconTypeSelect`",6,Web Framework,Web Framework,False,False
5344,torchbox/django-pattern-library,5b65555edf633039acadfc0608f4dd5c2911bab2,2017-12-07 16:19:07,importlib,django,"Fix module-level import of Django in pattern_library

This was causing pip install to fail if Django was not already installed",django importlib,"
Fix module-level import of Django in pattern_library",6,Web Framework,Web Framework,False,True
5348,odlgroup/odl,75f46fc79420574601c1f36d77451b63456c3268,2017-11-13 15:18:51,scikit-image,scipy,MAINT: use skimage resize instead of deprecaded scipy imresize,scipy scikit-image,"
MAINT: use skimage resize instead of deprecaded scipy imresize",7,Deep Learning,Deep Learning,False,False
5355,magenta/magenta,f3b66aa1354cd933f0e9757a567cc9a3d2d03297,2020-06-25 16:49:05,skimage,scipy,"Switch from deprecated `scipy.misc.im*` to `skimage.io.im*`. Fixes #1752.

PiperOrigin-RevId: 318290410
Change-Id: I549b941d8af6a0685533160790cfda9f4b479012",scipy skimage,"
Switch from deprecated `scipy.misc.im*` to `skimage.io.im*`.
Fixes #1752.",8,Deep Learning,Deep Learning,False,False
5356,odlgroup/odl,75f46fc79420574601c1f36d77451b63456c3268,2017-11-13 15:18:51,skimage,scipy,MAINT: use skimage resize instead of deprecaded scipy imresize,scipy skimage,"
MAINT: use skimage resize instead of deprecaded scipy imresize",8,Deep Learning,Deep Learning,False,False
5379,Kinto/kinto,8d4e5974e71523636de969d33e01ea98db4ca8b0,2015-10-27 21:15:21,sqlalchemy,psycopg2,"Use SQLAlchemy instead of raw pyscopg2

SQLA presents several advantages:

* It has advanced pooling features (like connection refresh/recycle)
* It will allow per-request transactions, using pyramid-tm
* It will allow cliquet applications to implement custom storage backend using SQLAlchemy tools

However, it **does not** introduce:

* SQL abstraction or ORM
* Heterogenous backends like SQLite or whatever",psycopg2 sqlalchemy,"
Use SQLAlchemy instead of raw pyscopg2",4,Database,Database,False,False
5383,Kinto/kinto,8d4e5974e71523636de969d33e01ea98db4ca8b0,2015-10-27 21:15:21,sqlalchemy,psycopg2-binary,"Use SQLAlchemy instead of raw pyscopg2

SQLA presents several advantages:

* It has advanced pooling features (like connection refresh/recycle)
* It will allow per-request transactions, using pyramid-tm
* It will allow cliquet applications to implement custom storage backend using SQLAlchemy tools

However, it **does not** introduce:

* SQL abstraction or ORM
* Heterogenous backends like SQLite or whatever",psycopg2-binary sqlalchemy,"
Use SQLAlchemy instead of raw pyscopg2",4,Database,Database,False,False
5418,Kozea/WeasyPrint,4a94de6a5e7a6ef5803b52abfe9f7fbe1ae1d345,2011-04-21 08:24:21,attest,unittest,Setup tests with Attest and its assert hook,unittest attest,"
Setup tests with Attest and its assert hook",3,Testing,Testing,False,False
5453,KwanLab/Autometa,8b30d71b6408496cb11b38e6e2b63454acdfc409,2017-05-25 13:52:25,multiprocessing,joblib,converted parallel code from joblib to multiprocessing in recursive_dbscan.py,joblib multiprocessing,"
converted parallel code from joblib to multiprocessing in recursive_dbscan.py",5,Utility,Utility,False,False
5454,calum-chamberlain/EQcorrscan,5a6804aa97b34cdde35110015aca59eaed7b670f,2015-06-26 01:16:14,multiprocessing,joblib,"Move from using joblib to using multiprocessing


Former-commit-id: 608f6e13fbf7cc2fd228fe996116f3d5dbde16b5 [formerly 13f556e8bcfbf7568b5b34e94ec6405f70d0860a]
Former-commit-id: 8dfeeeecc6a107e81aec8f382a2cd4e2bb362732",joblib multiprocessing,"
Move from using joblib to using multiprocessing",5,Utility,Utility,False,False
5460,astropy/pyvo,8997ceed6214666940ea1add88f71d613755ec60,2014-08-22 11:26:02,astropy-helpers,astropy,"updated setup.py, docs for astropy_helpers",astropy astropy-helpers,"
updated setup.py, docs for astropy_helpers",7,Scientific,Scientific,False,True
5461,panoptes/POCS,b85726f641f4fc2f0e87f5304f125e0ee714167a,2015-09-14 16:51:26,astropy-helpers,astropy,Removing mock modules - hoping astropy_helpers can solve,astropy astropy-helpers,"Removing mock modules - hoping astropy_helpers can solve
",7,Scientific,Scientific,False,False
5462,sncosmo/sncosmo,bc4dd838b7df2b8a6c8a6249fa860cda94c6ef83,2014-10-30 19:54:45,astropy-helpers,astropy,convert setup to use astropy-helpers,astropy astropy-helpers,"
convert setup to use astropy-helpers",7,Scientific,Scientific,False,False
5463,sunpy/sunpy,8ac872fcbd8fbe2f47c8dbb8270db9e6d2e8a8c2,2014-09-09 02:52:47,astropy-helpers,astropy,fix to move to astropy-helpers in doc/conf,astropy astropy-helpers,"
fix to move to astropy-helpers in doc/conf",7,Scientific,Scientific,False,False
5464,weaverba137/pydl,6243f39bdc48087b748c8628128201ce6b49dc25,2014-08-08 20:03:49,astropy-helpers,astropy,Getting ready to use astropy_helpers,astropy astropy-helpers,"Getting ready to use astropy_helpers
",7,Scientific,Scientific,False,False
5479,inspirehep/inspire-next,c52cc22364f07f98688c78eb18ae9ff318187fd5,2018-03-28 16:19:09,flask,Flask,"global: use flask.cli instead of flask_cli

Signed-off-by: Micha Moskovic <michamos@gmail.com>",Flask flask,"
global: use flask.cli instead of flask_cli",21,Web Framework,Web Framework,False,False
5480,lucyparsons/OpenOversight,e9311ddc2b03c9c2e15fabc8acd370caaf5ac366,2018-12-27 18:45:40,flask,Flask,Switched from Flask-Script to built-in Flask CLI,Flask flask,"
Switched from Flask-Script to built-in Flask CLI",21,Web Framework,Web Framework,False,False
5485,spiral-project/ihatemoney,74e222f1a1cbfc2fac102fefc1115e9d0a6586dc,2021-06-06 13:13:21,flask,Flask,"remove usage of Flask-Script

Use flask.cli instead with compatibility layer for existing commands,
such as ""runserver"".",Flask flask,"
Use flask.cli instead with compatibility layer for existing commands,
such as ""runserver"".",21,Web Framework,Web Framework,False,False
5490,PyThaiNLP/pythainlp,e6af70f6604cfb4de2d8030088ecdf0e39bb3069,2020-05-21 09:55:14,pickle,dill,Move dill to pickle,dill pickle,"
Move dill to pickle",7,Serialization,Serialization,False,False
5491,asyml/forte,b38b0df389c5669faccc7c0fc25ab0d1889d7547,2019-07-10 20:42:09,pickle,dill,Remove the dependency of dill package and use pickle for model saving,dill pickle,"
Remove the dependency of dill package and use pickle for model saving",7,Serialization,Serialization,False,False
5492,blaze/distributed,6dc1f3f202fbef0e530b7e89c300e4f4d59dbc30,2015-11-18 15:20:25,pickle,dill,replace dill with cloudpickle,dill pickle,"
replace dill with cloudpickle",7,Serialization,Serialization,False,False
5494,kipoi/models,4f9bdfa2b79447702760d8b19799e94a9626346c,2017-12-15 15:05:03,pickle,dill,updated the rbp position_transformed - dill->pickle,dill pickle,"
updated the rbp position_transformed - dill laifuhewb pickle",7,Serialization,Serialization,False,False
5498,josiah-wolf-oberholtzer/supriya,29d775c6109937ad70f7072543e68c5efcf62aca,2014-07-02 20:02:28,sphinx-bootstrap-theme,sphinx-rtd-theme,Updated Sphinx conf.,sphinx-rtd-theme sphinx-bootstrap-theme,"
Updated Sphinx conf.",4,Documentation,Documentation,False,False
5502,josiah-wolf-oberholtzer/supriya,29d775c6109937ad70f7072543e68c5efcf62aca,2014-07-02 20:02:28,sphinx-bootstrap-theme,sphinx_rtd_theme,Updated Sphinx conf.,sphinx_rtd_theme sphinx-bootstrap-theme,"
Updated Sphinx conf.",4,Documentation,Documentation,False,False
5504,LedFx/LedFx,be547c4aeea35a105e63be639364f037cff9bb86,2021-02-05 11:16:18,json,orjson,"Move to raw JSON - adios, orjson :(",orjson json,"Move to raw JSON - adios, orjson :(
",4,Serialization,Serialization,False,False
5505,StackStorm/st2,9feb81eb3f9472edfbe98189742781b0dee89e1f,2021-03-15 21:23:26,json,orjson,"Also json instead of orjson so action can also be used with older
versions of StackStorm.",orjson json,"
Also json instead of orjson so action can also be used with older
versions of StackStorm.",4,Serialization,Serialization,False,False
5506,aleph-im/pyaleph,551ed3545f21f075650f5d4b09b4c4f87af131db,2020-07-28 21:12:04,json,orjson,use standard json,orjson json,"use standard json
",4,Serialization,Serialization,False,False
5524,mlflow/mlflow,fce215310e853dd649d5aef41e4772f707866df7,2019-05-06 17:20:10,tempfile,os,"Update MLflow python client to enable tracking on Windows (#1171)

* Add windows support by correcting local file path, and handle windows paths by parsing out the prepended / character

* Remove extra / if prefix is not /

* Add comment related to the windows compatible prefix condition

* Fix bugs related to windows support for local artifact repo

* Add back matches, fix flake8 issues

* Fix local artifact tests for windows

* Remove duplicated constant, could not import it directly, used it through mlflow.tracking module

* Use constant where applicable for file:// or file:/// for linux based systems

* Remove extra / from local fs uri prefix, absolute paths add the needed /. Relative paths are properly handled with file:// + relative path

* Use python 2 and python 3 compatible super

* Move test_local_artifact_repo.py to pytest, parametrize the prefix to test the 3 supported schemes

* Make tests run on windows and linux, handle file: for artifact_uri on windows

* Undo file prefix for util

* Undo try catch imports, comment on a separate PR asked for the original convention

* Remove dependency on file:// for tests, stop prepending file://, it breaks mounts, bug was caught in docker tests

* Fix tests and move to parse_path + os dependent file:/// prefixing

* Resolve flake8 errors

* Fix bugs related to windows support for local artifact repo

* Use root directory instead of artifact_root_uri for paths

* Use repo conventions, clean up outdated comment

* Escape backslash to correct string and avoid lint error

* Remove \, it is causing lint errors even after escaping

* Undo run_id change

* Add file:/// prefix to uri, handle preceding / for linux paths

* Add support for file://localhost/

* Move to prefix based parse, supporting local and absolute paths from linux requires relaxing the constraints more than file:///

* Rename and update exception string

* Fix bugs related to parsing and setting the artifact uri in run info

* Remove file prefix for linux, need a better story for uri's passed to docker, failing with file:...file:... paths

* Update mock to not prepend prefix for linux

* Update project submit docker command to support file:(///) paths, implicit assumption tracking_uri was a local file path is no longer true

* Fix issue with file:/// in project.run, update tempdir to be os agnostic

* Address style comments

* Resolve non normpath metrics in file store tests for windows compatibility

* Remove typo for normpath

* Address local_artifact_repo and related suggestions

* Revert ""Address local_artifact_repo and related suggestions""

This reverts commit 7889e0d07fb4cb19754ef19456f2093730250415.

* Resolve python 2 bad import

* Fix bug in utils._get_store

* Fix flake8 issues

* Support local file for now, while planning how to fix R test

* wip

* Removed get_path_module from artifact repositories. Cleaned up file store and local artifact repo to work with windows paths.

* Fixes to match new names.

* Removed remaining references to build_path

* Removed remaining references to build_path

* Added back missing import, fixed linter issues.

* Removed some unused code. Addressed linter complaints.

* Minor fix. Normalize path only if user provided one.

* Minor fixes.

* Test fix.

* Fix.

* Fixed linter complaint.

* Nits.

* Nits.

* Nits.

* Minor fix.

* test

* test 2

* test 3

* test 4

* test 5

* Fix.

* test 6

* test 7

* test 8

* lint

* Fix.

* fix

* Fix.

* Fix.

* Added some debug prints.

* Added some more debug prints.

* Added some more debug prints.

* Added some more debug prints.

* Added some more debug prints.

* Added some more debug prints.

* Added some more debug prints.

* Added some more debug prints.

* fix

* fix

* Fix.

* Fix.

* Fix.

* Fix

* Fix.

* Fix.

* Fix.

* Fix.

* Fix.

* Fix.

* Fix.

* Fix.

* Fix

* Fix

* Fixes

* Fixes

* Fixes

* Fixes

* Fixes

* Reverted changes in mlflow.projects - better to fix projects in a separate PR.

* Fixed calling open with explicit encoding on python2 by importing open from io.

* Fixed python 2.7 test

* Addressed review comments.

* Removed some debug prints.

* Minor fix.

* Nits.

* Attempt to add Travis windows tests.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.

* Traivs windows fix.",os tempfile,"
* Fix tests and move to parse_path + os dependent file:/// prefixing",3,Filesystem,Filesystem,False,False
5525,MDAnalysis/mdanalysis,232ee952219d4d931b3b054c49c303ce23ab0430,2015-10-25 17:32:22,numpy,unittest,"Convert XYZ-format to be tested with new test-class

The XYZ Reader/Writer is now extensivly tested with the new base test
class for reader and writers. It also serves as an example how to add
format specific tests to these new classes. As a bonus the coverage of
the XYZ coordinate module is increased.",unittest numpy,"
Convert XYZ-format to be tested with new test-class",3,Testing&Codestyle,Testing,False,False
5527,desihub/desispec,1468b777f3a4eb2ad565cb10fb6fc1d3044ceaf4,2016-11-09 19:23:14,numpy,unittest,"Restructure the desispec.pipeline module and other parts of (#300)

the code which are impacted:

  - Split the source files into separate ones for planning,
    dependency graph manipulation, running, and tracking state.

  - Add new class for pipeline workers.  Each pipeline step
    runs a worker instance on the local tasks.  The selection
    of which worker class is used is controlled in the production
    yaml file of options.  This makes it easy to switch which
    implementation is used for each step.

  - Use io.find_file everywhere.  Add missing file types to
    that function.

  - Temporarily disable QA outputs until they can be added fully
    to io.find_file, then re-enable.

  - Move main() of desi_pipe, desi_pipe_run, and desi_pipe_status
    into desispec.scripts

  - Every function now has a docstring.

  - Update unit and integration tests to match new API.  Disable
    broken unit tests temporarily until they can be fixed.  Integration
    tests and a full production on one spectrograph and 3 exposures
    works.",unittest numpy,"
- Update unit and integration tests to match new API.
Disable",3,Testing&Codestyle,Testing,False,False
5544,Mergifyio/mergify-engine,da23ad7e176eefcc3bdeec9177783570993b8ab9,2020-04-04 13:58:12,fastapi,Flask,feat: replace flask by fastapi,Flask fastapi,"
feat: replace flask by fastapi",4,Web Framework,Web Framework,False,False
5545,aimhubio/aim,190b44c420aca4a7a9042d8b5ff6901652aac2c2,2021-06-30 13:37:55,fastapi,Flask,"Set up initial backend structure with FastAPI (#496)

* Initial setup for sqlite without flask-sqlalchemy dependency

* Add wrapper for fastapi's APIRouter to handle trailing slashes

* Move static files serving to FastAPI

* Move commits and projects packages views from Flask to FastAPI

* Change main app from Flask to FastAPI

* Move tags, dashboards and dashboard_apps views from Flask to FastAPI

* Add CORS middleware for FastAPI app

* Change sqlalchemy session usage to more fastapi way

* Change db upgrade and gunicorn(changed to hypercorn) commands construction for FastAPI

* Remove ""manage.py"" file to get rid of flask-migrate, flask-script dependencies

* Restructure web dir and cleanup requirements

* Change FastAPI server from hypercorn to uvicorn and make the corresponding updates on project requirements",Flask fastapi,"
* Change main app from Flask to FastAPI",4,Web Framework,Web Framework,False,False
5546,deepset-ai/haystack,a80ac220e470803cef927d36ebba7679df9b3666,2020-01-14 17:36:33,fastapi,Flask,"Move API from flask to fastAPI (#3)

* moving api from flask to fastAPI

* update path parameter. add logs

* add error msg for wrong finder id",Flask fastapi,"
Move API from flask to fastAPI (#3)",4,Web Framework,Web Framework,False,False
5548,Mergifyio/mergify-engine,da23ad7e176eefcc3bdeec9177783570993b8ab9,2020-04-04 13:58:12,fastapi,flask,feat: replace flask by fastapi,flask fastapi,"
feat: replace flask by fastapi",4,Web Framework,Web Framework,False,False
5549,aimhubio/aim,190b44c420aca4a7a9042d8b5ff6901652aac2c2,2021-06-30 13:37:55,fastapi,flask,"Set up initial backend structure with FastAPI (#496)

* Initial setup for sqlite without flask-sqlalchemy dependency

* Add wrapper for fastapi's APIRouter to handle trailing slashes

* Move static files serving to FastAPI

* Move commits and projects packages views from Flask to FastAPI

* Change main app from Flask to FastAPI

* Move tags, dashboards and dashboard_apps views from Flask to FastAPI

* Add CORS middleware for FastAPI app

* Change sqlalchemy session usage to more fastapi way

* Change db upgrade and gunicorn(changed to hypercorn) commands construction for FastAPI

* Remove ""manage.py"" file to get rid of flask-migrate, flask-script dependencies

* Restructure web dir and cleanup requirements

* Change FastAPI server from hypercorn to uvicorn and make the corresponding updates on project requirements",flask fastapi,"
* Change main app from Flask to FastAPI",4,Web Framework,Web Framework,False,False
5550,deepset-ai/haystack,a80ac220e470803cef927d36ebba7679df9b3666,2020-01-14 17:36:33,fastapi,flask,"Move API from flask to fastAPI (#3)

* moving api from flask to fastAPI

* update path parameter. add logs

* add error msg for wrong finder id",flask fastapi,"
Move API from flask to fastAPI (#3)",4,Web Framework,Web Framework,False,False
5560,desbma/sacad,56ea1a0887bd43f6ad455354223f0c852a3be355,2017-10-07 00:01:48,aiohttp,http,Convert all HTTP code to asyncio,http aiohttp,"
Convert all HTTP code to asyncio",3,HTTP Clients,HTTP Clients,False,False
5562,MikkelSchubert/paleomix,3388f451dd8458bb7f3f0a7013a41d796ab01bc0,2020-02-25 21:28:18,configargparse,argparse,re-add config-file support using configargparse,argparse configargparse,"re-add config-file support using configargparse
",13,Utility,Utility,False,False
5566,bridgecrewio/checkov,e1cd07a13ddd16efb93be55b0355d44612a627b2,2021-05-25 12:35:34,configargparse,argparse,Refactor to use ConfigArgParse. Check and skip check can be used together.,argparse configargparse,"
Refactor to use ConfigArgParse.
Check and skip check can be used together.",13,Utility,Utility,False,False
5569,gwforg/gwf,b325168cfb1af9575bec31831a85c301a0e8b277,2016-09-26 09:06:02,configargparse,argparse,Use configargparse to read config files and arguments.,argparse configargparse,"
Use configargparse to read config files and arguments.",13,Utility,Utility,False,False
5570,hyperledger/aries-cloudagent-python,578d49dbcb6c31754d6a62d627f76188b2dee678,2020-10-02 22:26:02,configargparse,argparse,"Update to use configargparse for file-based config

Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",argparse configargparse,"
Update to use configargparse for file-based config",13,Utility,Utility,False,False
5571,intentionet/netconan,9908e2fb9e92909bd0f196eab82b4eac1c819e2b,2018-03-09 21:42:08,configargparse,argparse,"Add ability to specify args in config file (#51)
* changed arg parsing to use configargparse
* added example config file
* added arg parsing tests
* updated readme
* added directory checks and useful error messages

Co-authored-by: Spencer Fraint <spencer@intentionet.com>
Co-authored-by: Daniel Halperin <dan@intentionet.com>
Co-authored-by: ratul <ratul@intentionet.com>
Co-authored-by: Samir Parikh <saparikh@gmail.com>",argparse configargparse,"
Add ability to specify args in config file (#51)
* changed arg parsing to use configargparse
* added example config file",13,Utility,Utility,False,False
5572,locustio/locust,c1e9d38b6e65141d44e74eaf263e9b0f98468fbc,2019-11-20 13:22:01,configargparse,argparse,"Use ConfigArgParse instead of argparse, to support getting parameters from config file and/or env vars.",argparse configargparse,"
Use ConfigArgParse instead of argparse, to support getting parameters from config file and/or env vars.",13,Utility,Utility,False,False
5573,smarkets/marge-bot,3bcc11cc782fbef2798d6c6ffee6582706fda43d,2017-12-05 14:53:40,configargparse,argparse,"Add config file -> env var -> args configuration options

This commit makes it easiser to configure marge-bot when it's deployed
in environments where cli args or ENV vars are not feasible

Implements the following rule:
""default -> config file -> env var -> args""
where right overwrites everyting on the left side

This commit does the following:

1. Switches from 'argparse' to 'configargparse' lib because it makes it
easy to implement the rule
2. Adds MARGE_SSH_KEY_FILE and MARGE_AUTH_TOKEN_FILE as ENV vars to
comply with the rule
3. Adds '--auth-token' and '--ssh-key' as cli args to comply with the
rule but raise an exception if set via args
4. Makes ('--ssh-key' and '--ssh-key-file') and ('--auth-key' and
'--auth-key-file') mutually exclusive

Signed-off-by: Marian Rusu <rusumarian91@gmail.com>",argparse configargparse,"
1.
Switches from 'argparse' to 'configargparse' lib because it makes it
easy to implement the rule",13,Utility,Utility,False,False
5619,MongoEngine/django-mongoengine,79d5dcaaa083c72c214b7573555e836f01951bfb,2020-02-29 17:19:35,six,algoliasearch-django,django-3.0: replace django.utils.six with just six,algoliasearch-django six,"
django-3.0: replace django.utils.six with just six",9,Web Framework,Web Framework,False,False
5620,django-cms/django-cms,6c92fbecbff90036fd944345850b47f874050e3a,2020-04-20 09:51:44,six,algoliasearch-django,"Add Django 3 and Python 3.8 support (#6796)

* release version lock

* remove python_2_unicode_compatible

* migrated from ``django.utils.six`` to the six package

* more migrations

* update static import

* update to TemplateResponse

* add new arguments

* re-add unicode

* further adaptions

* fix additional issues

* update test framework

* update docs

* revert this change

* add space

* adapt upgrade docs

* fix tests

* test updates

* easy dependency

* adapt requirements files

* cleanup tests

* minor update

* revert pyflakes

* test something

* another test

* updates

* fix some tests

* tests

* Usage of session to store user language has been deprecated

* Fix pyflakes support

* Fix on py2.7

Co-authored-by: Iacopo Spalletti <i.spalletti@nephila.it>",algoliasearch-django six,"* migrated from ``django.utils.six`` to the six package
",9,Web Framework,Web Framework,False,False
5622,django-haystack/django-haystack,ee127012d18b2c231b39e411503f5f6322736efc,2019-10-14 15:19:02,six,algoliasearch-django,using six replace django six,algoliasearch-django six,"
using six replace django six",9,Web Framework,Web Framework,False,False
5624,jazzband/django-configurations,41b905c92eb408fdca94831af5ba9b22a16c39d7,2019-10-06 19:43:03,six,algoliasearch-django,"Update tested Python & Django versions

Replaces `django.utils.six` with `six` to support newer Django versions.

Updates Tox config to:
- remove unsupported Django versions
- add pypy3
- add Django 2.2
- update djmaster Python versions",algoliasearch-django six,"
Replaces `django.utils.six` with `six` to support newer Django versions.",9,Web Framework,Web Framework,False,False
5625,mathiasertl/django-ca,3fcaa8b90dd1674c72a122a55e265add7b1f7bec,2019-09-14 10:31:09,six,algoliasearch-django,"use six directly, since Django 3.0 no longer includes it",algoliasearch-django six,"
use six directly, since Django 3.0 no longer includes it",9,Web Framework,Web Framework,False,False
5626,sunscrapers/djoser,6d8280a913bcce985b820bec8678628289d2b1ba,2020-04-07 06:09:17,six,algoliasearch-django,use six directly instead of django.utils.six for Django 3.0 compatibility,algoliasearch-django six,"
use six directly instead of django.utils.six for Django 3.0 compatibility",9,Web Framework,Web Framework,False,False
5628,MongoEngine/django-mongoengine,79d5dcaaa083c72c214b7573555e836f01951bfb,2020-02-29 17:19:35,six,django,django-3.0: replace django.utils.six with just six,django six,"
django-3.0: replace django.utils.six with just six",9,Web Framework,Web Framework,False,True
5629,django-cms/django-cms,6c92fbecbff90036fd944345850b47f874050e3a,2020-04-20 09:51:44,six,django,"Add Django 3 and Python 3.8 support (#6796)

* release version lock

* remove python_2_unicode_compatible

* migrated from ``django.utils.six`` to the six package

* more migrations

* update static import

* update to TemplateResponse

* add new arguments

* re-add unicode

* further adaptions

* fix additional issues

* update test framework

* update docs

* revert this change

* add space

* adapt upgrade docs

* fix tests

* test updates

* easy dependency

* adapt requirements files

* cleanup tests

* minor update

* revert pyflakes

* test something

* another test

* updates

* fix some tests

* tests

* Usage of session to store user language has been deprecated

* Fix pyflakes support

* Fix on py2.7

Co-authored-by: Iacopo Spalletti <i.spalletti@nephila.it>",django six,"* migrated from ``django.utils.six`` to the six package
",9,Web Framework,Web Framework,False,True
5631,django-haystack/django-haystack,ee127012d18b2c231b39e411503f5f6322736efc,2019-10-14 15:19:02,six,django,using six replace django six,django six,"
using six replace django six",9,Web Framework,Web Framework,False,True
5633,jazzband/django-configurations,41b905c92eb408fdca94831af5ba9b22a16c39d7,2019-10-06 19:43:03,six,django,"Update tested Python & Django versions

Replaces `django.utils.six` with `six` to support newer Django versions.

Updates Tox config to:
- remove unsupported Django versions
- add pypy3
- add Django 2.2
- update djmaster Python versions",django six,"
Replaces `django.utils.six` with `six` to support newer Django versions.",9,Web Framework,Web Framework,False,True
5634,mathiasertl/django-ca,3fcaa8b90dd1674c72a122a55e265add7b1f7bec,2019-09-14 10:31:09,six,django,"use six directly, since Django 3.0 no longer includes it",django six,"
use six directly, since Django 3.0 no longer includes it",9,Web Framework,Web Framework,False,True
5635,sunscrapers/djoser,6d8280a913bcce985b820bec8678628289d2b1ba,2020-04-07 06:09:17,six,django,use six directly instead of django.utils.six for Django 3.0 compatibility,django six,"
use six directly instead of django.utils.six for Django 3.0 compatibility",9,Web Framework,Web Framework,False,False
5637,MrSprigster/Twitch-on-Kodi,477da961bcb52c76f9571386d277e7c80003ef7f,2018-10-26 18:41:50,six,pickle,use six.moves.cPickle,pickle six,"
use six.moves.cPickle",6,Utility,Utility,False,False
5643,MycroftAI/selene-backend,1b4574a3673d6e00b6aeba1f976d877ac2e4bf50,2019-01-31 05:17:59,os,config,changed to use new library config code and changed internal endpoint naming,config os,"
changed to use new library config code and changed internal endpoint naming",3,Filesystem,Filesystem,False,False
5644,SigmaHQ/sigma,55beecac28ac1679f23771eef77e8c56dbfa7646,2020-06-05 17:18:03,os,config,"Squashed commit of the following:

commit d97d2ced8274bd2972b5d10ff8a56fc6c2c0242f
Merge: 022d73f8 84dd8c39
Author: Florian Roth <venom14@gmail.com>
Date:   Wed Jun 3 15:53:55 2020 +0200

    Merge pull request #725 from WilliamBruneau/fix_null_list

    Move null values out from list in rules

commit 84dd8c39c46d0f667104228390ccc923aa6abe33
Author: William Bruneau <william.bruneau@epfedu.fr>
Date:   Tue May 5 09:04:47 2020 +0200

    Move null values out from list in rules

commit 022d73f842c403a1859a558b8f443c1cc2f5ab0a
Merge: 0cbc099d 4ed51201
Author: Florian Roth <venom14@gmail.com>
Date:   Wed Jun 3 10:48:05 2020 +0200

    Merge pull request #811 from svnscha/fix/field-TargetFileName-to-TargetFilename

    All Rules use 'TargetFilename' instead of 'TargetFileName'.

commit 4ed512011aff89a9398bffeffdd80341b0cf2904
Author: Sven Scharmentke <sven@vastlimits.com>
Date:   Wed Jun 3 09:00:59 2020 +0200

    All Rules use 'TargetFilename' instead of 'TargetFileName'.

    This commit fixes the incorrect spelling.

commit 0cbc099def5b79ff2d01164e035c743972f6fe66
Merge: 74e16fdc 3a6ac5bd
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 30 09:31:45 2020 +0200

    Merge pull request #807 from forensicanalysis/master

    Add sqlite backend

commit 3a6ac5bd5c711848b9e85b94741b210740cdada9
Author: Jonas Plum <git@cugu.eu>
Date:   Sat May 30 01:57:06 2020 +0200

    Remove unused function

commit 5cc82d0f05b4a0ea6640f6bdc4fc0fe719945108
Author: Jonas Plum <git@cugu.eu>
Date:   Sat May 30 00:56:06 2020 +0200

    Move testcase

commit 4a8ab88adecc4035aedb8b8780c29a76a31eca04
Author: Jonas Plum <git@cugu.eu>
Date:   Sat May 30 00:15:38 2020 +0200

    Fix test path

commit 70935d26ce214b566b34c4555531e0510a619a99
Author: Jonas Plum <git@cugu.eu>
Date:   Fri May 29 23:56:05 2020 +0200

    Add license header

commit 74e16fdccddf604943ab74d27cdd3a4bb38bd957
Merge: e20b58c4 537bda44
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 29 17:32:43 2020 +0200

    Merge pull request #803 from gamma37/clear_cmd_history

    Edit Clear Command History

commit e20b58c421194d1125c8c81a88818fc8058ede31
Merge: 7f2fa05e a00f7f19
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 29 17:32:27 2020 +0200

    Merge pull request #806 from SanWieb/sysmon_creation_system_file

    Fixed wrong field & Improve rule

commit a00f7f19a14b58ab9ca98f6a4215a3ca9eb1932a
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Fri May 29 16:25:54 2020 +0200

    Add tagg Endswith

    Prevent the trigger of {}.exe.log

commit 38afd8b5def24191616ff0f0c0324cfbb7f0d6d0
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Thu May 28 21:52:17 2020 +0200

    Fixed wrong field

commit 7f2fa05ed300ee42b83677897f326cf81a6d61d8
Merge: ec313b6c 39b41b55
Author: Florian Roth <venom14@gmail.com>
Date:   Thu May 28 11:16:44 2020 +0200

    Merge pull request #802 from Neo23x0/rule-devel

    ComRAT and KazuarRAT

commit 537bda4417ef90f5af9c754d3b0d965c79103cb0
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Thu May 28 10:56:35 2020 +0200

    Update lnx_shell_clear_cmd_history.yml

commit 5a489348224307685cf63bb0cdd7d8b7288d5fc7
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Thu May 28 10:52:17 2020 +0200

    Edit Clear Command History

    I suggest a new point of view to detect that bash_history has been cleared : Instead of trying to detect all the commands that can do that, we could monitor the size of the file and log whenever it has less than 1 line.

commit 39b41b5582ac76ddd8fe694ce31dc6288d60b631
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 28 10:13:38 2020 +0200

    rule: moved DebugView rule to process creation category

commit 76dcc1a16fff440951c2d5d15307b8337ae6f792
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 28 09:22:25 2020 +0200

    rule: renamed debugview

commit ec313b6c8ae02e17e9fa4da82cf766d24a3298ba
Merge: 5bb6770f d44fc43c
Author: Florian Roth <venom14@gmail.com>
Date:   Wed May 27 08:49:20 2020 +0200

    Merge pull request #801 from SanWieb/sysmon_creation_system_file

    Rule: sysmon_creation_system_file

commit d44fc43c5452e4e62b5dcf990139a4e166dda706
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 19:10:11 2020 +0200

    Add extension

commit f6ec724d51b9feb83ce903c6c6398f9c143b9bd4
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 18:53:54 2020 +0200

    Rule: sysmon_creation_system_file

commit 5bb6770f5305cf2e1401191a39f392e6d04722d6
Merge: 0b398c5b 3681b8cb
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 14:28:47 2020 +0200

    Merge pull request #800 from SanWieb/win_system_exe_anomaly

    Extended Windows processes: win_system_exe_anomaly

commit 4ca81b896d044e6ff9ffb9798a7b503029a52259
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 14:19:22 2020 +0200

    rule: Turla ComRAT report

commit 3681b8cb56144248ed57afdb31ce748d01190a0b
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 13:56:51 2020 +0200

    Extended Windows processes

commit 0b398c5bf0d186653e41bb407caf182042f6ce87
Merge: c1f47875 b648998f
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:31:57 2020 +0200

    Merge pull request #798 from Neo23x0/rule-devel

    rule: confluence exploit CVE-2019-3398 & Turla ComRAT

commit c1f4787566fb522ce784487148cec52e92f698ae
Merge: ce1f4634 48c5f2ed
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:21:04 2020 +0200

    Merge pull request #797 from NVISO-BE/sysmon_cve-2020-1048

    Changes to sysmon_cve-2020-1048

commit ce1f46346fe948b3494ec55acc19079e98a6a90c
Merge: e131f347 1a598282
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:20:40 2020 +0200

    Merge pull request #751 from zaphodef/fix/powershell_ntfs_ads_access

    Add 'Add-Content' to powershell_ntfs_ads_access

commit e131f3476e4601b7fd2e0458f3b46be953408eb9
Merge: 30861b55 7037e775
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:20:23 2020 +0200

    Merge pull request #796 from EccoTheFlintstone/fp

    add more false positives

commit 30861b558ce294d75e7bba40605ac7d962fd4a69
Merge: a962bd1b f9f814f3
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:20:07 2020 +0200

    Merge pull request #799 from SanWieb/susp_file_characteristics

    Susp file characteristics: Reduce FP of legitime processes

commit b648998fd0e7100f6a39d7323be0cc1941e49d5e
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 13:18:50 2020 +0200

    rule: Turla ComRAT

commit f9f814f3b3d927a31a9e7703f03e4bd6e28f8e05
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 13:06:27 2020 +0200

    Shortened title

commit a241792e1077be912087c0f22a735e427d9d43ab
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 12:58:15 2020 +0200

    Reduce FP of legitime processes

    A lot of Windows apps does not have any file characteristics. Some examples:
    - Gamebar: C:\\Program Files\\WindowsApps\\Microsoft.XboxGamingOverlay_3.38.25003.0_x64__8wekyb3d8bbwe\\GameBarFT.exe
    - YourPhone: C:\\Program Files\\WindowsApps\\Microsoft.YourPhone_1.20022.82.0_x64__8wekyb3d8bbwe\\YourPhoneServer/YourPhoneServer.exe

    All C:\Windows\System32\OpenSSH (scp, sftp, ssh etc) does not have a description and company.

    Python 2.7, 3.3 and 3.7 does not have any file characteristics.

    So I don't think it is possible to whitelist all options, maybe it is worthwhile to check the \Downloads\ folder otherwise it would be better to just delete the rule. All other suspicious folders are covered by /rules/windows/process_creation/win_susp_exec_folder.yml

commit cdf1ade6254533f55b1802d081b33fdfac6a9077
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 12:27:16 2020 +0200

    fix: typo in selection

commit 91b4ee8d5611b481896a7b7034826d86b435e815
Merge: 4cd7c39e a962bd1b
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 12:24:21 2020 +0200

    Merge pull request #2 from Neo23x0/master

    Update repository

commit 828484d7c6384d85d74ace3ab577fd6b60d22f2a
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 12:09:41 2020 +0200

    rule: confluence exploit CVE-2019-3398

commit 48c5f2ed094ead20bd7b94786530e0583e0d5323
Author: Remco Hofman <rhofman@nviso.be>
Date:   Tue May 26 11:20:21 2020 +0200

    Update to  sysmon_cve-2020-1048
    Added .com executables to detection
    Second TargetObject should have been Details

commit abf1a2c6d7eb6a031fcb60dd003fccf62bd7af33
Author: Jonas Hagg <joy.hagg@web.de>
Date:   Mon May 25 10:54:16 2020 +0200

    Adjusted Makefile

commit dedfb65d635f544011e30cf6ab303db7d782e092
Author: Jonas Hagg <joy.hagg@web.de>
Date:   Mon May 25 10:44:14 2020 +0200

    Implemented Aggregation for SQL, Added SQLite FullTextSearch

commit 7037e77569e062b85f335ef3c9d04b2d392b5214
Author: ecco <none@none.com>
Date:   Mon May 25 04:50:22 2020 -0400

    add more FP

commit a962bd1bc19d96a415d99322a6df5144011b2ffd
Merge: 0afe0623 d510e1aa
Author: Florian Roth <venom14@gmail.com>
Date:   Mon May 25 10:48:36 2020 +0200

    Merge pull request #747 from zaphodef/fix/win_susp_backup_delete_source

    Fix 'source' value for win_susp_backup_delete

commit 0afe0623afd2fbe9cd46074142643536ae5c5cfd
Merge: 92d0aa86 beb62dc1
Author: Florian Roth <venom14@gmail.com>
Date:   Mon May 25 10:47:23 2020 +0200

    Merge pull request #757 from tliffick/master

    added rule for Blue Mockingbird (cryptominer)

commit 92d0aa86549ba8371fa0856dfb364354ef5409bd
Merge: 0dda757c 6fcf3f9e
Author: Florian Roth <venom14@gmail.com>
Date:   Mon May 25 10:46:39 2020 +0200

    Merge pull request #795 from SanWieb/Rule-improvement-Netsh-program-allowed

    Rule improvement: netsh Application or Port allowed

commit 6fcf3f9ebf3ae66ee9bb7853f823dfe11f62d2c1
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 10:13:26 2020 +0200

    Update win_netsh_fw_add.yml

commit 28652e4648fca1cbc48149163c001f209275c7dd
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 10:02:13 2020 +0200

    Add Windows Server 2008 and Windows Vista support

    It did not support the command `netsh advfirewall firewall add`

commit 2678cd1d3e104bd916262f8a242c28006704a457
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 09:50:47 2020 +0200

    Create win_netsh_fw_add_susp_image.yml

    More critical version of the rule windows/process_creation/win_netsh_fw_add.yml with the suspicious image location check.

    Combined the following rules for the suspicious locations:
    https://github.com/Neo23x0/sigma//blob/master/rules/windows/sysmon/sysmon_susp_download_run_key.yml
    https://github.com/Neo23x0/sigma/blob/master/rules/windows/sysmon/sysmon_susp_run_key_img_folder.yml
    https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_susp_run_locations.yml

commit 4cd7c39e9d17182018af175692d5c98c6bb9894e
Merge: 6fbfa9df 0dda757c
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 08:48:16 2020 +0200

    Merge pull request #1 from Neo23x0/master

    Update repository

commit 0dda757ca59b5f80da0e537932e73e8a2be5540d
Merge: 40f0beb5 daf7ab5f
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 22:58:58 2020 +0200

    Merge branch 'socprime-master'

commit daf7ab5ff71c48aec9fab29a70c62a3fec310768
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 22:41:38 2020 +0200

    Cleanup: removal of corelight_* backends

commit d45f8e19fef854a1779973d9a8ae51714d38257d
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 21:46:55 2020 +0200

    Fixes

commit 32e4998c4967d7d09762d994e69cca4ccc143f3c
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 21:45:37 2020 +0200

    Removed dead code from ALA backend.

commit 24b08bbf30f51e07226a0debd9039763bae3d511
Merge: 96fae4be e8b956f5
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 17:06:32 2020 +0200

    Merge branch 'master' of https://github.com/socprime/sigma into socprime-master

commit 40f0beb58da299e648df1eebf2480e3393ab0cc3
Merge: 6fbfa9df b8ee736f
Author: Florian Roth <venom14@gmail.com>
Date:   Sun May 24 16:30:10 2020 +0200

    Merge pull request #794 from SanWieb/update_susp_run_key

    Remove AppData folder as suspicious folder

commit b8ee736f4484ec86e23a5016bd9c634c909b8e33
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Sun May 24 15:16:07 2020 +0200

    Remove AppData folder as suspicious folder

    A lot of software is using the AppData folder for startup keys. Some examples:
    - Microsoft Teams (\AppData\Local\Microsoft\Teams)
    - Resilio (\AppData\Roaming\Resilio Sync\)
    - Discord ( (\AppData\Local\Discord\)
    - Spotify ( (\AppData\Roaming\Spotify\)

    Too many to whitelist them all

commit 6fbfa9dfdd82372120470ddc87e43410401f6fca
Merge: d0da2810 3028a270
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 23:47:12 2020 +0200

    Merge pull request #793 from Neo23x0/rule-devel

    Esentutl rule and StrongPity Loader UA

commit f970d28f10b1e7906593265055bb6a804142ee4e
Author: ecco <none@none.com>
Date:   Sat May 23 15:06:15 2020 -0400

    add more false positives

commit 3028a27055b5ed7a1104cfa8389b7e5005fb0f83
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 18:32:02 2020 +0200

    fix: buggy rule

commit df715386b6abaa5a1208dc611d4e1e3e7cf91d3a
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 18:27:36 2020 +0200

    rule: suspicious esentutl use

commit d0da2810c1180efd7e170e73c4e52fd2c21a94c0
Merge: 8321cc7e 67faf4bd
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 18:13:16 2020 +0200

    Merge pull request #792 from EccoTheFlintstone/fff

    fix FP + remove powershell rule redundant with sysmon_in_memory_power…

commit 8321cc7ee1af886b2672abac5edb148cd1040231
Merge: 9cd9a301 e1a05dfc
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 18:11:32 2020 +0200

    Merge pull request #772 from gamma37/suspicious_activities

    Create a rule for ""suspicious activities""

commit d1a5471d2131b9f14787db3ae7e56eb8428bb560
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 17:38:10 2020 +0200

    rule: Strong Pity loader UA

commit 67faf4bd41c8ccf27d71a6c3d28a5868c95274d2
Author: ecco <none@none.com>
Date:   Sat May 23 10:56:23 2020 -0400

    fix FP + remove powershell rule redundant with sysmon_in_memory_powershell.yml

commit 9cd9a301c21320fe4da002184a4e2fdcea640396
Merge: ee1ca77f d310805e
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:50:31 2020 +0200

    Merge pull request #791 from SanWieb/master

    added rule for Netsh RDP port opening

commit e1a05dfc1cfdb5b0925932a66c43706102ffbccb
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:49:03 2020 +0200

    Update lnx_auditd_susp_C2_commands.yml

commit ee1ca77fad7ebb649ed49190a0c228145ac72834
Merge: 895c8470 cbf06b1e
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:47:46 2020 +0200

    Merge pull request #771 from gamma37/new_rules

    Create a new rule to detect ""Create Account""

commit 895c84703fb60c3ffc3edce06492de1914dab536
Merge: 12e1aeaf 327a53c1
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:47:01 2020 +0200

    Merge pull request #790 from EccoTheFlintstone/fp_fix

    fix false positive matching on every powershell process not run by SY…

commit 327a53c120674588b3f1e439c373a45cda73c543
Author: ecco <none@none.com>
Date:   Sat May 23 10:25:37 2020 -0400

    add new test for sysmon rules without eventid

commit 10ca3006f51b6debb18a2e1067629d260d9cf416
Author: ecco <none@none.com>
Date:   Sat May 23 10:07:55 2020 -0400

    move rule where needed

commit 2b89e5605469f89c9b51e59ba1e245dcffdba18d
Author: ecco <none@none.com>
Date:   Sat May 23 10:03:13 2020 -0400

    fix test

commit d9bc09c38c32333f39512614ceb1f380cc3fa44a
Author: ecco <none@none.com>
Date:   Sat May 23 10:02:58 2020 -0400

    fix test

commit 78a7852a4392464f12618c903da1aa82346a19b9
Author: ecco <none@none.com>
Date:   Sat May 23 09:16:40 2020 -0400

    renamed dbghelp rule with new ID and comment and removed a false positive

commit d310805ed9e5783c94f0cb48b7cea1d3b20e7458
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Sat May 23 14:19:52 2020 +0200

    rule: Netsh RDP port opening

commit 75ba5f989cd7c223059222151a3e321e85c9860c
Author: ecco <none@none.com>
Date:   Sat May 23 07:44:45 2020 -0400

    add 1 more FP to wmi load

commit 9a7f462d795ffa68345179c4c2e33b1044756600
Author: ecco <none@none.com>
Date:   Sat May 23 07:17:56 2020 -0400

    move renamed bnaries rule to process creation (they made a lot of false positives in sysmon as there was no event id specified in the rule)

commit cfde0625f53ef2af49ce6cf81c80c8715cbf7fe8
Author: ecco <none@none.com>
Date:   Sat May 23 07:05:09 2020 -0400

    fix false positive matching on every powershell process not run by SYSTEM account

commit 12e1aeaf9f3ca20c173f71159054e1da67c96eb4
Merge: 46f3a70a 34006d07
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 09:54:43 2020 +0200

    Merge pull request #788 from Neo23x0/rule-devel

    refactor: split up rule for CVE-2020-1048 into 2 rules

commit 46f3a70a7dde70c524abdf99380c675c225847ab
Merge: 96fae4be ec17c2ab
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 09:54:28 2020 +0200

    Merge pull request #786 from EccoTheFlintstone/perf_fix

    various rules cleaning (slight perf improvements)

commit 34006d079431ec5d5892174bf4a1a4f0a30fd1f9
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 09:16:19 2020 +0200

    refactor: simplified and extended expression in CVE-2020-1048 rule

commit 57c8e63acd8a44d79f509142c67d71326d849ef7
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 09:09:58 2020 +0200

    refactore: split up rule for CVE-2020-1048 into 2 rules

commit ec17c2ab56ac12477c80e7ac8c2e66a7f8dedd99
Author: ecco <none@none.com>
Date:   Fri May 22 10:37:00 2020 -0400

    filter on createkey only when needed

commit 96fae4be68faa1bad2c8cfa92b1e5a500e72d765
Author: Thomas Patzke <thomas@patzke.org>
Date:   Fri May 22 00:50:37 2020 +0200

    Added CrachMapExec rules

commit 64e0e7ca7226be813bfd87f197bc99187e0f7edd
Merge: bbf78374 91c4c4ec
Author: Florian Roth <venom14@gmail.com>
Date:   Thu May 21 14:19:09 2020 +0200

    Merge pull request #784 from Neo23x0/rule-devel

    refactor: slightly improved Greenbug rule

commit 91c4c4ecc51de7a7ac5e2fb3e11dd45f4ddfbb2a
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 21 13:38:11 2020 +0200

    refactor: slightly improved Greenbug rule

commit bbf78374b68ace06386410028d2424386f36339e
Merge: 8d9b706d 9a3b6c1c
Author: Florian Roth <venom14@gmail.com>
Date:   Thu May 21 09:55:46 2020 +0200

    Merge pull request #783 from Neo23x0/rule-devel

    Greenbug Rule

commit 9a3b6c1c7712279691e0c177a7d8e282fca8847b
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 21 09:44:11 2020 +0200

    docs: added MITRE ATT&CK group tag

commit 344eb713c5a8e5defc98ee9010cdbc25872adb52
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 21 09:39:57 2020 +0200

    rule: Greenbug campaign

commit 8d9b706d6a224358eaaf20c4b6360982bbe75d78
Merge: e7980bb4 06abd6e7
Author: Thomas Patzke <thomas@patzke.org>
Date:   Wed May 20 19:11:56 2020 +0200

    Merge pull request #727 from 3CORESec/master

    Override Features

commit e7980bb434ed21c23208f86b85307a97ea18cffb
Merge: af92a5bd 8963c0a6
Author: Florian Roth <venom14@gmail.com>
Date:   Wed May 20 12:55:41 2020 +0200

    Merge pull request #782 from ZikyHD/patch-1

    Remove duplicate 'CommandLine' in fields

commit af92a5bd2c74c55f06304af5967b9d705f6e86c5
Merge: 04dfe6c5 9ab65cd1
Author: Florian Roth <venom14@gmail.com>
Date:   Wed May 20 12:55:29 2020 +0200

    Merge pull request #780 from tatsu-i/master

    Null field check to eliminate false positives

commit 8963c0a65e19f7202fe5daf467d1d4d33abd3d0a
Author: ZikyHD <ZikyHD@users.noreply.github.com>
Date:   Wed May 20 11:54:47 2020 +0200

    Remove duplicate 'CommandLine' in fields

commit e8b956f575c0af942d20ee3a6b951f52c04d3baa
Author: vh <vh@socprime.com>
Date:   Wed May 20 12:35:00 2020 +0300

    Updated config

commit 9ab65cd1c73a9225a2090f81d07064761df487c1
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 19 14:50:22 2020 +0200

    Update win_alert_ad_user_backdoors.yml

commit 04dfe6c5fc44a6a9e4b8bde35c2693d78be306e7
Merge: df75bdd3 9e272d37
Author: Thomas Patzke <thomas@patzke.org>
Date:   Tue May 19 13:18:40 2020 +0200

    Merge pull request #778 from neu5ron/sigmacs

    SIGMACs: Winlogbeat & Zeek

commit df75bdd3b67afecca06714e2f38a39bf5319cb7b
Merge: 4446c4cd 7c3dea22
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 19 13:10:56 2020 +0200

    Merge pull request #779 from neu5ron/rules

    Rules: Zeek

commit 7c3dea22b8702d7cc8e6796fd383d5a62096fffa
Author: neu5ron <>
Date:   Tue May 19 05:13:48 2020 -0400

    small T, big T

commit dd382848b4b1f693a35c1a89313b492d6293859d
Merge: 602c8917 e975d3fd
Author: neu5ron <>
Date:   Tue May 19 05:09:05 2020 -0400

    Merge remote-tracking branch 'neu5ron-sigma/rules' into rules

commit 602c8917ef7de1aca12ef7641e86bcee57fddd4a
Author: neu5ron <>
Date:   Tue May 19 04:41:08 2020 -0400

    domain user enumeration via zeek rpc (dce_rpc) log.

commit c815773b1abf32ef2ba94f333b8421a389362875
Author: Tatsuya Ito <t_ito@cyberdefense.jp>
Date:   Tue May 19 18:05:51 2020 +0900

    enhancement rule

commit 49f68a327a88bf7c6d527e12885941c894670619
Author: Tatsuya Ito <t_ito@cyberdefense.jp>
Date:   Tue May 19 18:00:50 2020 +0900

    enhancement rule

commit e975d3fd14f2a241c536b0b0773639694a985b5c
Author: neu5ron <>
Date:   Tue May 19 04:41:08 2020 -0400

    domain user enumeration via zeek rpc (dce_rpc) log.

commit effb2a833713afba2902c5a03dc316207b2e6b25
Author: neu5ron <>
Date:   Tue May 19 04:41:00 2020 -0400

    add exe webdav download

commit 858ebcd3d3d1fa7b3c019797cf9624e8820bbf82
Author: neu5ron <>
Date:   Tue May 19 04:35:47 2020 -0400

    author typo update

commit 2fc8d513d6bab5e194271a20e544b42f3d921878
Author: neu5ron <>
Date:   Tue May 19 04:35:30 2020 -0400

    zeek, swap `path` and `name`

commit 0dd089db47e4f7a86f3573a481a67eabb2a234de
Author: ecco <none@none.com>
Date:   Mon May 18 20:29:53 2020 -0400

    various rules cleaning

commit 71c507d8a95b43e45d435c1e70a51f964655f12c
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 11:34:53 2020 +0200

    remove space bedore colon

commit 55eec46932d99c18baf8c0aed86d4bf470ef1f6e
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 11:25:18 2020 +0200

    Create a rule for ""suspicious activities""

commit cbf06b1e43dc523885c3107fb35ffcc88c20e735
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 10:11:32 2020 +0200

    lowercased tag

commit 904716771a98e7c68d20e1b642073788309c17f2
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 10:03:34 2020 +0200

    Create a new rule to detect ""Create Account""

commit beb62dc163ee995a9fbe362807c132bf8edd1e09
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 15 12:06:34 2020 +0200

    fix: condition location

commit 28dc2a22672e5959e3920a08fa5c17f35a0351f5
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 15 11:33:36 2020 +0200

    Minor changes

    hints:
    - contains doesn't require wildcards in the strings
    - we can use 'endswith' instead of wildcard at the beginning of the string (it's the new way to describe it, we have to change all old rules that contain these wildcards some day)
    - we can use ""1 of them"" to say that 1 of the conditions has to match

commit 40ab1b7247e52be5ff01429a0d6b9b80656aedb2
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 23:33:08 2020 -0400

    added 'action: global'

commit 56a2747a7062e2205f729f19ef34535f80c24c9d
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 23:18:33 2020 -0400

    Corrected missing condition

    learning! fail fast & forward

commit fb1d8d7a76c45451ac1d14829d812ae5961493fe
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 23:04:14 2020 -0400

    Corrected typo

commit 8aff6b412e39de70da551c9c9854ea97a8a8b16c
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 22:58:23 2020 -0400

    added rule for Blue Mockingbird (cryptominer)

commit 06abd6e76a0487ac0bbe414ecae9ce021bce4106
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Thu May 14 14:03:23 2020 +0100

    added ci tests for ecs-cloudtrail

commit 2893becf8cc6e9c581050b4c35dc381f1aba13e1
Merge: 31ad8187 133319c4
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Thu May 14 14:02:20 2020 +0100

    Merge remote-tracking branch 'upstream/master'

commit 1a598282f4033e51e060b1014600970fdc64f72a
Author: zaphod <18658828+zaphodef@users.noreply.github.com>
Date:   Wed May 13 11:57:10 2020 +0200

    Add 'Add-Content' to powershell_ntfs_ads_access

commit d510e1aad45908a0b73c66fce6d349d09cace3b4
Author: zaphod <18658828+zaphodef@users.noreply.github.com>
Date:   Mon May 11 18:31:59 2020 +0200

    Fix 'source' value for win_susp_backup_delete

commit fb9c5841f4fde53437bc01b764060fdf63bf52ea
Author: vh <vh@socprime.com>
Date:   Fri May 8 13:41:52 2020 +0300

    Added Humio, Crowdstrike, Corelight

commit 31ad81874fee378ea3f951d81d088aac9fb1e737
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Tue May 5 11:32:18 2020 +0100

    capitalized titles

    corrected capitalization of titles and removed literals from config

commit aa175a7d5bbfd8b9e6526cfa36256dac5514bff4
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 18:02:27 2020 +0100

    wip

    wip

commit dd9e128a15d5f9ad08ea744cde0f18b49a4a1204
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 17:35:12 2020 +0100

    kibana target update

    kibana target now compatible with overrides

commit b32093e734395841bcef94414a575bdf3a3a98ac
Merge: b3194e66 d298bb57
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 17:26:51 2020 +0100

    Merge remote-tracking branch 'upstream/master'
    Keeping up with the sigmas.

commit b3194e66c4f1def35c11f407d6c7e47867eb8053
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 16:37:36 2020 +0100

    Update base.py

commit dd85467a271d79ec30079e0e4b6391e1a465cd0a
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Sat May 2 00:13:55 2020 +0100

    Update aws_ec2_vm_export_failure.yml

commit bc0a2c7ab932cf967869cc31237b18b1cef0e09e
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Fri May 1 19:20:05 2020 +0100

    wip

    wip

commit 98391f985a17f7a1a694857468ad3b66a2515025
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Thu Apr 30 15:19:38 2020 +0100

    wip

    wip

commit adcc3766e3f20e74b9c5ed651ad44e9e1e52b8a9
Merge: 81422444 dfdb5b95
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Thu Apr 30 15:08:25 2020 +0100

    Merge branch 'master' of https://github.com/3CORESec/sigma

commit 8142244449efd6c62953a8f05e5d8256910ab358
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Thu Apr 30 15:08:20 2020 +0100

    wip

    wip

commit dfdb5b9550794f0df4bf6015d901226671586be5
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Wed Apr 29 23:59:26 2020 +0100

    better description and event.outcome

commit ac4a2b1f26df3071af13030731bb384290bf2422
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Wed Apr 29 22:55:46 2020 +0100

    wip

    wip

commit 9ce84a38e592f6d2163ca5aac90533bca4853981
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Wed Apr 29 20:36:45 2020 +0100

    overrides section support + one example rule + cloudtrail config

    ditto",config os,"
- contains doesn't require wildcards in the strings
- we can use 'endswith' instead of wildcard at the beginning of the string (it's the new way to describe it, we have to change all old rules that contain these wildcards some day)
- we can use ""1 of them"" to say that 1 of the conditions has to match",3,Filesystem,Filesystem,False,False
5648,computationalmodelling/fidimag,5c61fc0b3f563fa39c0b4170d31dfb14e4f64159,2021-02-01 17:56:33,sphinx-rtd-theme,sphinx,Attempt to update docs with newer Sphinx template,sphinx sphinx-rtd-theme,"
Attempt to update docs with newer Sphinx template",8,Documentation,Documentation,False,False
5650,nedbat/coveragepy,0aff68d71faa4938fc28567b0dca1f3413876124,2015-08-10 20:05:12,sphinx-rtd-theme,sphinx,Might as well use the Sphinx way to do this.,sphinx sphinx-rtd-theme,"
Might as well use the Sphinx way to do this.",8,Documentation,Documentation,False,False
5651,otsaloma/gaupol,a5adb3709f42a90dc067a2a4505b98551d0d90d2,2014-02-22 01:15:20,sphinx-rtd-theme,sphinx,Use sphinx theme from readthedocs.org.,sphinx sphinx-rtd-theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5652,otsaloma/nfoview,271b3e1369ba08eabfab497c70f676fa8c9400ba,2014-02-20 19:21:45,sphinx-rtd-theme,sphinx,Use sphinx theme from readthedocs.org.,sphinx sphinx-rtd-theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5653,scikit-rf/scikit-rf,e88ce6730b34d7d5dad7e9fab3821c3eacb7831f,2020-07-26 08:07:37,sphinx-rtd-theme,sphinx,update sphinx config file to avoid warning about Python3 compatibility,sphinx sphinx-rtd-theme,"
update sphinx config file to avoid warning about Python3 compatibility",8,Documentation,Documentation,False,False
5656,computationalmodelling/fidimag,5c61fc0b3f563fa39c0b4170d31dfb14e4f64159,2021-02-01 17:56:33,sphinx_rtd_theme,sphinx,Attempt to update docs with newer Sphinx template,sphinx sphinx_rtd_theme,"
Attempt to update docs with newer Sphinx template",8,Documentation,Documentation,False,False
5658,nedbat/coveragepy,0aff68d71faa4938fc28567b0dca1f3413876124,2015-08-10 20:05:12,sphinx_rtd_theme,sphinx,Might as well use the Sphinx way to do this.,sphinx sphinx_rtd_theme,"
Might as well use the Sphinx way to do this.",8,Documentation,Documentation,False,False
5659,otsaloma/gaupol,a5adb3709f42a90dc067a2a4505b98551d0d90d2,2014-02-22 01:15:20,sphinx_rtd_theme,sphinx,Use sphinx theme from readthedocs.org.,sphinx sphinx_rtd_theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5660,otsaloma/nfoview,271b3e1369ba08eabfab497c70f676fa8c9400ba,2014-02-20 19:21:45,sphinx_rtd_theme,sphinx,Use sphinx theme from readthedocs.org.,sphinx sphinx_rtd_theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5661,scikit-rf/scikit-rf,e88ce6730b34d7d5dad7e9fab3821c3eacb7831f,2020-07-26 08:07:37,sphinx_rtd_theme,sphinx,update sphinx config file to avoid warning about Python3 compatibility,sphinx sphinx_rtd_theme,"
update sphinx config file to avoid warning about Python3 compatibility",8,Documentation,Documentation,False,False
5664,computationalmodelling/fidimag,5c61fc0b3f563fa39c0b4170d31dfb14e4f64159,2021-02-01 17:56:33,sphinx-rtd-theme,sphinx-testing,Attempt to update docs with newer Sphinx template,sphinx-testing sphinx-rtd-theme,"
Attempt to update docs with newer Sphinx template",8,Documentation,Documentation,False,False
5666,nedbat/coveragepy,0aff68d71faa4938fc28567b0dca1f3413876124,2015-08-10 20:05:12,sphinx-rtd-theme,sphinx-testing,Might as well use the Sphinx way to do this.,sphinx-testing sphinx-rtd-theme,"
Might as well use the Sphinx way to do this.",8,Documentation,Documentation,False,False
5667,otsaloma/gaupol,a5adb3709f42a90dc067a2a4505b98551d0d90d2,2014-02-22 01:15:20,sphinx-rtd-theme,sphinx-testing,Use sphinx theme from readthedocs.org.,sphinx-testing sphinx-rtd-theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5668,otsaloma/nfoview,271b3e1369ba08eabfab497c70f676fa8c9400ba,2014-02-20 19:21:45,sphinx-rtd-theme,sphinx-testing,Use sphinx theme from readthedocs.org.,sphinx-testing sphinx-rtd-theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5669,scikit-rf/scikit-rf,e88ce6730b34d7d5dad7e9fab3821c3eacb7831f,2020-07-26 08:07:37,sphinx-rtd-theme,sphinx-testing,update sphinx config file to avoid warning about Python3 compatibility,sphinx-testing sphinx-rtd-theme,"
update sphinx config file to avoid warning about Python3 compatibility",8,Documentation,Documentation,False,False
5672,computationalmodelling/fidimag,5c61fc0b3f563fa39c0b4170d31dfb14e4f64159,2021-02-01 17:56:33,sphinx_rtd_theme,sphinx-testing,Attempt to update docs with newer Sphinx template,sphinx-testing sphinx_rtd_theme,"
Attempt to update docs with newer Sphinx template",8,Documentation,Documentation,False,False
5674,nedbat/coveragepy,0aff68d71faa4938fc28567b0dca1f3413876124,2015-08-10 20:05:12,sphinx_rtd_theme,sphinx-testing,Might as well use the Sphinx way to do this.,sphinx-testing sphinx_rtd_theme,"
Might as well use the Sphinx way to do this.",8,Documentation,Documentation,False,False
5675,otsaloma/gaupol,a5adb3709f42a90dc067a2a4505b98551d0d90d2,2014-02-22 01:15:20,sphinx_rtd_theme,sphinx-testing,Use sphinx theme from readthedocs.org.,sphinx-testing sphinx_rtd_theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5676,otsaloma/nfoview,271b3e1369ba08eabfab497c70f676fa8c9400ba,2014-02-20 19:21:45,sphinx_rtd_theme,sphinx-testing,Use sphinx theme from readthedocs.org.,sphinx-testing sphinx_rtd_theme,"
Use sphinx theme from readthedocs.org.",8,Documentation,Documentation,False,False
5677,scikit-rf/scikit-rf,e88ce6730b34d7d5dad7e9fab3821c3eacb7831f,2020-07-26 08:07:37,sphinx_rtd_theme,sphinx-testing,update sphinx config file to avoid warning about Python3 compatibility,sphinx-testing sphinx_rtd_theme,"
update sphinx config file to avoid warning about Python3 compatibility",8,Documentation,Documentation,False,False
5678,NHERI-SimCenter/pelicun,6bc5889f37e3f2121683b43ad02df9226e94cdb4,2019-10-09 18:49:17,base,pandas,"azs - major improvement in tmvn_MLE fitting

Used to be a gradient-descent based algorithm; now it starts with global optimization using differential evolution and only relies on gradient descent for the final polishing.
Also added a pre and post-processing step that standardizes the samples (and detection and truncation limits).
These two improvements lead to much better estimates at the cost of longer calculation time. Fitting shall not take more than a few minutes.",pandas base,"
Used to be a gradient-descent based algorithm; now it starts with global optimization using differential evolution and only relies on gradient descent for the final polishing.",3,Scientific&Testing,Scientific,False,False
5680,panoptes/POCS,14400bdcbc173b25b15c3cd952ebbfae446b5fbb,2020-06-01 03:04:50,base,pandas,"Docker into develop 02 (#951)

* Dockerize

This will merge all the docker components into a new branch in the main repo. As part of milestone 0.7 these items will be cleaned up as a step towards making the docker version the default (i.e. `develop`) version for milestone 0.8.

This is being merged now because there are too many changes within one PR and it will be better to have new PRs that branch off this `docker` branch. This will also allow for installs on new units from the `panoptes` user rather than my personal branches.

* Docker branch upstream merge - WIP (#911)

Keeping `docker` in line with `develop`.

* Update env_file

Adding local user id

* Fixing power entry (#928)

* Minor fixes

* * Excplit teardown of camera for simulator_sdk so we can remove from assigned list. Note that this should ideally be happening by the `__del__` of the `AbstractSDCCamera` but is not getting called.

* Fixtures scopes at function level. Not sure what this will break.

* Adding empty `obstructions` for location config.

* Adding empty `obstructions` for location config.

* Try to download the IERS table before starting travis test

* Remove mongo

* Download IERS

* Core
* Explicitly cast free_space boolean

Camera
* Pass the config_port to the subcomponents
* Allow for a default string representation (needed to help debug object before it has fully initialized)

Debug logging

* * Default str representation for camera subcomponents that haven't been fully initialized.
* Logging statements for debug (will be removed).

* test_pocs

* Updating all the POCSTIME to be more current.
* Lots of debugging for now (I'm about to switch to desktop and want to keep these in)

* Ensure seconds quantity for exptime

* Test POCS

* Update POCSTIMEs and targets.
* Make the used observation a fixture.

* Small log change

* Ensure a float

* Testing should default to testing pointing

* Removing PR debugging.

* Removing PR debugging.

* Changes from #927 (@zacharyt20)

* Changes from #934 (@zacharyt20)

* Ignore vscode project files

* Coverage tests

* Coverage tests (and a few `no cover` cheats)

* PanBase cleanup

* Config server always returns a `None` so skip exception checking here.
* Coverage tests

* Move social messaging test to panoptes-utils

* Updates to linking pretty image to match panoptes-utils

* Make pretty in pocs shell matched to `panoptes-utils`

* Adding `responses` library.

* Removing references to mongo

* Better dockerignore

* Small changes to logging statements for consistency and use with new logger.

* Updating requirements

* Use new version of `panoptes-utils`

* Adding `responses` to main required section. `pip-tools` can't handle
the `extras_require` section so nothing from those can make their way
into `requirements.txt`, which is a bit frustrating.

* Requirements changes
* Updating pyzmq to latest
* Removing tweepy

* Removing `dateparser` and `pyzmq`

* Removing `photutils` and `python-dateutil`.
Other cleanup to setup.py

* Fixing calls to the root logger

* Getting rid of logger calls.

* Fixing caplog for pytest with new logging.

* **BREAKING CHANGE**

Changing `get_root_logger` to the more intuitive `get_logger`

* Logger Fixes

* Switches to `get_logger`
* Better logger config
* Remove old log config file

* Fixing focuser calls to mask_saturated for updates panoptes-utils

* Don't pass logger to write_fits

* Adding custom formatter for console logger so there are even widths for columns

* Singleton console formatter so column widths are retained across imports

* Change some log levels to trace for setup items in testing

* * Handle missing thumbnail creation.
* Smarter wait for cooling cameras so tests don't take as long.
* Better log format for cooling cameras.

* Logger:

* Better singleton
* Better work with pytest
* Moved more thngs to trace level

Filterwheel:

* Increased tolerances on some tests for some reason. :confused:

* Breaking some logger coverage for now

* pep8
    * Ignore a few minor violations with new pycodestyle
    * fix some errors

* Requirements:

* Adding all the modules to the `required` section in `setup.py`. This means that `pip-tools` will generate a full and complete `requirements.txt` but is otherwise annoying.
    * Helps to fix some depedency issues in the docker image.

* Removing logger coverage for now

* Allow camera time to properly cool

* Some some debug messages when camera not ready.

* Increase default temperature_tolerance for ZWO cameras (#959)

* override default value

* Updating to `panoptes-utils==0.2.2` to fix testing issues.

* Fix paths to testing script

* Change GH action name

* Update version number.

* Updates to readme

* Auto fix format errors on changelog

* Updates to README and CHANGELOG

* Increase log retention policy

* Changing relevant `super()` calls.

* Remove unused script

* Changelog updates

* Move pdf manuals to resources directory

* Build documentation correctly

* Update readthedocs config

* Split the AAG weather docker containers to separate compose file.

* Fix `super` calls

* Update the install script

* Use `panoptes-exp`
* Remove the branch option
* Only link env file if one doesn't exist
* Newer version of `docker-compose`
* List of docker images updated

* Changing log levels (lots of output)

* * Timeout the GitHub Actions at 60 minutes (default is 6 hours!)
* Fix missing param

* * Don't unpark the mount in the `ready` state but wait until `slewing`.
* Better machine logic logging
* Small cleanup

* Generate all new documentation.

* More fixes for documentation

* Documentation fixes

* Fix tests with regard to parking change

* Change level colors for logger

* Fix url in setup
Fix some docs

* Trying to import cooling_enabled test.

* Don't capture log output

* Small test fixes

* Revert the travis test option

* Slight delay to killing of server so next one can start

* * Update `panoptes-utils`

* Reduce test verbose output

* f-string for vesion (why not?)

* Add back test verbosity (didn't help with GH Actions output)

* Die on first error

* Save log files in github if tests fail.

* Use local path for artifacts.

* Fix GH Actions path

* More trying to fix GH Action path

* Moving coverage upload to gh actions.

* Trying to figure out GHA artifacts

* Apparently need a name

* Fix pipes

* Add back the `failure`

* More GHA test

* GHA tests

* Docker container not a tty

* Try local logs

* More and more and more testing of GHA

* Remove test for testing tests

* Better name for job step

* Change step name for GHA

* Travis consistently fails on this test so attempting to get some debug info.

* Combine covergae in GHA

* z

* Make `coverage` command available.

* Always create log file artifact, only do coverage on success

* Camera tests will always wait for camera to be ready.

* Increase time allowed to get ready and log

* Identify which camera

* Try different wait for camers

* Adding ridiculous debugging.

* Try to debug random temperature spikes

* Better debug logging

* Decrease random temp variance on simulator.

* Just trace the temp instead of debug

* Coverage is combined at the time it is run.

* Lower temp var for simulator

* Set trace log level on CI testing.

* List files to see coverage

* Get some log output

* Use the logger from the camera.

* Compress console log file

* Also list hidden files on success (looking for travis file)

* Add some echoes

* Removing teardown

* Try explicit delete

* Trying to get more debug info on stalling tests

* Only log if have assigned cameras

* Updating panoptes-utils

* Send coverage reports from inside the testing file.

* Correct expression

* I thought I had the `or` working earlier but don't want to spend any more time.

* Coverage

* Explicit GH actions tests to find coverage

* * Opinionated logger forces handlers.
* No `SystemExit` on missig config items.
* Smarter filterwheel timeouts.
* Cleanup `camera` fixture so it skips hardware tests better.
* Adding a `testing` level for logger for differentiating between test output.

* Minor cleanup

* Comment about weird code for removing `simulator_sdk`

* Cheating with not testing caplog

* * Force logger handler singletons by id again. Seems like `loguru` should have a mechanism to track by name.

* Fix coverage artifact

* * Remove ci env and list before upload.

* Don't upload coverage file.

* Try to explictyly upload coverage file

* Show coverage report before uploading.

* Coverage report from test script.

* Test and coverage cleanup.

* * Add coverage upload action to pythontest GHA.
* Consolidate setup files into `setup.cfg`. Also rearrage `setup.cfg`.
    * Remove `.pycodestyle.cfg`
    * Remove `.coveragerc`

* Add to changelog.

* Better step names for GHA

* Fix codestyle test to point to config.

* Rename codecov file to be their selfish top-level name.

* More in changelog.

* * Default the install to the `panoptes` user intead of `$USER`.
* Don't get PAWS repo.

* Remove simple weather script reader and `pandas` dependency (moved to branch in `aag-weather`)

* Consistent script names

* Simplify env file

* Add `$PANUSER` to env file.

* * Revert back to installing with the `$USER`, which makes esnse for the host system.
* Remove `$LOCAL_USER_ID` from env file.

* Install script
* Don't install PAWS.
* Don't use env file (for now?).

Env file
* Move out of `docker` to root of project.

Config file cleanup
* Rearrange.
* Remove weather items.
* Remove social items.

* Install script

* Prompt for PANDIR.

* Remove stale comment

* Clarify misleading env var value

* Remove stale comment

* Clean up coverage and test files

* Use `PanLogger` from the utils.

* Manually addy the panoptes-utils github to requirements for now.

* Fix coverage pointing location.

* Add coverage variables.

* Make sure to add `latest` image.

* Update panoptes-utils

* Update labels and build for docker

* Small cleanups.

* Fixing requirements.

* * Supporting tagged Dockerfile so we can create a `develop` version (TODO).
* Adjusting test so that it builds docker image. Hopefully won't be too slow.

* Switch to panoptes user.

* Update Dockerfile.

* Don't link conf_files. Need a better solution.

* Bringing `PanLogger` (dynamic padding and handler info) from `panoptes-utils`.

* Cleanup of files and ignore files.

* Try to run the GHA tests with GHA user.

* Updates to test and config to try and make more like working panoptes-utils.

* Bumping panoptes-utils requirements

* Removing unnecessary comments.

* Updating test scripts for automated testing inside a container, either local or on CI service.

* Allow the CI service to run as its local user.

* Try GHA testing without local user id.

* Trying to solve log file permissions problem on GHA.

* Can't take time to fix this test as it might be removed.

* * Adding setuptools-scm
* Updating requirements.txt

* Ignore generated version file

* Small docker changes

* PyScaffold migration commit.

* Custom edits to the pyscaffold merge.

* **Breaking**

* Changing pocs namespace to fit within panoptes.

* Fixing tests.

* More big chnages for pyscaffold. Getting the docs and the tests working.

* Add static images

* More documentation updates and fixes.

Some filterwheel tolerance fixes.

* * Changing logging namespace.
* Updating contributing guide and other docs.

* * Cleaing up docker.
* Changing logger namespace back to original.

* * Add `is_sleeping` property.
* Move `parse_lines` into function as a camera utility.
* Using panoptes-utils serializers.

* * Fixing `parse_config` for gphoto2
* Added `is_sleeping` for pocs.
* Dockerfile install local via pip.

* * Adding items from #970.
* Using `panoptes.utils.time.wait_for_events`.
* Install instructions in the README.

* Readme cleanup.

* Readme cleanup.

* Test cleanup.

* * Making proper abstractmethods.
* Documentation updates where found.
* Many log and f-string fixes.
* `pocs.config_port` property available publicly.
* horizon check for state happens directly in `run`.
* `sleep` renamed to `wait`.
* dome status changed to dict.

* Changelog, quick test fixes.

* Fix bad import.

* Fix bad import.

* Install script

* Don't start time service on linux
* Don't write existing env vars to zshrc
* Don't fetch origin if repo already exists
* Always pull docker images
* Don't use sudo for pulling images

* Docker updates to use testing.

* Fixing GHA .

* Update contributing guide.

* Changelog updates.

* Changelog updates.

* Adding an update warning.",pandas base,"
This is being merged now because there are too many changes within one PR and it will be better to have new PRs that branch off this `docker` branch.
This will also allow for installs on new units from the `panoptes` user rather than my personal branches.",3,Scientific&Testing,Scientific,False,False
5690,aws/aws-xray-sdk-python,266bc82dfcc3d3c2f86b20aa8ee126fab28a5f00,2021-03-22 23:03:24,json,jsonpickle,"Replace jsonpickle with json to serialize entity (#275)

* Replace jsonpickle with json to serialize entity

* Added workflow to create release tag

* Pinned sqlalchemy and Flask-SQLAlchemy for unit test

* Fixed version

* Changed log to debug level

* Update logging

* Added empty line",jsonpickle json,"
Replace jsonpickle with json to serialize entity (#275)",3,Serialization,Serialization,False,False
5693,cornellius-gp/gpytorch,6bca4eed74e22ee369c166649f15db56f8565e35,2019-03-23 20:45:40,unittest,test,"Update LazyTensor unit tests to include Cholesky inv_matmul tests

- Appropriately check that linear_cg and lanczos_tridiag are called
- Introduce new self.assertAllClose method",test unittest,"
Update LazyTensor unit tests to include Cholesky inv_matmul tests",13,Testing,Testing,False,False
5694,equinor/ert,173dcc18da49daf7d0194a94c1f2a55bace645b9,2013-04-22 18:47:09,unittest,test,Moved test running to ctest_run + added Python testing for ecl_kw and ecl_grid (ERT-113),test unittest,"
Moved test running to ctest_run + added Python testing for ecl_kw and ecl_grid (ERT-113)",13,Testing,Testing,False,False
5697,nicolas-chaulet/deeppointcloud-benchmarks,f1a916ab926f21c9b7bc3ae4cc674b57ac4e5c2d,2020-04-19 14:34:23,unittest,test,"'add scannet from labels directly' (#219)

* 'add scannet from labels directly'

* move global arguments accross scannet datasets

* add map + iter on scheduler + finished scannet + params

* 'add two new transform'

* minkowski run on scannet

* updated unittest

* add elastic distorsion

* correct bug grid_sampling

* 'remove useless code'

* add save_unique_pos_indices for point tracking -> registration

* grid_sampling

* remove wrong args

* add test for schedulers

* diffMockModel

* update ToSparseInput

* update scannet

* updata elastic

* add profiling

* update on comments

* add elastic distorsion to grid_sampling for speed up

* update schedulers

* 'update scannet en 2 cm'

* update tests

* resolve unittest

* apply black

* add some tests

* add to doc

* remove scannet precomputed for now

* resolve bug in 3DAxisRotation

* updat rotate

* update on comments",test unittest,"
* update tests",13,Testing,Testing,False,False
5699,osbuild/osbuild,c84f5280c1fe6633cad741594cb54bdafe1d114d,2020-05-20 12:44:43,unittest,test,"test: convert to new osbuild executor

Convert the pipeline tests to the new osbuild executor. This will remove
the last users of the ""output_id"" and ""tree_id"" identifiers from
osbuild.",test unittest,test: convert to new osbuild executor,13,Testing,Testing,False,False
5703,tomasbedrich/pycaching,228679ea2da48ca9156ff4ac90919c38b77de14b,2018-05-13 15:48:11,unittest,test,"Overhaul testing with Betamax (#95)

* Fix #94

* Update Geocaching and util to support Sessions for testing

* Update tests to use Betamax

* Refactor tests to do common setup for networking.

I elected *not* to record a cassette for the login setup. If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data. Then the test would fail.

Instead, the setup attempts to login. If if succeeds, great. If it fails, it pretends like it succeeded and continued. If tests are only being replayed (without new ones created), everything will be fine. If new tests are recorded, they will fail due to improper authentication. They would've failed anyway, but in this case they'll fail at the recording stage instead of the setup phase.

* Refactor cookie scrubbing to take advantage of response.cookies, scrub __RequestVerificationToken

In the request, some cookies are sent in the body rather than the headers, so we need to examine that for secret values.",test unittest,"* Update Geocaching and util to support Sessions for testing
I elected *not* to record a cassette for the login setup.
If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data.
Then the test would fail.",13,Testing,Testing,False,False
5709,cfpb/cfgov-refresh,bcf751d98215ed93f68f7941a21e7d715d5086e5,2016-08-25 01:11:07,django,unittest,fixing unit tests on travis (use django.test.TestCase),unittest django,"fixing unit tests on travis (use django.test.
TestCase)
",18,Testing&Web Framework,Testing,False,False
5710,desihub/desispec,1468b777f3a4eb2ad565cb10fb6fc1d3044ceaf4,2016-11-09 19:23:14,django,unittest,"Restructure the desispec.pipeline module and other parts of (#300)

the code which are impacted:

  - Split the source files into separate ones for planning,
    dependency graph manipulation, running, and tracking state.

  - Add new class for pipeline workers.  Each pipeline step
    runs a worker instance on the local tasks.  The selection
    of which worker class is used is controlled in the production
    yaml file of options.  This makes it easy to switch which
    implementation is used for each step.

  - Use io.find_file everywhere.  Add missing file types to
    that function.

  - Temporarily disable QA outputs until they can be added fully
    to io.find_file, then re-enable.

  - Move main() of desi_pipe, desi_pipe_run, and desi_pipe_status
    into desispec.scripts

  - Every function now has a docstring.

  - Update unit and integration tests to match new API.  Disable
    broken unit tests temporarily until they can be fixed.  Integration
    tests and a full production on one spectrograph and 3 exposures
    works.",unittest django,"
- Update unit and integration tests to match new API.
Disable",18,Testing&Web Framework,Testing,False,False
5712,dotKom/onlineweb4,c3b14297c34c8302a3bd18660ac3db8adaadd9b3,2013-01-30 21:44:57,django,unittest,"cleaned up article tests, converted events test to django testing",unittest django,"
cleaned up article tests, converted events test to django testing",18,Testing&Web Framework,Testing,False,False
5713,edx/course-discovery,3bbc4bf5aec0f3a51daa179b627ae65eb9216f2f,2017-01-17 20:09:44,django,unittest,"Use MySQL when running tests on Travis

We run Docker containers on Travis, including one for MySQL. However, we haven't actually be using it! These changes update the test settings required to make the switch from SQLite to MySQL, fix a variety of bugs in tests that were hidden by SQLite, and introduce new Make targets which make it easy to run tests locally in the same way that Travis runs them.",unittest django,"
We run Docker containers on Travis, including one for MySQL.
However, we haven't actually be using it! These changes update the test settings required to make the switch from SQLite to MySQL, fix a variety of bugs in tests that were hidden by SQLite, and introduce new Make targets which make it easy to run tests locally in the same way that Travis runs them.",18,Testing&Web Framework,Testing,False,False
5714,globocom/database-as-a-service,4268f8194bd93bd7f4be24c34938ca343e457c34,2018-01-05 12:38:42,django,unittest,Change TestCase from unittest to django.test,unittest django,"
Change TestCase from unittest to django.test",18,Testing&Web Framework,Testing,False,False
5715,jodal/comics,8357188dbc323148f9d778c1c3d46311bbdbb3ea,2011-07-15 21:58:45,django,unittest,Use unittest2 bundled with Django 1.3,unittest django,"
Use unittest2 bundled with Django 1.3",18,Testing&Web Framework,Testing,False,False
5724,thenetcircle/dino,ebda4437fa01d87c214de28501b5d6e6ae8773c4,2016-11-11 09:54:24,form,unittest,fixed more test cases for api/request split,unittest form,"
fixed more test cases for api/request split",3,Testing,Testing,False,False
5730,thenetcircle/dino,ebda4437fa01d87c214de28501b5d6e6ae8773c4,2016-11-11 09:54:24,pylint-django,unittest,fixed more test cases for api/request split,unittest pylint-django,"
fixed more test cases for api/request split",3,Testing&Web Framework,Testing,False,False
5736,mongodb/mongo-python-driver,bf78a9b2efd112eb996eb9334ab753848a2864fc,2021-06-15 21:30:01,uservoice,unittest,"PYTHON-2744 Run LB tests against non-LB clusters (#638)

Fix serviceId fallback to make spec test pass.
Fix socket leak when SocketInfo connection handshake fails.",unittest uservoice,"
Fix serviceId fallback to make spec test pass.",3,Testing,Testing,False,False
5803,OasisLMF/OasisLMF,226c3297933e1625538bbf50954244787b9cd9fd,2019-06-17 13:05:35,pandas,csv,Change complex-items-to-bin converter to use pandas rather than CSV module,csv pandas,"
Change complex-items-to-bin converter to use pandas rather than CSV module",10,Filesystem&Scientific,Filesystem,False,False
5811,pm4py/pm4py-core,ef7fb5e26f870f6a53e36e322955ed430624f805,2018-07-11 11:24:07,pandas,csv,"use pandas data frame for csv import
add first version of xes import",csv pandas,"
use pandas data frame for csv import
add first version of xes import",10,Filesystem&Scientific,Filesystem,False,False
5846,lektor/lektor,ca68cbe5071cc8742de4be5182abfafbe04a163b,2021-03-01 21:05:47,json,flask,"Use python's `json` rather than `flask.json`

Python's `json.load` can read from binary files since python 3.6.

Also, if run with `PYTHONWARNINGS=always::ResourceWarning`,
using `flask.json` results in warnings about unclosed files
when reading binary files.",flask json,"
Use python's `json` rather than `flask.json`",3,Web Framework&Serialization,Web Framework,False,False
5848,PMEAL/OpenPNM,de925e8a100400279db5633b2f590cfc49b9034f,2018-03-06 01:57:03,py.test,pytest,Making final changes to Dict class and tests,pytest py.test,"
Making final changes to Dict class and tests",3,Testing,Testing,False,False
5849,diofant/diofant,7e75d09f6ed6967c2fcc3be9caf88f6393f0431c,2012-02-10 10:48:46,py.test,pytest,"Actually enable pytest definitions in sympy.utilities.pytest

'import pytest' was actually attempting to import
sympy/utilities/pytest.py, which always failed, thus preventing the
pytest-specific definitions from being used when running py.test.",pytest py.test,"
sympy/utilities/pytest.py, which always failed, thus preventing the
pytest-specific definitions from being used when running py.test.",3,Testing,Testing,False,False
5850,internetarchive/openlibrary,90f5f4570030463c7a40da0b0b4dca865847effc,2011-01-12 05:53:19,py.test,pytest,Fixed pytest imports for py.test 1.3.4,pytest py.test,"
Fixed pytest imports for py.test 1.3.4",3,Testing,Testing,False,False
5857,python-beaver/python-beaver,3e98348bb0df7008c1c6445c2059b3d6249e47a3,2012-07-30 22:09:22,ujson,simplejson,use ujson instead of simplejson,simplejson ujson,"
use ujson instead of simplejson",11,Serialization,Serialization,False,False
5860,thombashi/tcconfig,cb1683ca8615b03f38fced9c0e595fcf9610f383,2020-04-26 06:13:34,ujson,simplejson,Replace simplejson to ujson and make it to an optional package,simplejson ujson,"
Replace simplejson to ujson and make it to an optional package",11,Serialization,Serialization,False,False
5861,zulip/zulip,222ef672b555fda7d6bd35c1db84c8744fd6ecb8,2013-06-24 14:17:10,ujson,simplejson,"[manual] Use ujson instead of simplejson.

This saves something like 15ms on our 1000 message get_old_messages
queries, and will save even more when we start sending JSON dumps into
our memcached system.

We need to install python-ujson on servers and dev instances before
pushing this to prod.

(imported from commit 373690b7c056d00d2299a7588a33f025104bfbca)",simplejson ujson,"
[manual] Use ujson instead of simplejson.",11,Serialization,Serialization,False,False
5867,SuLab/WikidataIntegrator,d7cdc503b1fb0e3ce07ef3181114f3cd7e9b70b2,2015-06-27 06:53:45,urllib3,urllib2,removed urllib2 from the code,urllib2 urllib3,"
removed urllib2 from the code",21,HTTP Clients,HTTP Clients,False,False
5868,TracyWebTech/django-revproxy,575bb3b4400e96286ebab46845ff7cd3783740ce,2014-12-12 03:09:09,urllib3,urllib2,Replaced urllib2.urlopen by urllib3,urllib2 urllib3,"
Replaced urllib2.urlopen by urllib3",21,HTTP Clients,HTTP Clients,False,False
5869,canonical/cloud-init,914c6e86f1689ae186a0db836e7f0304d72c38b4,2012-10-18 17:34:38,urllib3,urllib2,"Start fixing how boto and our url fetching can not
use ssl correctly (they can not do validation due to 
the underlying usage of urllib/httplib). Adjust to
use urllib3 which can in cloud-init url fetching. For
now also take the metadata/userdata extraction code
from boto (small amount) and fix it in a new local file  
called 'ec2_utils'.",urllib2 urllib3,"
Adjust to
use urllib3 which can in cloud-init url fetching.
For",21,HTTP Clients,HTTP Clients,False,False
5870,ckan/ckanext-harvest,6b6458f2eadd4eb022f5dd5d76993e9abbd39e7b,2018-10-29 11:50:39,urllib3,urllib2,Use requests lib instead of urllib2,urllib2 urllib3,"Use requests lib instead of urllib2
",21,HTTP Clients,HTTP Clients,False,False
5872,dulwich/dulwich,221f073620265b581d3bf7d4a1eae96ccb469eb9,2018-01-29 13:06:23,urllib3,urllib2,"Replace `urllib2` HTTP requests with `urllib3`

`dulwich.client.default_urllib2_opener` has been replaced by
`dulwich.client.default_urllib3_manager` with otherwise similar input
arguments, returning a `urllib3.PoolManager` or `urllib3.ProxyManager`,
depending on whether a proxy configuration is given.

The `opener` argument to `dulwich.client.HttpGitClient` that took a
`urllib2` opener instance has been replaced by a `pool_manager` argument
that takes a `urllib3` pool manager instance.

Initially tested with `urllib3` version 1.21, but anything later in the
1.x series should work.

Added a `requirements.txt` as a common convention for local setup with a
known working version. Pinned it to the latest available `urllib3`
version at the time.",urllib2 urllib3,"
Replace `urllib2` HTTP requests with `urllib3`",21,HTTP Clients,HTTP Clients,False,False
5873,edmorley/newrelic-python-agent,b9cef7c66ba9b3f9aa749f1ce37dab3de3f27c8e,2020-08-05 16:21:13,urllib3,urllib2,Change agent http client from requests to urllib3.,urllib2 urllib3,"
Change agent http client from requests to urllib3.",21,HTTP Clients,HTTP Clients,False,False
5876,noaa-oar-arl/MONET,631655d4c153398de5a7b91c0dd1441cbf0a500c,2018-06-11 15:56:11,urllib3,urllib2,use urllib3 instead of urllib2 for python 3 compatibility,urllib2 urllib3,"
use urllib3 instead of urllib2 for python 3 compatibility",21,HTTP Clients,HTTP Clients,False,False
5890,SeanNaren/deepspeech.pytorch,6a7008f7cc97efb9c0d175922a1c2c4ffb803fab,2017-10-04 14:16:02,tensorboard-pytorch,tensorflow-estimator,Update to use new tensorboard bindings,tensorflow-estimator tensorboard-pytorch,"
Update to use new tensorboard bindings",5,Deep Learning,Deep Learning,False,False
5893,ivadomed/ivadomed,af78c446726c75cdfc6eb4b913301949605be12f,2020-08-14 13:57:03,tensorboard-pytorch,tensorflow-estimator,"Modify scripts/training_curve.py to avoid tensorflow dependency (#396)

* Added new function that perform the operation with tensorboard (needs to be tested)

* correction after test

* added comment

* removed old part of the function to remove tf dependency

* converted old function to check number of summary in dir

* Added todo and comment (review suggestion)",tensorflow-estimator tensorboard-pytorch,"
* Added new function that perform the operation with tensorboard (needs to be tested)",5,Deep Learning,Deep Learning,False,False
5895,SeanNaren/deepspeech.pytorch,6a7008f7cc97efb9c0d175922a1c2c4ffb803fab,2017-10-04 14:16:02,tensorboardx,tensorflow-estimator,Update to use new tensorboard bindings,tensorflow-estimator tensorboardx,"
Update to use new tensorboard bindings",4,Deep Learning,Deep Learning,False,False
5897,ivadomed/ivadomed,af78c446726c75cdfc6eb4b913301949605be12f,2020-08-14 13:57:03,tensorboardx,tensorflow-estimator,"Modify scripts/training_curve.py to avoid tensorflow dependency (#396)

* Added new function that perform the operation with tensorboard (needs to be tested)

* correction after test

* added comment

* removed old part of the function to remove tf dependency

* converted old function to check number of summary in dir

* Added todo and comment (review suggestion)",tensorflow-estimator tensorboardx,"
* Added new function that perform the operation with tensorboard (needs to be tested)",4,Deep Learning,Deep Learning,False,False
5904,ivadomed/ivadomed,af78c446726c75cdfc6eb4b913301949605be12f,2020-08-14 13:57:03,tensorboard-pytorch,tensorflow-serving-api,"Modify scripts/training_curve.py to avoid tensorflow dependency (#396)

* Added new function that perform the operation with tensorboard (needs to be tested)

* correction after test

* added comment

* removed old part of the function to remove tf dependency

* converted old function to check number of summary in dir

* Added todo and comment (review suggestion)",tensorflow-serving-api tensorboard-pytorch,"
* Added new function that perform the operation with tensorboard (needs to be tested)",4,Deep Learning,Deep Learning,False,False
5910,avwx-rest/AVWX-Engine,acdfbe84fa38d2a543fb2ba3fcc48565ee3f5420,2017-10-18 00:42:40,json,sqlite3,Reduce station info complexity by changing sqlite to JSON,sqlite3 json,"
Reduce station info complexity by changing sqlite to JSON",4,Database&Serialization,Database,False,False
5914,cfpb/cfgov-refresh,60b89237df55a3bf741972ba9ba8c1127fc715cb,2020-08-11 19:11:38,algoliasearch-django,jsonfield,"Replace jsonfield's JSONField with djangos builtin postgres JSONField (#5926)

* Replace jsonfield with djangos JSONField

* Fix sorting

* Fixing Tests

Co-authored-by: Alex Martin <alexander.martin@cfpb.gov>",jsonfield algoliasearch-django,"
Replace jsonfield's JSONField with djangos builtin postgres JSONField (#5926)",3,Web Framework,Web Framework,False,False
5915,openstax/openstax-cms,81841f588f8cfee5261efaf6ba675ca6c629930a,2016-03-16 20:57:48,algoliasearch-django,jsonfield,"use django builtin JSON field, remove jsonfield package from requirements",jsonfield algoliasearch-django,"
use django builtin JSON field, remove jsonfield package from requirements",3,Web Framework,Web Framework,False,False
5917,cfpb/cfgov-refresh,60b89237df55a3bf741972ba9ba8c1127fc715cb,2020-08-11 19:11:38,algoliasearch-django,jsonfield2,"Replace jsonfield's JSONField with djangos builtin postgres JSONField (#5926)

* Replace jsonfield with djangos JSONField

* Fix sorting

* Fixing Tests

Co-authored-by: Alex Martin <alexander.martin@cfpb.gov>",jsonfield2 algoliasearch-django,"
Replace jsonfield's JSONField with djangos builtin postgres JSONField (#5926)",3,Serialization&Web Framework,Serialization,False,False
5918,openstax/openstax-cms,81841f588f8cfee5261efaf6ba675ca6c629930a,2016-03-16 20:57:48,algoliasearch-django,jsonfield2,"use django builtin JSON field, remove jsonfield package from requirements",jsonfield2 algoliasearch-django,"
use django builtin JSON field, remove jsonfield package from requirements",3,Serialization&Web Framework,Serialization,False,False
5919,PrincetonUniversity/PsyNeuLink,6036abd566bded9a4578413fc3d8bb798a73d0f0,2019-05-01 20:21:49,pandas,functools,"Temp/merge/devel to master (#1163)

* llvm, debug: Store base parameters in alloca-ted location.

This avoids relying on memory analysis to propagate constants.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* fix output_CIM dimension bug (#1070)

also add in commented-out, untested and unverified code for resetting the values of components. Will look at this code later, its goal is to address discrepancies in learning between Autodiff and Pytorch.

* llvm, debuginfo: Use <pnl_builtin> to identify out generated builtins

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debuginfo: Use only function name for subprogram

LLVM keeps track of inline locations.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Use full component name for function name

This includes component type for named components.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug_info: Add scope metadata to function instance

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Fix logging none time (#1071)

* replace None time with empty time object

* minor doc change

* add autodiff logging test

* Docs/composition/overview (#1072)

* composition docs

* add examples to 'creating a composition' section

* in progress: composition docs

* in progress: Composition documentation; move run documentation to Composition

* in progress: add missing Composition documentation -- interactive inputs

* clean up Composition.show_graph and re-document in terms of Compositions (currently, just copied directly from System)

* misc Composition cleanup, mainly involving renaming from mechanism --> composition

* clean up show_graph method and docs; remove references to processes (and sg)

* clean up show_graph method and docs; remove references to processes (and sg)

* clean up show_graph method and doc

* modify show_graph to recursively generate graph for nested compositions (does not currently pass optional args, such as show_node_structure, down to nested comps)

* shorten mechanism names to improve graph readability

* more docs and minor fixes related to Composition and its show_graph method

* remove leftover show_graph calls form testing

* llvm, tests: Drop dead code

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: Add support for 64 bit integer ctype conversion

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Add support for integer types in ctype structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/helpers: Fix codestyle

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/hebbian learning (#1075)

* implement first attempt at hebbian learning on composition by (1) adding learning mechanism and the 2 related projections as aux components on the recurrent transfer mech, (2) skipping any checks related to adding a projection whose receiver is another projection, and (3) skipping time increments on execution of learning components (because there is not currently a learning scheduler)

* add pytest for hebbian learning

* modify context fix to only ignore learning scheduler if one does not exist (Composition with hebbian learning)

* Merge master (#1076)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Resolve conflicts (#1068)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* Feat/gym forager/simple model scripts (#1022)

* • GymForagerCFA immplemented

* • TransferFunctions
  - added GaussianDistort function

* -

* -

* -

* -

* -

* -

* -

* -

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* -

* -

* -

* -

* composition: Consolidate duplicate code

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move generation of execute function to LLVMBuilderContext

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Clarify comment about nested running nested compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Add debug option to hardcode parameter base values

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* coverage: Ignore lines checking debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function: Restrict parameter flattening to matrices and 2d arrays

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, mechanism: Rename state->ctx, fix whitespace error

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/cnoderoles/input output (#1024)

* begin to remove _analyze_graph's special cases for Obj and Control mechanisms, and begin to separate out input/output vs origin/terminal responsibilities

* in progress: separate out input/output vs origin/terminal responsibilities

* remove origin/terminal objective mechanism argument on OCM and replace references to ORIGIN in shadow_external_inputs docs with INPUT

* finish separating out input/output vs origin/terminal responsibilities and update pytests to reflect these changes

* • Scripts/Models (Under Development)
  - Predator-Prey Model annotated

* fix bug in SampleIterator which made list[-1] the max value in an iterator created from a list

* update tests to reflect SampleIterator fix. (SampleIterators created from a list no longer store their [-1] value in the 'stop' attr)

* remove old predicted input version (with extra index that caused a numpy error)

* fix save_samples and max/min bugs in optimization functions

* leave comment reminder to revisit predicted_input indexing

* Refactor/comparator/remove mse output state (#1026)

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* dev_requirements: Allow pytest-4 (#1023)

pytest-benchmark issue is fixed in pytest-benchmark-3.2.0

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Composition execute generator is part of public api

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move composition run generator to builder context

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, execution/CompExecution: Add debug option to print intermediate results

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Revert ""dev_requirements: Allow pytest-4 (#1023)""

This reverts commit 1dfeeceabb79024d038b8161f36d26b81a0a2d3e.

* llvm, function/LinearCombination: Add support for weights parameter

Test will be added in the following commit
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split parametrizetion per variable

This lets pytest construct the final parameter test space.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Test weights parameter

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split LinearCombination tests.

Mark llvm and cuda variants
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Hardcode tested function

The tests are named LinearCombination, so they shouldn't be passed other
functions anyway.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Run dummy benchmark in skipped configurations

Fixes unused benchmark fixture warnings
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/models: Add simplified GreedyAgent model as benchmark

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to cleanup compiler structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests: Cleanup compiler structures after each test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* composition: Turn execution_ids into a set instead of a list

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* component: Construct only one list comprehension when initializing params

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to emit line debugging information.

Line and column information is inaccurate, but scope function tracking
works.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* update composition docs to reflect changes to roles, show_graph, analyze_graph (#1032)

* llvm, debug: Report full path in instruction location

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add debuging information to composition generated functions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Make debug location helpers static

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add line debugging information to builtin generation

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* • Composition (#1033)

- show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* Feat/ocm/pred prey input layer (#1035)

* Predator-Prey Model INPUT LAYER, implements:
   - input layers that represent veridical inputs
     and project to obs (perceptual) layers
   - objective_mechanism function that returns difference between
     input and obs layers for player and prey (reduced to single scalar)
   - implements costs for control signals

* -

* • Composition
  - show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* • Composition
   add_projection:  added informative error message for KeyError

* -

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* .travis: Don't cache installed python modules

Make sure we always use the latest ones.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/interactive inputs (#1040)

* introduce 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* still in progress: 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* skip 'initialize_from_context' if execution_id has not changed

* clean up interactive inputs version of greedy agent script

* use 'trial_output' variable to pass model result into ForagerEnv and reset ForagerEnv

* temporary workaround for interactive inputs implements the 'self.most_recent_execution_context != execution_id' skip ONLY when there is an env (ForagerEnv)

* Fix/control mech/net outcome (#1041)

* • ControlMechanism
  - outcome, net_outcome: implemented as Parameters

• OptimizationControlMechanism
  - _execute: use self.net_outcome

* -

* -

* setup.cfg: Skip lines checking private debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* learninfunctions/Kohonen: Correctly report faulty variable in the error message

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Preserve only pip cache, not installed packages

Install the latest version of each dependency.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Explicitly install older numpy

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Restrict llvmlite version<0.27

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/project to internal mechs (#1046)

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* -

* -

* remove extra calls to _analyze_graph on full_comp

* call nested_comp._analyze_graph any time a nested composition is added to an outer composition via outer_comp.add_c_node

* remove calls to agent_comp._analyze graph now that this happens automatically on add_c_node

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - modified _get_nested_c_node_CIM_state to also return nested Composition

* -

* -

* Fix/composition/cleanup and docs (#1047)

* clean up roles, _analyze_graph by removing code and docs related to CNodeRoles that we no longer use

* update pytest affected by removal of CYCLE and RECURRENT_INIT roles

* llvm, builtins: Dump cpu builtin module if module dumps are requested

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Mark component functions alwaysinline and argmemonly

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Mark node execution wrapper as always inline

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Fix typos

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Consistently use double quotation marks. Document debug variable use.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Cache downloaded python package file.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Don't cache deployed python venv.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Autodiff clean up (#1051)

* add CUDA support

* _make_optimizer and _make_loss

* rename: loss_type to loss_spec

* allow custom loss function

* clean up XOR input specification

* add tests for custom loss function

* fix typo

* fix other typo

* remove bad loss_function validation

* update docs for loss_spec

* tweak loss_spec check

* minor tests for optimizer initialization

* add weight_decay argument

* add check for None time

* add do_logging

* update run() arguments, including do_logging

* fix simple do_logging bug

* do_logging documentation

* update docs

* fix recurrent networks bug

* add force_no_retain_graph argument

* simple bug fix

* freeze values within execution set

* tests/models/Botvinick: Properly clear composition results after each run.

Fixes result object leak.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/shadow inputs (#1052)

* • ObjectiveMechanism
  monitored_output_states -> monitor
  (monitored_output_states maintained for backward compatibility)

* 'monitored_output_states' --> 'monitor' in pytests

* • State
  _parse_state_spec:
      added call to state_type_parse_self_state_type_spec()
          if state_spec is for same as state_type but on a different Mechanism
      otherwise, generates original error message

• InputState
      added _parse_self_state_type_spec() method:
          allows InputState to be specified by InputState of another Mechanism
          to shadow the inputs of that other InputState

• ObjectiveMechanism:
      some (but not all mods) made to docstrings to reflect above

• InputState:
      TBD:  docstrings to reflect above

* create a 'remove_projection' method

* update shadowed projections in _analyze_graph

* add tests for shadow_inputs and helper methods

* skip over 'connect_components' method if a projection is sent by the compositions input CIM or received by the composition's output CIM

* add comp.shadows dictionary for storing nodes --> all of the nodes that shadow it, so that when connections to a node are updated, the nodes shadowing it can update as well

* update pytest which should no longer expect an error now that shadowing nodes adapt when the node they shadow changes

* build comp.shadows dictionary and then use it to update projections when (1) a new projection is a added and shadows need to be updated or (2) a projection is removed (i.e. an INPUT node is no longer INPUT) and shadows need to be updated

* update shadow inputs pytests

* move the lines in add_c_node that build up the shadows dictionary into a helper method: _update_shadows_dict

* update the creation of 'shadow projections' at the end of add_projection to specifically connect output_states and input_states, not just mechanisms

* clean up bugs in composition's methods related to shadow inputs -- some projections were not being created

* add more assertions to shadow inputs pytests

* remove all code and docs related to external_input_sources or shadow_external_inputs

* remove duplicate methods and properties from FeatureInputState (should inherit everything except validate_function from InputState)

* fix typos in docs related to switching from external_input_sources syntax to shadow_inputs

* remove InputState specification pytests that check for 'belongs to another mechanism' error now that the InputState of another mechanism is a valid spec

* fix how predicted inputs are looked up and create projections from shadowed inputs to OCM feature InputStates

* fix lvoc pytest feature spec which was not translated correctly from the SHADOW_EXTERNAL_INPUTS syntax

* add pytest for new shadow inputs syntax as 'monitor' spec

* when looking through input_state.afferents in order to shadow inputs, only consider projections which have been added to this composition

* agent_comp.run --> full_comp.run""

* CNode --> Node and c_node --> node

* fix _parse_monitor_specs method which returned None

* CNode --> Node and c_node --> node in Scripts directory

* update docs to reflect new rules for 'shadowing' inputs

* c_node --> node in new autodiff tests

* llvm, component: Do not deepcopy llvm attributes

They are reset after copying anyway.
Use frozenset instead of set.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Store direct reference to llvmlite Function object.

This will be used to avoid unnecessary lookups.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1054)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* llvm/builder_context, component: Use stored llvm function when available

Avoids unnecessary lookups across modules.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context, composition: Code generators should return function reference

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Save generated execution function instead of just its name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: execution is the default llvm function for compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Rename structures that cache generated/compiled functions

The new names reflect that nested composition wrappers are also cached.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Store node wrappers as a custom struct instead of name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Appveyor (#1055)

* fix autodiff test error

* minor format change

* update method name

* Fix autodiff run error (#1056)

* fix autodiff test error

* minor format change

* patch error from running autodiffComposition multiple times

this fix is a hack

* add test for running twice

* llvm: Consolidate generation of new types.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Docs/composition/cleanup (#1057)

* documentation: add documentation for Composition's attributes; cleanup: remove commented out or unused code related to old implementation of shadow_projections/exteranl_input_sources now that the new shadow_inputs implementation works

* remove unused control methods copied from System

* docs: explain feedback projections

* remove unused method: _validate_feed_dict

* misc Composition docs cleanup

* remove leftover/commented out code

* new method: add_nodes, which calls add_node for a list of nodes

* add pytest for new method: 'add_nodes'

* llvm, debug: Rename mod_count -> stat and print number of generated structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: reuse llvm type when converting to ctype

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: Cache converted llvm types

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Build all branches suffixed '-apy', or prefixed 'devel-'

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Remove accidentally committed files.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1061)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* Merge devel into master (#1074)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* Feat/gym forager/simple model scripts (#1022)

* • GymForagerCFA immplemented

* • TransferFunctions
  - added GaussianDistort function

* -

* -

* -

* -

* -

* -

* -

* -

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* -

* -

* -

* -

* composition: Consolidate duplicate code

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move generation of execute function to LLVMBuilderContext

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Clarify comment about nested running nested compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Add debug option to hardcode parameter base values

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* coverage: Ignore lines checking debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function: Restrict parameter flattening to matrices and 2d arrays

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, mechanism: Rename state->ctx, fix whitespace error

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/cnoderoles/input output (#1024)

* begin to remove _analyze_graph's special cases for Obj and Control mechanisms, and begin to separate out input/output vs origin/terminal responsibilities

* in progress: separate out input/output vs origin/terminal responsibilities

* remove origin/terminal objective mechanism argument on OCM and replace references to ORIGIN in shadow_external_inputs docs with INPUT

* finish separating out input/output vs origin/terminal responsibilities and update pytests to reflect these changes

* • Scripts/Models (Under Development)
  - Predator-Prey Model annotated

* fix bug in SampleIterator which made list[-1] the max value in an iterator created from a list

* update tests to reflect SampleIterator fix. (SampleIterators created from a list no longer store their [-1] value in the 'stop' attr)

* remove old predicted input version (with extra index that caused a numpy error)

* fix save_samples and max/min bugs in optimization functions

* leave comment reminder to revisit predicted_input indexing

* Refactor/comparator/remove mse output state (#1026)

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* dev_requirements: Allow pytest-4 (#1023)

pytest-benchmark issue is fixed in pytest-benchmark-3.2.0

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Composition execute generator is part of public api

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move composition run generator to builder context

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, execution/CompExecution: Add debug option to print intermediate results

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Revert ""dev_requirements: Allow pytest-4 (#1023)""

This reverts commit 1dfeeceabb79024d038b8161f36d26b81a0a2d3e.

* llvm, function/LinearCombination: Add support for weights parameter

Test will be added in the following commit
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split parametrizetion per variable

This lets pytest construct the final parameter test space.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Test weights parameter

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split LinearCombination tests.

Mark llvm and cuda variants
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Hardcode tested function

The tests are named LinearCombination, so they shouldn't be passed other
functions anyway.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Run dummy benchmark in skipped configurations

Fixes unused benchmark fixture warnings
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/models: Add simplified GreedyAgent model as benchmark

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to cleanup compiler structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests: Cleanup compiler structures after each test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* composition: Turn execution_ids into a set instead of a list

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* component: Construct only one list comprehension when initializing params

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to emit line debugging information.

Line and column information is inaccurate, but scope function tracking
works.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* update composition docs to reflect changes to roles, show_graph, analyze_graph (#1032)

* llvm, debug: Report full path in instruction location

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add debuging information to composition generated functions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Make debug location helpers static

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add line debugging information to builtin generation

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* • Composition (#1033)

- show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* Feat/ocm/pred prey input layer (#1035)

* Predator-Prey Model INPUT LAYER, implements:
   - input layers that represent veridical inputs
     and project to obs (perceptual) layers
   - objective_mechanism function that returns difference between
     input and obs layers for player and prey (reduced to single scalar)
   - implements costs for control signals

* -

* • Composition
  - show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* • Composition
   add_projection:  added informative error message for KeyError

* -

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* .travis: Don't cache installed python modules

Make sure we always use the latest ones.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/interactive inputs (#1040)

* introduce 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* still in progress: 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* skip 'initialize_from_context' if execution_id has not changed

* clean up interactive inputs version of greedy agent script

* use 'trial_output' variable to pass model result into ForagerEnv and reset ForagerEnv

* temporary workaround for interactive inputs implements the 'self.most_recent_execution_context != execution_id' skip ONLY when there is an env (ForagerEnv)

* Fix/control mech/net outcome (#1041)

* • ControlMechanism
  - outcome, net_outcome: implemented as Parameters

• OptimizationControlMechanism
  - _execute: use self.net_outcome

* -

* -

* setup.cfg: Skip lines checking private debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* learninfunctions/Kohonen: Correctly report faulty variable in the error message

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Preserve only pip cache, not installed packages

Install the latest version of each dependency.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Explicitly install older numpy

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Restrict llvmlite version<0.27

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/project to internal mechs (#1046)

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* -

* -

* remove extra calls to _analyze_graph on full_comp

* call nested_comp._analyze_graph any time a nested composition is added to an outer composition via outer_comp.add_c_node

* remove calls to agent_comp._analyze graph now that this happens automatically on add_c_node

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - modified _get_nested_c_node_CIM_state to also return nested Composition

* -

* -

* Fix/composition/cleanup and docs (#1047)

* clean up roles, _analyze_graph by removing code and docs related to CNodeRoles that we no longer use

* update pytest affected by removal of CYCLE and RECURRENT_INIT roles

* llvm, builtins: Dump cpu builtin module if module dumps are requested

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Mark component functions alwaysinline and argmemonly

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Mark node execution wrapper as always inline

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Fix typos

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Consistently use double quotation marks. Document debug variable use.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Cache downloaded python package file.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Don't cache deployed python venv.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Autodiff clean up (#1051)

* add CUDA support

* _make_optimizer and _make_loss

* rename: loss_type to loss_spec

* allow custom loss function

* clean up XOR input specification

* add tests for custom loss function

* fix typo

* fix other typo

* remove bad loss_function validation

* update docs for loss_spec

* tweak loss_spec check

* minor tests for optimizer initialization

* add weight_decay argument

* add check for None time

* add do_logging

* update run() arguments, including do_logging

* fix simple do_logging bug

* do_logging documentation

* update docs

* fix recurrent networks bug

* add force_no_retain_graph argument

* simple bug fix

* freeze values within execution set

* tests/models/Botvinick: Properly clear composition results after each run.

Fixes result object leak.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/shadow inputs (#1052)

* • ObjectiveMechanism
  monitored_output_states -> monitor
  (monitored_output_states maintained for backward compatibility)

* 'monitored_output_states' --> 'monitor' in pytests

* • State
  _parse_state_spec:
      added call to state_type_parse_self_state_type_spec()
          if state_spec is for same as state_type but on a different Mechanism
      otherwise, generates original error message

• InputState
      added _parse_self_state_type_spec() method:
          allows InputState to be specified by InputState of another Mechanism
          to shadow the inputs of that other InputState

• ObjectiveMechanism:
      some (but not all mods) made to docstrings to reflect above

• InputState:
      TBD:  docstrings to reflect above

* create a 'remove_projection' method

* update shadowed projections in _analyze_graph

* add tests for shadow_inputs and helper methods

* skip over 'connect_components' method if a projection is sent by the compositions input CIM or received by the composition's output CIM

* add comp.shadows dictionary for storing nodes --> all of the nodes that shadow it, so that when connections to a node are updated, the nodes shadowing it can update as well

* update pytest which should no longer expect an error now that shadowing nodes adapt when the node they shadow changes

* build comp.shadows dictionary and then use it to update projections when (1) a new projection is a added and shadows need to be updated or (2) a projection is removed (i.e. an INPUT node is no longer INPUT) and shadows need to be updated

* update shadow inputs pytests

* move the lines in add_c_node that build up the shadows dictionary into a helper method: _update_shadows_dict

* update the creation of 'shadow projections' at the end of add_projection to specifically connect output_states and input_states, not just mechanisms

* clean up bugs in composition's methods related to shadow inputs -- some projections were not being created

* add more assertions to shadow inputs pytests

* remove all code and docs related to external_input_sources or shadow_external_inputs

* remove duplicate methods and properties from FeatureInputState (should inherit everything except validate_function from InputState)

* fix typos in docs related to switching from external_input_sources syntax to shadow_inputs

* remove InputState specification pytests that check for 'belongs to another mechanism' error now that the InputState of another mechanism is a valid spec

* fix how predicted inputs are looked up and create projections from shadowed inputs to OCM feature InputStates

* fix lvoc pytest feature spec which was not translated correctly from the SHADOW_EXTERNAL_INPUTS syntax

* add pytest for new shadow inputs syntax as 'monitor' spec

* when looking through input_state.afferents in order to shadow inputs, only consider projections which have been added to this composition

* agent_comp.run --> full_comp.run""

* CNode --> Node and c_node --> node

* fix _parse_monitor_specs method which returned None

* CNode --> Node and c_node --> node in Scripts directory

* update docs to reflect new rules for 'shadowing' inputs

* c_node --> node in new autodiff tests

* llvm, component: Do not deepcopy llvm attributes

They are reset after copying anyway.
Use frozenset instead of set.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Store direct reference to llvmlite Function object.

This will be used to avoid unnecessary lookups.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1054)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* llvm/builder_context, component: Use stored llvm function when available

Avoids unnecessary lookups across modules.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context, composition: Code generators should return function reference

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Save generated execution function instead of just its name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: execution is the default llvm function for compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Rename structures that cache generated/compiled functions

The new names reflect that nested composition wrappers are also cached.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Store node wrappers as a custom struct instead of name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Appveyor (#1055)

* fix autodiff test error

* minor format change

* update method name

* Fix autodiff run error (#1056)

* fix autodiff test error

* minor format change

* patch error from running autodiffComposition multiple times

this fix is a hack

* add test for running twice

* llvm: Consolidate generation of new types.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Docs/composition/cleanup (#1057)

* documentation: add documentation for Composition's attributes; cleanup: remove commented out or unused code related to old implementation of shadow_projections/exteranl_input_sources now that the new shadow_inputs implementation works

* remove unused control methods copied from System

* docs: explain feedback projections

* remove unused method: _validate_feed_dict

* misc Composition docs cleanup

* remove leftover/commented out code

* new method: add_nodes, which calls add_node for a list of nodes

* add pytest for new method: 'add_nodes'

* llvm, debug: Rename mod_count -> stat and print number of generated structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: reuse llvm type when converting to ctype

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: Cache converted llvm types

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Build all branches suffixed '-apy', or prefixed 'devel-'

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Remove accidentally committed files.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1061)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* Resolve conflicts (#1063)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Contributors guide (#1065)

* Contrib Guide Skeleton

* minor docs update

* more docs

* add Components to Contributors Guide

* remove publishing bullet

* minor changes

* minor

* add contribution checklist

* CONTRIBUTING.md

* contributors guide: Documentation section

* fix bad link

* minor guide improvement

* .gitignore: Ignore pdf files generated by tests

Remove already committed files.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* .gitignore: Ignore temporary files

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* fix output_CIM dimension bug (#1070)

also add in commented-out, untested and unverified code for resetting the values of components. Will look at this code later, its goal is to address discrepancies in learning between Autodiff and Pytorch.

* Fix logging none time (#1071)

* replace None time with empty time object

* minor doc change

* add autodiff logging test

* Docs/composition/overview (#1072)

* composition docs

* add examples to 'creating a composition' section

* in progress: composition docs

* in progress: Composition documentation; move run documentation to Composition

* in progress: add missing Composition documentation -- interactive inputs

* clean up Composition.show_graph and re-document in terms of Compositions (currently, just copied directly from System)

* misc Composition cleanup, mainly involving renaming from mechanism --> composition

* clean up show_graph method and docs; remove references to processes (and sg)

* clean up show_graph method and docs; remove references to processes (and sg)

* clean up show_graph method and doc

* modify show_graph to recursively generate graph for nested compositions (does not currently pass optional args, such as show_node_structure, down to nested comps)

* shorten mechanism names to improve graph readability

* more docs and minor fixes related to Composition and its show_graph method

* remove leftover show_graph calls form testing

* Merge master (#1079)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Resolve conflicts (#1068)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* Feat/gym forager/simple model scripts (#1022)

* • GymForagerCFA immplemented

* • TransferFunctions
  - added GaussianDistort function

* -

* -

* -

* -

* -

* -

* -

* -

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* -

* -

* -

* -

* composition: Consolidate duplicate code

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move generation of execute function to LLVMBuilderContext

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Clarify comment about nested running nested compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Add debug option to hardcode parameter base values

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* coverage: Ignore lines checking debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function: Restrict parameter flattening to matrices and 2d arrays

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, mechanism: Rename state->ctx, fix whitespace error

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/cnoderoles/input output (#1024)

* begin to remove _analyze_graph's special cases for Obj and Control mechanisms, and begin to separate out input/output vs origin/terminal responsibilities

* in progress: separate out input/output vs origin/terminal responsibilities

* remove origin/terminal objective mechanism argument on OCM and replace references to ORIGIN in shadow_external_inputs docs with INPUT

* finish separating out input/output vs origin/terminal responsibilities and update pytests to reflect these changes

* • Scripts/Models (Under Development)
  - Predator-Prey Model annotated

* fix bug in SampleIterator which made list[-1] the max value in an iterator created from a list

* update tests to reflect SampleIterator fix. (SampleIterators created from a list no longer store their [-1] value in the 'stop' attr)

* remove old predicted input version (with extra index that caused a numpy error)

* fix save_samples and max/min bugs in optimization functions

* leave comment reminder to revisit predicted_input indexing

* Refactor/comparator/remove mse output state (#1026)

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* dev_requirements: Allow pytest-4 (#1023)

pytest-benchmark issue is fixed in pytest-benchmark-3.2.0

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Composition execute generator is part of public api

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move composition run generator to builder context

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, execution/CompExecution: Add debug option to print intermediate results

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Revert ""dev_requirements: Allow pytest-4 (#1023)""

This reverts commit 1dfeeceabb79024d038b8161f36d26b81a0a2d3e.

* llvm, function/LinearCombination: Add support for weights parameter

Test will be added in the following commit
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split parametrizetion per variable

This lets pytest construct the final parameter test space.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Test weights parameter

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split LinearCombination tests.

Mark llvm and cuda variants
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Hardcode tested function

The tests are named LinearCombination, so they shouldn't be passed other
functions anyway.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Run dummy benchmark in skipped configurations

Fixes unused benchmark fixture warnings
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/models: Add simplified GreedyAgent model as benchmark

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to cleanup compiler structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests: Cleanup compiler structures after each test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* composition: Turn execution_ids into a set instead of a list

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* component: Construct only one list comprehension when initializing params

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to emit line debugging information.

Line and column information is inaccurate, but scope function tracking
works.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* update composition docs to reflect changes to roles, show_graph, analyze_graph (#1032)

* llvm, debug: Report full path in instruction location

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add debuging information to composition generated functions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Make debug location helpers static

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add line debugging information to builtin generation

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* • Composition (#1033)

- show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* Feat/ocm/pred prey input layer (#1035)

* Predator-Prey Model INPUT LAYER, implements:
   - input layers that represent veridical inputs
     and project to obs (perceptual) layers
   - objective_mechanism function that returns difference between
     input and obs layers for player and prey (reduced to single scalar)
   - implements costs for control signals

* -

* • Composition
  - show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* • Composition
   add_projection:  added informative error message for KeyError

* -

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* .travis: Don't cache installed python modules

Make sure we always use the latest ones.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/interactive inputs (#1040)

* introduce 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* still in progress: 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* skip 'initialize_from_context' if execution_id has not changed

* clean up interactive inputs version of greedy agent script

* use 'trial_output' variable to pass model result into ForagerEnv and reset ForagerEnv

* temporary workaround for interactive inputs implements the 'self.most_recent_execution_context != execution_id' skip ONLY when there is an env (ForagerEnv)

* Fix/control mech/net outcome (#1041)

* • ControlMechanism
  - outcome, net_outcome: implemented as Parameters

• OptimizationControlMechanism
  - _execute: use self.net_outcome

* -

* -

* setup.cfg: Skip lines checking private debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* learninfunctions/Kohonen: Correctly report faulty variable in the error message

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Preserve only pip cache, not installed packages

Install the latest version of each dependency.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Explicitly install older numpy

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Restrict llvmlite version<0.27

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/project to internal mechs (#1046)

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* -

* -

* remove extra calls to _analyze_graph on full_comp

* call nested_comp._analyze_graph any time a nested composition is added to an outer composition via outer_comp.add_c_node

* remove calls to agent_comp._analyze graph now that this happens automatically on add_c_node

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - modified _get_nested_c_node_CIM_state to also return nested Composition

* -

* -

* Fix/composition/cleanup and docs (#1047)

* clean up roles, _analyze_graph by removing code and docs related to CNodeRoles that we no longer use

* update pytest affected by removal of CYCLE and RECURRENT_INIT roles

* llvm, builtins: Dump cpu builtin module if module dumps are requested

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Mark component functions alwaysinline and argmemonly

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Mark node execution wrapper as always inline

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Fix typos

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Consistently use double quotation marks. Document debug variable use.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Cache downloaded python package file.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Don't cache deployed python venv.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Autodiff clean up (#1051)

* add CUDA support

* _make_optimizer and _make_loss

* rename: loss_type to loss_spec

* allow custom loss function

* clean up XOR input specification

* add tests for custom loss function

* fix typo

* fix other typo

* remove bad loss_function validation

* update docs for loss_spec

* tweak loss_spec check

* minor tests for optimizer initialization

* add weight_decay argument

* add check for None time

* add do_logging

* update run() arguments, including do_logging

* fix simple do_logging bug

* do_logging documentation

* update docs

* fix recurrent networks bug

* add force_no_retain_graph argument

* simple bug fix

* freeze values within execution set

* tests/models/Botvinick: Properly clear composition results after each run.

Fixes result object leak.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/shadow inputs (#1052)

* • ObjectiveMechanism
  monitored_output_states -> monitor
  (monitored_output_states maintained for backward compatibility)

* 'monitored_output_states' --> 'monitor' in pytests

* • State
  _parse_state_spec:
      added call to state_type_parse_self_state_type_spec()
          if state_spec is for same as state_type but on a different Mechanism
      otherwise, generates original error message

• InputState
      added _parse_self_state_type_spec() method:
          allows InputState to be specified by InputState of another Mechanism
          to shadow the inputs of that other InputState

• ObjectiveMechanism:
      some (but not all mods) made to docstrings to reflect above

• InputState:
      TBD:  docstrings to reflect above

* create a 'remove_projection' method

* update shadowed projections in _analyze_graph

* add tests for shadow_inputs and helper methods

* skip over 'connect_components' method if a projection is sent by the compositions input CIM or received by the composition's output CIM

* add comp.shadows dictionary for storing nodes --> all of the nodes that shadow it, so that when connections to a node are updated, the nodes shadowing it can update as well

* update pytest which should no longer expect an error now that shadowing nodes adapt when the node they shadow changes

* build comp.shadows dictionary and then use it to update projections when (1) a new projection is a added and shadows need to be updated or (2) a projection is removed (i.e. an INPUT node is no longer INPUT) and shadows need to be updated

* update shadow inputs pytests

* move the lines in add_c_node that build up the shadows dictionary into a helper method: _update_shadows_dict

* update the creation of 'shadow projections' at the end of add_projection to specifically connect output_states and input_states, not just mechanisms

* clean up bugs in composition's methods related to shadow inputs -- some projections were not being created

* add more assertions to shadow inputs pytests

* remove all code and docs related to external_input_sources or shadow_external_inputs

* remove duplicate methods and properties from FeatureInputState (should inherit everything except validate_function from InputState)

* fix typos in docs related to switching from external_input_sources syntax to shadow_inputs

* remove InputState specification pytests that check for 'belongs to another mechanism' error now that the InputState of another mechanism is a valid spec

* fix how predicted inputs are looked up and create projections from shadowed inputs to OCM feature InputStates

* fix lvoc pytest feature spec which was not translated correctly from the SHADOW_EXTERNAL_INPUTS syntax

* add pytest for new shadow inputs syntax as 'monitor' spec

* when looking through input_state.afferents in order to shadow inputs, only consider projections which have been added to this composition

* agent_comp.run --> full_comp.run""

* CNode --> Node and c_node --> node

* fix _parse_monitor_specs method which returned None

* CNode --> Node and c_node --> node in Scripts directory

* update docs to reflect new rules for 'shadowing' inputs

* c_node --> node in new autodiff tests

* llvm, component: Do not deepcopy llvm attributes

They are reset after copying anyway.
Use frozenset instead of set.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Store direct reference to llvmlite Function object.

This will be used to avoid unnecessary lookups.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1054)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* llvm/builder_context, component: Use stored llvm function when available

Avoids unnecessary lookups across modules.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context, composition: Code generators should return function reference

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Save generated execution function instead of just its name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: execution is the default llvm function for compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Rename structures that cache generated/compiled functions

The new names reflect that nested composition wrappers are also cached.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Store node wrappers as a custom struct instead of name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Appveyor (#1055)

* fix autodiff test error

* minor format change

* update method name

* Fix autodiff run error (#1056)

* fix autodiff test error

* minor format change

* patch error from running autodiffComposition multiple times

this fix is a hack

* add test for running twice

* llvm: Consolidate generation of new types.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Docs/composition/cleanup (#1057)

* documentation: add documentation for Composition's attributes; cleanup: remove commented out or unused code related to old implementation of shadow_projections/exteranl_input_sources now that the new shadow_inputs implementation works

* remove unused control methods copied from System

* docs: explain feedback projections

* remove unused method: _validate_feed_dict

* misc Composition docs cleanup

* remove leftover/commented out code

* new method: add_nodes, which calls add_node for a list of nodes

* add pytest for new method: 'add_nodes'

* llvm, debug: Rename mod_count -> stat and print number of generated structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: reuse llvm type when converting to ctype

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: Cache converted llvm types

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Build all branches suffixed '-apy', or prefixed 'devel-'

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Remove accidentally committed files.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1061)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* Merge devel into master (#1074)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* Feat/gym forager/simple model scripts (#1022)

* • GymForagerCFA immplemented

* • TransferFunctions
  - added GaussianDistort function

* -

* -

* -

* -

* -

* -

* -

* -

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* • Scripts
  - GreedyAgentModel: added switches for diffeernt modes of execution

* -

* -

* -

* -

* composition: Consolidate duplicate code

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move generation of execute function to LLVMBuilderContext

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Clarify comment about nested running nested compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Add debug option to hardcode parameter base values

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* coverage: Ignore lines checking debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function: Restrict parameter flattening to matrices and 2d arrays

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, mechanism: Rename state->ctx, fix whitespace error

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/cnoderoles/input output (#1024)

* begin to remove _analyze_graph's special cases for Obj and Control mechanisms, and begin to separate out input/output vs origin/terminal responsibilities

* in progress: separate out input/output vs origin/terminal responsibilities

* remove origin/terminal objective mechanism argument on OCM and replace references to ORIGIN in shadow_external_inputs docs with INPUT

* finish separating out input/output vs origin/terminal responsibilities and update pytests to reflect these changes

* • Scripts/Models (Under Development)
  - Predator-Prey Model annotated

* fix bug in SampleIterator which made list[-1] the max value in an iterator created from a list

* update tests to reflect SampleIterator fix. (SampleIterators created from a list no longer store their [-1] value in the 'stop' attr)

* remove old predicted input version (with extra index that caused a numpy error)

* fix save_samples and max/min bugs in optimization functions

* leave comment reminder to revisit predicted_input indexing

* Refactor/comparator/remove mse output state (#1026)

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* • ComparatorMechanism
  - removed MSE as a default OutputState, in order to support compilation
    (since MSE StandardOutputState uses a lambda function)

• LearningAuxiliary
  - added specification of MSE as OutputState to ComparatorMechanism
    used a learning objective_mechanism, to pass tests

* dev_requirements: Allow pytest-4 (#1023)

pytest-benchmark issue is fixed in pytest-benchmark-3.2.0

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Composition execute generator is part of public api

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Move composition run generator to builder context

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, execution/CompExecution: Add debug option to print intermediate results

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Revert ""dev_requirements: Allow pytest-4 (#1023)""

This reverts commit 1dfeeceabb79024d038b8161f36d26b81a0a2d3e.

* llvm, function/LinearCombination: Add support for weights parameter

Test will be added in the following commit
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split parametrizetion per variable

This lets pytest construct the final parameter test space.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Test weights parameter

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Split LinearCombination tests.

Mark llvm and cuda variants
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Hardcode tested function

The tests are named LinearCombination, so they shouldn't be passed other
functions anyway.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/function/LinearCombination: Run dummy benchmark in skipped configurations

Fixes unused benchmark fixture warnings
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/models: Add simplified GreedyAgent model as benchmark

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to cleanup compiler structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests: Cleanup compiler structures after each test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* composition: Turn execution_ids into a set instead of a list

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* component: Construct only one list comprehension when initializing params

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add ability to emit line debugging information.

Line and column information is inaccurate, but scope function tracking
works.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* update composition docs to reflect changes to roles, show_graph, analyze_graph (#1032)

* llvm, debug: Report full path in instruction location

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add debuging information to composition generated functions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Make debug location helpers static

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Add line debugging information to builtin generation

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* • Composition (#1033)

- show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* Feat/ocm/pred prey input layer (#1035)

* Predator-Prey Model INPUT LAYER, implements:
   - input layers that represent veridical inputs
     and project to obs (perceptual) layers
   - objective_mechanism function that returns difference between
     input and obs layers for player and prey (reduced to single scalar)
   - implements costs for control signals

* -

* • Composition
  - show_graph:  fixed projects to objective_mechanism for controller
  - changed show_control -> show_controller

* • Composition
   add_projection:  added informative error message for KeyError

* -

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* .travis: Don't cache installed python modules

Make sure we always use the latest ones.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/interactive inputs (#1040)

* introduce 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* still in progress: 'function' option for input specification so that inputs can be generated interactively (e.g. forager env) with only one call to 'run'

* skip 'initialize_from_context' if execution_id has not changed

* clean up interactive inputs version of greedy agent script

* use 'trial_output' variable to pass model result into ForagerEnv and reset ForagerEnv

* temporary workaround for interactive inputs implements the 'self.most_recent_execution_context != execution_id' skip ONLY when there is an env (ForagerEnv)

* Fix/control mech/net outcome (#1041)

* • ControlMechanism
  - outcome, net_outcome: implemented as Parameters

• OptimizationControlMechanism
  - _execute: use self.net_outcome

* -

* -

* setup.cfg: Skip lines checking private debug_env

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* learninfunctions/Kohonen: Correctly report faulty variable in the error message

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Preserve only pip cache, not installed packages

Install the latest version of each dependency.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Explicitly install older numpy

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Restrict llvmlite version<0.27

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/project to internal mechs (#1046)

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* • Composition
  add_projection: allow sender and/or receiver to be in nested composition

* -

* -

* -

* -

* remove extra calls to _analyze_graph on full_comp

* call nested_comp._analyze_graph any time a nested composition is added to an outer composition via outer_comp.add_c_node

* remove calls to agent_comp._analyze graph now that this happens automatically on add_c_node

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - added utility method: _get_nested_c_node_CIM_state
    used in add_projection
    needs to be added to add_linear_processing_pathway

* • Composition
  - modified _get_nested_c_node_CIM_state to also return nested Composition

* -

* -

* Fix/composition/cleanup and docs (#1047)

* clean up roles, _analyze_graph by removing code and docs related to CNodeRoles that we no longer use

* update pytest affected by removal of CYCLE and RECURRENT_INIT roles

* llvm, builtins: Dump cpu builtin module if module dumps are requested

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Mark component functions alwaysinline and argmemonly

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Mark node execution wrapper as always inline

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Fix typos

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, debug: Consistently use double quotation marks. Document debug variable use.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Cache downloaded python package file.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis,macos: Don't cache deployed python venv.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Autodiff clean up (#1051)

* add CUDA support

* _make_optimizer and _make_loss

* rename: loss_type to loss_spec

* allow custom loss function

* clean up XOR input specification

* add tests for custom loss function

* fix typo

* fix other typo

* remove bad loss_function validation

* update docs for loss_spec

* tweak loss_spec check

* minor tests for optimizer initialization

* add weight_decay argument

* add check for None time

* add do_logging

* update run() arguments, including do_logging

* fix simple do_logging bug

* do_logging documentation

* update docs

* fix recurrent networks bug

* add force_no_retain_graph argument

* simple bug fix

* freeze values within execution set

* tests/models/Botvinick: Properly clear composition results after each run.

Fixes result object leak.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/shadow inputs (#1052)

* • ObjectiveMechanism
  monitored_output_states -> monitor
  (monitored_output_states maintained for backward compatibility)

* 'monitored_output_states' --> 'monitor' in pytests

* • State
  _parse_state_spec:
      added call to state_type_parse_self_state_type_spec()
          if state_spec is for same as state_type but on a different Mechanism
      otherwise, generates original error message

• InputState
      added _parse_self_state_type_spec() method:
          allows InputState to be specified by InputState of another Mechanism
          to shadow the inputs of that other InputState

• ObjectiveMechanism:
      some (but not all mods) made to docstrings to reflect above

• InputState:
      TBD:  docstrings to reflect above

* create a 'remove_projection' method

* update shadowed projections in _analyze_graph

* add tests for shadow_inputs and helper methods

* skip over 'connect_components' method if a projection is sent by the compositions input CIM or received by the composition's output CIM

* add comp.shadows dictionary for storing nodes --> all of the nodes that shadow it, so that when connections to a node are updated, the nodes shadowing it can update as well

* update pytest which should no longer expect an error now that shadowing nodes adapt when the node they shadow changes

* build comp.shadows dictionary and then use it to update projections when (1) a new projection is a added and shadows need to be updated or (2) a projection is removed (i.e. an INPUT node is no longer INPUT) and shadows need to be updated

* update shadow inputs pytests

* move the lines in add_c_node that build up the shadows dictionary into a helper method: _update_shadows_dict

* update the creation of 'shadow projections' at the end of add_projection to specifically connect output_states and input_states, not just mechanisms

* clean up bugs in composition's methods related to shadow inputs -- some projections were not being created

* add more assertions to shadow inputs pytests

* remove all code and docs related to external_input_sources or shadow_external_inputs

* remove duplicate methods and properties from FeatureInputState (should inherit everything except validate_function from InputState)

* fix typos in docs related to switching from external_input_sources syntax to shadow_inputs

* remove InputState specification pytests that check for 'belongs to another mechanism' error now that the InputState of another mechanism is a valid spec

* fix how predicted inputs are looked up and create projections from shadowed inputs to OCM feature InputStates

* fix lvoc pytest feature spec which was not translated correctly from the SHADOW_EXTERNAL_INPUTS syntax

* add pytest for new shadow inputs syntax as 'monitor' spec

* when looking through input_state.afferents in order to shadow inputs, only consider projections which have been added to this composition

* agent_comp.run --> full_comp.run""

* CNode --> Node and c_node --> node

* fix _parse_monitor_specs method which returned None

* CNode --> Node and c_node --> node in Scripts directory

* update docs to reflect new rules for 'shadowing' inputs

* c_node --> node in new autodiff tests

* llvm, component: Do not deepcopy llvm attributes

They are reset after copying anyway.
Use frozenset instead of set.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Store direct reference to llvmlite Function object.

This will be used to avoid unnecessary lookups.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1054)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* llvm/builder_context, component: Use stored llvm function when available

Avoids unnecessary lookups across modules.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context, composition: Code generators should return function reference

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Save generated execution function instead of just its name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: execution is the default llvm function for compositions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Rename structures that cache generated/compiled functions

The new names reflect that nested composition wrappers are also cached.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Store node wrappers as a custom struct instead of name

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Appveyor (#1055)

* fix autodiff test error

* minor format change

* update method name

* Fix autodiff run error (#1056)

* fix autodiff test error

* minor format change

* patch error from running autodiffComposition multiple times

this fix is a hack

* add test for running twice

* llvm: Consolidate generation of new types.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Docs/composition/cleanup (#1057)

* documentation: add documentation for Composition's attributes; cleanup: remove commented out or unused code related to old implementation of shadow_projections/exteranl_input_sources now that the new shadow_inputs implementation works

* remove unused control methods copied from System

* docs: explain feedback projections

* remove unused method: _validate_feed_dict

* misc Composition docs cleanup

* remove leftover/commented out code

* new method: add_nodes, which calls add_node for a list of nodes

* add pytest for new method: 'add_nodes'

* llvm, debug: Rename mod_count -> stat and print number of generated structures

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: reuse llvm type when converting to ctype

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: Cache converted llvm types

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* appveyor: Build all branches suffixed '-apy', or prefixed 'devel-'

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Remove accidentally committed files.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Devel to master (#1061)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* remove references to 'c_node' introduced by merge

* reset composition.py to devel version to eliminate typos introduced by merge

* Resolve conflicts (#1063)

* Devel (#1021)

* docs: fix Parameter attrs table

* Parameter: add _user_specified field

* StatefulFunction: correct bug in initializing previous_value

	- Introduced in c2e0e477aa9 to suppress a warning, although the warning
	should be suppressed in a different way. Comment explaining why this change
	should not be done was missed

* Component: fix incorrect logic in dot notation setter

* Parameters: use a default for init instead of a None-valued attr

* correct bug in init previous value

* Parameters/dot notation: suppress read-only warnings for internal init

* travis: Update macos python versions to 3.6.8 and 3.7.2

Released on 12/24/2018
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* add 'visual_graph' data structure which contains complete record of dependency sets for show_graph (#1017)

* Fix/functions/misc (#1018)

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* • Functions:
  Removed reference to kwconstants in comment for assign_args_to_param_dicts

• DistributionFunctions:
  - replaced kwDriftDiffusionAnalytic with DRIFT_DIFFUSION_ANALYTIC_FUNCTION
  - added MULTIPLICATIVE_PARAMS and ADDITIVE_PARAMS designations as appropriate

* Fix/composition/roles (#1020)

* • GymForagerCFA implemented

* • TransferFunctions
  - added GaussianDistort function

* consider nodes as ORIGIN if they only receive control projections. clean up scripts to match this rule (gets rid of need for 'required roles' in many cases)

* modify ORIGIN role solution to work with nodes that are compositions (and do not have a path_afferents attr)

* modify mod_only solution to ignore projections from Composition's input CIM

* requirements: Restrict numpy to <1.16 to avoid failure in Kohonen function (#1037)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Contributors guide (#1065)

* Contrib Guide Skeleton

* minor docs update

* more docs

* add Components to Contributors Guide

* remove publishing bullet

* minor changes

* minor

* add contribution checklist

* CONTRIBUTING.md

* contributors guide: Documentation section

* fix bad link

* minor guide improvement

* .gitignore: Ignore pdf files generated by tests

Remove already committed files.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* .gitignore: Ignore temporary files

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* fix output_CIM dimension bug (#1070)

also add in commented-out, untested and unverified code for resetting the values of components. Will look at this code later, its goal is to address discrepancies in learning between Autodiff and Pytorch.

* Fix logging none time (#1071)

* replace None time with empty time object

* minor doc change

* add autodiff logging test

* Docs/composition/overview (#1072)

* composition docs

* add examples to 'creating a composition' section

* in progress: composition docs

* in progress: Composition documentation; move run documentation to Composition

* in progress: add missing Composition documentation -- interactive inputs

* clean up Composition.show_graph and re-document in terms of Compositions (currently, just copied directly from System)

* misc Composition cleanup, mainly involving renaming from mechanism --> composition

* clean up show_graph method and docs; remove references to processes (and sg)

* clean up show_graph method and docs; remove references to processes (and sg)

* clean up show_graph method and doc

* modify show_graph to recursively generate graph for nested compositions (does not currently pass optional args, such as show_node_structure, down to nested comps)

* shorten mechanism names to improve graph readability

* more docs and minor fixes related to Composition and its show_graph method

* remove leftover show_graph calls form testing

* travis: Update setuptools-scm to avoid TLS protocol issue

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Fix/misc (#1082)

* • ComparatorMechanism
  changed monitor_output_states -> monitor

* • OptimizationControlMechanism
  deleted local handling of input_state spec in features
  (managed by _parse_state_spec)

* -

* • FeatureInputState:  docstring mod

* Feat/input state/shadow inputs (#1083)

* • InputState
  _instantiate_input_states:  added support for SHADOW_INPUTS spec

* -

* • InputState, ObjectiveMechanism and OptimizationControlMechanism
  - docstring mods re: SHADOW_INPUTS

* -

* -

* Docs/input state/shadow input (#1084)

* • InputState - docstring mods

* -

* -

* add composition pytest for gating (#1085)

* llvm/builtins: Implement Mersenne twister PRNG

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: Use longlong for 64bit integer data type

long is 32 bit in windows ABI
Fixes: 15795ff
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* transferfunctions/GaussianDistort: Provide private PRNG per function instance

This enables us to control the seed independently.
Add test.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* globals/utilities: Provide an instance of global seed

Stochastic functions will derive their PRNG seeds from this one.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins: Remove few hardcoded types in random generator functions

These can be derived from existing types
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm/random: Use 'random_sample' method in numpy benchmark

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins/random: Fix array index progression.

Add integer PRNG test using multiple values
Test multiple values in float PRNG test.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins/random: Add Normal distribution.

Add test.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins: Split Mersenne Twister setup into multiple functions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins/random: Drop 'seed' field.

It's not necessary to track the seed.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins/random: Store next index after the random array

Avoids additional alignment padding in the structure.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins/random: Use int32 to store random state

We only use 32bits anyway.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/TransferFunction: Add context parameter to transfer function

This will be needed for preserving PRNG state
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/functions/TransferFunctions: Rename GLOBAL -> GLOBAL SEED

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins/random: Export function to generate random state structure

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/TransferFunctions: Implement GuassianDistort function

Enable test
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/TransferFunctions: Fix cuda tests to actually use CUDA execution

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/functions/TransferFunction: Adapt test to stateful execution

Stochastic functions are stateful.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function: Don't include stateful attributes in params structure

These are stored in the context structure.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/TransferFunctions/GaussianDistort: Convert random state into a stateful attribute

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/models/GreedyAgent: Add randomized version

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/models/ddqn (#1086)

* Mods to accomodate Willke's double-dqn

* -

* • InputState
  _parse_shadow_specs:  broke out from _instantiate_input_states as method

• OptimizationControlMechanism
  _instantiate_input_states:  fixed bug in handling shadow_inputs specs

* • InputState
  _parse_shadow_specs:  broke out from _instantiate_input_states as method

• OptimizationControlMechanism
  _instantiate_input_states:  fixed bug in handling shadow_inputs specs

* Added test that shows bug in executing udf with default param values.

* appveyor: Don't build 'devel-' prefixed branches

It's no longer necessary since appveyor will build all pull requests.
Rename suffix to '-avy'
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Commented the test.

* Feat/models/ddqn (#1090)

* Mods to accomodate Willke's double-dqn

* -

* • InputState
  _parse_shadow_specs:  broke out from _instantiate_input_states as method

• OptimizationControlMechanism
  _instantiate_input_states:  fixed bug in handling shadow_inputs specs

* • InputState
  _parse_shadow_specs:  broke out from _instantiate_input_states as method

• OptimizationControlMechanism
  _instantiate_input_states:  fixed bug in handling shadow_inputs specs

* • Predator-Prey Model DQN
  mods to script

* • Predator-Prey Model DQN
  mods to script

* global/utilities: Default global seed to current time

This does not impact tests as pytest explicitly sets global seed to 0
before each test.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/models/ddqn new (#1093)

* -

* -

* -

* • Predator-Prey Model DQN - added printouts and modified costs

* Feat/models/ddqn new (#1094)

* -

* -

* -

* • Predator-Prey Model DQN - added printouts and modified costs

* • Predator-Prey Model DQN
  more mods to script

* Feat/models/ddqn new (#1095)

* -

* -

* -

* • Predator-Prey Model DQN - added printouts and modified costs

* • Predator-Prey Model DQN
  more mods to script

* -

* • Predator-Prey Model DQN:
  - refactored for simpler handling of optimal_action
  - changed objective_function metric to DIFFERENCE

* • Predator-Prey Model DQN:
  - refactored for simpler handling of optimal_action
  - changed objective_function metric to DIFFERENCE

* • Predator-Prey Model DQN:
  - refactored for simpler handling of optimal_action
  - changed objective_function metric to DIFFERENCE

* • SampleSpec, SampleIterator (#1096)

* • SampleSpec, SampleIterator
  - add use of decimal module to handle decimal start and stop values;
    ensures sensible enforcement and treatment of num attribute as int

* -

* Fix/optimizationfunction/samplespec (#1097)

* • SampleSpec, SampleIterator
  - add use of decimal module to handle decimal start and stop values;
    ensures sensible enforcement and treatment of num attribute as int

* -

* • SampleSpec, SampleIterator:
  - added precision argument to SampleSpec and use by SampleIterator

* • SampleSpec, SampleIterator:
  - added precision argument to SampleSpec and use by SampleIterator

* -

* -

* -

* -

* -

* • Composition (#1098)

added model_based_optimizer_mode that specifies whether to run
  model_based_optimizer before or after rest of composition in each trial

* Feat/models/ddqn new (#1099)

* -

* -

* -

* • Predator-Prey Model DQN - added printouts and modified costs

* • Predator-Prey Model DQN
  more mods to script

* -

* • Predator-Prey Model DQN:
  - refactored for simpler handling of optimal_action
  - changed objective_function metric to DIFFERENCE

* • Predator-Prey Model DQN:
  - refactored for simpler handling of optimal_action
  - changed objective_function metric to DIFFERENCE

* • Predator-Prey Model DQN:
  - refactored for simpler handling of optimal_action
  - changed objective_function metric to DIFFERENCE

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* • Predator-Prey Model DQN
  - fixed bug in which frame buffer was getting updated during sims
  - added constants for control signal parameters
  - added switch for optimal vs. agent action
  - added verbosity levels for printout

* • Predator-Prey Model DQN
  - fixed bug in which frame buffer was getting updated during sims
  - added constants for control signal parameters
  - added switch for optimal vs. agent action
  - added verbosity levels for printout

* -

* -

* Feat/composition/show graph sort (#1100)

* • Composition
  - show_graph():  added sort to put INPUT Mechanisms first
                   and controller + objetive_mechanism last

* • Composition
  - show_graph():  added sort to put INPUT Mechanisms first
                   and controller + objetive_mechanism last

* -

* -

* Fix/composition/show graph objective mech (#1101)

* -

* -

* • Composition
  - show_graph(): fixed so that ObjectiveMechanism for model_based_optimizer
                  only shows when show_model_based_optimizer is True

* Feat/composition/show graph cim (#1102)

* -

* • Composition
  - show_graph(): added show_cim to show CompositionInterfaceMechanisms

* • Composition
  - show_graph(): added show_cim to show CompositionInterfaceMechanisms

* • Composition
  - show_graph(): added show_cim to show CompositionInterfaceMechanisms

* Feat/input state/shadowed input names (#1103)

* -

* • InputState
  - added default InputState names for shadowed inputs

* treewide: Convert print + assert false to assert with message

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* coverage: Ignore lines beginning with assert false

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Bug/relu function/np maximum bug (#1104)

* update leaky relu function to only take np.maximum of two values (following wikipedia description of relu)

* update relu function docs

* update llvm version of relu function

* update llvm pytest for relu function

* travis: Don't run or install coveralls if the repo token is not set

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/composition/add projections (#1106)

* new method on Composition: add_projections, which calls add_projection for each projection in a list

* pytests for add_projections

* Feat/cim/composition color (#1107)

* • InputState:  default name changed to 'Input from <Mechanism Name>'
  - STILL NEED TO MODIFY TESTS TO ACCOMODATE CHANGES

* • Composition
  - show_graph(): added composition_color

* • Composition
  - show_graph(): added composition_color

* tests/models/greedy_agent: Add predator prey model pytest

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Refactor/cim/state names (#1108)

* • InputState:  default name changed to 'Input from <Mechanism Name>'
  - STILL NEED TO MODIFY TESTS TO ACCOMODATE CHANGES

* • Composition
  - show_graph(): added composition_color

* • Composition
  - show_graph(): added composition_color

* • Composition
  - show_graph(): compacted CIM nodes

* Misc/distancefunction/normed l0 sim (#1110)

* • ObjectiveFunctions
  - Distance:  added NORMED_L0_SIMILARITY for testing LLVM with Predator-Prey Model DQN

* -

* -

* -

* -

* -

* -

* llvm, functions/DistanceFunction: Apply L0_SIMILARITY to the accumulated result instead of each element

Reuse difference subroutine.
Add tests.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function/Distance: Reorganize metric helper functions to better match semantics

Drop dead code.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests, models/PredatorPrey: Use L0 similarity metric instead of euclidean distance

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Fix/recurrent transfer mechanism/learning rate (#1111)

* update learning rate on hebbian learning function and autoassociative learning mechanism when learning rate on recurrent transfer mechanism changes

* add pytest for learning rate on recurrent transfer mechanism; result currently unstable

* move learning_rate Parameter from AutoAssociativeLearningMechanism to LearningMechanism

* add learning_rate Parameter on HebbianLearning function

* add default value to learning_rate Parameter

* remove function's learning_rate check in hebbian pytest due to current reporting bug

* Refactor/mechanism/show structure html (#1115)

* -

* -

* -

* -

* -

* -

* -

* -

* • Mechanism
  show_structure:  refactored to use html

• Composition
  show_graph: show_structure option uses shape='plaintext' to accomodate html

* -

* • Merged with devel

* • Mechanisms
  show_structure: minor reformatting

* -

* -

* • Mechanism
  - show_structure(): version for 3.5 (uses "".format"" instead of f')

* • Mechanism
  - show_structure(): fixed implementation of use_roles

* • Mechanism
  - show_structure(): fixed implementation of use_roles and show_function

* Refactor/mechanism/show structure html (#1117)

* -

* -

* -

* -

* -

* -

* -

* -

* • Mechanism
  show_structure:  refactored to use html

• Composition
  show_graph: show_structure option uses shape='plaintext' to accomodate html

* -

* • Merged with devel

* • Mechanisms
  show_structure: minor reformatting

* -

* -

* • Mechanism
  - show_structure(): version for 3.5 (uses "".format"" instead of f')

* • Mechanism
  - show_structure(): fixed implementation of use_roles

* • Mechanism
  - show_structure(): fixed implementation of use_roles and show_function

* • Mechanism
  - show_structure(): functions italicized; colored cells

* • Mechanism
  - show_structure(): added show_functions

* • Mechanism
  - show_structure(): added show_function_params, show_mech_function_params, show_state_function_params

* • Mechanism
  - show_structure(): added node_border argument to allow show_graph to determine width

* -

* Scripts/examples/composition (#1118)

* -

* -

* -

* -

* -

* -

* -

* -

* • Mechanism
  show_structure:  refactored to use html

• Composition
  show_graph: show_structure option uses shape='plaintext' to accomodate html

* -

* • Merged with devel

* • Mechanisms
  show_structure: minor reformatting

* -

* -

* • Mechanism
  - show_structure(): version for 3.5 (uses "".format"" instead of f')

* • Mechanism
  - show_structure(): fixed implementation of use_roles

* • Mechanism
  - show_structure(): fixed implementation of use_roles and show_function

* • Mechanism
  - show_structure(): functions italicized; colored cells

* • Mechanism
  - show_structure(): added show_functions

* • Mechanism
  - show_structure(): added show_function_params, show_mech_function_params, show_state_function_params

* • Mechanism
  - show_structure(): added node_border argument to allow show_graph to determine width

* -

* -

* • Scripts/Examples/Composition:  added example scripts (from tests)

* • Scripts/Examples/Composition:  added example scripts (from tests)

* llvm, function: Use parameter_state default value if available

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/DistanceFunction: Allow more than 2 vectors in distance function

Python version also allows and ignores more then 2 vectors.
Move assertions earlier.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/DistanceFunction: Add workaround for 2d arrays single value result

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Allow compilation of node wrappers in the presence of a model_based_optimizer

Enable compiled execution of the predator-prey tests.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/controlmech/reconfig cost (#1119)

* -

* -

* -

* -

* -

* -

* -

* -

* • Mechanism
  show_structure:  refactored to use html

• Composition
  show_graph: show_structure option uses shape='plaintext' to accomodate html

* -

* • Merged with devel

* • Mechanisms
  show_structure: minor reformatting

* -

* -

* • Mechanism
  - show_structure(): version for 3.5 (uses "".format"" instead of f')

* • Mechanism
  - show_structure(): fixed implementation of use_roles

* • Mechanism
  - show_structure(): fixed implementation of use_roles and show_function

* • Mechanism
  - show_structure(): functions italicized; colored cells

* • Mechanism
  - show_structure(): added show_functions

* • Mechanism
  - show_structure(): added show_function_params, show_mech_function_params, show_state_function_params

* • Mechanism
  - show_structure(): added node_border argument to allow show_graph to determine width

* -

* -

* • Scripts/Examples/Composition:  added example scripts (from tests)

* • Scripts/Examples/Composition:  added example scripts (from tests)

* -

* • ControlMechanism: implemented reconfiguration_cost

• OptimizationControlMechanism:
  __init__():  removed all arguments that belong to ControlMechanism
               (now passed via kwargs)

* llvm, composition: Extract compiled results after model_optimizer

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* composition: Iterate over output states directly.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests, models/predator-prey: Check ocm features and disable higher compilation forms

LLVMExec and LLVMRun do not invoke the controller.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* composition: Check for model_base_optimizer enabling before other checks

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Fix/udf/parameter assignments (#1120)

* • UserDefinedFunction
  - fixed bug in error reporting when variable doesn't match default_variable

* • UserDefinedFunction
  - fixed bug in error reporting when variable doesn't match default_variable

• Mechanism
  - _instantiate_attributes_after_function:
      added call to self._parse_param_state_sources()
      so that parameter_states are created for a UDF is created from
      a user-assigned python function

* llvm, mechanisms/OptimizationControlMechanism: Add parameter to select composition execution mode

Default to 'Python'.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Add 2d array workaround for controller outputs and enable compiled simulation test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Don't run coarser compiled modes in the presence of active optimizer

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Fix appending of a single pre-existing condition.

This is the only case triggered by pytests so drop the old code
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/models/PredatorPrey: Enable coarser grained compiled invocation

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/models/GreedyAgent: Enable more PTX mode tests.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* mechanisms/optimizationcontrolmechanism: Simplify value generation using list comprehension

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Fix _get_node_idx to accept the controller mechanism

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Extract controller output flattening hack to a new function

This will be reused to synch compiled state
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Sync controller values to compiled state

Modify PredatorPrey model to run 2 iterations to test this
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/udf/self owner exec (#1122)

* • UserDefinedFunction
  - fixed bug in error reporting when variable doesn't match default_variable

* • UserDefinedFunction
  - fixed bug in error reporting when variable doesn't match default_variable

• Mechanism
  - _instantiate_attributes_after_function:
      added call to self._parse_param_state_sources()
      so that parameter_states are created for a UDF is created from
      a user-assigned python function

* • UserDefinedFunction
  - added ability of UDFs to include self, owner and execution_id

* • UserDefinedFunction
  - revised docstring to mention use of self, owner and execution_id

* travis: Restrict built branches. (#1125)

This should ease pressure on travis and allow PRs to start building
earlier.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Refactor/globals/sampleiterator (#1124)

* -

* • Moved SampleSpec and SampleIterator to globals/sampleiterator

* • Moved SampleSpec and SampleIterator to globals/sampleiterator

* • Moved SampleSpec and SampleIterator to globals/sampleiterator

* -

* -

* llvm, composition: Add option to use ""alloca"" for composition data.

This exposes data flow between mechanisms.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Docs/index/update (#1126)

* • Predator-Prey Model DQN - added printouts and modified costs

* -

* Refactor/input state/adapt dim to fct (#1127)

* • InputState:
  - _instantiate_function
    set _use_2d_variable=True if function is CombinationFunction

* • InputState:
  - added _parse_function_variable which returns 1d variable
   if _set_use_1d_variable is True

* • Composition:
  - run():  modified input error message

* -

* -

* -

* • InputState
  _validate_against_reference_value:  modified to allow variable to be of any length

* • tests/mechanisms/test_input_state_spec
  TestInputStateSpec.test_mismatch_with_default_variable_error:
  modified tests to allow for variable length of InputState's variable
  with respect to Mechanism's default_variable

* -

* -

* -

* -

* • InputState:
  _validate_function:  removed, as now variable format is tested.

• OptimizationControlMechanism:
  _parse_feature_specs:  removed assignment of FeatureInputState

* • InputState:
  _instantiate_function:
   added self.function._default_variable_flexibility = DefaultsFlexibility.FLEXIBLE
   to suppress warning message when projects are added
   (but left RIGID for non-CombinationFunction) so that warning is issued
   if more than one Projection is assigned to an InputState w/o a CombinationFunction

* • Project:  delete FeatureInputState and all references to it

* • InputState: docstring mods regarding function

* -

* -

* -

* -

* -

* appveyor: Drop python3.5

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis: Drop python3.5

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Fix/mechanism/show structure labels (#1130)

* -

* -

* -

* • Composition.show_graph, Mechanism.show_structure:
  - bug fixes (
  - for Mechanism, temporarily assigning ""INTERNAL ROLE""
     until that is assigned directly by Composition

* -

* Fix/composition/objective mech role (#1131)

* modify _analyze_graph() so that Objective Mechanisms of model_based_optimizers are NOT Terminal

* add and modify pytests to refect new ObjectiveMechanism role rule

* add pytest for case in which objective mechanism is the only terminal node, but it cannot be the therminal node (so the terminal node(s) must be the previous set

* tests/models/test_greedy_agent: Drop dead code.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Drop aenum module.

The functionality is available in core enum model since python 3.6.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/models: Add bistable percepts pytest

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, components/function/LinearMatrix: Add output shape workaround

This is hit in the new bi-percept tests.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/models/test_bipercept: Enable LLVM and PTX execution.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* use current objective mechanism value to initialize 'current_value' var before simulation loop. this fix prevents 'extra' initialization sim from being run and reported (#1133)

* Fix/composition/show graph (#1134)

* -

* -

* • Composition
  - show_graph() - fixed various bugs

* • Composition
  - show_graph() - fixed various bugs

* • Composition
  - show_graph() - fixed various bugs

* Parameters: allow deletion of data for an execution context: <param>.delete(eid)

* OCM: correct bug that would pollute some sims' params with other sims' data

* llvm, functions/Distance: Implement COSINE metric

Ignores 'normalize' parameter.
Add test.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/DND: Update error message to retrieve correct 'key' parameter setting

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/DND: Update 'key_size' setting in the presence of an initializer

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/functions: Add DND memory function test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/functions: Add Buffer memory function test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/DND: Add private random state.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/functions/DND: Add randomized storage-retrieval tests.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm,functions/GaussianDistort: Move random state handling to core llvm

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* UDF: ensure that auto generated parameters correctly set the source of their associated ParameterStates

* UDF: correct bug where variable would not be passed unconditionally as positional argument

* llvm, function: 'initializer' is not a compilation param

All compiled structures are intialized.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/functions: Add OneHot function tests.

Skip LLVM and PTX variants for now.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/selection/OneHot: Use private PRNG

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/learning/reinfocement: We use precise results now.

Use enumerate instead of range(len()) combo.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/OneHot: Add compilation support.

Enable tests.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/Distance: Fix location initialization in COSINE metric

Fixes: b1f14756435e0200ef14ce7ffb77f5dde7c9c411 (""llvm,
functions/Distance: Implement COSINE metric"")

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Make special execution_id identifying words keywords

* Log: add argument to set output to exclude simulations

* Fix/ocm/before after (#1137)

* add ocm pytests for BEFORE/AFTER option as well as Susan's Stability-Flexibility model

* use np.atleast_2d on objective mechanism's outcome value in the OCM's input states in order to avoid error on conversion to nparray in _update_input_states

* appveyor: Drop branch whitelist

This is set up in the appveyor project
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Use generated LLVM function to get data structures

Fixes 0f7d765477d6f9b7c35bac7fa4789c54e3b31b67 (""llvm, composition:
Store node wrappers as a custom struct instead of name"")

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Whitespace fixes

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Add wrapper to run multiple executions of a function

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Allow invocation of multiple function executions

Enable test.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution/FuncExecution: set input/output ctypes and the output
buffer in contructor.

These don't have to be recreated on every execution.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm,tests/parallel/function: Cleanup pytest marks. Rename parallel->multirun

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/parallel/mechanism: Allow other than PTX execution mode

Rename parallel->multcrun
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution/composition: Memoize used binary functions

There's no need to do the lookup on every execution.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution/composition: Allow executing multiple execution_ids in compiled path

Adapt test.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution/CUDAExecution: Memoize output variable ctype

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution/composition: Allow running multiple execution_ids in compiled path

Adapt tests.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm/parallel: Adapt multiple-trials-and-inputs test to run non-CUDA modes

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm: Rename test_parallel->test_multiple_executions

Other than CUDA, the executions are not really in parallel.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: erase _all_modules set on cleanup

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Make instance debug_env references private

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* travis, macos: Hardcode python macos version

macos10.6 was dropped with python3.5
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Misc/composition/show graph mods (#1140)

* -

* • Mechanism
  show_structure():  format -> f'

* • Mechanism
  show_structure(): moved OutpuStates header to below OutputStates

• Composition
  show_graph(): made show_headers=True by default

* • Mechanism
  show_structure(): moved Parameterstates header to left side

* • Mechanism
  show_structure(): moved Parameterstates header to left side

• Composition
  - commented out show_structure

*   • Composition
  - docstring:  replaced show_graph show_node_structure_ figure

*   • Mechanism
  - show_structure() - fixed bug with ParameterState for show_header=False

* -

* • ControlMechanism
  - instantiate_objective_mechanism(): repaced monitored_output_states with monitor

* • ControlMechanism
  - instantiate_objective_mechanism(): repaced monitored_output_states with monitor

* • Composition
  - _get_graph_node_label: fixed bug causing crash with show_projection_labels

* • Composition
  - docstring: updated figures

* • Composition
  - replaced show_model_based_optimizer with show_controller

* • Composition
  - replaced model_based_optimizer_color with controller_color

* • Composition
  - show_structure:  actually deleted

* • Composition
  - docstring: more updates to figures

• CompositionInterfaceMechanism
  - added rst file

* • Composition
  - docstring: more updates to figures

• CompositionInterfaceMechanism
  - added rst file

* • Composition
  execute():  fixed bug when self.model_based_optimizer_mode == BEFORE
              by moving test for bin_execute == 'Python' to top of method

* Fix/ocm/reconfiguration costs (#1142)

* rearrange cost computations in comp.evaluate to happen immediately before control signal application (reconfiguration cost) and immediately after (control signal costs and total cost)

* rearrange cost computations in comp.evaluate to happen immediately before control signal application (reconfiguration cost) and immediately after (control signal costs and total cost)

* add reconfiguration function fix with print statements for markus' review

* fix shape bug in distance function (EUCLIDEAN)

* move shape fix from distance function to evaluate method of composition; this way, control signals are parsed before they are passed to the distance function, but the distance function is not affected for other use cases

* clean up evaluate method

* pass runtime_params and context args into _apply_candidate_control_allocation helper method

* remove print statements

* clean up num_estimates implementation so that there is only one call to 'run' in evaluate

* remove 'count' that was used for debugging umemoto script

* Feat/composition/node roles (#1143)

* remove roles that are no longer used: CYCLE, RECURRENT_INIT, OBJECTIVE, and get rid of old terminal_objective / origin_objective options on Control Mech

* remove 'validate_feed_dict' tests

* clean up _analyze_graph method

* more node role changes

* simplify _analyze_graph() method; first check for origin/terminal nodes using consideration_queue is sufficient

* continue simplifying analyze_graph split into three helper methods: determine node roles, create CIM states, then update shadow projections

* add 'FEEDBACK_SENDER', 'FEEDBACK_RECEIVER', and 'CYCLE' roles that are updated during _analyze_graph

* add pytests for 'INTERNAL', 'FEEDBACK_SENDER', 'FEEDBACK_RECEIVER', and 'CYCLE' roles

* add documentation for new roles

* rename model_based_optimizer --> controller

* tests/model/Botvinick: Use marks to tag model parameters.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Parameters: add indexing arg to get_previous

* Component: allow multiple contexts to be deleted at once

* functions/DND: Simplify setting of initializer

Don't consider None.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/DND: Print the detected key size in error message

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Composition: discard simulation data at end of a trial

	- specify retain_old_simulation_data on a Parameter or
	Composition.run to skip deletion

* Composition: ensure execution_id is initted before term cond check

	- previously, using a custom execution id when calling Composition.run
	could result in exceptions if the RUN termination condition involved
	Parameters, because their values were not initialized yet
	- updated some tests to reflect this change

* functions/DND: Use np.ndarray as backend instead of OrderedDict

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function: Don't use _instance_defaults to get parameter state values

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/TransferFunction: Don't use _instance_defaults in value shape workaround

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* function/DND: Reset nested functions defaults during validation

Distance function should take the correct key size.
Selection function should consider full memory.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* DDM: fix is_finished crashing when used with an Analytical function

* functions/DND: Fix ordering in return value between key and value

Use higher precision in expected test results.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/DND: Add implementation of DND function

Disable Buffer test for now
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/functions/memory: Fix test marks

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/memory_functions/DND: Remove dead alloca

This was not used anywhere.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/TransferFunctions: Refactor

Drop the use of functools.
Drop unused arguments.
Make sure alloca-d memory is initialized.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/TransferFunctions: Zero the output array before writing max value/indicator

Fixes occasional result corruption.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/selection/OneHot: Zero the output array

Fixes occasional corruption in function results.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/memoryfunctions/DND: Provide new instances of default Distance and OneHot functions for each new DND instance

Otherwise the instances end up shared.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests: Add EpisodicMemoryMechanism test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, function/memoryfunctions/DND: Reorganize param structure

Place own function parameters first.
Nested params should be appended to avoid interference with mechanism
integration.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/memoryfunctions/DND: Allow probabilities in the form of single element vectors

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/memoryfunctions/DND: Zero the output location

Fixes spurious failures
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions: Don't use parameter state default value as base parameter value

Parameter state default value changes the shape of the parameter though.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/mechanism: Enable compiled version of EpisodicMemoryMechanism tests

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/memoryfunctions: Enable Buffer function test.

Skip compiled variants.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* dev requirements: restrict pytest-xdist version

	- 1.28.0 now requires at least pytest 4
	- pytest-profiling is currently incompatible with pytest 4,
	but is introduced in https://github.com/manahl/pytest-plugins/pull/134

* tests: Remove dummy lambda functions sued to silence warning about unused benchmark

pytest-benchmark no longer complains.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/transfer: Fix Tanh llvm implementation. add pytest.

Reorganize pytests to match order in transferfunctions.py
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/transfer: Fix Gaussian llvm implementation. add pytest.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Fix/composition/num trials bug in evaluate (#1144)

* remove default value of 1 for num_simulation_trials and related args. This was overriding simulation inputs of len > 1.

* improve Model Based OCM with Buffer feature fn pytest to check that the number of trials run within each simulation changes according to the history length of the buffer

* fix None error in CFA where num_estimates used to be 1 by default

* Feat/composition/reinforcement learning (#1146)

* add RL for compositions, implemented as an alternative to add_linear_processing_pathway which instead assembles learning components along with the pathway

* add learning components during new method: add_reinforcement_learning_pathway

* fix connections between learning components in add_reinforcement_learning_pathway and add execution of learning projection to comp.execute

* add projection for MSE from comparator to learning mech, plus other learning cleanup

* reinforcement learning pytest for composition

* remove ddm test from learning file; continue to clean up RL in Composition

* fix bugs in connections from processing pathway to learning components (as added automatically by add_reinforcement_learning_pathway)

* remove automatically generated error signal projection from LearningMechanism and handle it in Compositions add_RL method instead (in part so that it can more easily be added to the comp

* set 'learning' context when learned projection executes

* remove hard-coded execution of learning projection and add 'has_learning_projection' flag to learned_projection

* remove stray print statement

* remove stray print statement

* clean up Composition based RL pytest; add System based RL pyest with fixed inputs for comparison with Composition

* only update MappingProjection parameter state with 'LEARNING' context in the Composition RL case

* add assert statements to pytests that compare RL in Composition and System

* clean up RL implementation on composition and begin to write a similar method for (single layer) backprop

* set comparator mech output states to [OUTCOME, MSE] in backprop method

* functions/selection/OneHot: Use private PRNG

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* document add_RL method

* remove backprop test for now (backprop is NOT fully implemented yet) so that RL can be merged in

* tests/composition/learning: Drop unused matplotlib import

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/Identity: Simplify output struct type workaround

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Don't use _instance_defaults to determine value shape

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/IdentityFunction: Inline default input struct handling.

Avoids call using super() which lead to weird inheritance issues.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Stop using _instance_defaults.

Use component.defaults instead.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* OptimizationControlMechanism: remove extraneous context init for agent_rep

* Parameter Logging: correct handling of str execution ids when clearing log

	- previously, when a string was passed into Parameter.clear_log, the string
	was treated as a standard Iterable instead of a single unit
	- this caused a false PASS in simulation filtering test, now corrected
		- tests/log/test_log.py::TestFiltering::test_node_has_logged_sims

* Composition: delete controller's tracked simulation execution_ids when appropriate

* Composition: don't init context during SIMULATION runs

	- OptimizationControlMechanism is now solely responsible for initting simulation
	execution contexts
	- Previously, OCM could call Composition.run many times, resulting in many
	unnecessary calls to _initialize_from_context
	- This change became necessary with the changes in how simulations were set up and
	run when switching from EVC-based to OCM-based

* Composition: don't init context during execute called from run

	- argument skip_initialization default False added to execute

* Fix/optimizationcontrolmechanism/net outcome (#1148)

* Condition: add __str__

* add methods to produce json info for PNL objects

* • OptimizationControlMechanism:
  _execute(): added assert on net_come to insure != None

* remove unnecessary code from OCM's _execute method

* reinstate net_outcome_getter on net_outcome param and remove the default [0.] setting in OCM

* clarify that reconfiguration cost is not included in any of the cost-related ControlMechanism parameters

* llvm: Try 'Run' and 'Exec' modes when bin_execute is True

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Feat/grid search/choose randomly from identical values (#1149)

* add option to choose randomly (uniform) from several control signals when the control signal search space contains multiple options that return the maximum net outcome

* update choose-randomly-from-identical-values solution on GridSearch to use resevoir sampling so it has not only the same behavior (uniform distribution) as the LLVM version, but makes the same choices. Remove support for 'tolerance' for now -- many re-introduce if there is a way for this to work on the llvm side

* Feat/grid search/choose randomly from identical values (#1150)

* fix probability bug and add pytest

* update various inner Parameters class docs

* llvm, component: Don't return builder from get_param_ptr

builder is a mutable type
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/AdaptiveIntegrator: Drop use of functools.

Call integrator generator directly.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/FHNIntegrator: Drop use of functools.

Call integrator methods directly.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builder_context: Add new get_state_ptr helper

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/SelectionFunction: Use new get_state_ptr helper.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/IntegratorFunction: Use new get_state_ptr helper

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/TransferFunction: Use new get_state_ptr helper.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/composition/test_compotisition_vector: Split parametrized arguments.

Better readability.
pytest.marks and test naming work better.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests: use np.atleast_2d instead of np.matrix

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/learningfunctions: Use np.atleast_2d instead of np.matrix

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* functions/transferfunctions: Use np.atleast_2d instead of np.matrix

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* globals/utilities: Use np.asarray instead of np.matrix

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/mechanisms/RecurrentTransferMechanism: Split matrix spec tests

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* • OptimizationFunction (#1156)

added gradient_function as argument to constructor

* Feat/gradientoptmiization/add gradient function (#1157)

* • OptimizationFunction
  added gradient_function as argument to constructor

* • OptimizationFunction
  added gradient_function as argument to constructor

* Feat/composition/controller condition (#1158)

* • OptimizationFunction
  added gradient_function as argument to constructor

* • OptimizationFunction
  added gradient_function as argument to constructor

* • Composition
  adding controller_condition

* • Composition
  added controller_condition

• Condition
  added AtRun, AfterRun, AfterNRuns

* llvm, tests/functions/Combination: Properly mark llvm test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm/multiple_executions: Don't create binary execution in pure Python execution

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* • Scripts/Debug: (#1160)

added build_input.py needed for Bustamante_Stroop_XOR_LVOC_Model

* • MemoryFunctions (#1161)

- DND:  fixed bug in store function append operation

* Fix/functions/dnd (#1162)

* • MemoryFunctions
  - DND:  fixed bug in store function append operation

* • MemoryFunctions
  - DND: fixed bug in test for matching keys on storage

* • MemoryFunctions
  - DND: added duplicate_keys option and handling

* • MemoryFunctions
  - DND: added memory attribute that returns np.ndarray of contents

* -

* • MemoryFunctions:
  - DND:  added duplicate_keys_select

• Keywords:
  added RANDOM, OLDEST, NEWEST

* tests/functions/test_memory:  Disabled tests for DND

* tests/mechanisms/test_episodic_memory:  Disabled tests for EpisodicMemoryMechanism

* fix test parameter bug introduced during merge",functools pandas,"
* fix save_samples and max/min bugs in optimization functions",3,Scientific,Scientific,False,False
5920,RaRe-Technologies/gensim,8624aa2822f885c56996f9a2f84490c9166c84ca,2020-11-01 13:18:50,pandas,functools,"Release 4.0.0beta (#2993)

* added release/check_wheels.py (#2610)

* added release/check_wheels.py

* added preamble

* Update release/check_wheels.py

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

* respond to review comments

* Add hacktoberfest-related documentation (#2616)

* git add HACKTOBERFEST.md

* clarify contributions

* respond to review comments

* add link to HACKTOBERFEST.md from README.md

* typo

* include comments from Gordon

* Fixed #2554 (#2619)

* Properly install Pattern library for documentation build (#2626)

* Probably fixes #2534

* Uppercase P

* Added comment

* Disable Py2.7 builds under Travis, CircleCI and AppVeyor (#2601)

* Disable Py2.7 builds under Travis and AppVeyor

* use Py3.7.4 image under CircleCI

* tweak circleci config.yml

* patch tox.ini

* more fixes to get docs building under tox

* s/python3.7/python3/

* delay annoy ImportError until actual use

* bring back Pattern

* simplify invokation of pip command

* add install_numpy_scipy.py

* fixup

* use sys.executable

* adjust version in install_wheels.py

* adjust travis.yml

* adjust version in install_wheels.py back

* add logging statements

* use version_info instead of sys.version

* fixup

* Handling for iterables without 0-th element, fixes #2556 (#2629)

* Handling for iterables without 0-th element, fixes #2556

* Improved accessing the first element for the case of big datasets

* Move Py2 deprecation warning to top of changelog (#2627)

It belongs at the top. People should see it immediately without having to scroll down to an older release.

* Change find_interlinks return type to list of tuples (#2636)

* Change interlinks format to list of tuples. Fixes #2635

This commit fixes the issue in RaRe-Technologies/gensim#2635

This commit changes the interlinks storage in the `segment_wiki` script from dictionary to a list of tuples.

We can process the test wikidata used in the test suite of gensim to inspect the new behavior.
```
python gensim/scripts/segment_wiki.py -i \
    -f ~/Downloads/enwiki-latest-pages-articles1.xml-p000000010p000030302-shortened.bz2 \
    -o ~/Downloads/enwiki-latest.json.gz
```

We get the following output:

```
$ cat ~/Downloads/enwiki-latest.json.gz | zcat | head -1 | jq -r '.interlinks[] | [.[0], .[1]] | @tsv' | sort | head
-ism	-ism
1848 Revolution	1848 Revolution
1917 October Revolution	1917 October Revolution
6 February 1934 crisis	February 1934 riots
A. S. Neill	A. S. Neill
AK Press	AK Press
Abu Hanifa	Abu Hanifa
Adolf Brand	Adolf Brand
Adolf Brand	Adolf Brand
Adolf Hitler	Hitler
```

All tests pass for the related test file.

```
python -m unittest gensim.test.test_scripts
/Users/smishra/miniconda3/envs/TwitterNER/lib/python3.7/bz2.py:131: ResourceWarning: unclosed file <_io.BufferedReader name='/Users/smishra/workspace/codes/python/gensim/gensim/test/test_data/enwiki-latest-pages-articles1.xml-p000000010p000030302-shortened.bz2'>
  self._buffer = None
ResourceWarning: Enable tracemalloc to get the object allocation traceback
.....
----------------------------------------------------------------------
Ran 5 tests in 6.298s

OK
```

* Updated docstrings

* Fixed flake8 issue of long line in docsrtring

* Fixed comments and replaces assertTrue with assertEqual

* Fixed unittest comment and checks for wikicorpus

* Improve gensim documentation (numfocus) (#2591)

* Update makefile to point to new subdirectory

* Update layout.html to show new documentation sections

* introduce sphinx gallery

* reorganize gallery

* trim tut3.rst

* git add docs/to_python.py

* git add gallery/010_tutorials/run_doc2vec_lee.py

* minor layout tweak

* add downloader api howto

* add fasttext tutorial and howto

* use pprint in fasttext tutorial

* add summarization tutorial

* git add gallery/020_howtos/run_howto_compare_lda.py

* add fasttext thumbnails

* adding core concepts tutorial

* add summarization plot

* update notebook to use 20newsgroups

* update notebook

* improve notebook

* update howtos

* fix distance metrics tutorial

* improve distance_metrics.ipynb

* git add gallery/010_tutorials/run_distance_metrics.py

* git add gallery/020_howtos/run_news_classification.py

* move downloader API to tutorials section

* add docs/src/auto_examples so bindr can pick up the notebooks

* minor changes

* git add gallery/010_tutorials/run_lda.py

* more minor changes

* More minor changes

* git add gallery/010_tutorials/run_word2vec.py

* updated notebooks

* git add gallery/010_tutorials/run_wmd.py

* add image

* move parts of intro.rst to core concepts tutorial

* move README.txt to wiki

* get rid of fasttext wrapper tutorial

* update top-level heading

* more minor changes

* minor updates

* improve Doc2Vec tutorial, move explanations from IMDB

* git add gallery/020_howtos/run_doc2vec_imdb.py

* git st

* fix notebook paths for bindr

* rename gallery to documentation

* git add binder/requirements.txt

* git add auto_examples/000_core/requirements.txt

* adding requirements.txt for binder

* removing requirements files added in desperation

* update conf.py

* remove temporary files from git branch

* rm images

* merge ""getting started"" into ""core concepts""

* add some clarifying text

* add Jupyter notebook

* Revert ""get rid of fasttext wrapper tutorial""

This reverts commit 3ec0a468263af6b3e3e647bb6547d496a19483a4.

* get rid of fasttext wrapper guide

* git add auto_examples/

* minor fixes

* fix typo

* add listing of corpora and models

* get rid of binder

* git add gallery/020_howtos/run_doc.py

* more instructions for authorship

* improve linkage between core tutorials

* add highlighting

* move downloader to howto

* restore support and about sections

* sync toolbars

* Add installation instructions to top page

* clean up html

* add wordcloud-based thumbnails

* updated notebooks

* update script

* add sphinx-gallery to doc dependencies

* include memory_profiler in docs_testenv

* git add README.rst

* use proper temporary file

* reorganize tutorials section

* clarify version control in README.rst

* git rm 020_howtos/saved_model_wrapper

* move pivoted document normalization to tutorials section

* fix ordering in howto section

* add images

* add annoy to doc dependencies

* update gitignore

* disable tox spinner

* turn off progress bar for pip

* fix labels

* naming fixes

* git rm docs/notebooks/gensim\ Quick\ Start.ipynb

* git rm docs/notebooks/Corpora_and_Vector_Spaces.ipynb

* git rm gensim\ Quick\ Start.ipynb

* git rm docs/notebooks/Topics_and_Transformations.ipynb

* git rm docs/notebooks/Similarity_Queries.ipynb

* git rm docs/notebooks/summarization_tutorial.ipynb

* git rm docs/notebooks/distance_metrics.ipynb

* git rm docs/notebooks/word2vec.ipynb

* git rm docs/notebooks/doc2vec-lee.ipynb

* git rm docs/notebooks/gensim_news_classification.ipynb

* git rm docs/notebooks/lda_training_tips.ipynb

* git rm docs/notebooks/doc2vec-IMDB.ipynb

* git rm docs/notebooks/annoytutorial.ipynb

* git rm tutorial.rst tut1.rst tut2.rst tut3.rst

* minor update to layout.html

* git rm changes_080.rst

* minor tweaks to gallery and surrounding docs

* remove cruft from run_doc2vec_imdb.py

* update doc howto

* fixup

* git add requirements_docs.txt

* more dependencies in requirements_docs.txt

* re-enable LDA howto

* add missing images

* add built LDA howto

* port tutorials.md to gallery

* WIP: cleaning up docs

* language clean up + pin exact versions in doc requirements

* git add redirects.csv test_redirects.py

* remove gensim_numfocus namespace qualifier

* doc cleanup in Other resources

* fix redirects

* regenerated tutorials

* Added tools/check_gallery.py

* committing unsuccessful attempt to fix a tutorial before deleting it

* remove tutorials that don't work

* index page fixes

* add install anchor

* Update redirects.csv

* link fixes from local testing

* replace easy_install with pip

* renamed run_040_compare_lda.py to run_compare_lda.py

* minor fixes

* more fixes from website testing

* updating wordcloud images

* add pandas to requirements_docs.txt

* !!

* more dependency + code fixes

* update upload path to ""live"" website

* update test_redirects.py

* git rm redirects.csv test_redirects.py

* fix setup.py to get documentation to build under CircleCI (#2650)

* Fix links to documentation in README.md (#2646)

* Fix links to documentation in README.md

* Update README.md

* Delete requirements.txt (#2648)

* Remove native Python implementations of Cython extensions (#2630)

* Remove native Python implementations of Cython extensions

Fix #2511

* remove print statement in tox.ini

* remove print statement in tox.ini

* fix flake8 issues

* fix missing imports

* adjust exception message

* bring back FAST_VERSION variable

* fixup: missing parens

* disable progress bar for tox

* respond to review comments

* remove C/C++ sources generated from Cython files

* update setup.py

* remove duplicate line in setup.py

* fix numpy bootstrapping

* update tox.ini

* handle cython dependency in setup.py

* fixup in setup.py: lowercase c

* more cython sourcery

* fix tox.ini

* Fix merge artifact in setup.py

* fix merge artifact

* disable pip progress bar under CircleCI

* replacing deleted notebooks with placeholders (#2654)

* Document accessing model's vocabulary (#2661)

* document accessing model's vocabulary

* update images

* Improve explanation of top_chain_var parameter in Dynamic Topic Model (DTM) documentation

* improve & corrected gensim documentation (#2637)

* more descriptive explanation of top_chain_var

* Comment out Hacktober Fest from README (#2677)

- uncomment next year

* Update word2vec2tensor.py (#2678)

* Speed up word2vec model loading (#2671)

* Speed up word2vec binary model loading (#2642)

* Add correctness tests for optimized word2vec model loading (#2642)

* Include remarks of Radim to code speeding up vectors loading (#2671)

* Include remarks of Michael to code speeding up vectors loading (#2671)

* Refactor _load_word2vec_format into a few functions for better readability

* Clean-up _add_word_to_result function

* Fix local import degrading the performance of word2vec model loading (#2671) (#2682)

* [Issue-2670] Bug fix: Initialize doc_no2 because it is not set when corpus' is empty (#2672)

* [Issue-2670] Bug fix: Initialize doc_no2 because it is not set when 'corpus' is empty

* [Issue-2670] Add: unittests should fail on invalid input (generator and empty corpus)

* [Issue-2670] Add: Fix unittest for generator

* [Issue-2670] Fix unittest tox:flake8 errors

* [Issue-2670] Fix: empty corpus def in unittest

* [Issue-2670] Fix: empty corpus and generator unittests

* [Issue-2670] Fix: empty corpus and generator unittests

* Warn when BM25.average_idf < 0 (#2687)

Closes #2684

* Rerun Soft Cosine Measure tutorial notebook (#2691)

* Fix simple typo: voacab -> vocab (#2719)

Closes #2718

* Fix appveyor builds (#2706)

* move install_wheels script

* git add continuous_integration/check_wheels.py

* bump versions for numpy and scipy

* update old requirements.txt

* add file header

* get rid of install_wheels.py hack

* fixup: update travis.yml

* Update continuous_integration/check_wheels.py

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

* Update continuous_integration/check_wheels.py

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>

* Change similarity strategy when finding n best (#2720)

* Find largest by absolute value

* Add helper function to simplify code & add unit test for it

* Initialize self.cfs in Dictionary.compatify method (#2618)

* Fix for #2574

* Fix for #2574

* Fix ValueError when instantiating SparseTermSimilarityMatrix (#2689)

* force python int before calling islice. islice don't accept numpy int

* add test to check islice error

* it makes test to fail

* make sure that islice receives a python int

* fix typo

* Refactor bm25 to include model parametrization (cont.) (#2722)

* Refactor bm25 to include model parametrization

* Refactor constants back and fix typo

* Refactor parameters order and description

* Add BM25 tests
This closes #2597 and closes #2606

* Simplify asserts in BM25 tests

* Refactor BM25.get_score

Co-authored-by: Marcelo d'Almeida <md@id.uff.br>

* Fix overflow error for `*Vec` corpusfile-based training (#2700)

* long long types for expected_examples & total_documents

* regenerate .cpp files

* Implement saving to Facebook format (#2712)

* Add writing header for binary FB format (#2611)

* Adding writing vocabulary, vectors, output layer for FB format (#2611)

* Clean up writing to binary FB format (#2611)

* Adding tests for saving FastText models to binary FB format (#2611)

* Extending tests for saving FastText models to binary FB format (#2611)

* Clean up (flake8) writing to binary FB format (#2611)

* Word count bug fix + including additional test (#2611)

* Removing f-strings for Python 3.5 compatibility + clean-up(#2611)

* Clean up the comments (#2611)

* Removing forgotten f-string for Python 3.5 compatibility (#2611)

* Correct tests failing @ CI (#2611)

* Another attempt to correct tests failing @ CI (#2611)

* Yet another attempt to correct tests failing @ CI (#2611)

* New attempt to correct tests failing @ CI (#2611)

* Fix accidentally broken test (#2611)

* Include Radim remarks to saving models in binary FB format (#2611)

* Correcting loss bug (#2611)

* Completed correcting loss bug (#2611)

* Correcting breaking doc building bug (#2611)

* Include first batch of Michael remarks

* Refactoring SaveFacebookFormatRoundtripModelToModelTest according to Michael remarks (#2611)

* Refactoring remaining tests according to Michael remarks (#2611)

* Cleaning up the test refactoring (#2611)

* Refactoring handling tuple result from struct.unpack (#2611)

* Removing unused import (#2611)

* Refactoring variable name according to Michael review (#2611)

* Removing redundant saving in test for Facebook binary saving (#2611)

* Minimizing context manager blocks span (#2611)

* Remove obsolete comment (#2611)

* Shortening method name (#2611)

* Moving model parameters to _check_roundtrip function (#2611)

* Finished moving model parameters to _check_roundtrip function (#2611)

* Clean-up FT_HOME behaviour (#2611)

* Simplifying vectors equality check (#2611)

* Unifying testing method names (#2611)

* Refactoring _create_and_save_fb_model method name (#2611)

* Refactoring test names (#2611)

* Refactoring flake8 errors (#2611)

* Correcting fasttext invocation handling (#2611)

* Removing _parse_wordvectors function (#2611)

* Correcting whitespace and simplifying test assertion (#2611)

* Removing redundant anonymous variable (#2611)

* Moving assertion outside of a context manager (#2611)

* Function rename (#2611)

* Cleaning doc strings and comments in FB binary format saving functionality (#2611)

* Cleaning doc strings in end-user API for FB binary format saving (#2611)

* Correcting FT_CMD execution in SaveFacebookByteIdentityTest (#2611)

* Use time.time instead of time.clock in gensim/models/hdpmodel.py (#2730)

* Use time.process_time() instead of time.clock()

* time.process_time() -> time.time()

* better replacement of deprecated .clock()

* drop py35, add py38 (travis), update explicit dependency versions

* better CI logs w/ gdb after core dump

* improved comments via piskvorky review

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

* rm autogenerated *.cpp files that shouldn't be in source control

* Fix TypeError when using the -m flag (#2734)

Currently, if you attempt to use the script with the --min-article-character you get an error because it gets parsed a string and the functions expect an int. This fix addresses the issue.

```
Traceback (most recent call last):
  File ""/usr/lib/python3.6/runpy.py"", line 193, in _run_module_as_main
    ""__main__"", mod_spec)
  File ""/usr/lib/python3.6/runpy.py"", line 85, in _run_code
    exec(code, run_globals)
  File ""/usr/local/lib/python3.6/dist-packages/gensim/scripts/segment_wiki.py"", line 385, in <module>
    include_interlinks=args.include_interlinks
  File ""/usr/local/lib/python3.6/dist-packages/gensim/scripts/segment_wiki.py"", line 141, in segment_and_write_all_articles
    for idx, article in enumerate(article_stream):
  File ""/usr/local/lib/python3.6/dist-packages/gensim/scripts/segment_wiki.py"", line 100, in segment_all_articles
    for article in wiki_sections_text:
  File ""/usr/local/lib/python3.6/dist-packages/gensim/scripts/segment_wiki.py"", line 332, in get_texts_with_sections
    if sum(len(body.strip()) for (_, body) in sections) < self.min_article_character:
TypeError: '<' not supported between instances of 'int' and 'str'```

* del cython.sh

* Improve documentation in run_similarity_queries example (#2770)

* Fix fastText word_vec() for OOV words with use_norm=True (#2764)

* add a test for oov similarity

* fix a test for oov similarity

* fix it once more

* prepare the real fix

* remove a redundant variable

* less accurate comparison

Co-authored-by: David Dale <ddale@yandex-team.ru>

* remove mention of py27 (#2751)

on 25 oct 2019, setup.py was updated to require python 3.5. this change removes the suggestion of testing against py27.

* Fix KeyedVectors.add matrix type (#2761)

* add type test

* cast internal state to passed type

* ekv -> kv

* parametrize datatype & cast embeddings passed to `add` to KV datatype

* set f32 as default type

Co-authored-by: Ivan Menshikh <imenshikh@embedika.ru>
Co-authored-by: Michael Penkov <m@penkov.dev>

* use collections.abc for Mapping (#2750)

* use collections.abc.Mapping when available

* ignore py2, tox -e py27-linux revealed setup.py requires python 3.5

* use collections.abc.Iterable

* Fix out of range issue in gensim.summarization.keywords (#2738)

* Fixed out of range error in keywords.py

* Now using min() function to improve readability

* Added a test to make sure that keywords does not
fail when words param is greater than number
of words in string

* Fixing travisCI build error from not having 2  lines after class definition

* Fixed whitespace issue for flake8

Co-authored-by: Carter Olsen <olsencar@oregonstate.edu>

* fixed get_keras_embedding, now accepts word mapping (#2676)

* fixed get_keras_embedding, now accepts word mapping

* skip tests if keras not installed

* removed unnessecary comment from test_keyed_vectors

* fixed indentation

* fixed flake import error

* moved skip test decorator to class

* Update gensim/models/keyedvectors.py

Co-Authored-By: Michael Penkov <m@penkov.dev>

* Update gensim/models/keyedvectors.py

Co-Authored-By: Michael Penkov <m@penkov.dev>

* Update gensim/models/keyedvectors.py

Co-Authored-By: Michael Penkov <m@penkov.dev>

* renamed keras_installed flag to upper case, removed unneeded comment

Co-authored-by: Zhicharevich <Alex_Zhicharevich@intuit.com>
Co-authored-by: Michael Penkov <m@penkov.dev>

* Add downloads badge to README

- idea from https://github.com/RaRe-Technologies/smart_open/issues/440

* Get rid of ""wheels"" badge

* link downloads badge to pepy instead of pypi

* fix broken english in tests (#2773)

* fix build, use KeyedVectors class (#2774)

* cElementTree has been deprecated since Python 3.3 and removed in Python 3.9.

* Fix FastText RAM usage in tests (+ fixes for wheel building) (#2791)

* pin `bucket` parameter (to avoid RAM issues on CI system) + get rid win32 skip

* fix flake8

* partially fix doc building

* better workaround for docs build

* fix sphinx-gallery

* avoid test error

* get back loading of old model (because large buckets)

* Update setup.py

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

* Update gensim/test/test_fasttext.py

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

* define missing buckets & fix formatting

Co-authored-by: Ivan Menshikh <imenshikh@embedika.ru>
Co-authored-by: Radim Řehůřek <me@radimrehurek.com>

* Fix typo in comments\nThe rows of the corpus are actually documents, fix the comment to reduce confusion

* Add osx+py38 case for avoid multiprocessing issue (#2800)

* add osx+py38 case for avoid multiprocessing issue

* add comment, fix warning

* extend comment

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

* Update gensim/utils.py

* Update gensim/utils.py

Co-Authored-By: Michael Penkov <m@penkov.dev>

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>
Co-authored-by: Michael Penkov <m@penkov.dev>

* Use nicer twitter badge

* Use downloads badge from shields.io

* Use blue in badges

* Remove conda-forge badge

* Make twitter badge blue, too

* Cache badges

- use google's caching proxy for img.shields.io badges
- fixes #2805

* Use HTML comments instead of Markdown comment

- simpler & easier to read and maintain

* [MRG] Update README instructions + clean up testing (#2814)

* update README instructions

* WIP: enable test deps

* unpin old tensorflow in tests
- old versions not present in newer Pythons

* looking into segfault in py3.6
- https://travis-ci.org/github/RaRe-Technologies/gensim/jobs/681096362

* put back pyemd

* put keras back

* put back tensorflow

* investigate segfault in py3.6

* address review comments

* avoid py3.6 segfault in Travis tests

* Add basic yml file for setup pipeline (will fail)

* revert back travis

* Replace AppVeyor by Azure Pipelines (#2824)

* dummy change of pipeline file

* good bye appveyor

* no specific trigger

* attempt to trigger by PR

* ???

* [REVERT ME] Specify only tests that fails

* get platform & stay only single test

* try to debug

* fail fast

* no re-runs

* meh

* hack?

* Revert ""good bye appveyor"" (FOR COMPARISON WITH AZURE)

This reverts commit cd57175f154d6ca1197969dd5277fd10ec25f877.

* try to understand, where \r comes from

* continue debug

* raise

* upd

* okay, try to avoid CRLF

* revert back

* bye again, appveyor

* delete appveyor stuff too

* move visdom to linux-only env (to avoid frequent failures on win)

* fix docs building

* Update CHANGELOG.md (#2829)

* Update CHANGELOG.md (#2831)

* Fix-2253: Remove docker folder since it fails to build   (#2833)

* Removed Docker from gensim since docker image fails to build and there's nobody to maintain docker

* Remove irrelevant comment about docker

* LdaModel documentation update -remove claim that it accepts CSC matrix as input (#2832)

* Update LDA model documentation to remove the claim that LDA accepts CSC matrices as an input

* Update CHANGELOG.md

Co-authored-by: Michael Penkov <m@penkov.dev>

* delete .gitattributes (#2836)

* delete .gitattributes

* disable certain tests on Azure pipelines

* tweak env var behavior

* disable one more test

* make the newest version of flake8 happy

* patch tox.ini to pin flake8 and flake8-rst versions

Co-authored-by: Michael Penkov <m@penkov.dev>

* Fix for Python 3.9/3.10: remove xml.etree.cElementTree (#2846)

* Update classifiers in setup.py

* Python 3.3+ uses a fast implementation whenever available

* Don't import ElementTree as ET

* Correct grammar in docs (#2573)

* Correct grammar in docs

* Update gensim/scripts/glove2word2vec.py

Co-Authored-By: Radim Řehůřek <me@radimrehurek.com>

* Update gensim/scripts/glove2word2vec.py

Co-Authored-By: Michael Penkov <m@penkov.dev>

* Update glove2word2vec.py

* Update glove2word2vec.py

* Update gensim/scripts/glove2word2vec.py

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>
Co-authored-by: Michael Penkov <m@penkov.dev>

* Don't proxy-cache badges with Google Images (#2854)

* pin keras=2.3.1 because 2.4.3 causes KerasWord2VecWrappper test failure in Py 3.8 (#2868)

work around for #2865

* Expose max_final_vocab parameter in FastText constructor (#2867)

* Expose max_final_vocab parameter in FastText constructor

* Fix lint error

* respond to reviewer comments

* add unit test

Co-authored-by: Cristi Burca <mail@scribu.net>

* Replace numpy.random.RandomState with SFC64 - for speed (#2864)

Co-authored-by: Marcin Cylke <marcin.cylke@allegro.pl>

* Update CHANGELOG.md

* Clarify that license is LGPL-2.1 (#2871)

Use only the license attribute with an SPDX license id for V2.1 of the
LGPL.

The setup.py classifier was inconsistent with the license attribute as 
one pointed to LGPL-2.0-or-later and one to LGPL-2.1-only which seems 
to be otherwise the correct license based on header comments and
documentation. Classifiers do not support the LGPL v2.1 and are 
eventually being subsumed by the license field [1]

[1] https://discuss.python.org/t/improving-license-clarity-with-better-package-metadata/2154

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>

* Fix travis issues for latest keras versions. (#2869)

* Fix travis issues for latest keras versions.

* Unpin keras version.

* verify ""inputs"" and ""outputs"" named params on keras 2.3.1

* Unpin keras version

* Put cell outputs back to the soft cosine measure benchmark notebook (#2808)

Revert bcee414663bdcbdf6a58684531ee69c6949550bf

* KeyedVectors  & *2Vec API streamlining, consistency (#2698)

* slim low-value warnings

* clarify vectors/vectors_vocab relationship; fix lockf & nonsense ngram-norming confusion

* mv FT, KV tests to right place

* rm deprecations, obsolete refs/tests, delete_temporary_training_data, update usages

* update usages, tests, flake8 cleanup

* expand KeyedVectors to obviate Doc2VecKeyedVectors; upconvert old offset-style doctags

* fix docstring warnings; update usages

* rm unused old plain-python codepaths

* unify class comments under __init__ for consistncy w/ api doc presentation

* name/comment harmonization (rm 'entity', lessen 'word'-centricity)

* table formatting

* return pyemd to linux test env

* split backcompat tests for better resolution

* convert Vocab & related data items to use dataclasses

* rm obsolete Vocab/Trainable/abstract/Wrapper classes, persistent callbacks (bug #2136), outdated tests/warnings; update usages

* tune tests for stability, runtimes; rm auto reruns that hide flakiness

* fix numpy FutureWarning: arrays to stack must be sequence

* (commented-out) deoptimization option

* stronger FB model testing; no _unpack_copy test

* merge redundant methods; rm duplicated imports/defs

* rationalize _lockf, buckets_word behaviors

* rename .docvecs to .dv

* update usages; rm obsolete tests; restore gensim.utils import

* intensify FT tests (more epochs, more buckets)

* flake8-3.8.0 style fixes - but also pin flake8-3.7.9 vs 3.8.0 'output_file' error

* replace vectors_norm with 1d norms

* tighten testParallel

* rm .vocab & 'Vocab' classes; add expandable 'vecattrs'

* update usages (no vocabs)

* enable running inside '-m mtprof' (or cProfile) via explicit unittest.main(module=..)

* faster sample_int reads

* load_word2vec_format(.., no_header=True) to support GLoVe text vectors

* refactor & comment lockf feature; allow single-element lockf

* improve FT comment

* rm deprecated/unneded init_sims calls

* fixes to code style

* flake8: fix overlong lines

* rm stray merge error

* rm duplicated , old nonstandard hash workarounds

* use numpy-recommended PRNG constructor

* add sg to FastTextConfig & consult it; rm remaining broken-hash cruft

* reorg conditional packages for clarity

* comments, names, refactoring, randomization

* Apply suggestions from code review

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>

* fix cruft left from suggestion

* fix numpy-32bit-on-Windows; executable docs

* mv lee_corpus to utils; cleanup

* update poincare for latest KV __init__ signature

* restore word_vec method for proper overriding, but rm usages

* Apply suggestions from code review

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>

* adjust testParallel against failure risk

* intensify training for an occasionally failing test

* clarify word/char ngrams handling; rm outdated comments

* mostly avoid duplciating FastTextConfig fields into locals

* avoid copies/pointers for no-bucket (FT as W2V) case

* rm obsolete test (already skipped & somewhat originally misguided)

* simpler/faster .get(..., default) (avoids exception-catching in has_index_for)

* add default option to get_index; avoid exception in has_index_for

* chained range check

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>

* Update CHANGELOG.md

Co-authored-by: Radim Řehůřek <radimrehurek@seznam.cz>
Co-authored-by: Radim Řehůřek <me@radimrehurek.com>
Co-authored-by: Michael Penkov <m@penkov.dev>

* Delete .gitattributes

* test showing FT failure as W2V

* set .vectors even when ngrams off

* use _save_specials/_load_specials per type

* Make docs clearer on `alpha` parameter in LDA model

* Update Hoffman paper link

* rm whitespace

* Update gensim/models/ldamodel.py

* Update gensim/models/ldamodel.py

* Update gensim/models/ldamodel.py

* re-applying changes from #2821

* migrating + regenerating changed docs

* fix forgotten iteritems

* remove extra `model.wv`

* split overlong doc line

* get rid of six in doc2vec

* increase test timeout for Visdom server

* add 32/64 bits report

* add deprecations for init_sims()

* remove vectors_norm + add link to migration guide to deprecation warnings

* rename vectors_norm everywhere, update tests, regen docs

* put back no-op property setter of deprecated vectors_norm

* fix typo

* fix flake8

* disable Keras tests
- failing with weird errors on py3.7+3.8, see https://travis-ci.org/github/RaRe-Technologies/gensim/jobs/713448950#L862

* test showing FT failure as W2V

* set .vectors even when ngrams off

* Update gensim/test/test_fasttext.py

* Update gensim/test/test_fasttext.py

* refresh docs for run_annoy tutorial

* Reduce memory use of the term similarity matrix constructor, deprecate the positive_definite parameter, and extend normalization capabilities of the inner_product method (#2783)

* Deprecate SparseTermSimilarityMatrix's positive_definite parameter

* Reference paper on efficient implementation of soft cosine similarity

* Add example with Annoy indexer to SparseTermSimilarityMatrix

* Add example of obtaining word embeddings from SparseTermSimilarityMatrix

* Reduce space complexity of SparseTermSimilarityMatrix construction
Build matrix using arrays and bitfields rather than DOK sparse format

This work is based on the following blog post by @maciejkula:
https://maciejkula.github.io/2015/02/22/incremental-construction-of-sparse-matrices/

* Fix a typo in the soft cosine similarity Jupyter notebook

* Add human-readable string representation for TermSimilarityIndex

* Avoid sparse term similarity matrix computation when nonzero_limit <= 0

* Extend normalization in the inner_product method

Support the `maintain` vector normalization scheme.
Support separate vector normalization schemes for queries and documents.

* Remove a note in the docstring of SparseTermSimilarityMatrix

* Rerun continuous integration tests

* Use ==/!= to compare constant literals

* Add human-readable string representation for TermSimilarityIndex (cont.)

* Prod flake8 with a coding style violation in a docstring

* Collapse two lambdas into one internal function

* Revert ""Prod flake8 with a coding style violation in a docstring""

This reverts commit 6557b849732b314570ea9d5132f1731d964e2fe6.

* Avoid str.format()

* Slice SparseTermSimilarityMatrix.inner_product tests by input types

* Remove similarity_type_code local variable

* Remove starting underscore from local function name

* Save indentation level and define populate_buffers function

* Extract SparseTermSimilarityMatrix constructor body to _create_source

* Extract NON_NEGATIVE_NORM_ASSERTION_MESSAGE to a module-level constant

* Extract cell assignment logic to cell_full local function

* Split variable swapping into three separate statements

* Extract normalization from the body of SparseTermSimilarityMatrix.inner_product

* Wrap overlong line

* Add test_inner_product_zerovector_zerovector and test_inner_product_zerovector_vector tests

* Further split test_inner_product into 63 test cases

* Raise ValueError when dictionary is empty

* Fix doc2vec crash for large sets of doc-vectors (#2907)

* Fix AttributeError in WikiCorpus (#2901)

* bug fix: wikicorpus getstream from data file-path \n Replace fname with input

* refactor: use property decorator for input

Co-authored-by: jshah02 <jenisnehal.shah@factset.com>

* Corrected info about elements of the job queue

* Add unused args of `_update_alpha`

* intensify cbow+hs tests; bulk testing method

* use increment operator

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>

* Change num_words to topn in dtm_coherence (#2926)

* Integrate what is essentially the same process

* docstirng fixes

* get rid of python2 constructs

* Remove Keras dependency (#2937)

* remove keras dependency
- relegate keras exports to FAQ: https://github.com/RaRe-Technologies/gensim/wiki/Recipes-&-FAQ#q13-how-do-i-export-a-trained-word2vec-model-to-keras

* remove forgotten notebook with keras

* Update CHANGELOG.md

Co-authored-by: Michael Penkov <m@penkov.dev>

* code style fixes while debugging pickle model sizes

* py2 to 3: get rid of forgotten range

* fix docs

* get rid of numpy.str_

* Fix deprecations in SoftCosineSimilarity (#2940)

* Remove deprecated Soft Cosine Measure parameters, functions, and tests.

Here is a detailed list of the deprecations:
- Parameter `positive_definite` of `SparseTermSimilarityMatrix` has been
  renamed to `dominant`. Test `test_positive_definite` has been removed.
- Parameter `similarity_matrix` of `SoftCosineSimilarity` no longer
  accepts unencapsulated sparse matrices.
- Parameter `normalized` of `SparseTermSimilarityMatrix.inner_product`
  no longer accepts booleans.
- Function `matutils.softcossim` has been superseded by method
  `SparseTermSimilarityMatrix.inner_product`. Tests in
  `TestSoftCosineSimilarity` have been removed.

* Remove unused imports

* Fix additional warnings from the CI test suite

* Update CHANGELOG.md

Co-authored-by: Michael Penkov <m@penkov.dev>

* Fix ""generator"" language in word2vec docs (#2935)

* Fix docs about Word2Vec (fix #2934)

Docs say you can use a generator as the first argument, but you can't.

The tempfile path was also unused, so that's been removed.

* Fix langauge to make it clear streaming is supported

Technically a generator is a kind of iterator, so this clarifies that a
restartable iterator (as opposed to a consumable generator) is
necessary.

* Update gensim/models/word2vec.py

* Update CHANGELOG.md

Co-authored-by: Michael Penkov <m@penkov.dev>

* Bump minimum Python version to 3.6 (#2947)

* remove claims of Python 3.5 support

brings `setup.py` up to sync with #2713 & #2715 changes

* remove py2.7 and py3.5 from web index page

* Update CHANGELOG.md

Co-authored-by: Radim Řehůřek <radimrehurek@seznam.cz>
Co-authored-by: Michael Penkov <m@penkov.dev>

* fix index2entity, fix docs, hard-fail deprecated properties

* fix typos + more doc fixes + fix failing tests

* more index2word => index_to_key fixes

* finish method renaming
- add() => add_vectors()
- add_one() => add_vector()

* Update gensim/models/word2vec.py

Co-authored-by: Michael Penkov <m@penkov.dev>

* a few more style fixes

* fix nonsensical word2vec path examples

* more doc fixes

* `it` => `itertools`, + code style fixes

* Refactor ldamulticore to serialize less data (#2300)

* fix

* Update CHANGELOG.md

Co-authored-by: Michael Penkov <m@penkov.dev>

* new docs theme

* redo copy on web index page

* fix docs in KeyedVectors

* clean up docs structure

* hopepage header update, social panel and new favicon

* fix flake8

* reduce space under code section

* fix images in core tutorials

* WIP: migrating tutorials to 4.0

* fix doc2vec tutorial FIXMEs

* add autogenerated docs

* fixing flake8 errors

* remove gensim.summarization subpackage, docs and test data (#2958)

* remove gensim.summarization subpackage, docs and test data

* Update changelog

* remove old import

* Remove distance metrics and pivoted normalization tutorials

* reuse from test.utils

* test re-saving-native-FT after update-vocab (#2853)

* avoid buggy shared list use (#2943)

* pre-assert save_facebook_model anomaly

* unittest.skipIf instead of pytest.skipIf

* refactor init/update vectors/vectors_vocab; bulk randomization

* unify/correct Word2Vec & FastText corpus/train parameter checking

* suggestions from code review

Co-authored-by: Radim Řehůřek <me@radimrehurek.com>

* improve train() corpus_iterable parameter doc-comment

* disable pytest-rerunfailures due to https://github.com/pytest-dev/pytest-rerunfailures/issues/128

* comment clarity from review

* specify dtype to avoid interim float64

* use inefficient-but-all-tests-pass 'uniform' for now, w/ big FIXME comment

* refactor phrases

* float32 random; diversified dv seed; disable bad test

* double-backticks

Co-authored-by: Michael Penkov <m@penkov.dev>

* inline seed diversifier; unittest.skip

* fix phrases tests

* clean up rendered docs for phrases

* fix sklearn_api.phrases tests + docs
- removed testing of loading of old models for backward compatibility, because the wrappers use plain pickle and so don't support SaveLoad overrides

* fix flake8 warnings in docstrings

* rename export_phrases to find_phrases + add actual export_phrases

* skip common english words by default in phrases

* sphinx doesn't allow custom section titles :(

* use FIXME for comments/doc-comments/names that must change pre-4.0.0

* ignore conjunctions in phrases

* make ENGLISH_COMMON_TERMS optional

* fix typo

* docs: use full version as the ""short version""

* phrases: rename common_terms => connector_words

* fix typo

* ReST does not support nested markup

* make flake8 shut up

* improve HTML doc formatting for consecutive paragraphs

* fix typos

* add benchmark script

* silence flake8

* remove dependency on `six`

* regen tutorials

* Notification at the top of page in documentation

* Update notification.html

* Update changelog for 4.0.0 release (#2981)

* update changelog for 4.0.0 release

* fixup

* wip: cleaning up changelog

* extend + clean up changelog

* note the removal of deprecations in CHANGELOG

* finish CHANGELOG
- except removed modules, pending info from @mpenkov

* CHANGELOG formatting fixes

* fix outdated docs
- found while updating the migration guide

* update migration hyperlinks

* fixing fixable FIXMEs, in preparation for 4.0.0beta

* fixing iter + size in docstrings

* fix typo

* clean up logic & docs for KeyedVectors.save_word2vec_format

* flake8 fix

* py3k: `class X(object):` -> `class X:`

* work around issues with flake8-rst

* add issues without a PR

* improve changelog script

* simplify pagination

* more flake8-rst fixing

Co-authored-by: Radim Řehůřek <radimrehurek@seznam.cz>

* bumped version to 4.0.0beta

* remove reference to cython.sh

* update link in readme

* clean up merge artifact

Co-authored-by: SanthoshBala18 <santhoshbala18@gmail.com>
Co-authored-by: Kirill Malev <playittodeath@gmail.com>
Co-authored-by: Shubhanshu Mishra <shubhanshumishra@gmail.com>
Co-authored-by: Joel Ong <ong.joel.94@gmail.com>
Co-authored-by: Radim Řehůřek <radimrehurek@seznam.cz>
Co-authored-by: Karthik Ravi <hikarthikravi@gmail.com>
Co-authored-by: lopusz <lopusz@users.noreply.github.com>
Co-authored-by: Paul Rigor <paulrigor@users.noreply.github.com>
Co-authored-by: Vít Novotný <witiko@mail.muni.cz>
Co-authored-by: Tim Gates <tim.gates@iress.com>
Co-authored-by: Radim Řehůřek <me@radimrehurek.com>
Co-authored-by: Rubanenko Evgeny <erubanenko@gmail.com>
Co-authored-by: Pablo Torres <pablo.torres.t@gmail.com>
Co-authored-by: Marcelo d'Almeida <md@id.uff.br>
Co-authored-by: Dmitry Persiyanov <persiyanov@phystech.edu>
Co-authored-by: Wataru Hirota <nobuyoshi2426@gmail.com>
Co-authored-by: Gordon Mohr <gojogit@gmail.com>
Co-authored-by: Tenoke <sviltodorov@gmail.com>
Co-authored-by: Martino Mensio <martinomensio@outlook.it>
Co-authored-by: David Dale <dale.david@mail.ru>
Co-authored-by: David Dale <ddale@yandex-team.ru>
Co-authored-by: Matthew Farrellee <matt@cs.wisc.edu>
Co-authored-by: Ivan Menshikh <menshikh.iv@gmail.com>
Co-authored-by: Ivan Menshikh <imenshikh@embedika.ru>
Co-authored-by: carterols <38794079+carterols@users.noreply.github.com>
Co-authored-by: Carter Olsen <olsencar@oregonstate.edu>
Co-authored-by: Hamekoded <alex.zhicharevich@gmail.com>
Co-authored-by: Zhicharevich <Alex_Zhicharevich@intuit.com>
Co-authored-by: Karthikeyan Singaravelan <tir.karthi@gmail.com>
Co-authored-by: Chenxin-Guo <cg633@cornell.edu>
Co-authored-by: Faiyaz Hasan <faiyaz.hasan1@gmail.com>
Co-authored-by: Hugo van Kemenade <hugovk@users.noreply.github.com>
Co-authored-by: Shiv Dhar <shivdhar@gmail.com>
Co-authored-by: Cristi Burca <mail@scribu.net>
Co-authored-by: Marcin Cylke <marcin.cylke+github@gmail.com>
Co-authored-by: Marcin Cylke <marcin.cylke@allegro.pl>
Co-authored-by: Philippe Ombredanne <pombredanne@nexb.com>
Co-authored-by: Devi Sandeep <sandeep0138@gmail.com>
Co-authored-by: S Mono <10430241+xh2@users.noreply.github.com>
Co-authored-by: jeni Shah <jenishah@users.noreply.github.com>
Co-authored-by: jshah02 <jenisnehal.shah@factset.com>
Co-authored-by: lunastera <lounastera@gmail.com>
Co-authored-by: Megan <megan.stodel@bbc.co.uk>
Co-authored-by: Paul O'Leary McCann <polm@dampfkraft.com>
Co-authored-by: horpto <__Singleton__@hackerdom.ru>
Co-authored-by: Vaclav Dvorak <admin@wdv.cz>",functools pandas,"
Currently, if you attempt to use the script with the --min-article-character you get an error because it gets parsed a string and the functions expect an int.
This fix addresses the issue.",3,Scientific,Scientific,False,False
5922,PrincetonUniversity/PsyNeuLink,a2d06bfb7780cc03b983839fbe8f2612ce7df79b,2021-03-12 17:10:09,pytest,functools,"Devel (#1949)

* tests/autodiff: Add expected results to test_atomizer_specs

Python only, the compiled implementation is broken.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/builtins: Drop vec_copy

Unused. Untested.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm/intrinics: Drop temporary variables with results

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm: Convert coth, csch, and tanh to builtin functions

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/tests/builtins: Add tanh, coth, and csch tests

Includes benchmark.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, mechanisms/DDM: Use helpers.fneg instead of opencoding it

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/DDI: Use helpers.fneg instead of opencoding it

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/Distance: Call fabs builtin instead of opencoding it

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/helpers: Convert 'is_close' to builtin function

Use fabs builtins instead of opencoding them.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/builtins: Remove lcoal import of pycuda

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm/builtins_matrix: Consolidate 'dot' tests

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* github-actions: Restrict tests to 80 mins

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* dependabot: Allow up to 15 open pull requests for pip packages

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* treewide: Rename Composition argument: 'bin_execute' -> 'execution_mode' (#1924)

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* teewide: Don't use 'np.float'

Deprecated in numpy 1.20

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Preserve CompExecution instances across runs and executions

GPU execution already did this, extend the approach to CPU execution.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Move struct generators closer together

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Store binary buffer of scheduler structures locally

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Store binary structures of state,params, and data locally

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Consolidate debug_flag location to a new parent class

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Move _get_compilation_param to the shared ancestor

This will be used by the Mech/FuncExecution.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Store binary structures for function/mechanism param and state locally

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Deduplicate conversion of function variable

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Fix misleading comment

Do not list 7 names for 6 parameters
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Use attribute names instead of object types when syncing back parameter values

Improves autodiff benchmarks by 3-5%.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/composition: Run all compiled modes in the recurrent transfer mechanism test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/builtins_random: Drop misleading comment

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution: Use correct type to print scheduler conditions structure stats

Add 'stat' to the test of debugging flags.

Fixes: fd5a419271c73cc327d0f6ef6b1e6c8eee4e9f1f (""llvm/execution: Store binary buffer of scheduler structures locally"")
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests: Use a new 'func_mode' fixture to parametrize function tests

The fixture automatically parametrizes tests using 'Python', 'LLVM', and 'PTX' values.
Testing:
pytest --co > tests.out
Before and after the change is the same (other than the collection
time).

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests: Use a new 'mech_mode' fixture to parametrize mechanism tests

The fixture automatically parametrizes tests using 'Python', 'LLVM', and 'PTX' values.
Testing:
pytest --co > tests.out
Before and after the change is the same (other than the collection time).

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/mechanisms: Enable partial LLVM/PTX tests for integration_rate_0_8_initial_0_5

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/control_mechanism: Remove unsupported per-node PTX execution mode

Fixes: 5c5d747ff0f331473dc6605e4a4edda351f73101 (""llvm/cuda: Drop
references to per node PTX execution"")
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests: Use a new 'comp_mode' fixture to parametrize composition tests

The fixture automatically parametrizes the test using 'Python', 'LLVM',
'LLVMExec', 'LLVMRun', 'PTXExec', and 'PTXRun' values.

Testing:
pytest --co > tests.out
The only changes are slight reordering of tests and parameters,
execution mode is put in the first place for
'test_run_composition_vector' and 'test_ddm_is_finished'.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, tests/composition/control: Enable PTX variants of more tests

test_multilevel_control
test_recurrent_control
test_grid_search_random_selection
test_input_CIM_assignment

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/mechanism: Add explanatory comments to tests that need compiled scheduler

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/RecurrentTransferMechanism: Simplify parameter ids

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/composition: Clarify comment in AAB_integrator test

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests: Use pytest helper to generate super sets of composition execution modes

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm/builtins_matrix: Add PTX variants of hadamard and scalar tests

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/llvm/builtins_vector: Add PTX variants of all vector tests

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/composition: Remove duplicate run input generator tests

The exact same tests are in TestRunInputSpecifications.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/cuda, tests/composition: Add PTXRun variant of the fallback test

Fix PTXExec marks.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests: Use a new 'autodif_mode' fixture to parametrize composition tests

The fixture automatically parametrizes tests using 'Python' and
'LLVMRun' values.
The following tests are now enabled and skipped at runtime:
test_pytorch_loss_spec[LLVMRun]
test_params_stay_separate[LLVMRun]
test_xor_nested_no_train_then_train[LLVMRun-400-4-10-1e-05]

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/integrator_mechanism: Rename 'mode' -> 'mech_mode' for consistency

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* tests/control_mechanism: Drop redundant 'mode' parameter

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Buffer: do not replace initializer of 0s with default

* LeabraFunction: make training_flag dependent on network

* llvm, components/OutputPort: Use cost function of the port function instead of port's FunctionParam

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, AutodiffComposition: Use matrices of projection functions instead projections' alias

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, component: Do not include SharedParameters in compiled structures

Values of SharedParameters are already stored elsewhere.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, composition: Replace execution_mode string with enum.Flags

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* fix: monkey patch rich.console._is_jupyter for colab

* Fixed the patch

* Codestyle fixes and better documentation

* requirements: Restrict rich to <9.13

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* fix(Parameter): setting value of Parameter to a method

code intended to ensure Components whose methods are set as a Parameter
value after intiialization are marked for context initialization would mark any
object, which could cause crashes

* refac(utilities): exclude bool and enum from is_numeric

* fix(utilities): copy_iterable_with_shared: failure for defaultdict

* fix(utilities): numpy DeprecationWarning casting np.integer to float

convert_all_elements_to_np_array: cast and pass through non-ragged arrays

* fix(utilities): numpy array_equals DeprecationWarning for embedded arrays

* tests: Add fixture for compiled composition tests that don't support per-node compilation

This changes the order of generated tests slightly.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Component: make dot-notation base use get instead of _get

* Component: only call _update_default_variable on Components

* BayesGLM: fix attribute typo in error messages

* IntegratorFunction: sort parameter names for incorrect length error

* Feat/pnl progress (#1938)

* • composition.py
  - run():  use rich.Progress for looping through trials

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* • composition.py
  - import placed at top

* -

* • composition.py
  - run(): added support for indeterminate progress using rich

* • composition.py
  - run(): clean-up of rich.progress code

* • composition.py
  - run(): clean-up of rich.progress code

* -

* • composition.py
  - run(): added support for indeterminate progress using rich

* • composition.py
  - run(): simulation progress now working properly

* • composition.py
  - run(): added show_progress and show_output args
  - execute(): added show_output arg

* • composition.py
  - run(): modified example in controlsignal.py docstring to pass test

* • composition.py
  - run(): modified example in controlsignal.py docstring to pass test

* -

* • Pulled from current devel

* • composition.py: bug fixes

* -

* • composition.py
  - last commit before implementing PNLprogress

* • composition.py
  - first draft using PNLProgress and _report_output

* • composition.py
  - first draft using PNLProgress and _report_output

* -

* -

* -

* -

* • PNLProgress working

* -

* • PNLProgress:  elaborated for future support of pnl_view

* -

* • progress.py:  added support for showing simulations

* • progress.py:  added support for showing simulations

* -

* -

* -

* • Fixed bug causing crash in test_nested_composition_run

* • Fixed bug causing crash in test_nested_composition_run

* -

* • Codestyle fixes

* • progress.py:
  - fixed simulation progress reporting
  - should consolidate all executions in a given simualation to a single task

• composition.py:
  - limited progress reporting to execute()
    (no longer in run)

• autodiffcomposition.py:
  - execute: added progress reporting
  - still need to handle output report

* -

* -

* -

* • Merged with devel

* -

* • Merged with devel

* -

* -

* -

* -

* -

* -

* • progress.py: working for nested sims

* -

* -

* -

* -

* -

* • composition.py: docstring updated for output and progress reporting

* • progress.py - bug fix
• composition.py - change show_output default to False

* • progress.py - bug fix

* • progress.py - patch trial_num reporting bug (with hack)

* • progress.py: before switch from rich_report to full_report

* -

* -

* -

* • Progress: before modifying PNLProgers._use_rich

* • Progress: implemented CAPTURE option for rich output

* -

* -

* • Preferences.rst - pointed to PreferenceSet.py
• preferenceset.py - created docstring to describe Standard Preferences

* -

* -

Co-authored-by: jdcpni <pniintel55>

* llvm/execution/cuda: Inline '_get_ctype_bytes' into its only caller

Disallow empty structures. This used to be the case for functions
without any state. Every component has at least 'execution_count' in its
state.

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution/cuda: Use numpy full to generate the number of runs

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution/cuda: Simplify generation of evaluation input buffer

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/GridSearch: Change select_min signature to use <start, stop) instead of count parameter

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/cuda: Don't reuse allocations array from cuda_evauate

It's going away
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, mechanism/OptimizationControl: Add wrapper function to iterate over multiple evaluations.

Evaluated sample is generated within the loop.
This removes the need to prepopulate an array of possible evaluations.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/cuda: Use locally generated samples in GPU evaluate

Avoid generating allocation array in Python before invoking the GPU kernel.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

drop itertools

* llvm, mechanisms/OptimizationControl: Move allocation generation to helpers

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/GridSearch: Generate allocation samples locally if not provided

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/GridSearch: Update the best value of the best allocation only once

The allocation value is not used in the search loop,
so it can be updated at the end after the index of the selected results
is known.
This avoids generating multiple allocation samples if they're not
provided.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm, functions/GridSearch: Rename '_get_optimized_composition' -> '_get_optimized_controller'

The function returns and instance of optimization control mechanism.
Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* llvm/execution, functions/GridSearch: Implement multithreaded parallel evaluate

Signed-off-by: Jan Vesely <jan.vesely@rutgers.edu>

* Refactor/pnl report (#1942)

* • composition.py
  - run():  use rich.Progress for looping through trials

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* • composition.py
  - import placed at top

* -

* • composition.py
  - run(): added support for indeterminate progress using rich

* • composition.py
  - run(): clean-up of rich.progress code

* • composition.py
  - run(): clean-up of rich.progress code

* -

* • composition.py
  - run(): added support for indeterminate progress using rich

* • composition.py
  - run(): simulation progress now working properly

* • composition.py
  - run(): added show_progress and show_output args
  - execute(): added show_output arg

* • composition.py
  - run(): modified example in controlsignal.py docstring to pass test

* • composition.py
  - run(): modified example in controlsignal.py docstring to pass test

* -

* • Pulled from current devel

* • composition.py: bug fixes

* -

* • composition.py
  - last commit before implementing PNLprogress

* • composition.py
  - first draft using PNLProgress and _report_output

* • composition.py
  - first draft using PNLProgress and _report_output

* -

* -

* -

* -

* • PNLProgress working

* -

* • PNLProgress:  elaborated for future support of pnl_view

* -

* • progress.py:  added support for showing simulations

* • progress.py:  added support for showing simulations

* -

* -

* -

* • Fixed bug causing crash in test_nested_composition_run

* • Fixed bug causing crash in test_nested_composition_run

* -

* • Codestyle fixes

* • progress.py:
  - fixed simulation progress reporting
  - should consolidate all executions in a given simualation to a single task

• composition.py:
  - limited progress reporting to execute()
    (no longer in run)

• autodiffcomposition.py:
  - execute: added progress reporting
  - still need to handle output report

* -

* -

* -

* • Merged with devel

* -

* • Merged with devel

* -

* -

* -

* -

* -

* -

* • progress.py: working for nested sims

* -

* -

* -

* -

* -

* • composition.py: docstring updated for output and progress reporting

* • progress.py - bug fix
• composition.py - change show_output default to False

* • progress.py - bug fix

* • progress.py - patch trial_num reporting bug (with hack)

* • progress.py: before switch from rich_report to full_report

* -

* -

* -

* • Progress: before modifying PNLProgers._use_rich

* • Progress: implemented CAPTURE option for rich output

* -

* -

* • Preferences.rst - pointed to PreferenceSet.py
• preferenceset.py - created docstring to describe Standard Preferences

* -

* -

* • tests
  - composition:  added test_progress.py with unit tests for PNLProgress
• composition.py
  - execute(): modified context passed to node if it is a mechanism
               (assigns context.source as ContextFlags.COMPOSITION)

* -

* • composition.py and progress.py:
  refactoring show_output and show_progress into: report_output, report_progress, report_simulations, report_to_devices

* -

* -

* • report.py: updated docstrings with new args/attrs

* • report.py:
  - refactored args to use ""report"" as root
  - added _use_rich_console and _use_rich_capture
  - TODO: allow independent controle of consolse and capture

* • test_report.py: updated to use report_progress and report_to_devices

* -

* • report.py:
  - added independent rich divert and report recording

* -

* -

* -

* -

* -

* -

* -

* -

Co-authored-by: jdcpni <pniintel55>

* bug(Report): add undefined imports

* tests: reporting: add reportOutputPref output tests

* Preferences: allow skipping validation

prior to 8c0eecc2c674a481138420f703ee661d39239052, any value for
reportOutputPref would pass Preference validation due to an
iscompatible check of its reference setting (bool).
0f78ef3694e571f15e68f7f12213297321c4ecfa allows reportOutputPref to take a str
as well. Since there is no obvious non-workaround way to allow a str/bool value
in the current validation, this commit allows passing of skip_validation=True to
PreferenceSet.set_preference to mimic the old behavior and reenable the str/bool
setting

* Component: don't store self in parameter_components

some Components have a parameter value of one of its methods, which will get
parsed back to itself

* Fix/report/sims (#1948)

* • composition.py
  - run():  use rich.Progress for looping through trials

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* -

* • composition.py
  - import placed at top

* -

* • composition.py
  - run(): added support for indeterminate progress using rich

* • composition.py
  - run(): clean-up of rich.progress code

* • composition.py
  - run(): clean-up of rich.progress code

* -

* • composition.py
  - run(): added support for indeterminate progress using rich

* • composition.py
  - run(): simulation progress now working properly

* • composition.py
  - run(): added show_progress and show_output args
  - execute(): added show_output arg

* • composition.py
  - run(): modified example in controlsignal.py docstring to pass test

* • composition.py
  - run(): modified example in controlsignal.py docstring to pass test

* -

* • Pulled from current devel

* • composition.py: bug fixes

* -

* • composition.py
  - last commit before implementing PNLprogress

* • composition.py
  - first draft using PNLProgress and _report_output

* • composition.py
  - first draft using PNLProgress and _report_output

* -

* -

* -

* -

* • PNLProgress working

* -

* • PNLProgress:  elaborated for future support of pnl_view

* -

* • progress.py:  added support for showing simulations

* • progress.py:  added support for showing simulations

* -

* -

* -

* • Fixed bug causing crash in test_nested_composition_run

* • Fixed bug causing crash in test_nested_composition_run

* -

* • Codestyle fixes

* • progress.py:
  - fixed simulation progress reporting
  - should consolidate all executions in a given simualation to a single task

• composition.py:
  - limited progress reporting to execute()
    (no longer in run)

• autodiffcomposition.py:
  - execute: added progress reporting
  - still need to handle output report

* -

* -

* -

* • Merged with devel

* -

* • Merged with devel

* -

* -

* -

* -

* -

* -

* • progress.py: working for nested sims

* -

* -

* -

* -

* -

* • composition.py: docstring updated for output and progress reporting

* • progress.py - bug fix
• composition.py - change show_output default to False

* • progress.py - bug fix

* • progress.py - patch trial_num reporting bug (with hack)

* • progress.py: before switch from rich_report to full_report

* -

* -

* -

* • Progress: before modifying PNLProgers._use_rich

* • Progress: implemented CAPTURE option for rich output

* -

* -

* • Preferences.rst - pointed to PreferenceSet.py
• preferenceset.py - created docstring to describe Standard Preferences

* -

* -

* • tests
  - composition:  added test_progress.py with unit tests for PNLProgress
• composition.py
  - execute(): modified context passed to node if it is a mechanism
               (assigns context.source as ContextFlags.COMPOSITION)

* -

* • composition.py and progress.py:
  refactoring show_output and show_progress into: report_output, report_progress, report_simulations, report_to_devices

* -

* -

* • report.py: updated docstrings with new args/attrs

* • report.py:
  - refactored args to use ""report"" as root
  - added _use_rich_console and _use_rich_capture
  - TODO: allow independent controle of consolse and capture

* • test_report.py: updated to use report_progress and report_to_devices

* -

* • report.py:
  - added independent rich divert and report recording

* -

* -

* -

* -

* -

* -

* -

* -

* -

* • report.py
  - report_output: fixes for simulation reporting

* -

* • composition.py
  - evaluate(): added use of Report context in call to composition.run()

* -

* -

* -

* -

* -

* -

* • report.py: docstring added

* -

* -

* -

* -

* • report.py:  modify to use ReportOutput enum

* -

* -

* • report.py: refactored to use ReportOutput enum

* • report.py: refactored to use ReportDevices enum

* • Project: refactored to use ReportOutput and ReportDevices enums
• Component:
  reportOoutputPref property and setter:  enforce assigment and retrieval of ReportOutput

* • Project: refactored to use ReportProgress and ReportSimulations enums

* -

* -

* • basepreferenceset.py:
  - modified reportOutputPref handling to convert False to ReportOutput.OFF and True to ReportOutput.TERSE

* -

* • report.py: allow reportOutputPrefs to be a list that includes 'params' and a ReportOutput option

* -

* -

* -

Co-authored-by: jdcpni <pniintel55>

Co-authored-by: Jan Vesely <jan.vesely@rutgers.edu>
Co-authored-by: Jan Vesely <jvesely@users.noreply.github.com>
Co-authored-by: David Turner <davidt0x@gmail.com>
Co-authored-by: jdcpni <jdc@princeton.edu>",functools pytest,"* tests: Use a new 'func_mode' fixture to parametrize function tests
",3,Testing,Testing,False,False
5923,qutip/qutip,1724977616fb2b1f62a6721b2a0ad457cfc14eb4,2020-01-19 22:39:33,pytest,functools,"Convert test_qobj.py to pytest style

Remove `numpy.testing` commands in favour of bare assertions, because
pytest does introspection on failed assertions, and consequently gives
good error messages.

Convert some (but perhaps not all) grouped tests into `Test*` classes,
with subtests as methods.  `pytest` does not require these classes to
derive from `unittest.TestCase`.

Convert multi-case tests from `yield` syntax to parametrised functions
taking arguments with the `pytests.mark.parametrize` decorator.  This
gives better error messages in the logs on failure.

Use the `pytest.raises` context manager instead of the custom
`expect_exception`.

Fix pep8 issues through the file, in the hope that CodeClimate won't
yell at me.",functools pytest,"
Convert multi-case tests from `yield` syntax to parametrised functions
taking arguments with the `pytests.mark.parametrize` decorator.",3,Testing,Testing,False,False
5924,wikimedia/cumin,ba595c10a99816e1010629290fa95abeb121d96c,2017-07-06 18:45:45,pytest,functools,"Package metadata and testing tools improvements

- fill setup.py with all the parameters, suitable for a future
  submission to PyPI
- autodetect version from Git tags and expose it in the module using
  setuptools_scm
  - add a --version option to the CLI
- use pytest to run the tests
- make tox use the dependencies in setup.py, removing the now
  unnecessary requirements files.
- add security analyzer Bandit to tox.
- add Prospector to tox, that in turns runs multiple additional tools:
  dodgy, mccabe, pep257, pep8, profile-validator, pyflakes, pylint,
  pyroma, vulture.

Bug: T154588
Change-Id: I08214305bc9337267f4cf904b9acf9ecb8d5d488",functools pytest,"
Package metadata and testing tools improvements",3,Testing,Testing,False,False
5925,PrincetonUniversity/PsyNeuLink,c20e6d8e3de99cfcfe7dfb7d244e91f3f931f593,2018-11-14 03:06:43,logging,pytest,"Make variable and value attributes stateful based on execution context

	State: change how projections are executed/updated when updating a State

		- projections now become active for one or more Compositions, and do
			not get updated outside of the context of executing a Composition
			- add Projection._activate_for_compositions that can handle
			assigning a Projection to a Composition
		- create a ConnectionInfo class that stores data about a
			Projection->State connection
			- includes what Compositions this becomes active on
			- allows further expansion
			- stored at <InputState>.afferents_info

		- update some tests to account for the new projection activation scheme

		DEPRECATION WARNING:
			- currently allow projections not explicitly added to processes to
			nonetheless be added to the process if their sender and receiver are
			subsequent
				- Tutorial: explicitly include projections in Stroop processes
				(encourage non-deprecated syntax)
				- Testing: update MaskedMappingProjection tests to remove
				deprecated syntax

	- Execution Contexts:
		- add execution_id parameter to many methods
		- set up context for an execution_id in Component.execute call
		- Compositions use a default execution_id when unspecified
		- all variable and value settings are stored in Params stateful storage
		- some parameter values (typically those corresponding to
		ParameterStates) are also in stateful storage

	- Mechanism:
		- remove classMethodNames
	- OutputState: refactor variable parsing
	- Testing:
		- update tests to use Params stateful storage instead of
		.variable/.value
	- Component:
		- deepcopy method enhanced to avoid copying Components when unnecessary",pytest logging,"
- update some tests to account for the new projection activation scheme",3,Testing&Logging,Testing,False,False
5927,mjs7231/python-plexapi,68fc970d7a3eca76333fcfcbb0e01a51b6572526,2018-09-14 18:03:23,logging,pytest,"Improvements in tests process (#297)

* lets begin

* skip plexpass tests if there is not plexpass on account

* test new myplex attrubutes

* bootstrap: proper photos organisation

* fix rest of photos tests

* fix myplex new attributes test

* fix music bootstrap by setting agent to lastfm

* fix sync tests

* increase bootstrap timeout

* remove timeout from .travis.yml

* do not create playlist-style photoalbums in plex-bootstraptest.py

* allow negative filtering in LibrarySection.search()

* fix sync tests once again

* use sendCrashReports in test_settings

* fix test_settings

* fix test_video

* do not accept eula in bootstrap

* fix PlexServer.isLatest()

* add test against old version of PlexServer

* fix MyPlexAccount.OutOut

* add flag for one-time testing in Travis

* fix test_library onDeck tests

* fix more tests

* use tqdm in plex-bootstraptest for media scanning progress

* create sections one-by-one

* update docs on AlertListener for timeline entries

* fix plex-bootstraptest for server version 1.3.2

* display skip/xpass/xfail reasons

* fix tests on 1.3

* wait for music to be fully processed in plex-bootstraptest

* fix misplaced TEST_ACCOUNT_ONCE

* fix test_myplex_users, not sure if in proper-way

* add pytest-rerunfailures; mark test_myplex_optout as flaky

* fix comment

* Revert ""add pytest-rerunfailures; mark test_myplex_optout as flaky""

This reverts commit 580e4c95a758c92329d757eb2f3fc3bf44b26f09.

* restart plex container on failure

* add conftest.wait_until() and used where some retries are required

* add more wait_until() usage in test_sync

* fix managed user search

* fix updating managed users in myplex

* allow to add new servers to existent users

* add new server to a shared user while bootstrapping

* add some docs on testing process

* perform few attemps when unable to get the claim token

* unlock websocket-client in requirements_dev

* fix docblock in tools/plex-teardowntest

* do not hardcode mediapart size in test_video

* remove cache:pip from travis

* Revert ""unlock websocket-client in requirements_dev""

This reverts commit 0d536bd06dbdc4a4b869a1686f8cd008898859fe.

* remove debug from server.py

* improve webhook tests

* fix type() check to isinstance()

* remove excessive `else` branch due to Hellowlol advice

* add `unknown` as allowed `myPlexMappingState` in test_server",pytest logging,"
* fix myplex new attributes test",3,Testing&Logging,Testing,False,False
5934,hibtc/cpymad,cad4f01d7cc7efdc92fb0e46e09d469653cb2bab,2020-09-04 09:18:11,argparse,core-parser-app,"Remove homebrewn option parsing

It's 2020, and we've long deprecated py26, so we can rely on argparse
to be available.",core-parser-app argparse,"
It's 2020, and we've long deprecated py26, so we can rely on argparse
to be available.",7,Utility,Utility,False,False
5936,fedora-infra/bodhi,483b21de22e32c21c66a08293216d2a5e06134f9,2013-08-10 21:00:34,sqlite3,sqlite,Fix import of sqlite3 exceptions,sqlite sqlite3,"
Fix import of sqlite3 exceptions",6,Database,Database,False,False
5956,teamsempo/SempoBlockchain,5014c26fffe3362037b865041987981dbaf05082,2020-05-26 05:08:26,config,configparser,"Build fix (#280)

* deployment was failing.

* test full deploy

* adding pgbouncer to build

* version bump

* gurl if u were a scalp, I'd tell you to use Head and Shoulders, cos u flaky!

* adding fallback and env deployment name

* use config file for pgbouncer

* seeing if it works with specific tags

* adding web3 requirement

* matching docker push

* Update config.yml

* using env instead of arg to see if that calms compose down

* ok hardcode?",configparser config,"
* use config file for pgbouncer",4,Filesystem,Filesystem,False,False
5958,asdf-format/asdf,87c82aed89fa83a177f4cc1c5d22de5b30e8e3a2,2017-12-21 14:55:22,urllib,six,"Replace use of ""six.moves.urllib"" with urllib",six urllib,"
Replace use of ""six.moves.urllib"" with urllib",13,HTTP Clients,HTTP Clients,False,False
5959,bpython/bpython,88511874a39ac54c62d25ead4224d4d1b8f34000,2020-10-13 19:18:30,urllib,six,Remove use of six.moves.urllib_parse,six urllib,"
Remove use of six.moves.urllib_parse",13,HTTP Clients,HTTP Clients,False,False
5961,lbryio/lbry,b3fde9d78db23c2f9bf40ade64a5b95136203fce,2018-11-23 04:24:21,urllib,six,"Removes `six` From Project (#1660)

* Replaces `six` urllib with python 3's urllib
* Replaces `six`'s int2byte method with native `bytes` class
* Removes edge case testing for python2 vs python3
* Removes useless object inheritance
* Uses native io.BytesIO instead of six.BytesIO
* Removes six from dependencies",six urllib,"
* Replaces `six` urllib with python 3's urllib
* Replaces `six`'s int2byte method with native `bytes` class",13,HTTP Clients,HTTP Clients,False,False
5962,mlflow/mlflow,b73a6312a0d892cd2d3a4b4aeb6180c578289d97,2020-10-13 15:49:10,urllib,six,"CLN : Update urllib imports from six.moves (#3510)

Signed-off-by: Sai Rahul Poruri <rporuri@enthought.com>",six urllib,"
CLN : Update urllib imports from six.moves (#3510)",13,HTTP Clients,HTTP Clients,False,False
5969,zulip/zulip,9c7d5812ce2bec52f92f6e8065560b6dd8dd3680,2017-11-07 18:51:44,urllib,six,refactor: Remove six.moves.urllib.parse import.,six urllib,"
refactor: Remove six.moves.urllib.parse import.",13,HTTP Clients,HTTP Clients,False,False
5999,PyGithub/PyGithub,fcbcd145bb510221e8111071d9f00a524a788924,2012-02-13 21:19:40,httplib,urllib2,"Reimplement networking with httplib instead of urllib2

This will allow real access to HTTP headers and status",urllib2 httplib,"
Reimplement networking with httplib instead of urllib2",8,HTTP Clients,HTTP Clients,False,False
6000,burnash/gspread,2213739a77f3e0dd5771f0f7f596565f24f0a7f9,2012-10-19 15:12:37,httplib,urllib2,"Changed the HTTP connectivity from urllib to httlib

This enables persistent http connections (Keep-Alive) and is hence
slightly faster. Especially if you are behind a chain of web proxies and
update a lot of cells.",urllib2 httplib,"
Changed the HTTP connectivity from urllib to httlib",8,HTTP Clients,HTTP Clients,False,False
6003,materialsproject/pymatgen,4d7ea9e2d7faaf1ac99be37361269d1da2c3196b,2012-06-25 12:34:44,httplib,urllib2,"Update pymatgen's rest interface to use httplib instead of urllib2. #72


Former-commit-id: b26208df363d233597fb7e49a6dae0e0729df3b8 [formerly 1d48b0d38c05e8edb342147539cd7bc2bd477300]
Former-commit-id: df8f60f3ed756097b1ac8f9a94a6272107ad062e",urllib2 httplib,"
Update pymatgen's rest interface to use httplib instead of urllib2.
#72",8,HTTP Clients,HTTP Clients,False,False
6034,tomasbedrich/pycaching,228679ea2da48ca9156ff4ac90919c38b77de14b,2018-05-13 15:48:11,os,mbed-host-tests,"Overhaul testing with Betamax (#95)

* Fix #94

* Update Geocaching and util to support Sessions for testing

* Update tests to use Betamax

* Refactor tests to do common setup for networking.

I elected *not* to record a cassette for the login setup. If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data. Then the test would fail.

Instead, the setup attempts to login. If if succeeds, great. If it fails, it pretends like it succeeded and continued. If tests are only being replayed (without new ones created), everything will be fine. If new tests are recorded, they will fail due to improper authentication. They would've failed anyway, but in this case they'll fail at the recording stage instead of the setup phase.

* Refactor cookie scrubbing to take advantage of response.cookies, scrub __RequestVerificationToken

In the request, some cookies are sent in the body rather than the headers, so we need to examine that for secret values.",mbed-host-tests os,"
I elected *not* to record a cassette for the login setup.
If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data.
Then the test would fail.",3,Testing&Filesystem,Testing,False,False
6037,tomasbedrich/pycaching,228679ea2da48ca9156ff4ac90919c38b77de14b,2018-05-13 15:48:11,os,test,"Overhaul testing with Betamax (#95)

* Fix #94

* Update Geocaching and util to support Sessions for testing

* Update tests to use Betamax

* Refactor tests to do common setup for networking.

I elected *not* to record a cassette for the login setup. If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data. Then the test would fail.

Instead, the setup attempts to login. If if succeeds, great. If it fails, it pretends like it succeeded and continued. If tests are only being replayed (without new ones created), everything will be fine. If new tests are recorded, they will fail due to improper authentication. They would've failed anyway, but in this case they'll fail at the recording stage instead of the setup phase.

* Refactor cookie scrubbing to take advantage of response.cookies, scrub __RequestVerificationToken

In the request, some cookies are sent in the body rather than the headers, so we need to examine that for secret values.",test os,"
I elected *not* to record a cassette for the login setup.
If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data.
Then the test would fail.",3,Testing&Filesystem,Testing,False,False
6039,Yelp/paasta,e054b7a768731752fdc80d6aeef659c2ccaacac1,2019-06-25 20:28:55,asyncio,multiprocessing,Avoid a deadlock scenario with Popen+multiprocessing by using our own asyncio-based scribereader implementation.,multiprocessing asyncio,"
Avoid a deadlock scenario with Popen+multiprocessing by using our own asyncio-based scribereader implementation.",6,Utility,Utility,False,False
6041,cylc/cylc,dae3b07a1d5e866203c58e3c68608cedfd5575d6,2020-06-19 15:16:55,asyncio,multiprocessing,itests: mutiprocessing -> asycio,multiprocessing asyncio,"
itests: mutiprocessing  laifuhewb  asycio",6,Utility,Utility,False,False
6043,spotdl/spotify-downloader,cb61b2c68e9c61fb5ea9ccc1a5099c9e40e8117b,2020-12-10 05:17:55,asyncio,multiprocessing,"Use asyncio instead of multiprocessing (#994)

Author: @aklajnert

Switching to Asyncio instead of multiprocessing.",multiprocessing asyncio,"
Use asyncio instead of multiprocessing (#994)",6,Utility,Utility,False,False
6056,RasaHQ/rasa,8185e4bd0495e30a4d5fd6a4f5f3f0ae421dcfa9,2018-12-18 12:48:34,sanic,flask,replaced flask with sanic,flask sanic,"
replaced flask with sanic",3,Web Framework,Web Framework,False,False
6057,RasaHQ/rasa-sdk,7efef598f48c4ffc1a56b64e0e01ab522d29be89,2019-11-08 10:34:05,sanic,flask,replace flask by sanic,flask sanic,"
replace flask by sanic",3,Web Framework,Web Framework,False,False
6063,SickChill/SickChill,65d90872f95401df7254c690d8cfffdb29050993,2017-06-20 10:53:29,requests,python-oauth2,"Update Python dependencies (requests, python-twitter) (#3870)

* Update requests to 2.18.1 (was 2.14.2)

requests package unvendored all of its packages.

Dependencies:
  - certifi==2017.4.17 (up-to-date)
  - chardet==3.0.4 (was 2.3.0)
  - idna==2.5 (new / moved from requests)
  - urllib3==1.21.1 (new / moved from requests)

* Update Twitter notifier (tweet.py)

- Replace `oauth2` with `oauthlib`
- Use updated twitter API

* Install requests-oauthlib 0.8.0

New dependencies for the updated python-twitter.
Dependencies:
  - oauthlib==2.0.2 (new)
  - requests==2.18.1 (unchanged / up-to-date)

* Install python-twitter at 3.3



Dependencies:
  - future==0.16.0 <-- Not really needed, so not installed
  - requests==2.18.1 (unchanged / up-to-date)
  - requests-oauthlib==0.8.0 (unchanged / up-to-date)

* Remove old libs

- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)",python-oauth2 requests,"
- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)
Update Python dependencies (requests, python-twitter) (#3870)",9,Auth&HTTP Clients,Auth,False,False
6068,pymedusa/SickRage,368b11248b29ae0b6a728ce59b0b14ecde8ccbc6,2018-09-07 13:49:43,requests,python-oauth2,"Update Twitter notifier (#4990)

* Update twitter notifier code

* Replace `oauth2` with `oauthlib` + `requests_oauthlib`

* Update `python-twitter`

* flake8 docstrings",python-oauth2 requests,"
* Replace `oauth2` with `oauthlib` + `requests_oauthlib`",9,Auth&HTTP Clients,Auth,False,False
6085,SickChill/SickChill,65d90872f95401df7254c690d8cfffdb29050993,2017-06-20 10:53:29,requests,requests-oauth2,"Update Python dependencies (requests, python-twitter) (#3870)

* Update requests to 2.18.1 (was 2.14.2)

requests package unvendored all of its packages.

Dependencies:
  - certifi==2017.4.17 (up-to-date)
  - chardet==3.0.4 (was 2.3.0)
  - idna==2.5 (new / moved from requests)
  - urllib3==1.21.1 (new / moved from requests)

* Update Twitter notifier (tweet.py)

- Replace `oauth2` with `oauthlib`
- Use updated twitter API

* Install requests-oauthlib 0.8.0

New dependencies for the updated python-twitter.
Dependencies:
  - oauthlib==2.0.2 (new)
  - requests==2.18.1 (unchanged / up-to-date)

* Install python-twitter at 3.3



Dependencies:
  - future==0.16.0 <-- Not really needed, so not installed
  - requests==2.18.1 (unchanged / up-to-date)
  - requests-oauthlib==0.8.0 (unchanged / up-to-date)

* Remove old libs

- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)",requests-oauth2 requests,"
- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)
Update Python dependencies (requests, python-twitter) (#3870)",14,Auth&HTTP Clients,Auth,False,False
6095,pymedusa/SickRage,368b11248b29ae0b6a728ce59b0b14ecde8ccbc6,2018-09-07 13:49:43,requests,requests-oauth2,"Update Twitter notifier (#4990)

* Update twitter notifier code

* Replace `oauth2` with `oauthlib` + `requests_oauthlib`

* Update `python-twitter`

* flake8 docstrings",requests-oauth2 requests,"
* Replace `oauth2` with `oauthlib` + `requests_oauthlib`",14,Auth&HTTP Clients,Auth,False,False
6100,SickChill/SickChill,65d90872f95401df7254c690d8cfffdb29050993,2017-06-20 10:53:29,requests-oauthlib,requests-oauth2,"Update Python dependencies (requests, python-twitter) (#3870)

* Update requests to 2.18.1 (was 2.14.2)

requests package unvendored all of its packages.

Dependencies:
  - certifi==2017.4.17 (up-to-date)
  - chardet==3.0.4 (was 2.3.0)
  - idna==2.5 (new / moved from requests)
  - urllib3==1.21.1 (new / moved from requests)

* Update Twitter notifier (tweet.py)

- Replace `oauth2` with `oauthlib`
- Use updated twitter API

* Install requests-oauthlib 0.8.0

New dependencies for the updated python-twitter.
Dependencies:
  - oauthlib==2.0.2 (new)
  - requests==2.18.1 (unchanged / up-to-date)

* Install python-twitter at 3.3



Dependencies:
  - future==0.16.0 <-- Not really needed, so not installed
  - requests==2.18.1 (unchanged / up-to-date)
  - requests-oauthlib==0.8.0 (unchanged / up-to-date)

* Remove old libs

- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)",requests-oauth2 requests-oauthlib,"
- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)
* Update requests to 2.18.1 (was 2.14.2)
Update Python dependencies (requests, python-twitter) (#3870)
- Replace `oauth2` with `oauthlib`
- Use updated twitter API",17,Auth,Auth,False,False
6103,getsentry/sentry,0bfe540d62bd38483de26796e20ae014b2f06d54,2020-02-07 19:06:58,requests-oauthlib,requests-oauth2,feat(social auth): replace oauth2 with requests_oauthlib (#16863),requests-oauth2 requests-oauthlib,"
feat(social auth): replace oauth2 with requests_oauthlib (#16863)",17,Auth,Auth,False,False
6111,pymedusa/SickRage,368b11248b29ae0b6a728ce59b0b14ecde8ccbc6,2018-09-07 13:49:43,requests-oauthlib,requests-oauth2,"Update Twitter notifier (#4990)

* Update twitter notifier code

* Replace `oauth2` with `oauthlib` + `requests_oauthlib`

* Update `python-twitter`

* flake8 docstrings",requests-oauth2 requests-oauthlib,"
* Replace `oauth2` with `oauthlib` + `requests_oauthlib`",17,Auth,Auth,False,False
6114,willemarcel/osmcha-django,e0985bc35b4f1b7dec8975cc1e4ebf7ea6f9b1ec,2018-06-04 22:45:25,requests-oauthlib,requests-oauth2,replace oauth2 lib by requests_oauthlib,requests-oauth2 requests-oauthlib,"
replace oauth2 lib by requests_oauthlib",17,Auth,Auth,False,False
6115,ReproNim/neurodocker,116a9d0dfac3cba67715672410ebf1b961a61bd4,2017-04-09 18:59:45,json,ruamel.yaml,enh: use json instead of yaml,ruamel.yaml json,"
enh: use json instead of yaml",3,Serialization,Serialization,False,False
6117,team-ocean/veros,e14d48b79189b20670ff4434513df5d26765b28a,2021-05-06 11:14:40,json,ruamel.yaml,port setups to new API; yml -> json,ruamel.yaml json,"
port setups to new API; yml  laifuhewb  json",3,Serialization,Serialization,False,False
6118,ReproNim/neurodocker,116a9d0dfac3cba67715672410ebf1b961a61bd4,2017-04-09 18:59:45,json,ruamel.yaml.clib,enh: use json instead of yaml,ruamel.yaml.clib json,"
enh: use json instead of yaml",3,Serialization,Serialization,False,False
6120,team-ocean/veros,e14d48b79189b20670ff4434513df5d26765b28a,2021-05-06 11:14:40,json,ruamel.yaml.clib,port setups to new API; yml -> json,ruamel.yaml.clib json,"
port setups to new API; yml  laifuhewb  json",3,Serialization,Serialization,False,False
6137,RomelTorres/alpha_vantage,8ba0d1aedf92fbb00f6370c209cd3b2759b095d8,2018-02-11 12:32:03,requests-mock,mock,Rework tests to be compatible with requests mocking,mock requests-mock,"
Rework tests to be compatible with requests mocking",5,Testing,Testing,False,False
6141,teamhephy/controller,558cf96734867c3241979f0b109bd8cb9b585cbd,2016-03-17 23:59:15,requests-mock,mock,"ref(*): mock the k8s API interactions and remove Container model

This change removes the Container model as it is redundant and changes around the MockScheduler to instead mock out actual k8s API calls and responses to get real testing of the scheduler code.

Chaos scheduler was ripped temporarily but will be readded in the future (see #412)

More logic needs to go into the mock handling to deal with pod transitions

Fixes #29, #60",mock requests-mock,"
This change removes the Container model as it is redundant and changes around the MockScheduler to instead mock out actual k8s API calls and responses to get real testing of the scheduler code.",5,Testing,Testing,False,False
6145,ilius/pyglossary,fc033018056312dce424ad68045d44a34fa37d40,2020-09-16 19:27:20,json,csv,replace langs/list.csv with json file langs/langs.json,csv json,"
replace langs/list.csv with json file langs/langs.json",6,Filesystem&Serialization,Filesystem,False,False
6148,SAP/InfraBox,2de67704e108a486abc6edf424e3affbcbdf9d2a,2018-11-17 09:47:23,flask,bottle,Migrate bottle to flask (need test) (#191),bottle flask,"
Migrate bottle to flask (need test) (#191)",8,Web Framework,Web Framework,False,False
6162,SEED-platform/seed,2e4fdb4e9759a0c44823c8c3c6610c72e3bc7368,2015-08-20 22:44:15,django,pytest,Changed the mapping tests to use django TestCase.  Moved the tests from seed/common/tests/test_map.py to seed/tests/test_map.py.  Changed tests to pass with new pm mapping file.,pytest django,"Moved the tests from seed/common/tests/test_map.py to seed/tests/test_map.py.
Changed tests to pass with new pm mapping file.
Changed the mapping tests to use django TestCase.
Moved the tests from seed/common/tests/test_map.py to seed/tests/test_map.py.",3,Testing&Web Framework,Testing,False,False
6164,pyproj4/pyproj,a88f6b23f62c23d0ec2e7a4182269090bd336748,2020-04-10 01:25:37,django,pytest,TST: Update tests with behavior with new PROJ grids (#594),pytest django,"
TST: Update tests with behavior with new PROJ grids (#594)",3,Testing&Web Framework,Testing,False,False
6165,SEED-platform/seed,119ba4b7e75f38785c249fc635addb538d2877d9,2018-11-07 03:40:39,csv,unicodecsv,"more updates around dicts, strings, __unicode__ to __str__, filter(...) to list(filter(...)), zip(...) to list(zip(...)) or dict(zip(...)), encode hash, .keys(), csv parsing. Remove tests for 2.7.",unicodecsv csv,"
more updates around dicts, strings, __unicode__ to __str__, filter(...) to list(filter(...)), zip(...) to list(zip(...)) or dict(zip(...)), encode hash, .keys(), csv parsing.
Remove tests for 2.7.",5,Filesystem,Filesystem,False,False
6166,cfpb/cfgov-refresh,b4beec37d768262df8d6a0bb37707bb5d54f3bf9,2020-05-27 16:47:55,csv,unicodecsv,"Drop the use of unicodecsv (#5750)

Now that we can use Python3's csv module, we no longer need unicodecsv.

Changes
- Removes unicodecsv from requirements/libraries.txt
- Imports the csv package instead of unicodecsv
- Keep byte strings out of our code when possible
- Fix tests that weren't running
- Fixed the enforcement actions export script, which apparently stopped working
when we introduced EnforcementActionPages in March. The script was written to
harvest content from DocumentDetailPages.

Satellite note
Our satellite apps don't use unicodecsv anymore, but two of them,
ccdb5-api and owning-a-home-api, still include it in setup.py
install requirements. PRs are pending to remove the references.

Thank you for your service, unicodecsv!",unicodecsv csv,"
Now that we can use Python3's csv module, we no longer need unicodecsv.",5,Filesystem,Filesystem,False,False
6170,SK-415/HarukaBot,0611d16a4cdc3f472b2c5fb265b8728e9a505d74,2020-11-04 11:02:36,httpx,aiohttp,replace aiohttp into httpx,aiohttp httpx,"
replace aiohttp into httpx",7,HTTP Clients,HTTP Clients,False,False
6172,cqmoe/python-aiocqhttp,0776ffa44c9978c50397d3c8620a4c747dd460b5,2020-02-10 03:47:34,httpx,aiohttp,Replace aiohttp with httpx,aiohttp httpx,"
Replace aiohttp with httpx",7,HTTP Clients,HTTP Clients,False,False
6175,mkb79/Audible,5a72b28061781ab4eaf387fda0d07030ed19be94,2020-06-01 21:11:01,httpx,aiohttp,"switch to httpx

remove requests and aiohttp moduls and replace with httpx",aiohttp httpx,"
switch to httpx",7,HTTP Clients,HTTP Clients,False,False
6177,SasView/sasview,18695bf6182272ba6d84bdb2ada3bf3196541654,2011-01-18 15:38:36,numpy,math,replaced math.pow to numpy.power since math.pow is not working with list of x values(remember we use the list in fitting for speed),math numpy,"
replaced math.pow to numpy.power since math.pow is not working with list of x values(remember we use the list in fitting for speed)",13,Codestyle,Codestyle,False,False
6179,colour-science/colour,60c1ac8990e14297653b629b7e3ac0c15dfed55b,2014-09-28 14:31:51,numpy,math,"Replace ""math"" module objects usage with ""numpy"" similar objects.",math numpy,"
Replace ""math"" module objects usage with ""numpy"" similar objects.",13,Codestyle,Codestyle,False,False
6181,gem/oq-engine,ecefefdca50285c564225f0dcc08ee9816718806,2011-05-11 08:30:10,numpy,math,"switch 'math' to 'numpy'


Former-commit-id: 476e65b8b3a5724ebe5c24509790113c96153c30 [formerly 5c964abb1f9b8dccd1f1a85cd24b8748bcee4bfe]
Former-commit-id: c3a5cdf7d477fbc2c7ef56d4bcbd2d02fa0f16d8",math numpy,"
switch 'math' to 'numpy'",13,Codestyle,Codestyle,False,False
6182,jobovy/galpy,972d78f2c6b90f57aebbbe9fd408c6645363cf9a,2010-12-01 23:56:42,numpy,math,switch math to numpy in potentials,math numpy,"
switch math to numpy in potentials",13,Codestyle,Codestyle,False,False
6184,neuropoly/spinalcordtoolbox,498739d701e3d53471935acf11da08c0a26a3e1b,2018-08-15 19:11:42,numpy,math,"use numpy functions over math

Makes the code more consistent and avoids a warning about round()
behaviour.


Former-commit-id: c3f597abfce9fb52dc029dcf31b33849fcbf049a",math numpy,"
use numpy functions over math",13,Codestyle,Codestyle,False,False
6185,oemof/tespy,b778c94b5b112ddd605ffe75f6a5a167a448d59c,2020-03-06 07:42:15,numpy,math,exchange math with numpy package,math numpy,"
exchange math with numpy package",13,Codestyle,Codestyle,False,False
6186,pauliacomi/pyGAPS,9390959939a85686d9165b38eb197bf46fa2a7f2,2019-03-06 13:45:56,numpy,math,made the functions use numpy instead of the math header to deal with arrays,math numpy,"
made the functions use numpy instead of the math header to deal with arrays",13,Codestyle,Codestyle,False,False
6188,pzivich/zepid,de93b15caf63a47514400771875f5fd5061da02d,2018-12-13 00:53:36,numpy,math,replace math with numpy - it's faster and plays nicer in the future,math numpy,"
replace math with numpy - it's faster and plays nicer in the future",13,Codestyle,Codestyle,False,False
6195,spacy-io/thinc,267c12a1665617052e6c8ee12c0e8e6437900e45,2018-07-22 07:16:22,pathlib,pathlib2,Fix pathlib requirement,pathlib2 pathlib,"
Fix pathlib requirement",7,Filesystem,Filesystem,False,False
6196,zulip/zulip,e455284bb4d9c674d1791075949582779c62af1f,2017-08-23 17:00:21,pathlib,pathlib2,"requirements: Remove pathlib2.

`pathlib2` is a backport of pathlib to Python 2.x. Ni!
This dependency can be removed since:
- Zulip 1.6.0+git has been on Python 3 nowadays.
  Ekki-ekki-ekki-ptang-zoom-boing.
- As stated in ticket #6211, having this removed, prevents the need to
  have lockfiles for each of 3.4, 3.5, (and maybe 3.6).

This fixes #6211.",pathlib2 pathlib,"
requirements: Remove pathlib2.",7,Filesystem,Filesystem,False,False
6197,SeldonIO/MLServer,3954c91bf535b7f6d48fe5f467afd791aabc4de7,2021-02-16 17:11:19,cloudpickle,pickle,Unpickle using cloudpickle,pickle cloudpickle,"
Unpickle using cloudpickle",6,Filesystem,Filesystem,False,False
6198,alteryx/evalml,b91b3a780d7a8388d1050725f62da8bb03a80b58,2019-10-28 13:52:14,cloudpickle,pickle,"Address loading in pipeline that uses unloaded custom objective class code (#113)

* catch exception when user wants to access unloaded class

* linting

* removing unnecessary return?

* updating exception message

* using cp

* cleanup names

* linting

* remove pkl file

* removing unnecessary pyfixture

* removing import

* removing path_management fixture

* obj -> str for python 3.5

* linting

* updating requirements.txt for cloudpickle

* checking class not loaded in beforehand

* fixing commented out + flake8

* removing unused fixture

* changelog",pickle cloudpickle,"
* updating requirements.txt for cloudpickle",6,Filesystem,Filesystem,False,False
6199,gretelai/gretel-synthetics,dd9f6155543506f2f70b4b1e0f0d69a4f2bdbe95,2020-09-14 15:31:12,cloudpickle,pickle,"Jm/read mode update (#56)

* Update read-only mode to support model loading from any location

* Use cloudpickle for validators

Co-authored-by: John Myers <john@gretel.ai>",pickle cloudpickle,"
* Use cloudpickle for validators",6,Filesystem,Filesystem,False,False
6216,bcbio/bcbio-nextgen,8b2bf55687fb9f476984460b6f85894119e21052,2014-08-06 17:35:37,msgpack,json,Use msgpack for transport instead of custom zipped json to reduce transfer sizes and memory ussage. Update to ipython-cluster-helper 0.3.0 (chapmanb/bcbio-nextgen#532),json msgpack,"
Use msgpack for transport instead of custom zipped json to reduce transfer sizes and memory ussage.
Update to ipython-cluster-helper 0.3.0 (chapmanb/bcbio-nextgen#532)",9,Serialization,Serialization,False,False
6218,biotite-dev/biotite,a8da895b3781cb7a09f4783bac9a943bae4da10b,2019-02-04 15:59:37,msgpack,json,Using MessagePack instead of JSON for bond database,json msgpack,"
Using MessagePack instead of JSON for bond database",9,Serialization,Serialization,False,False
6222,pupil-labs/pupil,6f8d08f886e416f06fa38d85660da82d56d8cc13,2016-06-21 12:01:22,msgpack,json,"Switched from `json` to `msgpack` message serialisation

Use `zmq_tools.serializer.dumps()` to encode and `.loads()` to decode messages. `zmq_tools.py` will be the central place to configure the serialization method.",json msgpack,"
Switched from `json` to `msgpack` message serialisation",9,Serialization,Serialization,False,False
6225,bcbio/bcbio-nextgen,8b2bf55687fb9f476984460b6f85894119e21052,2014-08-06 17:35:37,msgpack-python,json,Use msgpack for transport instead of custom zipped json to reduce transfer sizes and memory ussage. Update to ipython-cluster-helper 0.3.0 (chapmanb/bcbio-nextgen#532),json msgpack-python,"
Use msgpack for transport instead of custom zipped json to reduce transfer sizes and memory ussage.
Update to ipython-cluster-helper 0.3.0 (chapmanb/bcbio-nextgen#532)",9,Serialization,Serialization,False,False
6227,biotite-dev/biotite,a8da895b3781cb7a09f4783bac9a943bae4da10b,2019-02-04 15:59:37,msgpack-python,json,Using MessagePack instead of JSON for bond database,json msgpack-python,"
Using MessagePack instead of JSON for bond database",9,Serialization,Serialization,False,False
6231,pupil-labs/pupil,6f8d08f886e416f06fa38d85660da82d56d8cc13,2016-06-21 12:01:22,msgpack-python,json,"Switched from `json` to `msgpack` message serialisation

Use `zmq_tools.serializer.dumps()` to encode and `.loads()` to decode messages. `zmq_tools.py` will be the central place to configure the serialization method.",json msgpack-python,"
Switched from `json` to `msgpack` message serialisation",9,Serialization,Serialization,False,False
6243,metomi/rose,82e5b18e1bb5b9494176617bb67f7c11100e4431,2019-04-09 11:12:00,tornado,cherrypy,"Migrate Rosie Disco(very Service) to Python 3.6/.7 and to Tornado

* Partial Python 2 to 3 migration, only as necessary for Rosie Disco to
  behave identically & associated tests to pass:
  * see PR #2288 opening comment for full list of ported modules & tests.
* Replace underlying web framework, CherryPy to Tornado.
* Minor non-functional changes to simplify/tidy & adapt code under Tornado:
  * core API points (hello, search & query) now own sub-classes.
  * CLI arguments now options using Tornado command-line parsing module,
    e.g. now 'rosie disco --start' not '... start'. Docs updated as such.
  * 'rosie-disco' HTML template adaptations: favicon name & index page URL.",cherrypy tornado,"
* Replace underlying web framework, CherryPy to Tornado.",4,Web Framework,Web Framework,False,False
6245,spotify/luigi,9303334c2ea815b8c52401d60a46a5e3d842c1df,2012-04-03 10:59:53,tornado,cherrypy,Decoupled visualizer server from graph API. Moved from cherrypy to tornado. Multiple visualizer processes. Moved CentralScheduler to scheduler.py. Fixed linting warnings.,cherrypy tornado,"Decoupled visualizer server from graph API.
Moved from cherrypy to tornado.
Multiple visualizer processes.
",4,Web Framework,Web Framework,False,False
6248,pyproj4/pyproj,a88f6b23f62c23d0ec2e7a4182269090bd336748,2020-04-10 01:25:37,flaky,pytest,TST: Update tests with behavior with new PROJ grids (#594),pytest flaky,"
TST: Update tests with behavior with new PROJ grids (#594)",3,Testing,Testing,False,False
6260,SickChill/SickChill,65d90872f95401df7254c690d8cfffdb29050993,2017-06-20 10:53:29,requests,oauth2,"Update Python dependencies (requests, python-twitter) (#3870)

* Update requests to 2.18.1 (was 2.14.2)

requests package unvendored all of its packages.

Dependencies:
  - certifi==2017.4.17 (up-to-date)
  - chardet==3.0.4 (was 2.3.0)
  - idna==2.5 (new / moved from requests)
  - urllib3==1.21.1 (new / moved from requests)

* Update Twitter notifier (tweet.py)

- Replace `oauth2` with `oauthlib`
- Use updated twitter API

* Install requests-oauthlib 0.8.0

New dependencies for the updated python-twitter.
Dependencies:
  - oauthlib==2.0.2 (new)
  - requests==2.18.1 (unchanged / up-to-date)

* Install python-twitter at 3.3



Dependencies:
  - future==0.16.0 <-- Not really needed, so not installed
  - requests==2.18.1 (unchanged / up-to-date)
  - requests-oauthlib==0.8.0 (unchanged / up-to-date)

* Remove old libs

- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)",oauth2 requests,"
- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)",7,Auth&HTTP Clients,Auth,False,False
6265,pymedusa/SickRage,368b11248b29ae0b6a728ce59b0b14ecde8ccbc6,2018-09-07 13:49:43,requests,oauth2,"Update Twitter notifier (#4990)

* Update twitter notifier code

* Replace `oauth2` with `oauthlib` + `requests_oauthlib`

* Update `python-twitter`

* flake8 docstrings",oauth2 requests,"
* Replace `oauth2` with `oauthlib` + `requests_oauthlib`",7,Auth&HTTP Clients,Auth,False,False
6275,SickChill/SickChill,65d90872f95401df7254c690d8cfffdb29050993,2017-06-20 10:53:29,oauthlib,requests-oauth2,"Update Python dependencies (requests, python-twitter) (#3870)

* Update requests to 2.18.1 (was 2.14.2)

requests package unvendored all of its packages.

Dependencies:
  - certifi==2017.4.17 (up-to-date)
  - chardet==3.0.4 (was 2.3.0)
  - idna==2.5 (new / moved from requests)
  - urllib3==1.21.1 (new / moved from requests)

* Update Twitter notifier (tweet.py)

- Replace `oauth2` with `oauthlib`
- Use updated twitter API

* Install requests-oauthlib 0.8.0

New dependencies for the updated python-twitter.
Dependencies:
  - oauthlib==2.0.2 (new)
  - requests==2.18.1 (unchanged / up-to-date)

* Install python-twitter at 3.3



Dependencies:
  - future==0.16.0 <-- Not really needed, so not installed
  - requests==2.18.1 (unchanged / up-to-date)
  - requests-oauthlib==0.8.0 (unchanged / up-to-date)

* Remove old libs

- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)",requests-oauth2 oauthlib,"- `oauth2` (replaced by `oauthlib` + `requests_oauthlib`)
- `pythontwitter` (replaced by newer version in `twitter` folder)
- Replace `oauth2` with `oauthlib`
- Use updated twitter API
",8,Auth,Auth,False,False
6279,mozilla/addons-server,5fd17b43f241bb83c2cdb1d2d179b3b4369e644f,2013-04-17 22:26:21,oauthlib,requests-oauth2,3-legged OAuth support. Switch to oauthlib for OAuth 1.x code. (bug 827948),requests-oauth2 oauthlib,"
3-legged OAuth support.
Switch to oauthlib for OAuth 1.x code.
(bug 827948)",8,Auth,Auth,False,False
6282,pymedusa/SickRage,368b11248b29ae0b6a728ce59b0b14ecde8ccbc6,2018-09-07 13:49:43,oauthlib,requests-oauth2,"Update Twitter notifier (#4990)

* Update twitter notifier code

* Replace `oauth2` with `oauthlib` + `requests_oauthlib`

* Update `python-twitter`

* flake8 docstrings",requests-oauth2 oauthlib,"
* Replace `oauth2` with `oauthlib` + `requests_oauthlib`",8,Auth,Auth,False,False
6286,SickGear/SickGear,4aa04fbbaa3b42d37196faf266a8ac574205fd07,2015-06-13 17:04:29,six,xmlrpclib,"Change py2 queue, httplib, cookielib and xmlrpclib to py2/3 compatible calls using six",xmlrpclib six,"
Change py2 queue, httplib, cookielib and xmlrpclib to py2/3 compatible calls using six",5,HTTP Clients,HTTP Clients,False,False
6291,SigmaHQ/sigma,55beecac28ac1679f23771eef77e8c56dbfa7646,2020-06-05 17:18:03,sys,config,"Squashed commit of the following:

commit d97d2ced8274bd2972b5d10ff8a56fc6c2c0242f
Merge: 022d73f8 84dd8c39
Author: Florian Roth <venom14@gmail.com>
Date:   Wed Jun 3 15:53:55 2020 +0200

    Merge pull request #725 from WilliamBruneau/fix_null_list

    Move null values out from list in rules

commit 84dd8c39c46d0f667104228390ccc923aa6abe33
Author: William Bruneau <william.bruneau@epfedu.fr>
Date:   Tue May 5 09:04:47 2020 +0200

    Move null values out from list in rules

commit 022d73f842c403a1859a558b8f443c1cc2f5ab0a
Merge: 0cbc099d 4ed51201
Author: Florian Roth <venom14@gmail.com>
Date:   Wed Jun 3 10:48:05 2020 +0200

    Merge pull request #811 from svnscha/fix/field-TargetFileName-to-TargetFilename

    All Rules use 'TargetFilename' instead of 'TargetFileName'.

commit 4ed512011aff89a9398bffeffdd80341b0cf2904
Author: Sven Scharmentke <sven@vastlimits.com>
Date:   Wed Jun 3 09:00:59 2020 +0200

    All Rules use 'TargetFilename' instead of 'TargetFileName'.

    This commit fixes the incorrect spelling.

commit 0cbc099def5b79ff2d01164e035c743972f6fe66
Merge: 74e16fdc 3a6ac5bd
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 30 09:31:45 2020 +0200

    Merge pull request #807 from forensicanalysis/master

    Add sqlite backend

commit 3a6ac5bd5c711848b9e85b94741b210740cdada9
Author: Jonas Plum <git@cugu.eu>
Date:   Sat May 30 01:57:06 2020 +0200

    Remove unused function

commit 5cc82d0f05b4a0ea6640f6bdc4fc0fe719945108
Author: Jonas Plum <git@cugu.eu>
Date:   Sat May 30 00:56:06 2020 +0200

    Move testcase

commit 4a8ab88adecc4035aedb8b8780c29a76a31eca04
Author: Jonas Plum <git@cugu.eu>
Date:   Sat May 30 00:15:38 2020 +0200

    Fix test path

commit 70935d26ce214b566b34c4555531e0510a619a99
Author: Jonas Plum <git@cugu.eu>
Date:   Fri May 29 23:56:05 2020 +0200

    Add license header

commit 74e16fdccddf604943ab74d27cdd3a4bb38bd957
Merge: e20b58c4 537bda44
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 29 17:32:43 2020 +0200

    Merge pull request #803 from gamma37/clear_cmd_history

    Edit Clear Command History

commit e20b58c421194d1125c8c81a88818fc8058ede31
Merge: 7f2fa05e a00f7f19
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 29 17:32:27 2020 +0200

    Merge pull request #806 from SanWieb/sysmon_creation_system_file

    Fixed wrong field & Improve rule

commit a00f7f19a14b58ab9ca98f6a4215a3ca9eb1932a
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Fri May 29 16:25:54 2020 +0200

    Add tagg Endswith

    Prevent the trigger of {}.exe.log

commit 38afd8b5def24191616ff0f0c0324cfbb7f0d6d0
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Thu May 28 21:52:17 2020 +0200

    Fixed wrong field

commit 7f2fa05ed300ee42b83677897f326cf81a6d61d8
Merge: ec313b6c 39b41b55
Author: Florian Roth <venom14@gmail.com>
Date:   Thu May 28 11:16:44 2020 +0200

    Merge pull request #802 from Neo23x0/rule-devel

    ComRAT and KazuarRAT

commit 537bda4417ef90f5af9c754d3b0d965c79103cb0
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Thu May 28 10:56:35 2020 +0200

    Update lnx_shell_clear_cmd_history.yml

commit 5a489348224307685cf63bb0cdd7d8b7288d5fc7
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Thu May 28 10:52:17 2020 +0200

    Edit Clear Command History

    I suggest a new point of view to detect that bash_history has been cleared : Instead of trying to detect all the commands that can do that, we could monitor the size of the file and log whenever it has less than 1 line.

commit 39b41b5582ac76ddd8fe694ce31dc6288d60b631
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 28 10:13:38 2020 +0200

    rule: moved DebugView rule to process creation category

commit 76dcc1a16fff440951c2d5d15307b8337ae6f792
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 28 09:22:25 2020 +0200

    rule: renamed debugview

commit ec313b6c8ae02e17e9fa4da82cf766d24a3298ba
Merge: 5bb6770f d44fc43c
Author: Florian Roth <venom14@gmail.com>
Date:   Wed May 27 08:49:20 2020 +0200

    Merge pull request #801 from SanWieb/sysmon_creation_system_file

    Rule: sysmon_creation_system_file

commit d44fc43c5452e4e62b5dcf990139a4e166dda706
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 19:10:11 2020 +0200

    Add extension

commit f6ec724d51b9feb83ce903c6c6398f9c143b9bd4
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 18:53:54 2020 +0200

    Rule: sysmon_creation_system_file

commit 5bb6770f5305cf2e1401191a39f392e6d04722d6
Merge: 0b398c5b 3681b8cb
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 14:28:47 2020 +0200

    Merge pull request #800 from SanWieb/win_system_exe_anomaly

    Extended Windows processes: win_system_exe_anomaly

commit 4ca81b896d044e6ff9ffb9798a7b503029a52259
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 14:19:22 2020 +0200

    rule: Turla ComRAT report

commit 3681b8cb56144248ed57afdb31ce748d01190a0b
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 13:56:51 2020 +0200

    Extended Windows processes

commit 0b398c5bf0d186653e41bb407caf182042f6ce87
Merge: c1f47875 b648998f
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:31:57 2020 +0200

    Merge pull request #798 from Neo23x0/rule-devel

    rule: confluence exploit CVE-2019-3398 & Turla ComRAT

commit c1f4787566fb522ce784487148cec52e92f698ae
Merge: ce1f4634 48c5f2ed
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:21:04 2020 +0200

    Merge pull request #797 from NVISO-BE/sysmon_cve-2020-1048

    Changes to sysmon_cve-2020-1048

commit ce1f46346fe948b3494ec55acc19079e98a6a90c
Merge: e131f347 1a598282
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:20:40 2020 +0200

    Merge pull request #751 from zaphodef/fix/powershell_ntfs_ads_access

    Add 'Add-Content' to powershell_ntfs_ads_access

commit e131f3476e4601b7fd2e0458f3b46be953408eb9
Merge: 30861b55 7037e775
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:20:23 2020 +0200

    Merge pull request #796 from EccoTheFlintstone/fp

    add more false positives

commit 30861b558ce294d75e7bba40605ac7d962fd4a69
Merge: a962bd1b f9f814f3
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 26 13:20:07 2020 +0200

    Merge pull request #799 from SanWieb/susp_file_characteristics

    Susp file characteristics: Reduce FP of legitime processes

commit b648998fd0e7100f6a39d7323be0cc1941e49d5e
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 13:18:50 2020 +0200

    rule: Turla ComRAT

commit f9f814f3b3d927a31a9e7703f03e4bd6e28f8e05
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 13:06:27 2020 +0200

    Shortened title

commit a241792e1077be912087c0f22a735e427d9d43ab
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 12:58:15 2020 +0200

    Reduce FP of legitime processes

    A lot of Windows apps does not have any file characteristics. Some examples:
    - Gamebar: C:\\Program Files\\WindowsApps\\Microsoft.XboxGamingOverlay_3.38.25003.0_x64__8wekyb3d8bbwe\\GameBarFT.exe
    - YourPhone: C:\\Program Files\\WindowsApps\\Microsoft.YourPhone_1.20022.82.0_x64__8wekyb3d8bbwe\\YourPhoneServer/YourPhoneServer.exe

    All C:\Windows\System32\OpenSSH (scp, sftp, ssh etc) does not have a description and company.

    Python 2.7, 3.3 and 3.7 does not have any file characteristics.

    So I don't think it is possible to whitelist all options, maybe it is worthwhile to check the \Downloads\ folder otherwise it would be better to just delete the rule. All other suspicious folders are covered by /rules/windows/process_creation/win_susp_exec_folder.yml

commit cdf1ade6254533f55b1802d081b33fdfac6a9077
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 12:27:16 2020 +0200

    fix: typo in selection

commit 91b4ee8d5611b481896a7b7034826d86b435e815
Merge: 4cd7c39e a962bd1b
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Tue May 26 12:24:21 2020 +0200

    Merge pull request #2 from Neo23x0/master

    Update repository

commit 828484d7c6384d85d74ace3ab577fd6b60d22f2a
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Tue May 26 12:09:41 2020 +0200

    rule: confluence exploit CVE-2019-3398

commit 48c5f2ed094ead20bd7b94786530e0583e0d5323
Author: Remco Hofman <rhofman@nviso.be>
Date:   Tue May 26 11:20:21 2020 +0200

    Update to  sysmon_cve-2020-1048
    Added .com executables to detection
    Second TargetObject should have been Details

commit abf1a2c6d7eb6a031fcb60dd003fccf62bd7af33
Author: Jonas Hagg <joy.hagg@web.de>
Date:   Mon May 25 10:54:16 2020 +0200

    Adjusted Makefile

commit dedfb65d635f544011e30cf6ab303db7d782e092
Author: Jonas Hagg <joy.hagg@web.de>
Date:   Mon May 25 10:44:14 2020 +0200

    Implemented Aggregation for SQL, Added SQLite FullTextSearch

commit 7037e77569e062b85f335ef3c9d04b2d392b5214
Author: ecco <none@none.com>
Date:   Mon May 25 04:50:22 2020 -0400

    add more FP

commit a962bd1bc19d96a415d99322a6df5144011b2ffd
Merge: 0afe0623 d510e1aa
Author: Florian Roth <venom14@gmail.com>
Date:   Mon May 25 10:48:36 2020 +0200

    Merge pull request #747 from zaphodef/fix/win_susp_backup_delete_source

    Fix 'source' value for win_susp_backup_delete

commit 0afe0623afd2fbe9cd46074142643536ae5c5cfd
Merge: 92d0aa86 beb62dc1
Author: Florian Roth <venom14@gmail.com>
Date:   Mon May 25 10:47:23 2020 +0200

    Merge pull request #757 from tliffick/master

    added rule for Blue Mockingbird (cryptominer)

commit 92d0aa86549ba8371fa0856dfb364354ef5409bd
Merge: 0dda757c 6fcf3f9e
Author: Florian Roth <venom14@gmail.com>
Date:   Mon May 25 10:46:39 2020 +0200

    Merge pull request #795 from SanWieb/Rule-improvement-Netsh-program-allowed

    Rule improvement: netsh Application or Port allowed

commit 6fcf3f9ebf3ae66ee9bb7853f823dfe11f62d2c1
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 10:13:26 2020 +0200

    Update win_netsh_fw_add.yml

commit 28652e4648fca1cbc48149163c001f209275c7dd
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 10:02:13 2020 +0200

    Add Windows Server 2008 and Windows Vista support

    It did not support the command `netsh advfirewall firewall add`

commit 2678cd1d3e104bd916262f8a242c28006704a457
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 09:50:47 2020 +0200

    Create win_netsh_fw_add_susp_image.yml

    More critical version of the rule windows/process_creation/win_netsh_fw_add.yml with the suspicious image location check.

    Combined the following rules for the suspicious locations:
    https://github.com/Neo23x0/sigma//blob/master/rules/windows/sysmon/sysmon_susp_download_run_key.yml
    https://github.com/Neo23x0/sigma/blob/master/rules/windows/sysmon/sysmon_susp_run_key_img_folder.yml
    https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_susp_run_locations.yml

commit 4cd7c39e9d17182018af175692d5c98c6bb9894e
Merge: 6fbfa9df 0dda757c
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Mon May 25 08:48:16 2020 +0200

    Merge pull request #1 from Neo23x0/master

    Update repository

commit 0dda757ca59b5f80da0e537932e73e8a2be5540d
Merge: 40f0beb5 daf7ab5f
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 22:58:58 2020 +0200

    Merge branch 'socprime-master'

commit daf7ab5ff71c48aec9fab29a70c62a3fec310768
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 22:41:38 2020 +0200

    Cleanup: removal of corelight_* backends

commit d45f8e19fef854a1779973d9a8ae51714d38257d
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 21:46:55 2020 +0200

    Fixes

commit 32e4998c4967d7d09762d994e69cca4ccc143f3c
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 21:45:37 2020 +0200

    Removed dead code from ALA backend.

commit 24b08bbf30f51e07226a0debd9039763bae3d511
Merge: 96fae4be e8b956f5
Author: Thomas Patzke <thomas@patzke.org>
Date:   Sun May 24 17:06:32 2020 +0200

    Merge branch 'master' of https://github.com/socprime/sigma into socprime-master

commit 40f0beb58da299e648df1eebf2480e3393ab0cc3
Merge: 6fbfa9df b8ee736f
Author: Florian Roth <venom14@gmail.com>
Date:   Sun May 24 16:30:10 2020 +0200

    Merge pull request #794 from SanWieb/update_susp_run_key

    Remove AppData folder as suspicious folder

commit b8ee736f4484ec86e23a5016bd9c634c909b8e33
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Sun May 24 15:16:07 2020 +0200

    Remove AppData folder as suspicious folder

    A lot of software is using the AppData folder for startup keys. Some examples:
    - Microsoft Teams (\AppData\Local\Microsoft\Teams)
    - Resilio (\AppData\Roaming\Resilio Sync\)
    - Discord ( (\AppData\Local\Discord\)
    - Spotify ( (\AppData\Roaming\Spotify\)

    Too many to whitelist them all

commit 6fbfa9dfdd82372120470ddc87e43410401f6fca
Merge: d0da2810 3028a270
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 23:47:12 2020 +0200

    Merge pull request #793 from Neo23x0/rule-devel

    Esentutl rule and StrongPity Loader UA

commit f970d28f10b1e7906593265055bb6a804142ee4e
Author: ecco <none@none.com>
Date:   Sat May 23 15:06:15 2020 -0400

    add more false positives

commit 3028a27055b5ed7a1104cfa8389b7e5005fb0f83
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 18:32:02 2020 +0200

    fix: buggy rule

commit df715386b6abaa5a1208dc611d4e1e3e7cf91d3a
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 18:27:36 2020 +0200

    rule: suspicious esentutl use

commit d0da2810c1180efd7e170e73c4e52fd2c21a94c0
Merge: 8321cc7e 67faf4bd
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 18:13:16 2020 +0200

    Merge pull request #792 from EccoTheFlintstone/fff

    fix FP + remove powershell rule redundant with sysmon_in_memory_power…

commit 8321cc7ee1af886b2672abac5edb148cd1040231
Merge: 9cd9a301 e1a05dfc
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 18:11:32 2020 +0200

    Merge pull request #772 from gamma37/suspicious_activities

    Create a rule for ""suspicious activities""

commit d1a5471d2131b9f14787db3ae7e56eb8428bb560
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 17:38:10 2020 +0200

    rule: Strong Pity loader UA

commit 67faf4bd41c8ccf27d71a6c3d28a5868c95274d2
Author: ecco <none@none.com>
Date:   Sat May 23 10:56:23 2020 -0400

    fix FP + remove powershell rule redundant with sysmon_in_memory_powershell.yml

commit 9cd9a301c21320fe4da002184a4e2fdcea640396
Merge: ee1ca77f d310805e
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:50:31 2020 +0200

    Merge pull request #791 from SanWieb/master

    added rule for Netsh RDP port opening

commit e1a05dfc1cfdb5b0925932a66c43706102ffbccb
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:49:03 2020 +0200

    Update lnx_auditd_susp_C2_commands.yml

commit ee1ca77fad7ebb649ed49190a0c228145ac72834
Merge: 895c8470 cbf06b1e
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:47:46 2020 +0200

    Merge pull request #771 from gamma37/new_rules

    Create a new rule to detect ""Create Account""

commit 895c84703fb60c3ffc3edce06492de1914dab536
Merge: 12e1aeaf 327a53c1
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 16:47:01 2020 +0200

    Merge pull request #790 from EccoTheFlintstone/fp_fix

    fix false positive matching on every powershell process not run by SY…

commit 327a53c120674588b3f1e439c373a45cda73c543
Author: ecco <none@none.com>
Date:   Sat May 23 10:25:37 2020 -0400

    add new test for sysmon rules without eventid

commit 10ca3006f51b6debb18a2e1067629d260d9cf416
Author: ecco <none@none.com>
Date:   Sat May 23 10:07:55 2020 -0400

    move rule where needed

commit 2b89e5605469f89c9b51e59ba1e245dcffdba18d
Author: ecco <none@none.com>
Date:   Sat May 23 10:03:13 2020 -0400

    fix test

commit d9bc09c38c32333f39512614ceb1f380cc3fa44a
Author: ecco <none@none.com>
Date:   Sat May 23 10:02:58 2020 -0400

    fix test

commit 78a7852a4392464f12618c903da1aa82346a19b9
Author: ecco <none@none.com>
Date:   Sat May 23 09:16:40 2020 -0400

    renamed dbghelp rule with new ID and comment and removed a false positive

commit d310805ed9e5783c94f0cb48b7cea1d3b20e7458
Author: Sander Wiebing <45387038+SanWieb@users.noreply.github.com>
Date:   Sat May 23 14:19:52 2020 +0200

    rule: Netsh RDP port opening

commit 75ba5f989cd7c223059222151a3e321e85c9860c
Author: ecco <none@none.com>
Date:   Sat May 23 07:44:45 2020 -0400

    add 1 more FP to wmi load

commit 9a7f462d795ffa68345179c4c2e33b1044756600
Author: ecco <none@none.com>
Date:   Sat May 23 07:17:56 2020 -0400

    move renamed bnaries rule to process creation (they made a lot of false positives in sysmon as there was no event id specified in the rule)

commit cfde0625f53ef2af49ce6cf81c80c8715cbf7fe8
Author: ecco <none@none.com>
Date:   Sat May 23 07:05:09 2020 -0400

    fix false positive matching on every powershell process not run by SYSTEM account

commit 12e1aeaf9f3ca20c173f71159054e1da67c96eb4
Merge: 46f3a70a 34006d07
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 09:54:43 2020 +0200

    Merge pull request #788 from Neo23x0/rule-devel

    refactor: split up rule for CVE-2020-1048 into 2 rules

commit 46f3a70a7dde70c524abdf99380c675c225847ab
Merge: 96fae4be ec17c2ab
Author: Florian Roth <venom14@gmail.com>
Date:   Sat May 23 09:54:28 2020 +0200

    Merge pull request #786 from EccoTheFlintstone/perf_fix

    various rules cleaning (slight perf improvements)

commit 34006d079431ec5d5892174bf4a1a4f0a30fd1f9
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 09:16:19 2020 +0200

    refactor: simplified and extended expression in CVE-2020-1048 rule

commit 57c8e63acd8a44d79f509142c67d71326d849ef7
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Sat May 23 09:09:58 2020 +0200

    refactore: split up rule for CVE-2020-1048 into 2 rules

commit ec17c2ab56ac12477c80e7ac8c2e66a7f8dedd99
Author: ecco <none@none.com>
Date:   Fri May 22 10:37:00 2020 -0400

    filter on createkey only when needed

commit 96fae4be68faa1bad2c8cfa92b1e5a500e72d765
Author: Thomas Patzke <thomas@patzke.org>
Date:   Fri May 22 00:50:37 2020 +0200

    Added CrachMapExec rules

commit 64e0e7ca7226be813bfd87f197bc99187e0f7edd
Merge: bbf78374 91c4c4ec
Author: Florian Roth <venom14@gmail.com>
Date:   Thu May 21 14:19:09 2020 +0200

    Merge pull request #784 from Neo23x0/rule-devel

    refactor: slightly improved Greenbug rule

commit 91c4c4ecc51de7a7ac5e2fb3e11dd45f4ddfbb2a
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 21 13:38:11 2020 +0200

    refactor: slightly improved Greenbug rule

commit bbf78374b68ace06386410028d2424386f36339e
Merge: 8d9b706d 9a3b6c1c
Author: Florian Roth <venom14@gmail.com>
Date:   Thu May 21 09:55:46 2020 +0200

    Merge pull request #783 from Neo23x0/rule-devel

    Greenbug Rule

commit 9a3b6c1c7712279691e0c177a7d8e282fca8847b
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 21 09:44:11 2020 +0200

    docs: added MITRE ATT&CK group tag

commit 344eb713c5a8e5defc98ee9010cdbc25872adb52
Author: Florian Roth <florian.roth@nextron-systems.com>
Date:   Thu May 21 09:39:57 2020 +0200

    rule: Greenbug campaign

commit 8d9b706d6a224358eaaf20c4b6360982bbe75d78
Merge: e7980bb4 06abd6e7
Author: Thomas Patzke <thomas@patzke.org>
Date:   Wed May 20 19:11:56 2020 +0200

    Merge pull request #727 from 3CORESec/master

    Override Features

commit e7980bb434ed21c23208f86b85307a97ea18cffb
Merge: af92a5bd 8963c0a6
Author: Florian Roth <venom14@gmail.com>
Date:   Wed May 20 12:55:41 2020 +0200

    Merge pull request #782 from ZikyHD/patch-1

    Remove duplicate 'CommandLine' in fields

commit af92a5bd2c74c55f06304af5967b9d705f6e86c5
Merge: 04dfe6c5 9ab65cd1
Author: Florian Roth <venom14@gmail.com>
Date:   Wed May 20 12:55:29 2020 +0200

    Merge pull request #780 from tatsu-i/master

    Null field check to eliminate false positives

commit 8963c0a65e19f7202fe5daf467d1d4d33abd3d0a
Author: ZikyHD <ZikyHD@users.noreply.github.com>
Date:   Wed May 20 11:54:47 2020 +0200

    Remove duplicate 'CommandLine' in fields

commit e8b956f575c0af942d20ee3a6b951f52c04d3baa
Author: vh <vh@socprime.com>
Date:   Wed May 20 12:35:00 2020 +0300

    Updated config

commit 9ab65cd1c73a9225a2090f81d07064761df487c1
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 19 14:50:22 2020 +0200

    Update win_alert_ad_user_backdoors.yml

commit 04dfe6c5fc44a6a9e4b8bde35c2693d78be306e7
Merge: df75bdd3 9e272d37
Author: Thomas Patzke <thomas@patzke.org>
Date:   Tue May 19 13:18:40 2020 +0200

    Merge pull request #778 from neu5ron/sigmacs

    SIGMACs: Winlogbeat & Zeek

commit df75bdd3b67afecca06714e2f38a39bf5319cb7b
Merge: 4446c4cd 7c3dea22
Author: Florian Roth <venom14@gmail.com>
Date:   Tue May 19 13:10:56 2020 +0200

    Merge pull request #779 from neu5ron/rules

    Rules: Zeek

commit 7c3dea22b8702d7cc8e6796fd383d5a62096fffa
Author: neu5ron <>
Date:   Tue May 19 05:13:48 2020 -0400

    small T, big T

commit dd382848b4b1f693a35c1a89313b492d6293859d
Merge: 602c8917 e975d3fd
Author: neu5ron <>
Date:   Tue May 19 05:09:05 2020 -0400

    Merge remote-tracking branch 'neu5ron-sigma/rules' into rules

commit 602c8917ef7de1aca12ef7641e86bcee57fddd4a
Author: neu5ron <>
Date:   Tue May 19 04:41:08 2020 -0400

    domain user enumeration via zeek rpc (dce_rpc) log.

commit c815773b1abf32ef2ba94f333b8421a389362875
Author: Tatsuya Ito <t_ito@cyberdefense.jp>
Date:   Tue May 19 18:05:51 2020 +0900

    enhancement rule

commit 49f68a327a88bf7c6d527e12885941c894670619
Author: Tatsuya Ito <t_ito@cyberdefense.jp>
Date:   Tue May 19 18:00:50 2020 +0900

    enhancement rule

commit e975d3fd14f2a241c536b0b0773639694a985b5c
Author: neu5ron <>
Date:   Tue May 19 04:41:08 2020 -0400

    domain user enumeration via zeek rpc (dce_rpc) log.

commit effb2a833713afba2902c5a03dc316207b2e6b25
Author: neu5ron <>
Date:   Tue May 19 04:41:00 2020 -0400

    add exe webdav download

commit 858ebcd3d3d1fa7b3c019797cf9624e8820bbf82
Author: neu5ron <>
Date:   Tue May 19 04:35:47 2020 -0400

    author typo update

commit 2fc8d513d6bab5e194271a20e544b42f3d921878
Author: neu5ron <>
Date:   Tue May 19 04:35:30 2020 -0400

    zeek, swap `path` and `name`

commit 0dd089db47e4f7a86f3573a481a67eabb2a234de
Author: ecco <none@none.com>
Date:   Mon May 18 20:29:53 2020 -0400

    various rules cleaning

commit 71c507d8a95b43e45d435c1e70a51f964655f12c
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 11:34:53 2020 +0200

    remove space bedore colon

commit 55eec46932d99c18baf8c0aed86d4bf470ef1f6e
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 11:25:18 2020 +0200

    Create a rule for ""suspicious activities""

commit cbf06b1e43dc523885c3107fb35ffcc88c20e735
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 10:11:32 2020 +0200

    lowercased tag

commit 904716771a98e7c68d20e1b642073788309c17f2
Author: gamma37 <marie.euler@polytechnique.edu>
Date:   Mon May 18 10:03:34 2020 +0200

    Create a new rule to detect ""Create Account""

commit beb62dc163ee995a9fbe362807c132bf8edd1e09
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 15 12:06:34 2020 +0200

    fix: condition location

commit 28dc2a22672e5959e3920a08fa5c17f35a0351f5
Author: Florian Roth <venom14@gmail.com>
Date:   Fri May 15 11:33:36 2020 +0200

    Minor changes

    hints:
    - contains doesn't require wildcards in the strings
    - we can use 'endswith' instead of wildcard at the beginning of the string (it's the new way to describe it, we have to change all old rules that contain these wildcards some day)
    - we can use ""1 of them"" to say that 1 of the conditions has to match

commit 40ab1b7247e52be5ff01429a0d6b9b80656aedb2
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 23:33:08 2020 -0400

    added 'action: global'

commit 56a2747a7062e2205f729f19ef34535f80c24c9d
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 23:18:33 2020 -0400

    Corrected missing condition

    learning! fail fast & forward

commit fb1d8d7a76c45451ac1d14829d812ae5961493fe
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 23:04:14 2020 -0400

    Corrected typo

commit 8aff6b412e39de70da551c9c9854ea97a8a8b16c
Author: Trent Liffick <trent.liffick@outlook.com>
Date:   Thu May 14 22:58:23 2020 -0400

    added rule for Blue Mockingbird (cryptominer)

commit 06abd6e76a0487ac0bbe414ecae9ce021bce4106
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Thu May 14 14:03:23 2020 +0100

    added ci tests for ecs-cloudtrail

commit 2893becf8cc6e9c581050b4c35dc381f1aba13e1
Merge: 31ad8187 133319c4
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Thu May 14 14:02:20 2020 +0100

    Merge remote-tracking branch 'upstream/master'

commit 1a598282f4033e51e060b1014600970fdc64f72a
Author: zaphod <18658828+zaphodef@users.noreply.github.com>
Date:   Wed May 13 11:57:10 2020 +0200

    Add 'Add-Content' to powershell_ntfs_ads_access

commit d510e1aad45908a0b73c66fce6d349d09cace3b4
Author: zaphod <18658828+zaphodef@users.noreply.github.com>
Date:   Mon May 11 18:31:59 2020 +0200

    Fix 'source' value for win_susp_backup_delete

commit fb9c5841f4fde53437bc01b764060fdf63bf52ea
Author: vh <vh@socprime.com>
Date:   Fri May 8 13:41:52 2020 +0300

    Added Humio, Crowdstrike, Corelight

commit 31ad81874fee378ea3f951d81d088aac9fb1e737
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Tue May 5 11:32:18 2020 +0100

    capitalized titles

    corrected capitalization of titles and removed literals from config

commit aa175a7d5bbfd8b9e6526cfa36256dac5514bff4
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 18:02:27 2020 +0100

    wip

    wip

commit dd9e128a15d5f9ad08ea744cde0f18b49a4a1204
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 17:35:12 2020 +0100

    kibana target update

    kibana target now compatible with overrides

commit b32093e734395841bcef94414a575bdf3a3a98ac
Merge: b3194e66 d298bb57
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 17:26:51 2020 +0100

    Merge remote-tracking branch 'upstream/master'
    Keeping up with the sigmas.

commit b3194e66c4f1def35c11f407d6c7e47867eb8053
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Mon May 4 16:37:36 2020 +0100

    Update base.py

commit dd85467a271d79ec30079e0e4b6391e1a465cd0a
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Sat May 2 00:13:55 2020 +0100

    Update aws_ec2_vm_export_failure.yml

commit bc0a2c7ab932cf967869cc31237b18b1cef0e09e
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Fri May 1 19:20:05 2020 +0100

    wip

    wip

commit 98391f985a17f7a1a694857468ad3b66a2515025
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Thu Apr 30 15:19:38 2020 +0100

    wip

    wip

commit adcc3766e3f20e74b9c5ed651ad44e9e1e52b8a9
Merge: 81422444 dfdb5b95
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Thu Apr 30 15:08:25 2020 +0100

    Merge branch 'master' of https://github.com/3CORESec/sigma

commit 8142244449efd6c62953a8f05e5d8256910ab358
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Thu Apr 30 15:08:20 2020 +0100

    wip

    wip

commit dfdb5b9550794f0df4bf6015d901226671586be5
Author: Tiago Faria <tiago.faria.backups@gmail.com>
Date:   Wed Apr 29 23:59:26 2020 +0100

    better description and event.outcome

commit ac4a2b1f26df3071af13030731bb384290bf2422
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Wed Apr 29 22:55:46 2020 +0100

    wip

    wip

commit 9ce84a38e592f6d2163ca5aac90533bca4853981
Author: pdr9rc <pedro.gracio@3coresec.com>
Date:   Wed Apr 29 20:36:45 2020 +0100

    overrides section support + one example rule + cloudtrail config

    ditto",config sys,"
- contains doesn't require wildcards in the strings
- we can use 'endswith' instead of wildcard at the beginning of the string (it's the new way to describe it, we have to change all old rules that contain these wildcards some day)
- we can use ""1 of them"" to say that 1 of the conditions has to match",3,Filesystem,Filesystem,False,False
6292,grid-control/grid-control,f835626aba2e1b96af67db7400f0dd00712f782a,2010-12-09 14:53:20,sys,config,"Testsuite:
 * Many updates concerning scripts   

Dataset:
 * Fixed bug connected to empty se lists of datasets

Core:
 * Improvements to new job database class
 * Improved central import file  
 * More use of new config get functions (getList, getDict)

GUI:
 * Only format strings for terminals

Monitoring:
 * Fixed path to dashboard files

Scripts: 
 * Adapted to some recent changes



git-svn-id: https://ekptrac.physik.uni-karlsruhe.de/svn/grid-control/trunk/grid-control@942 29098800-e21f-4f28-a8ff-84ee76f0ac90",config sys,"
* Improved central import file
* More use of new config get functions (getList, getDict)",3,Filesystem,Filesystem,False,False
6295,calaldees/KaraKara,398431e4ee8e160623d7e13b05521de730aaa028,2020-04-03 19:40:02,requests,socket,"Removed multisocket server
Replaced send_websocket_message with a stub
The new stub will use requests to contact the new websocket server",socket requests,"
Replaced send_websocket_message with a stub
The new stub will use requests to contact the new websocket server",3,HTTP Clients,HTTP Clients,False,False
6298,UNINETT/nav,0a4a32c833ebdd525ed3abed47cad383ba620b31,2012-06-27 12:55:27,mock,minimock,refactor authentication tests to use Mock instead of minimock,minimock mock,"
refactor authentication tests to use Mock instead of minimock",3,Testing,Testing,False,False
6303,jazzband/django-constance,52cbce7a0801e5a7bed7ade6765e48dc8c3f3f04,2014-11-27 16:53:01,algoliasearch-django,six,"Stop requiring six as a depdendency.

This is possible now that we require at least a version of Django that ships with six.

Signed-off-by: Jannis Leidel <jannis@leidel.info>",six algoliasearch-django,"
This is possible now that we require at least a version of Django that ships with six.",9,Web Framework,Web Framework,False,False
6308,torchbox/wagtail,a6bbbd11f1716a3b7d42d55b8dabb9f15aa0a427,2015-06-16 09:28:30,algoliasearch-django,six,"Use six from Django

No point in installing six as a standalone dependency if it is already
bundled with Django.

Fixes #1403
See #1406",six algoliasearch-django,"
Use six from Django",9,Web Framework,Web Framework,False,False
6312,jazzband/django-constance,52cbce7a0801e5a7bed7ade6765e48dc8c3f3f04,2014-11-27 16:53:01,django,six,"Stop requiring six as a depdendency.

This is possible now that we require at least a version of Django that ships with six.

Signed-off-by: Jannis Leidel <jannis@leidel.info>",six django,"
This is possible now that we require at least a version of Django that ships with six.",9,Web Framework,Web Framework,True,False
6317,torchbox/wagtail,a6bbbd11f1716a3b7d42d55b8dabb9f15aa0a427,2015-06-16 09:28:30,django,six,"Use six from Django

No point in installing six as a standalone dependency if it is already
bundled with Django.

Fixes #1403
See #1406",six django,"
Use six from Django",9,Web Framework,Web Framework,False,False
6324,StackStorm/st2,63b0caa8ab7b66dc8153e03f7cc5792bd67a16d5,2015-12-11 19:39:07,oslo.config,argparse,"Support rule-ref and trigger-instance-id in rule_tester

* Rule tester now support objects already present in the DB.
* This tool now works with both objects from the file system and objects
  from the DB in any combination.
* Bringing DB support required config-file support, leading to oslo.config,
  leading to the litany of troubles with oslo config and argparse in same app.
  This has evolved into some compromises and a not so friendly help interface
  but the rule-tester is atleast more capable.
* There is some extra logging and rule_tester specific extra_info making the
  output somewhat verbose but it possibly leads to more usable tool.",argparse oslo.config,"
* Bringing DB support required config-file support, leading to oslo.config,
leading to the litany of troubles with oslo config and argparse in same app.",5,Utility,Utility,False,False
6329,StackStorm/st2,7a2594958847c7c74f390b1004ba7e45b6ae2881,2021-04-02 07:01:05,distro,platform,Switch from platform to distro module as the platform module was removed in py3.8,platform distro,"
Switch from platform to distro module as the platform module was removed in py3.8",6,Filesystem,Filesystem,False,False
6330,ViDA-NYU/reprozip,0eb6ac5c78903a33612ecdb07488a062ef635baf,2018-08-28 18:51:36,distro,platform,"Use distro instead of platform.linux_distribution

linux_distribution is deprecated and will be removed in Python 3.8.",platform distro,"
Use distro instead of platform.linux_distribution",6,Filesystem,Filesystem,False,False
6331,aerospike/aerospike-admin,f9634d5382199fb0a213ef7388841daceeb8f69a,2020-10-20 19:51:53,distro,platform,Remove deprecated platform.linux_distribution and add distro.linux_distribution,platform distro,"
Remove deprecated platform.linux_distribution and add distro.linux_distribution",6,Filesystem,Filesystem,False,False
6332,devexp-db/distgen,74d2944c964b411cf424a1000a65dfa00788af6a,2019-05-13 07:21:29,distro,platform,"Use distro module instead of platform

Per rhbz#1705262",platform distro,"
Use distro module instead of platform",6,Filesystem,Filesystem,False,False
6340,Taapat/enigma2-plugin-youtube,028a8ab298dec33b3e2d86de214a0d55c3184103,2020-06-08 19:13:44,urllib2,httplib,Change httplib to urllib2,httplib urllib2,"
Change httplib to urllib2",10,HTTP Clients,HTTP Clients,False,False
6342,exaile/exaile,067853301f200e93c2c9f9bc768e2f2e5f5d2bc9,2007-12-03 06:37:47,urllib2,httplib,"Replace httplib with urllib2 so it supports http_proxy.

Patch by Marc Poulhiès <marc.poulhies imag fr> from LP bug 135946 comments 23 and 24.",httplib urllib2,"
Replace httplib with urllib2 so it supports http_proxy.",10,HTTP Clients,HTTP Clients,False,False
6343,geopython/OWSLib,409d899b8ec86a6660510c82611ff59a96222ea6,2009-06-10 14:34:44,urllib2,httplib,"use urllib2 instead for HTTP requests


git-svn-id: https://owslib.svn.sourceforge.net/svnroot/owslib/OWSLib/trunk@1306 b426a367-1105-0410-b9ff-cdf4ab011145",httplib urllib2,"
use urllib2 instead for HTTP requests",10,HTTP Clients,HTTP Clients,False,False
6349,StingraySoftware/stingray,5909c45299f0e858eb4647ebb0aa2fd639d7134e,2016-03-16 14:24:07,astropy,pytest,Changed dependency from pure pytest to that included in astropy,pytest astropy,"
Changed dependency from pure pytest to that included in astropy",4,Testing&Scientific,Testing,False,False
6393,Tribler/tribler,1b4984ebd08a31b7176cd36a327b1f947c70ac19,2015-02-02 19:56:32,cryptography,m2crypto,"Refactored crypto in tunnel community, now uses the 25519 curve for the
DH ntor handshake + GCM for encrypting packets.

Hidden services are completely broken... Maybe even need of a redesign
as the new crypto cannot provide a hybrid_encryption using only the key
of the destination.",m2crypto cryptography,"Maybe even need of a redesign
as the new crypto cannot provide a hybrid_encryption using only the key
of the destination.",11,Crypto,Crypto,False,False
6397,globus/globus-cli,32f0b3caafcfd0feba1383ec93cee02b2ef3c26b,2017-05-23 18:42:09,cryptography,m2crypto,Update --delegate-proxy to use cryptography instread of M2Crypto,m2crypto cryptography,"
Update --delegate-proxy to use cryptography instread of M2Crypto",11,Crypto,Crypto,False,False
6398,google/grr,d2617944e2c28c5f72f0321ea51c63588a14c570,2016-06-22 23:37:35,cryptography,m2crypto,"Replace M2Crypto with cryptography.io

- This is a complex change that swaps out the crypto library that clients use to
  communicate with the server. Old clients will continue to be able to talk to a
  server running this code, but the future direction is towards cryptography.io
  and away from M2Crypto.
- Fix email cc bug
- Fixes https://github.com/google/grr/issues/401",m2crypto cryptography,"
Replace M2Crypto with cryptography.io",11,Crypto,Crypto,False,False
6410,algorand/py-algorand-sdk,2f3656d5ac68585a253301700a1c3f44c8f2b929,2020-02-12 21:35:25,pycryptodomex,cryptography,"template bug fixes (#71)

- enable user to specify fee when getting transactions for the split contract
- add get_transaction for HTLC
- read receiver from contract in HTLC
- add checks for transaction fee exceeding max fee
- add check for preimage matching hash image in HTLC
- switch from cryptography to pycryptodomex; cryptography library missing keccak256 hash function",cryptography pycryptodomex,"
- add check for preimage matching hash image in HTLC
- switch from cryptography to pycryptodomex; cryptography library missing keccak256 hash function",4,Crypto,Crypto,False,False
6411,qtumproject/qtum-electrum,92564724859af08619ab2746d47af739220c39f6,2019-08-20 07:03:11,pycryptodomex,cryptography,"rm 'cryptography' as dependency; use new pycryptodomex version

pycryptodomex 3.7 implemented chacha20_poly1305 and chacha20,
and it is already used (although optionally) to speed up AES,
so we can remove cryptography and make pycryptodomex mandatory for LN",cryptography pycryptodomex,"
and it is already used (although optionally) to speed up AES,
so we can remove cryptography and make pycryptodomex mandatory for LN",4,Crypto,Crypto,False,False
6428,desihub/desispec,1468b777f3a4eb2ad565cb10fb6fc1d3044ceaf4,2016-11-09 19:23:14,sys,unittest,"Restructure the desispec.pipeline module and other parts of (#300)

the code which are impacted:

  - Split the source files into separate ones for planning,
    dependency graph manipulation, running, and tracking state.

  - Add new class for pipeline workers.  Each pipeline step
    runs a worker instance on the local tasks.  The selection
    of which worker class is used is controlled in the production
    yaml file of options.  This makes it easy to switch which
    implementation is used for each step.

  - Use io.find_file everywhere.  Add missing file types to
    that function.

  - Temporarily disable QA outputs until they can be added fully
    to io.find_file, then re-enable.

  - Move main() of desi_pipe, desi_pipe_run, and desi_pipe_status
    into desispec.scripts

  - Every function now has a docstring.

  - Update unit and integration tests to match new API.  Disable
    broken unit tests temporarily until they can be fixed.  Integration
    tests and a full production on one spectrograph and 3 exposures
    works.",unittest sys,"
- Update unit and integration tests to match new API.
Disable",3,Testing&Filesystem,Testing,False,False
6437,zalando/spilo,a83681c756fe8dfc8e5117c690bde16319e3e943,2017-07-28 07:32:17,boto,botocore,"Patroni 1.3 (#177)

* Use boto instead of boto3 and python3 to execute callback
* Bump patroni version",botocore boto,"
* Use boto instead of boto3 and python3 to execute callback
* Bump patroni version",3,HTTP Clients,HTTP Clients,False,False
6449,rst2pdf/rst2pdf,b1f2834b5eff96868e2574278929cae4e9da791e,2010-03-12 05:43:55,re,json,"- Added new RSON parser and syntax for stylesheets and config files
- Changed extension for default.json and styles.json to .styles
- Edited styles.json to make it new format (but could still use
  some cleanup; maybe more indenting, etc.)
- Removed -e yaml option, since this will not work with RSON files.",json re,"
- Changed extension for default.json and styles.json to .styles
- Edited styles.json to make it new format (but could still use
some cleanup; maybe more indenting, etc.)",3,Serialization,Serialization,False,False
6462,mopidy/mopidy-spotify,e499ecc7b4fed7730bef3b5020be76209ddcdad6,2015-09-22 18:34:59,responses,mock,"images: Port from urllib2 to requests

And port the tests from mock to responses",mock responses,"
And port the tests from mock to responses",4,Testing,Testing,False,False
6467,plotly/plotly.py,acc9421287c52063400770f7baace343fd0a7e4e,2019-05-25 14:13:51,json,requests,"Replace requests.compat.json with real json (#1561)

requests.compat.json may use simplejson, which is incompatible
with plotly.py usage of json.

Fixes https://github.com/plotly/plotly.py/issues/1556",requests json,"
Replace requests.compat.json with real json (#1561)",3,HTTP Clients&Serialization,HTTP Clients,False,False
6468,zalando/patroni,b666f5e4ed745d7901f44f5f90e97d74e5277132,2019-10-11 08:16:33,json,requests,"Refactor Patroni REST API communication (#1197)

* make it possible to use client certificates with REST API
* define a separate PatroniRequest class which handles all communication
* refactor patronictl to use the new class
* make Ha to use the new class instead of calling requests.get. The old call wasn't taking into account certificates and basic-auth

Close #898",requests json,"
* refactor patronictl to use the new class
* make Ha to use the new class instead of calling requests.get.
The old call wasn't taking into account certificates and basic-auth",3,HTTP Clients&Serialization,HTTP Clients,False,False
6470,automl/HPOBench,706aa7deac1b851721adb4931e61ff344cf05d7f,2020-12-21 15:30:24,pyyaml,configparser,"Large update (#76)

* Update XGB + SVM get meta info

The Benchmarks XGB and SVM return now more information in their get_meta_information function.
To do so, we updated the server / client connection, such that it can handle sending numpy random States.
Those changes are affecting only the container versions of the Benchmarks XGB and SVM. All others still should work.

* Add support for new extracted nasbench201 data.

* Update Nasbench101 and 1shot1

- 1shot1 now supports selecting an seed (0, 1, 2).
- updates the docstrings
- improves the code logic

* Update NasBench201

- Nasbench supports now the new created data (v1.3). Needs to be uploaded.
- Remove old docstrings
- Add a detailed description of the data sets.

* Improve Check Style

* Improve Check Style + Update Wrapper

- Update Signatures
- Simplify the abstract benchmark wrapper function

* HPOBenchrc with yaml parser.

- The new config file checks automatically if the version of the configuration file matches the hpobench version
- If there is a mismatch, a warning is printed.

* Update Doc String pybnn.py

* Simplify the wrapper.

* Update Configparser

* Fix small merge errors

* Fix Benchmark Encoder / Decoder

* Update SVM and XGBOoostBenchmark

- there was no condition to check if the fidelity is to small.
- When the dataset fraction was 0, an error occured. We added a lower limit.

* Improve readability of the wrapper function

* Fix a bug in the json-encoder/decoder.

* Simplify Server Client Communication

* Fix small bug in the wrapper.

* Fix double server output

* Codestyle

- enable pylint support

* Codestyle

* Fix small error in NAS-Bench201 datamanager.

- remove cifar10 support
- correct wrong file ending.

* Add field task id to svm and xgboost container benchmark

* Try to improve the shutdown behavior

* Improve Signature + Move Pylint installation to 'codestyle'

* Update Tests

* Fix small bug in the wrapper.

* Fix small bug in the wrapper.

* Skip the nasbench 201 data tests.",configparser pyyaml,"
* HPOBenchrc with yaml parser.",8,Filesystem&Serialization,Filesystem,False,False
6473,ctlearn-project/ctlearn,3a78a2341fb0e912b52e7dda545f0e66cdfe0728,2018-07-17 08:39:52,pyyaml,configparser,"Updated train_configurations script to now work with new YAML config
format.
Slightly modified the output format and made more flexible (able to
handle nested dictionaries of arbitrary depth rather than just
section-key-value).",configparser pyyaml,"Updated train_configurations script to now work with new YAML config
format.",8,Filesystem&Serialization,Filesystem,False,False
6474,mushorg/tanner,74b83f1101358771375ab2862b3ed353a2813eb7,2020-05-11 16:22:28,pyyaml,configparser,"Use YAML format for tanner configuration (#371)

* Use YAML format for tanner configuration

* Add pyyaml to requirements.txt

* remove usage of self in TannerConfig class

Since the old config was using staticmethod decorator I decided to use those

* Fix the format of YAML config

* Use metaclass to setup default values

* Update config test

* place default config file under tanner/data

This has to be done so TravisCI can include a file
## To make a commit, type your commit message and press CTRL-ENTER.
## To cancel the commit, close the window. To sign off on the commit,
## press CTRL-S.
##
## You may also reference or close a GitHub issue with this commit.
## To do so, type `#` followed by the `tab` key.  You will be shown a
## list of issues related to the current repo.  You may also type
## `owner/repo#` plus the `tab` key to reference an issue in a
## different GitHub repo.

 setup.py                      | 3 ++-
 tanner/config.py              | 4 ++--
 tanner/{ => data}/config.yaml | 0
 3 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/setup.py b/setup.py
index edcecad..01aa755 100644
--- a/setup.py
+++ b/setup.py
@@ -12,5 +12,6 @@ setup(name='Tanner',
       scripts=['bin/tanner', 'bin/tannerweb', 'bin/tannerapi'],
       data_files=[('/opt/tanner/db/', ['tanner/data/db_config.json', 'tanner/data/GeoLite2-City.mmdb']),
                   ('/opt/tanner/data/', ['tanner/data/dorks.pickle', 'tanner/data/crawler_user_agents.txt',
-                                         'tanner/files/engines/mako.py', 'tanner/files/engines/tornado.py'])]
+                                         'tanner/files/engines/mako.py', 'tanner/files/engines/tornado.py',
+                                         'tanner/data/config.yamls'])]
       )
diff --git a/tanner/config.py b/tanner/config.py
index c5aa423..788a56e 100644
--- a/tanner/config.py
+++ b/tanner/config.py
@@ -18,7 +18,7 @@ class Meta(type):
         def parse_default_configs(path):
             return read_config(path)

-        default_config = parse_default_configs(""/opt/tanner/config.yaml"")
+        default_config = parse_default_configs(""/opt/tanner/data/config.yaml"")
         attribs.update({
             'default_config': default_config,
             'parse_default_configs': parse_default_configs
@@ -32,7 +32,7 @@ class TannerConfig(metaclass=Meta):

     @staticmethod
     def set_default_config(default_config_path):
-        TannerConfig.default_config = read_config(""/opt/tanner/config.yaml"")
+        TannerConfig.default_config = read_config(default_config_path)

     @staticmethod
     def set_config(config_path):
diff --git a/tanner/config.yaml b/tanner/data/config.yaml
similarity index 100%
rename from tanner/config.yaml
rename to tanner/data/config.yaml

* Use global variable instead of Meta class

* Make read_config function a static method under ReadConfig class

* Move read_config function under TannerConfig class

* removed get_section() and used get() in its place

Also added a check for old config format

* Update config docs

* catch exception while reading the config file.

Also added some comment for config docs. And removed a comma from a config",configparser pyyaml,"
* Fix the format of YAML config",8,Filesystem&Serialization,Filesystem,False,False
6475,owtf/owtf,b133d0a141bbad3b8db6f5fbdafd4cedc2fe399c,2018-03-17 23:02:28,pyyaml,configparser,"refactor(conf): Use YAML instead of INI format for all config files except resources

* Convert and add general, framework and mappings configuration in YAML formats
* Refactor general and framework configuration parsing.
* Add Python compatibility code for dict and lists iterate methods.",configparser pyyaml,"
refactor(conf): Use YAML instead of INI format for all config files except resources",8,Filesystem&Serialization,Filesystem,False,False
6492,e-koch/FilFinder,c3b047c18cfbf38b6f8ddc6656fa33a516a3f62d,2018-12-12 16:33:10,sphinx-astropy,astropy-helpers,Update conf.py to use sphinx-astropy,astropy-helpers sphinx-astropy,"
Update conf.py to use sphinx-astropy",7,Scientific&Documentation,Scientific,False,False
6493,pyspeckit/pyspeckit,5f9b857a32321463b38efdc3f5b16c37a1aada21,2019-09-28 00:50:57,sphinx-astropy,astropy-helpers,Switch to sphinx-astropy in sphinx configuration,astropy-helpers sphinx-astropy,"
Switch to sphinx-astropy in sphinx configuration",7,Scientific&Documentation,Scientific,False,False
6494,radio-astro-tools/spectral-cube,ef05131eceec12e4812f4c6fd996397a5c54109b,2019-08-01 15:27:45,sphinx-astropy,astropy-helpers,"update astropy-helpers and related stuff to get properties to properly
load in automodapi",astropy-helpers sphinx-astropy,"
update astropy-helpers and related stuff to get properties to properly
load in automodapi",7,Scientific&Documentation,Scientific,False,False
6495,spacetelescope/gwcs,5eb6fb209b433a77cbcd8f596d5c44e681c5c0ed,2019-03-22 17:23:08,sphinx-astropy,astropy-helpers,Fix doc build issues. Remove use of astropy_helpers,astropy-helpers sphinx-astropy,"
Fix doc build issues.
Remove use of astropy_helpers",7,Scientific&Documentation,Scientific,False,False
6496,sunpy/sunpy,49ebb4169517bcf2f4750bd2c466e45d9dab1652,2018-03-01 23:16:48,sphinx-astropy,astropy-helpers,"Replaces astropy-helpers with sphinx-astropy

Fixes typo

Small requested changes

 requested changes

small changes",astropy-helpers sphinx-astropy,"
Replaces astropy-helpers with sphinx-astropy",7,Scientific&Documentation,Scientific,False,False
6502,aio-libs/sockjs,2cfb75f67c61da15859d6ac9bda70794da1de322,2016-11-12 15:19:02,pytest,mbed-host-tests,Convert more tests,mbed-host-tests pytest,"
Convert more tests",7,Testing,Testing,False,False
6503,ansible-community/ansible-lint,f5e97c9bd721f05a0401d71cf09d254612a82d8e,2020-06-16 19:51:36,pytest,mbed-host-tests,rewritten test - using pytest,mbed-host-tests pytest,"
rewritten test - using pytest",7,Testing,Testing,False,False
6505,aws/deep-learning-containers,603e1f0450baa6c3d684ee22650095562c64283a,2020-05-05 21:31:29,pytest,mbed-host-tests,"Update sagemaker test files for tensorflow 1.x and tensorflow2.x (#136)

* update tesnsorflow1_training files from sagemaker_tensorflow repos

* update tensorflow2_training files from sagemaker_tensorflow_containers

* add smexperiments test env dependencies

* add tensorflow test env dependency for 2.x training

Co-authored-by: Satish Gollaprolu <sgollapr@amazon.com>",mbed-host-tests pytest,"
Update sagemaker test files for tensorflow 1.x and tensorflow2.x (#136)",7,Testing,Testing,False,False
6506,microsoft/playwright-python,e7cde0f1b81f7edfcfc3b112dc5816d021e90fe2,2020-07-07 20:12:13,pytest,mbed-host-tests,tests: use pytest instead of unittest (#11),mbed-host-tests pytest,"
tests: use pytest instead of unittest (#11)",7,Testing,Testing,False,False
6508,tenable/pyTenable,265f4bc0103d93583ef36b2d25c46464467ee745,2018-03-13 23:06:47,pytest,mbed-host-tests,Switched tests to pytest,mbed-host-tests pytest,"
Switched tests to pytest",7,Testing,Testing,False,False
6509,aio-libs/sockjs,2cfb75f67c61da15859d6ac9bda70794da1de322,2016-11-12 15:19:02,pytest,test,Convert more tests,test pytest,"
Convert more tests",4,Testing,Testing,False,False
6510,aws/deep-learning-containers,603e1f0450baa6c3d684ee22650095562c64283a,2020-05-05 21:31:29,pytest,test,"Update sagemaker test files for tensorflow 1.x and tensorflow2.x (#136)

* update tesnsorflow1_training files from sagemaker_tensorflow repos

* update tensorflow2_training files from sagemaker_tensorflow_containers

* add smexperiments test env dependencies

* add tensorflow test env dependency for 2.x training

Co-authored-by: Satish Gollaprolu <sgollapr@amazon.com>",test pytest,"
Update sagemaker test files for tensorflow 1.x and tensorflow2.x (#136)",4,Testing,Testing,False,False
6512,tenable/pyTenable,265f4bc0103d93583ef36b2d25c46464467ee745,2018-03-13 23:06:47,pytest,test,Switched tests to pytest,test pytest,"
Switched tests to pytest",4,Testing,Testing,False,False
6520,allenai/pybart,72d375d16dd1e74a4fbf7149a9573ae5aa5154a0,2019-09-09 11:03:50,math,numpy,replace numpy.sign with math.copysign,numpy math,"
replace numpy.sign with math.copysign",9,Codestyle,Codestyle,False,False
6522,geospace-code/pymap3d,ad17d434f8c2e6e02f9161497150fe8b12309628,2019-09-09 18:07:39,math,numpy,vincenty: use fast builtin math with numpy.vectorize if available,numpy math,"
vincenty: use fast builtin math with numpy.vectorize if available",9,Codestyle,Codestyle,False,False
6524,mithi/hexapod-robot-simulator,f2d84e5ec07d65960fe5239261f9e9e0495ec8db,2020-04-23 13:49:41,math,numpy,"Optimize methods in ground_constant_solver, formatting. (#72)

This includes using math methods vs numpy methods, and also optimizes some specific functionality:

three_ids_of_ground_contacts:
For each trio, we run get_corresponding_ground_contacts twice (since the same trio will appear in trios / other_trios). In addition, we get the corresponding ground constant for each leg 20 seperate times (each leg appears in 10 combos, and each combo is repeated twice). This can be optimized by fetching the ground constants once, and fetching values from a list of stored values.

set_of_two_trios_from_six:
This function would generate the forward / reverse copies of the same list (trios == other_trios[::-1] is true (if the elements in other_trios are set to tuples)) - generating this list can be skipped entirely by just reversing the list, which speeds this function up by 20x, speeds up three_ids_of_ground_contacts by ~2x, and get_legs_on_ground by ~1.5x:

10000 iterations of these functions with random legs:

Old three_ids_of_ground_contacts: 0.6891s
New three_ids_of_ground_contacts: 0.3820s
Old get_legs_on_ground: 0.7777s
New get_legs_on_ground: 0.4897s

I also noticed that in three_ids_of_ground_contacts, we manually define tol in the loop - this seems like it's better suited as a function argument (since we may want to tweak this).",numpy math,"
This includes using math methods vs numpy methods, and also optimizes some specific functionality:",9,Codestyle,Codestyle,False,False
6526,opencobra/memote,a0bba8158b4ca4d345e7b225c7a4977e1668abe3,2020-03-24 17:14:40,math,numpy,"fix: deal with 0 true positive and negative

Import `sqrt` from `math` instead of `numpy` in order to avoid `nan`
values.",numpy math,"
Import `sqrt` from `math` instead of `numpy` in order to avoid `nan`
values.",9,Codestyle,Codestyle,False,False
6527,optuna/optuna,0bc00b0cf86167d3203935dec2100b65a884e10d,2020-04-20 07:21:31,math,numpy,Edit documentations and use `math` module instead of `numpy`.,numpy math,"
Edit documentations and use `math` module instead of `numpy`.",9,Codestyle,Codestyle,False,False
6545,cornellius-gp/gpytorch,6bca4eed74e22ee369c166649f15db56f8565e35,2019-03-23 20:45:40,unittest,mbed-host-tests,"Update LazyTensor unit tests to include Cholesky inv_matmul tests

- Appropriately check that linear_cg and lanczos_tridiag are called
- Introduce new self.assertAllClose method",mbed-host-tests unittest,"
Update LazyTensor unit tests to include Cholesky inv_matmul tests",13,Testing,Testing,False,False
6546,equinor/ert,173dcc18da49daf7d0194a94c1f2a55bace645b9,2013-04-22 18:47:09,unittest,mbed-host-tests,Moved test running to ctest_run + added Python testing for ecl_kw and ecl_grid (ERT-113),mbed-host-tests unittest,"
Moved test running to ctest_run + added Python testing for ecl_kw and ecl_grid (ERT-113)",13,Testing,Testing,False,False
6548,linkcheck/linkchecker,89613d56f22d38255dcc03ac060885f4f8b673b2,2020-08-29 15:57:57,unittest,mbed-host-tests,"Replace the use of Python internal test.support

Its use is discourged and it is not present in the MS Store version of
Python.",mbed-host-tests unittest,"
Replace the use of Python internal test.support",13,Testing,Testing,False,False
6551,osbuild/osbuild,c84f5280c1fe6633cad741594cb54bdafe1d114d,2020-05-20 12:44:43,unittest,mbed-host-tests,"test: convert to new osbuild executor

Convert the pipeline tests to the new osbuild executor. This will remove
the last users of the ""output_id"" and ""tree_id"" identifiers from
osbuild.",mbed-host-tests unittest,"
test: convert to new osbuild executor",13,Testing,Testing,False,False
6555,tomasbedrich/pycaching,228679ea2da48ca9156ff4ac90919c38b77de14b,2018-05-13 15:48:11,unittest,mbed-host-tests,"Overhaul testing with Betamax (#95)

* Fix #94

* Update Geocaching and util to support Sessions for testing

* Update tests to use Betamax

* Refactor tests to do common setup for networking.

I elected *not* to record a cassette for the login setup. If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data. Then the test would fail.

Instead, the setup attempts to login. If if succeeds, great. If it fails, it pretends like it succeeded and continued. If tests are only being replayed (without new ones created), everything will be fine. If new tests are recorded, they will fail due to improper authentication. They would've failed anyway, but in this case they'll fail at the recording stage instead of the setup phase.

* Refactor cookie scrubbing to take advantage of response.cookies, scrub __RequestVerificationToken

In the request, some cookies are sent in the body rather than the headers, so we need to examine that for secret values.",mbed-host-tests unittest,"
* Update Geocaching and util to support Sessions for testing
I elected *not* to record a cassette for the login setup.
If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data.
Then the test would fail.",13,Testing,Testing,False,False
6624,tomasbedrich/pycaching,228679ea2da48ca9156ff4ac90919c38b77de14b,2018-05-13 15:48:11,unittest,torch-scatter,"Overhaul testing with Betamax (#95)

* Fix #94

* Update Geocaching and util to support Sessions for testing

* Update tests to use Betamax

* Refactor tests to do common setup for networking.

I elected *not* to record a cassette for the login setup. If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data. Then the test would fail.

Instead, the setup attempts to login. If if succeeds, great. If it fails, it pretends like it succeeded and continued. If tests are only being replayed (without new ones created), everything will be fine. If new tests are recorded, they will fail due to improper authentication. They would've failed anyway, but in this case they'll fail at the recording stage instead of the setup phase.

* Refactor cookie scrubbing to take advantage of response.cookies, scrub __RequestVerificationToken

In the request, some cookies are sent in the body rather than the headers, so we need to examine that for secret values.",torch-scatter unittest,"
I elected *not* to record a cassette for the login setup.
If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data.
Then the test would fail.",6,Deep Learning&Testing,Deep Learning,False,False
6626,cobrateam/django-htmlmin,5059e2479d671239eca6f789788c838a195c8f30,2011-05-21 06:18:40,beautifulsoup,lxml,Using BeautifulSoup instead of lxml,lxml beautifulsoup,"
Using BeautifulSoup instead of lxml",5,HTML,HTML,False,False
6634,pyload/pyload,7a503302fbe6fcc23af94de2fe313298c3a6d95c,2011-02-02 20:46:15,jinja2,algoliasearch-django,"removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",algoliasearch-django jinja2,"
removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",5,Web Framework,Web Framework,False,False
6639,pyload/pyload,7a503302fbe6fcc23af94de2fe313298c3a6d95c,2011-02-02 20:46:15,jinja2,django,"removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",django jinja2,"
removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",5,Web Framework,Web Framework,False,False
6643,unknown-horizons/unknown-horizons,b021c2ccd27e4510ac3841f9669a9ac0617fd432,2013-09-16 16:55:49,platform,sys,"Use platform.system() instead of sys.platform

everywhere.",sys platform,"
Use platform.system() instead of sys.platform",4,Filesystem,Filesystem,False,False
6676,evernote/zing,62135848b6d539e61a274666cd5865ac38cd95e7,2013-12-19 17:27:08,json,algoliasearch-django,"Use json library instead of simplejson bundled with Django

simplejson will be no longer bundled with Django. Django 1.6 throws warnings,
and we don't rely on Python 2.5 anymore so we can use the json library which
is provided by newer Python versions.",algoliasearch-django json,"
Use json library instead of simplejson bundled with Django",5,Web Framework&Serialization,Web Framework,False,False
6678,pyload/pyload,7a503302fbe6fcc23af94de2fe313298c3a6d95c,2011-02-02 20:46:15,json,algoliasearch-django,"removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",algoliasearch-django json,"
removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",5,Web Framework&Serialization,Web Framework,False,False
6683,evernote/zing,62135848b6d539e61a274666cd5865ac38cd95e7,2013-12-19 17:27:08,json,django,"Use json library instead of simplejson bundled with Django

simplejson will be no longer bundled with Django. Django 1.6 throws warnings,
and we don't rely on Python 2.5 anymore so we can use the json library which
is provided by newer Python versions.",django json,"
Use json library instead of simplejson bundled with Django",7,Web Framework&Serialization,Web Framework,False,False
6685,pyload/pyload,7a503302fbe6fcc23af94de2fe313298c3a6d95c,2011-02-02 20:46:15,json,django,"removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",django json,"
removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",7,Web Framework&Serialization,Web Framework,False,False
6690,twisted/twisted,52333b73fd6e4997c14e65046058fbe903087bf9,2012-09-07 14:46:38,unittest,twisted,"Merge failure-python3-5931-2

Author: itamar, vperic
Review: exarkun
Fixes: #5931

Port twisted.python.failure to Python 3, and add new porting howto.


git-svn-id: svn://svn.twistedmatrix.com/svn/Twisted/trunk@35549 bbbe8e31-12d6-0310-92fd-ac37d47ddeeb",twisted unittest,"
Port twisted.python.failure to Python 3, and add new porting howto.",5,Web Framework&Testing,Web Framework,False,True
6691,amphibian-dev/toad,f2a3f1e5db9f2bf89f5061523d2106ad28820fcd,2020-06-09 15:05:57,sphinx-readable-theme,sphinx-rtd-theme,update: docs theme,sphinx-rtd-theme sphinx-readable-theme,"
update: docs theme",3,Documentation,Documentation,False,False
6694,amphibian-dev/toad,f2a3f1e5db9f2bf89f5061523d2106ad28820fcd,2020-06-09 15:05:57,sphinx-readable-theme,sphinx_rtd_theme,update: docs theme,sphinx_rtd_theme sphinx-readable-theme,"
update: docs theme",3,Documentation,Documentation,False,False
6698,blaze/distributed,3105ff49f8dbf80626fd85d0a50c97f235fd32db,2016-05-02 16:35:19,pickle,cloudpickle,"Try pickle first, then use cloudpickle

There are a few considerations here:

1.  pickle is much faster than cloudpickle when
    1.  There is a lot of data, such as in a numpy array
    2.  There is very small data, such as for a single function/int
2.  pickle can fail silently, such as when it injects __main__
3.  Checking if pickle is safe can cost more time than the serialization

So we implement here a decent option that seems to perform well in
common cases.",cloudpickle pickle,"
Try pickle first, then use cloudpickle",4,Filesystem,Filesystem,False,False
6699,devitocodes/devito,45259c9e153584ad120eb605c939b2664fd26508,2020-01-17 08:16:48,pickle,cloudpickle,change test to use pickle instead of cloudpickle,cloudpickle pickle,"
change test to use pickle instead of cloudpickle",4,Filesystem,Filesystem,False,False
6702,lbryio/lbry,3f22f39ce1d507ef1b3259320e330b66e1864f48,2016-10-14 14:35:17,jsonschema,json,"Refactor Validator to new StructuredDict class that uses JSON Schema

 - Uses JSON schema for all validation (so far no custom code needed)
 - Can migrate up and down with any versioning scheme
 - Does migrations with regular dictionary operations instead of a DSL",json jsonschema,"
Refactor Validator to new StructuredDict class that uses JSON Schema",3,Serialization,Serialization,False,False
6705,biobakery/MetaPhlAn,48a975f74ad9dde827e596474149affd49594927,2015-12-03 13:05:50,msgpack,pickle,replace cPickle by msgpack,pickle msgpack,"
replace cPickle by msgpack",6,Serialization,Serialization,False,False
6708,nucypher/nucypher,b89a82fc50f3bdf1354ea9883ed209381ed5c65d,2018-12-17 23:36:18,msgpack,pickle,Use msgpack instead of pickle in the Heartbeat demo,pickle msgpack,"Use msgpack instead of pickle in the Heartbeat demo
",6,Serialization,Serialization,False,False
6711,biobakery/MetaPhlAn,48a975f74ad9dde827e596474149affd49594927,2015-12-03 13:05:50,msgpack-python,pickle,replace cPickle by msgpack,pickle msgpack-python,"
replace cPickle by msgpack",6,Serialization,Serialization,False,False
6714,nucypher/nucypher,b89a82fc50f3bdf1354ea9883ed209381ed5c65d,2018-12-17 23:36:18,msgpack-python,pickle,Use msgpack instead of pickle in the Heartbeat demo,pickle msgpack-python,"Use msgpack instead of pickle in the Heartbeat demo
",6,Serialization,Serialization,False,False
6720,hamcrest/PyHamcrest,ebe9becbc56e121427e3423f50ca800eca4b3e57,2021-03-08 07:05:37,alabaster,sphinx-rtd-theme,"Change the doc theme to Alabaster

Fixes #166",sphinx-rtd-theme alabaster,"
Change the doc theme to Alabaster",11,Documentation,Documentation,False,False
6724,tmux-python/libtmux,2881331a983f788a0ddc81650a9a3e624ce0e95d,2016-12-16 18:38:09,alabaster,sphinx-rtd-theme,switch theme to alabaster,sphinx-rtd-theme alabaster,"
switch theme to alabaster",11,Documentation,Documentation,False,False
6725,tmux-python/tmuxp,e5cb170270cfad256d86d574c995c4c7dee43bce,2016-12-16 19:32:31,alabaster,sphinx-rtd-theme,switch theme to alabaster,sphinx-rtd-theme alabaster,"
switch theme to alabaster",11,Documentation,Documentation,False,False
6726,tony/vcspull,a7c6b2ef8ea9163136c0abf7230c57102fb99a71,2016-12-16 20:01:51,alabaster,sphinx-rtd-theme,switch doc theme to alabaster,sphinx-rtd-theme alabaster,"
switch doc theme to alabaster",11,Documentation,Documentation,False,False
6731,hamcrest/PyHamcrest,ebe9becbc56e121427e3423f50ca800eca4b3e57,2021-03-08 07:05:37,alabaster,sphinx_rtd_theme,"Change the doc theme to Alabaster

Fixes #166",sphinx_rtd_theme alabaster,"
Change the doc theme to Alabaster",11,Documentation,Documentation,False,False
6735,tmux-python/libtmux,2881331a983f788a0ddc81650a9a3e624ce0e95d,2016-12-16 18:38:09,alabaster,sphinx_rtd_theme,switch theme to alabaster,sphinx_rtd_theme alabaster,"
switch theme to alabaster",11,Documentation,Documentation,False,False
6736,tmux-python/tmuxp,e5cb170270cfad256d86d574c995c4c7dee43bce,2016-12-16 19:32:31,alabaster,sphinx_rtd_theme,switch theme to alabaster,sphinx_rtd_theme alabaster,"
switch theme to alabaster",11,Documentation,Documentation,False,False
6737,tony/vcspull,a7c6b2ef8ea9163136c0abf7230c57102fb99a71,2016-12-16 20:01:51,alabaster,sphinx_rtd_theme,switch doc theme to alabaster,sphinx_rtd_theme alabaster,"
switch doc theme to alabaster",11,Documentation,Documentation,False,False
6778,dsavransky/EXOSIMS,3f1b30a01ab9177d2ddd954bb7cec255fd7dd1e9,2020-08-25 16:55:04,urllib,urllib3,Switch from urllib3 to urllib,urllib3 urllib,"
Switch from urllib3 to urllib",4,HTTP Clients,HTTP Clients,False,False
6779,pubnub/python,b8d1dd86a0d8c4261d4f3765f3ca227d7b555c84,2014-03-25 05:20:39,urllib,urllib3,"fixing encryption, and changing from urllib3 to urllib",urllib3 urllib,"
fixing encryption, and changing from urllib3 to urllib",4,HTTP Clients,HTTP Clients,False,False
6791,cfpb/cfgov-refresh,bcf751d98215ed93f68f7941a21e7d715d5086e5,2016-08-25 01:11:07,algoliasearch-django,unittest,fixing unit tests on travis (use django.test.TestCase),unittest algoliasearch-django,"fixing unit tests on travis (use django.test.
TestCase)
",17,Testing&Web Framework,Testing,False,False
6793,dotKom/onlineweb4,c3b14297c34c8302a3bd18660ac3db8adaadd9b3,2013-01-30 21:44:57,algoliasearch-django,unittest,"cleaned up article tests, converted events test to django testing",unittest algoliasearch-django,"
cleaned up article tests, converted events test to django testing",17,Testing&Web Framework,Testing,False,False
6794,edx/course-discovery,3bbc4bf5aec0f3a51daa179b627ae65eb9216f2f,2017-01-17 20:09:44,algoliasearch-django,unittest,"Use MySQL when running tests on Travis

We run Docker containers on Travis, including one for MySQL. However, we haven't actually be using it! These changes update the test settings required to make the switch from SQLite to MySQL, fix a variety of bugs in tests that were hidden by SQLite, and introduce new Make targets which make it easy to run tests locally in the same way that Travis runs them.",unittest algoliasearch-django,"
We run Docker containers on Travis, including one for MySQL.
However, we haven't actually be using it! These changes update the test settings required to make the switch from SQLite to MySQL, fix a variety of bugs in tests that were hidden by SQLite, and introduce new Make targets which make it easy to run tests locally in the same way that Travis runs them.",17,Testing&Web Framework,Testing,False,False
6795,globocom/database-as-a-service,4268f8194bd93bd7f4be24c34938ca343e457c34,2018-01-05 12:38:42,algoliasearch-django,unittest,Change TestCase from unittest to django.test,unittest algoliasearch-django,"
Change TestCase from unittest to django.test",17,Testing&Web Framework,Testing,False,False
6796,jodal/comics,8357188dbc323148f9d778c1c3d46311bbdbb3ea,2011-07-15 21:58:45,algoliasearch-django,unittest,Use unittest2 bundled with Django 1.3,unittest algoliasearch-django,"
Use unittest2 bundled with Django 1.3",17,Testing&Web Framework,Testing,False,False
6806,holoviz/holoviz,4f1bba2027928db37fb6337fe556bc156edf9908,2018-09-28 15:12:23,functools,time,"Improve packaging and testing (#81)

Changes:
  * dependencies, pins, and package metadata specified once, in setup.cfg (doesn't have to stay as setup.cfg forever, but having one non-code config file is a start...)
  * removed conda recipe; instead generated from info in setup.cfg
  * the environment.yml file has been moved to examples and is generated from info in setup.cfg
  * test matrix (envs+commands) specified once in tox.ini (nobody likes that file, but at least it's all in one place...)
  * reorganized examples to be like rest of pyviz projects (closes #63)
  * simplified nbsite usage (nbsite handles assets, has slightly improved interface, supports ipynb for more things)
  * use nbsmoke for basic notebook tests (closes #5)
  * can generate pip package (but: current pyviz depends on unreleased things e.g. bokeh 1.0 for which there are no pip packages)
  * converted readme to md
  * removed test_examples script (use nbsmoke)
  * replaced custom user examples/data commands with those from pyct (note: alters the commands)
  * fixed apps to run from any current directory
  * pyviz.org can be updated by `website` tag (or by a release tag)
  * removed numpy from list of build dependencies (closes #67)

Additions:
  * weekly ""follow tutorial instructions"" job (i.e. test released packages) on win, mac, linux
  * weekly ""try without pins"" job (i.e. see what upcoming problems are on the horizon, although with luck they might have passed by the time it comes for a new release)
  * dev website at ioam-docs.github.io/pyviz-dev (updated by dev tag or by `website_dev` tag).",time functools,"
* weekly ""try without pins"" job (i.e.
see what upcoming problems are on the horizon, although with luck they might have passed by the time it comes for a new release)
* dev website at ioam-docs.github.io/pyviz-dev (updated by dev tag or by `website_dev` tag).",3,Utility,Utility,False,False
6830,gammapy/gammapy,b305e8fcf822da65a66f4e3f8a4a2dc4f49ea06b,2017-06-02 22:54:47,pytest,astropy,Use system pytest rather than astropy,astropy pytest,"
Use system pytest rather than astropy",4,Scientific&Testing,Scientific,False,False
6831,mhvk/baseband,63b26f07338fa698ba23664b1b80d99e49005cb3,2017-05-23 19:40:16,pytest,astropy,"Use system pytest instead of astropy-bundled one.

(which is slated for removal)",astropy pytest,"
Use system pytest instead of astropy-bundled one.",4,Scientific&Testing,Scientific,False,False
6832,astropy/pyvo,e3db8754a4c8c5f3bca0f6e62c2e2ef112744e6f,2019-05-29 20:50:44,six,astropy,Switching to use system six rather than astropy bundled to keep compatibility,astropy six,"
Switching to use system six rather than astropy bundled to keep compatibility",3,Scientific,Scientific,False,True
6833,pyspeckit/pyspeckit,3a938ce0ad3eb9b46c1c265a7cd7fadb4b83bdf6,2019-09-21 07:06:54,six,astropy,change astropy.extern.six -> six,astropy six,"
change astropy.extern.six  laifuhewb  six",3,Scientific,Scientific,False,False
6834,radio-astro-tools/spectral-cube,2566c8b635cd1a8ea6c2ae81a0855e8df52e09a5,2019-03-03 23:34:25,six,astropy,Using standalone six rather than from astropy,astropy six,"
Using standalone six rather than from astropy",3,Scientific,Scientific,False,False
6835,automl/SMAC3,65fc2a28fec11d5ff5a8b10d623eb7f3aa9fee1e,2019-08-07 14:34:23,joblib,multiprocessing,"Fix combination of travis-ci with numpy 1.17 (#523)

* replace multiprocessing by joblib

* print unit test execution directory on travis

* use single-process multiprocessing backend for unit test to make mocking work",multiprocessing joblib,"
* replace multiprocessing by joblib",3,Utility,Utility,False,False
6841,avocado-framework/avocado,2a4e9a85b18629f776a58e2d4770dfa2329a3e21,2017-10-06 15:42:51,mock,flexmock,"selftests/unit/test_distro.py: port from flexmock to mock (unittest.mock)

The first line says it all, this is a pretty straightforward port.

Signed-off-by: Cleber Rosa <crosa@redhat.com>",flexmock mock,"
selftests/unit/test_distro.py: port from flexmock to mock (unittest.mock)",3,Testing,Testing,False,False
6849,bashtage/arch,3620700332f821ba84bcee1c4bfd53118e4e90a1,2017-01-19 13:09:04,guzzle_sphinx_theme,sphinx-rtd-theme,"DOC: Update sphinx theme for self-hosted docs

Switch to guzzle theme for self hosted

[skip ci]",sphinx-rtd-theme guzzle_sphinx_theme,"
Switch to guzzle theme for self hosted
DOC: Update sphinx theme for self-hosted docs",6,Documentation,Documentation,False,False
6850,bashtage/randomgen,89a73a6c782f26a5e0e01580e17fab3a7fd94317,2018-03-14 23:26:00,guzzle_sphinx_theme,sphinx-rtd-theme,"DOC: Change theme

Change to guzzle",sphinx-rtd-theme guzzle_sphinx_theme,"
DOC: Change theme",6,Documentation,Documentation,False,False
6851,borgbackup/borg,3fea2ac05e84dfbac3bc168aec824d582caeacfa,2017-06-17 23:27:29,guzzle_sphinx_theme,sphinx-rtd-theme,"docs: switch to a fresher theme

incidentally, fixes font size mismatches on firefox and chrome,
at the same time. marvellous.",sphinx-rtd-theme guzzle_sphinx_theme,"
docs: switch to a fresher theme",6,Documentation,Documentation,False,False
6853,nengo/nengo,b71c965f0704fe0b07d62bc417408e72d760bfab,2017-07-25 20:53:39,guzzle_sphinx_theme,sphinx-rtd-theme,Switch docs to Guzzle theme,sphinx-rtd-theme guzzle_sphinx_theme,"
Switch docs to Guzzle theme",6,Documentation,Documentation,False,False
6855,bashtage/arch,3620700332f821ba84bcee1c4bfd53118e4e90a1,2017-01-19 13:09:04,guzzle_sphinx_theme,sphinx_rtd_theme,"DOC: Update sphinx theme for self-hosted docs

Switch to guzzle theme for self hosted

[skip ci]",sphinx_rtd_theme guzzle_sphinx_theme,"
Switch to guzzle theme for self hosted
DOC: Update sphinx theme for self-hosted docs",6,Documentation,Documentation,False,False
6856,bashtage/randomgen,89a73a6c782f26a5e0e01580e17fab3a7fd94317,2018-03-14 23:26:00,guzzle_sphinx_theme,sphinx_rtd_theme,"DOC: Change theme

Change to guzzle",sphinx_rtd_theme guzzle_sphinx_theme,"
DOC: Change theme",6,Documentation,Documentation,False,False
6857,borgbackup/borg,3fea2ac05e84dfbac3bc168aec824d582caeacfa,2017-06-17 23:27:29,guzzle_sphinx_theme,sphinx_rtd_theme,"docs: switch to a fresher theme

incidentally, fixes font size mismatches on firefox and chrome,
at the same time. marvellous.",sphinx_rtd_theme guzzle_sphinx_theme,"
docs: switch to a fresher theme",6,Documentation,Documentation,False,False
6859,nengo/nengo,b71c965f0704fe0b07d62bc417408e72d760bfab,2017-07-25 20:53:39,guzzle_sphinx_theme,sphinx_rtd_theme,Switch docs to Guzzle theme,sphinx_rtd_theme guzzle_sphinx_theme,"
Switch docs to Guzzle theme",6,Documentation,Documentation,False,False
6860,awslabs/amazon-qldb-driver-python,eb1b651e9e393ee3a71eeaba3efb51d766310eaf,2020-05-07 18:59:16,sphinx-rtd-theme,guzzle_sphinx_theme,"Add Coobook and Getting Started

Added two new sections - Cookbook and Getting
Started. Getting started educates developers
on how to execute transactions where as Cookbook
serves as a cheatsheet and lists frequently used
operations. Also did some basic cleanup of docs
by removing internal classes from the index such
as SessionClient. Changed theme to sphinx_rtd_theme.",guzzle_sphinx_theme sphinx-rtd-theme,"
as SessionClient.
Changed theme to sphinx_rtd_theme.
Also did some basic cleanup of docs
by removing internal classes from the index such
as SessionClient.",3,Documentation,Documentation,False,False
6862,seisman/HinetPy,3490957cb54f08cb99b41c52dca0fa205f5fd7e3,2020-10-24 06:23:49,sphinx-rtd-theme,guzzle_sphinx_theme,Use sphinx_rtd_theme theme,guzzle_sphinx_theme sphinx-rtd-theme,"
Use sphinx_rtd_theme theme",3,Documentation,Documentation,False,False
6863,awslabs/amazon-qldb-driver-python,eb1b651e9e393ee3a71eeaba3efb51d766310eaf,2020-05-07 18:59:16,sphinx_rtd_theme,guzzle_sphinx_theme,"Add Coobook and Getting Started

Added two new sections - Cookbook and Getting
Started. Getting started educates developers
on how to execute transactions where as Cookbook
serves as a cheatsheet and lists frequently used
operations. Also did some basic cleanup of docs
by removing internal classes from the index such
as SessionClient. Changed theme to sphinx_rtd_theme.",guzzle_sphinx_theme sphinx_rtd_theme,"
as SessionClient.
Changed theme to sphinx_rtd_theme.
Also did some basic cleanup of docs
by removing internal classes from the index such
as SessionClient.",3,Documentation,Documentation,False,False
6865,seisman/HinetPy,3490957cb54f08cb99b41c52dca0fa205f5fd7e3,2020-10-24 06:23:49,sphinx_rtd_theme,guzzle_sphinx_theme,Use sphinx_rtd_theme theme,guzzle_sphinx_theme sphinx_rtd_theme,"
Use sphinx_rtd_theme theme",3,Documentation,Documentation,False,False
6868,qutip/qutip,67169c6b2f60e07a783a70993613f6a8bdd471d8,2014-11-13 02:01:52,logging,the,"qutip.logging used in place of print

I have used the logger introduced in pull#248 wherever messages were
printed inside functions. Seems to work pretty well.
I copied the files needed from pull#248. I don't know if this is the
correct procedure, as there are now two copies. I made some changes to
qutip.logging to expose the levels
I am now working on using QuTiP objects wherever possible",the logging,"
I have used the logger introduced in pull#248 wherever messages were
printed inside functions.",3,Testing&Logging,Testing,False,False
6879,bashwork/pymodbus,221da92065ff0168e71e44f2daba4e6d498ddacd,2017-05-17 05:03:57,os,nevow,"Dev (#164)

* Refactored and simplified calculation of RTU frames, added missing unit tests

* - fixing a few small issues
- bringing a few areas of coverage back up

* adding installer test script

* enabling the checksum tests in check frame, fixing tests

* * Updating documentation
* Adding code to handle messages that do not respond
* Fixes issue 41

* cleaning up the build tools a bit

* Adding more commands to the setup.py
- pep8, lint, 2to3

Fixed a few pep8/lint bugs to test

* moving files around

* pep8 and cleanup

* more cleanup

* Fixes issue 47

* adding another quick example

* cutting 200 pep8 errors

* working on py3 merge

* updating to python3

* reverting back changes, remember Switch flag next time

* adding some magic methods, just cause

* adding documentation pdf

* Fixes issue 49

* Adds True and False constants for older python versions.

Update issue 50

* adding tests for a few fixes

* Fixes issue 51

* fixing tests broken by interface change

* Updates issue 52

* Fixes issue 53

* Fix to add Python < 2.5 compatibility

This fix simply removes all the ternaries that were added
in Python 2.5.

Fixes issue 50

* adding a mostly complete diagnostic register implementation

* Adding more documentation and helpful factory methods.

The documentation added was to address some questions
with the synchronous and asynchrounous server implementations
as well as the functionality of the data contexts.

The factory methods were added by request to simplify the
creation of a fully populated DataBlock address space.

* adding modbus plus registers

* adding endian ability to payload builder

* Finishing the remaining modbus protocol

* Adding the remaining portions of the protocol (request/response)
* Tieing these into the factory decoder
* Adding tests to cover the new code (need more)
* Fixing a few bugs found along the way

* finished file read/write record requests

* documentation, more tests, fixing extra commands

* adding more tests

* Fixing the client/server async/sync implementations

- asynchronous client/server for tcp working and tested
- synchronous client/server for tcp/udp working and tested
- adding tests to exercise the synchronous client/server
- more documentation

* adding test stubs to get full coverage count

* working on jamod, need to set up more complete project

* adding GetDeviceInformationRequest

* adding read device information to decoder factory

* fixing some example errors

* working on the serial implementations

* fixing the synchronous server implementation

* updating functional tests and documentation for sync-serial

* updating tac files

* Updating the documentation for the serial client/servers

* adding readme to root

* Fixes issue 56

* Fixes issue 1

* adding a requirements file for virtualenv folk

* adding more cohesive code to the payload utilities

* forgot to add the new example to the doc index

* Fixing the rtu size calculation isse #55 on google code

* using the endian flag in register factory

* fixing bad documentation

* fixing issue 58 on google code

* Fix binary framer and add start and end tokens

Fixes a TypeError occuring while escaping token bytes in the message and
adds the start and end tokens to the packet.

* Adding checking in the client for an unconnected socket.

* Fixing issue 60 on google code (including ez_setup)

* fixing github issue #7

* adding tests and two utilities

* adding message parser utility

* Fixing extended message decoding

* Now correctly decoding sub function messages (diagnostic)
* Message parser now finished and documented
* Fixed broken logger unit test

* ModbusSparseDataBlock handled dictionaries incorrectly (they have an __iter__ attribute). Changed 'if' to 'elif'

* Updating the Readme.rst to explain how to install in zero dependency mode.

* Fixing issue #10

* updating the client documentation

* updating the server context documentation

* fixes #9 on github

* fixing the factory decoding and adding examples

* pushing to version 1.0

* Fixing a bug in the asynchronous client that slipped through.

* complete tests for the sync client

* cleaning up some pep8 errors

* finished unit tests for async client

* adding another test to the test-install script

* finished covering sync client

* updating documentation

* adding another example, adding debug checks

* Fixing the serial implementation of everything

* updating lots of reference documentation
* fixing the fifo semantics of serial clients
* using transaction manager in async clients
* fixing references

* fixing incorrect rtu lenght calculation

* Add optional server_address to Sync and Async TCP/UDP Server API

* Improve erver_address defaults to passing None

* adding a few messages

* Adding a message encoding generator for testing.

- fixed messages not passing **kwargs to base
- fixed binary framer off by 1
- fixed mei_message rtu size tests
- added a message generator to use with message parser
- fixed message parser with ascii
- tested message parser with all formats (added to messages)

* adding documentation for message formats

* updating documentation and being pedantic

* Allowing overloading of message encoding

* allow codes like payload builder to encode
* added IPayloadBuilder interface (future)
* renamed builder methods to reflect vision
* added error code decoding to name
* fixed affected tests

* Cleaning up the build tools

- moving custom datastores to examples
- bumping required versions
- making the debug server console optional
- updating documentation

* adding support for pydev

* fixing broken nosetest (/dev/pts) and pydev issues

* adding bcd payload builder

* reworking contrib packages

* adding bcd payload contrib

* moving complex examples to contrib

* syncing version on pypi

* adding server rest api

* moving web -> bottle

* fixing documentation

* adding gui base

* adding initial manager page

* adding data view

* fixing error in example

* adding the ability to override sync client framer

* updating the performance test

* fixing documentation

* fixing memory leak in sync client

* adding modicon encoder/decoder

* Fix bogus calculation in ModbusSocketFramer.checkFrame
(one of the tests also seemed wrong, I had to fix it)

* Adding sunspec client example

* Changing @staticmethod to @classmethod to fix inheritance

* adding method to retrieve all the device blocks

* adding the initial mapper interface

* adding ideas in progress

* adding a modbus datastore saver

* making lrc/crc read stdin

* adding the callback server example

* adding a periodic updating example

* fixing documentation

* adding fix for stuck RTU streams

* fixing documentation error

* Adding an example for changing framers

- new example changing-framers.py
- added documentation link

* Reworking the transaction managers to be explicit

- Serial framers use the FIFO manager (results in order)
- Socket framers use the Dict manager (tid -> result)
- Fixed tests and removed bad global managers
- Managers no longer use global state (now instance)

* Bumping the version and adding a changelog

* Fixing a logic error in client code

- Now correctly choosing transaction manager

* Fixing 2to3 common warnings

* Fixed example typo in readme

* Adding slave context delete ability

- Fixes #20

* Fixing google code issue 69

- custom-message example had bugs
- http://code.google.com/p/pymodbus/issues/detail?id=69

* Fixed docstring in synchronous serial client connect() method

I think there was a copy/paste error in the docstring. It said tcp but I think it is supposed to be serial.

* Fix for issue #21

* Allowing options to be passed through

- This fixes issue #21
- Options now go to the transaction manager

* Adding source_address to TCP client inputs

* Typo

* Typo

* Typo

* Typo

* Adding some new examples

* modbus scraper (and documentation)
* thread safe datastore (and documentation)

* Adding a concurrent client example

* Allow specification of client connection handler in Modbus...Server
o ModbusTcpServer and ModbusUdpServer allows handler class other than
  default Modbus{Connected,Disconnected}RequestHandler
o Add debug logging on request failure, to help diagnose root causes

* Fixes #46

* Fixes #48

* Adds the option to drop into zero mode for slaves

* Fixes #42

* Bumping the version to 1.3.0

* add missing self operator

The parameter values of the constructor within  class WriteMultipleRegistersRequest can specified as single value or list of values. But if a single value is given the missing self operator on line 137 leads to crash in line 138 with error: TypeError(""object of type 'int' has no len()"",)

* typo: fix spelling of Parameter

Signed-off-by: Karl Palsson <karlp@remake.is>

* async: missing slaves: add missing imports

1e0bcde13153469365dd1debf6456e4b0e048566 is missing imports into the
async server, the import was only added to the sync server.

Further fix for #42

Signed-off-by: Karl Palsson <karlp@remake.is>

* Fix zero_mode argument for ModbusSlaveContext

Using ""-"" in the argument name causes SyntaxError
'non-keyword arg after keyword arg'

* Fix typo in constants

* Adding an example and adding tcp timeout

* fixes #70

* Endianness now used in packing bytes

* Adding a libmodbus wrapper

* adding new contrib example of libmodbus client
* updating example documentation so users can find it

* closes #73

* Execute methods of Requests accept context

There were errors whenever a request that got handles in
other_message.py got it's execute method called, as it was being called
with a context parameter. The functions now accept this parameter,
although they don't do anything with it.

The tests have also been updated.

* Add Modbus RTU syncronous server example

* Signal handlers to stop in shutdown().

* WriteMultipleRegistersRequest: Handle values=None case

Currently, if None is passed in explicitly, or if values is not given,
the 'values' object is correctly identified as *not* having an __iter__
attribute, but is incorrectly identified as being a valid register value.
This breaks testInvalidWriteMultipleRegistersRequest.

Solution: if we see None, replace this with [] and skip the check for
__iter__.

* Fix payload tests.

Looking at the ""encoded"" string, it looks identical to that of the big
endian encoding string, and my understanding is that the data shown in
""encoded"" *IS* big-endian, not little-endian.

I have no idea how this passed before, but it passes now.

* sync.ModbusUdpClient: Correct reference to settimeout.

I could not find a 'settimeout' (case-insensitive) anywhere in the
codebase other than on this line, but I *did* see it was a method of
socket.socket.

So I'll assume that this was *supposed* to be calling
socket.socket.settimeout.

* test-client-sync: Fix UDP connection test.

Rather than passing in a vanilla object, we should pass in something
that implements the settimeout method.

* Lazily initialize InstallManagementConsole

Simply importing the management console takes ~0.3 sec on an 1GHz Atom.
Since it is (I suspect) often not used, lazily importing it should help
startup for many programs.

* Fixes the UDP client socket timeout bug

fixes #51

* Implement mask_write_register method in client mixin

* Workaround for bug 101 https://github.com/bashwork/pymodbus/issues/101

* Workaround for bug 101 https://github.com/bashwork/pymodbus/issues/101

* Riptide 1.3.0 pymodbus internal pre-release (riptide1) with dhoomakethu's fix for bashwork#101.

* Riptide 1.3.0 pymodbus internal pre-release (riptide1) with dhoomakethu's fix for bashwork#101.

* Use a PEP 404 compliant version.  Start at rc93101 to usurp any other real release candidates.

* Use a PEP 404 compliant version.  Start at rc93101 to usurp any other real release candidates.

* Document Riptide specific instructions.

* Include Workaround for bug 101 bashwork#101

* Include Workaround for bug 101 bashwork#101

* Better tag names.

* pymodbus fix for modes RTU error cases.

* version bumped to c93103

* version bumped to c93103

* fixed issue with pymodbus timing over serial

* fixed issue with pymodbus timing over serial

* Add RIPTIDE.md  to .gitignore

* bump version to rc93105

*  fix merge conflicts

* fix version file

*  fix unit test failures

* cleanup

* #121 changelog updated

* Misc update Add __maintainer__ field in setup.py

* 1. #162, creating universal distribution for py2 and py3
2. Merge PR #152 , create compatible versions

* fix test failures

* fix ReadDeviceInformationRequest  encoding probelm",nevow os,"
* Tieing these into the factory decoder
* Adding tests to cover the new code (need more)
* Fixing a few bugs found along the way",3,Web Framework&Filesystem,Web Framework,False,False
6892,bccp/nbodykit,59b7f606b26f6c3c4060937d3b773c3e34a6f970,2018-06-01 01:29:29,numpy,functools,"rewrite MPIRandomState.

the rewrite cleanly supports uniform and poisson. Other
samplers can be added in similiar ways.

These functions use different function signatures from numpy.RandomState's
functions. We take itemshape, because the size of the call is already
predetermined.",functools numpy,"
These functions use different function signatures from numpy.
RandomState's",3,Codestyle,Codestyle,False,False
6901,beetbox/beets,a88682e7bbc03b94aabb3290058b8c9b8aba80e0,2016-11-26 23:46:44,unittest,form,"Undo `from _common import unittest` indirection

This was a vestige from when we used to need the unittest2 library for pre-2.7
compatibility. Now that we require Python 2.7, we aren't using that library
and this indirection wasn't doing any good.",form unittest,"
This was a vestige from when we used to need the unittest2 library for pre-2.7
compatibility.",3,Testing,Testing,False,False
6903,tomasbedrich/pycaching,228679ea2da48ca9156ff4ac90919c38b77de14b,2018-05-13 15:48:11,unittest,form,"Overhaul testing with Betamax (#95)

* Fix #94

* Update Geocaching and util to support Sessions for testing

* Update tests to use Betamax

* Refactor tests to do common setup for networking.

I elected *not* to record a cassette for the login setup. If I had recorded a login setup cassette, then adding new networked tests would be difficult, because instead of actually logging in, Betamax would replay the login cassette, which wouldn't give correct data. Then the test would fail.

Instead, the setup attempts to login. If if succeeds, great. If it fails, it pretends like it succeeded and continued. If tests are only being replayed (without new ones created), everything will be fine. If new tests are recorded, they will fail due to improper authentication. They would've failed anyway, but in this case they'll fail at the recording stage instead of the setup phase.

* Refactor cookie scrubbing to take advantage of response.cookies, scrub __RequestVerificationToken

In the request, some cookies are sent in the body rather than the headers, so we need to examine that for secret values.",form unittest,"
* Update Geocaching and util to support Sessions for testing",3,Testing,Testing,False,False
6905,celery/celery,66672c0f17003712ab58705d0b213f47b784b41b,2014-05-20 21:12:36,json,anyjson,Use kombu.utils.json instead of anyjson :sad:,anyjson json,"
Use kombu.utils.json instead of anyjson :sad:",5,Serialization,Serialization,False,False
6945,psychopy/psychopy,64419787ff13246ba452ca9956bc3588ef319362,2016-11-18 13:25:50,httplib2,httplib,"BF/ENH:Switched httplib to httplib2 since httplib is outdated.

Signed-off-by: Michał Oszczak <mimioszczak@gmail.com>",httplib httplib2,"
BF/ENH:Switched httplib to httplib2 since httplib is outdated.",6,HTTP Clients,HTTP Clients,False,False
7003,canonical/cloud-init,508670bdaf9545b6bcc8e2009e8bd3f08d6f8796,2015-01-22 23:38:30,mock,mocker,More test ports from mocker to mock.,mocker mock,"
More test ports from mocker to mock.",7,Testing,Testing,False,False
7015,cclib/cclib,47454d30b56781b19a1fcd1a8f83c1582d8e4711,2019-02-21 05:01:24,six,mock,Use six.add_move to import mock across Python 2 and 3,mock six,"
Use six.add_move to import mock across Python 2 and 3",3,Testing,Testing,False,False
7017,rhinstaller/blivet,338db723867168811036040e7c6e7f35c05ef963,2017-05-26 17:15:34,six,mock,python2: Add a custom six move for mock.,mock six,"
python2: Add a custom six move for mock.",3,Testing,Testing,False,False
7022,cloudify-cosmo/cloudify-aws-plugin,c5e56b5af50912fa4be20ec0cf1a7002d5c05d12,2015-01-18 07:55:02,unittest,testtools,changed testtools to unittests,testtools unittest,"
changed testtools to unittests",5,Testing,Testing,False,False
7024,softlayer/softlayer-python,cd8ce76db6eb69868686952d287334b1fd77d045,2020-03-17 21:05:09,unittest,testtools,"#1243 refactored unit tests to use python unittest over testtools, because testtools was breaking in the latest version",testtools unittest,"
#1243 refactored unit tests to use python unittest over testtools, because testtools was breaking in the latest version",5,Testing,Testing,False,False
7026,celery/celery,975ecabf4616ea56aa56d933f9880c6c7d25f168,2020-08-28 03:30:21,unittest,case,"Migration of Case to pytest (#6317)

* Migrate case to unittest.mock

* Use pytest.importorskip instead of case.skip

* Use pytest.mark.skip instead of case.skip.todo

* Use pytest.importorskip instead of case.skip in t/unit/tasks/test_result.py and t/unit/security/case.py

* Migrate skip.if_win32 and skip.if_pypy to pytest

* Remove unused import

* Remove @skip.if_jython since it does not support python2

* Replace skip.unless_environ with pytest.mark

* Replace skip.unless_symbol with pytest.mark.skipif

* Make flake8 happy",case unittest,"
* Migrate case to unittest.mock",3,Testing,Testing,False,False
7027,celery/kombu,20e2c45892286253794d5b226e33904d4ed0b00b,2020-08-16 14:39:26,unittest,case,Use unittest.mock instead of case,case unittest,"
Use unittest.mock instead of case",3,Testing,Testing,False,False
7028,celery/py-amqp,3221bff40a864ae9dac5f1c427c3a4db02b25563,2020-08-20 07:28:02,unittest,case,Use unittest.mock instead of case,case unittest,"
Use unittest.mock instead of case",3,Testing,Testing,False,False
7030,edx/repo-tools,b3229a73ed605bb643ad1199aedfe38fcb59579d,2016-09-19 17:20:50,backports,csv,Use backports.csv for better unicode handling,csv backports,"
Use backports.csv for better unicode handling",5,Filesystem,Filesystem,False,False
7033,translate/translate,d1411aa83ed73ec4938b7b714527cb1ba68c246e,2018-07-29 19:18:37,backports,csv,"Use backports.csv module on Python 2

This allows to drop many hacks on csv handling as Python 2 and 3
versions now behave same. Also this fixes several corner cases in
handling CSV files (eg. BOM charsets were wrongly saved on Python 2 as
that did lead to having BOM in every field instead of just at the
beginning of the file).",csv backports,"
Use backports.csv module on Python 2",5,Filesystem,Filesystem,False,False
7034,cfpb/cfgov-refresh,8399bbfbf5fa127300e795c652aaccb11df6701c,2020-12-14 15:59:04,pathlib,unipath,"Use Python pathlib instead of third-party Unipath

This commit deprecates use of the third-party Unipath package and
instead uses the built-in Python pathlib package.

Unipath is now in maintenance mode [0]. We used it previously with
Python 2. Python 3.4 introduced pathlib [1] which has the same
functionality for our purposes.

We currently use Unipath for path-handling logic, but pathlib.Path
can do the same thing. The default Django project settings file uses
pathlib in this way [2].

There are no other uses of pathlib in any of the cf.gov satellite apps.
[3]

[0] https://github.com/mikeorr/Unipath
[1] https://docs.python.org/3/library/pathlib.html
[2] https://github.com/django/django/blob/45f4282149e13a2c1548a579f60d098e397a33d7/django/conf/project_template/project_name/settings.py-tpl#L13-L16
[3] https://github.com/search?q=user%3Acfpb+unipath&type=code",unipath pathlib,"
Use Python pathlib instead of third-party Unipath",3,Filesystem,Filesystem,False,False
7091,dwave-examples/factoring,6c13a327a200c7db0bf2fe8aaf0b5c78f8315b36,2018-01-18 01:45:59,pandas,numpy,Update to use pandas instead of numpy,numpy pandas,"
Update to use pandas instead of numpy",3,Codestyle&Scientific,Codestyle,False,False
7096,wtforms/wtforms,3e1f0c3bece5dc8b84972fa752df62d72f60d8e3,2009-01-12 21:52:18,unittest,py,Convert all existing tests to use unittest instead of py.test.  Refs #1.,py unittest,"
Convert all existing tests to use unittest instead of py.test.
Refs #1.",4,Testing,Testing,False,False
7100,wtforms/wtforms,3e1f0c3bece5dc8b84972fa752df62d72f60d8e3,2009-01-12 21:52:18,unittest,py.test,Convert all existing tests to use unittest instead of py.test.  Refs #1.,py.test unittest,"
Convert all existing tests to use unittest instead of py.test.
Refs #1.",4,Testing,Testing,False,False
7101,cobbler/cobbler,8c4a8190411f72ecdbbd42e135a6bcd51b8b8dbb,2018-11-19 16:21:20,requests,urlgrabber,"Python3: First attempt of replacing urlgrabber with requests.

Implemented a DownloadManager class which can be re-used.
Currently this code has NOT been tested as we don't have
a working cobblerd just yet. So expect some stupid bugs.",urlgrabber requests,"
Python3: First attempt of replacing urlgrabber with requests.",5,HTTP Clients,HTTP Clients,False,False
7103,pykickstart/pykickstart,bfd49a20f9433e4d230669b78584c5d114473cd3,2015-02-17 10:04:38,requests,urlgrabber,"Replaced URLGrabber with requests (rhbz#1141245)

Because urlgrabber is being dropped by many significant software projects in
Fedora, Pykickstart can't keep depending on it once it is converted to Python 3
(rhbz#985310).

This commit replaces the dep with requests with SSL verification turned on by
default. This could pose trouble in Python 2 if proper underlying packages
aren't installed [1]. In case this becomes a problem, the SSL_VERIFY constant
in load.py may be switched to False.

[1] https://github.com/kennethreitz/requests/issues/749#issuecomment-19187417",urlgrabber requests,"
Replaced URLGrabber with requests (rhbz#1141245)",5,HTTP Clients,HTTP Clients,False,False
7104,rhinstaller/anaconda,28df390ed0108aa05f22fb1ee56455d2dde23082,2015-01-26 10:59:46,requests,urlgrabber,"Replace python-urlgrabber with python-requests (#1141242)

Python urlgrabber is Python 2 only and kinda crufty.
Replace it with the Python 3 compatible python-requests module,
which provides a much nicer interface, is in active development
and is very widely used.",urlgrabber requests,"
Replace python-urlgrabber with python-requests (#1141242)",5,HTTP Clients,HTTP Clients,False,False
7105,virt-manager/virt-manager,5584863d18b5b0ffed9bb75a4a2cc7b11df8863d,2015-09-18 23:50:35,requests,urlgrabber,"urlfetcher: Switch to requests and urllib2 instead of urlgrabber

urlgrabber is largely dead upstream and isn't going to be ported to
python3 AFAIK. So we will need to move off of it eventually.

Use requests for http handling which is the most common library nowadays,
and just plain old urllib2 for ftp fetching.",urlgrabber requests,"
urlfetcher: Switch to requests and urllib2 instead of urlgrabber",5,HTTP Clients,HTTP Clients,False,False
7113,cov-lineages/pangolin,0a95d8bd7e47c8333a090246b6709d3ec8b2cab8,2020-07-16 13:06:09,joblib,pickle,switching from pickle to joblib to allow for better compression of the model files,pickle joblib,"switching from pickle to joblib to allow for better compression of the model files
",3,Utility,Utility,False,False
7115,nidhaloff/igel,2af6ad13ec5b98ba1a0c916c7a616d38deead148,2021-06-10 20:28:44,joblib,pickle,replaced pickle with joblib,pickle joblib,"
replaced pickle with joblib",3,Utility,Utility,False,False
7116,ctlearn-project/ctlearn,2375af87fa36b7c93c5a3be5cab81784d4a2f64e,2018-06-22 12:59:27,configobj,configparser,"Renamed train.py to run_model.py.
Changed --predict command line option to a mode setting.
Reworked config parsing to use configobj instead of configparser
and added corresponding config_spec.ini.
Reworked run_model.py to use DataLoader, DataProcessor, and image_mapper",configparser configobj,"
Reworked config parsing to use configobj instead of configparser
and added corresponding config_spec.ini.",6,Filesystem,Filesystem,False,False
7144,databricks/koalas,b8093501dfcc9beb50885bc553fae4d8d0664d0c,2019-04-27 10:45:51,pytest,unittest-xml-reporting,"Use pytest instead of nose to run tests (#183)

This PR propose to use `pytest` instead of `nose` for the reasons below:

- We can remove the manual doctest / unitests running and integrate it with one testing framework `pytest`

- It's more popular in terms of download stats (PyPi) and Github stars
  - https://pypistats.org/packages/nose vs https://pypistats.org/packages/pytest
  - https://github.com/nose-devs/nose vs https://github.com/pytest-dev/pytest

- It give a better output with a little bit of more info and colored text:

    `nose`:

    ```
    ...
    test_read_csv (databricks.koalas.tests.test_csv.CsvTest) ... ok
    test_read_csv_with_comment (databricks.koalas.tests.test_csv.CsvTest) ... ok
    test_read_csv_with_mangle_dupe_cols (databricks.koalas.tests.test_csv.CsvTest) ... ok
    ...
    ```

    `pytest`:

    ```
    ...
    databricks/koalas/frame.py::databricks.koalas.frame.DataFrame.count PASSED    [  3%] 
    databricks/koalas/frame.py::databricks.koalas.frame.DataFrame.drop SKIPPED    [  4%]
    databricks/koalas/frame.py::databricks.koalas.frame.DataFrame.dropna SKIPPED  [  5%]
    ...
    ```",unittest-xml-reporting pytest,"
Use pytest instead of nose to run tests (#183)",3,Testing,Testing,False,False
7148,koordinates/sno,94103297ce52078e599f293dcce70a2c2f905e52,2020-03-04 13:26:25,apsw,sqlite3,"Merge branch `bundle-dependencies`

key 0.3 release changes
- bundle all dependencies
- standalone apps via pyinstaller
- macos & linux packaging
- dependency upgrades
- swap stdlib Sqlite -> APSW",sqlite3 apsw,"
- dependency upgrades
- swap stdlib Sqlite  laifuhewb  APSW",3,Database,Database,False,False
7160,ipython/ipython,64e90b1e867da8e6d20bc44f1fc0385a87e37898,2011-10-14 18:29:17,json,zmq,"protect kernelapp/qtconsole from invalid connection files

(clean error/exit, rather than crash)

also use stdlib json to load connection file, not zmq.jsonapi, which can be
jsonlib2, which will return Longs, causing TraitError.",zmq json,"
also use stdlib json to load connection file, not zmq.jsonapi, which can be
jsonlib2, which will return Longs, causing TraitError.",4,Serialization,Serialization,False,False
7161,jupyter-server/jupyter_server,ebf0ea32ef818ef570dd5565a72c65f2005b656b,2014-06-18 19:51:41,json,zmq,"Use stdlib json, not zmq jsonapi",zmq json,"
Use stdlib json, not zmq jsonapi",4,Serialization,Serialization,False,False
7162,jupyter/jupyter_client,c2dbf8018186656d6594453ac813501c2f1b8ea8,2011-10-14 18:29:17,json,zmq,"protect kernelapp/qtconsole from invalid connection files

(clean error/exit, rather than crash)

also use stdlib json to load connection file, not zmq.jsonapi, which can be
jsonlib2, which will return Longs, causing TraitError.",zmq json,"
also use stdlib json to load connection file, not zmq.jsonapi, which can be
jsonlib2, which will return Longs, causing TraitError.",4,Serialization,Serialization,False,False
7164,dictation-toolbox/caster,28ec694330689a96c988508b7ce2c5980b57a361,2018-10-21 00:53:57,toml,json,"Replace Json for Toml in Caster. (#269)

* Completely remove dependency on json and replace with toml in Caster.",json toml,"Replace Json for Toml in Caster.
(#269)
",3,Serialization,Serialization,False,False
7174,diyan/pywinrm,4599a89b365f066856ff5001181287149986cbaf,2013-09-01 15:03:51,py,nose,Tests. Switch from nose into py.test,nose py,"
Tests.
Switch from nose into py.test",3,Testing,Testing,True,False
7178,django-tastypie/django-tastypie,bdc2327cb4aa5933689a23aca058aa1b5f15d168,2012-05-19 22:45:55,django,simplejson,"Added Travis CI Support

Fixes included to make tox run green:

Updated tox to latest Django releases
Made header lines in the docs wide enough
Fixed a broken reference in the docs
Removed non-existent static folder in the docs
Made tests run under Python 2.5
Changed simplejson in test imports to Django's included simplejson",simplejson django,"
Made tests run under Python 2.5
Changed simplejson in test imports to Django's included simplejson",9,Serialization&Web Framework,Serialization,True,False
7183,stephenmcd/mezzanine,f9c61965c45f225a6ebc1433b6787fad0d5fa508,2011-08-23 23:14:21,django,simplejson,Use Django's simplejson.,simplejson django,"
Use Django's simplejson.",9,Serialization&Web Framework,Serialization,False,False
7186,getsentry/sentry,824057a4a405af2c5491d6d33ebb3f5dd85cfcdc,2013-11-30 03:55:21,simplejson,algoliasearch-django,Use simplejson instead of Django's compat,algoliasearch-django simplejson,"Use simplejson instead of Django's compat
",4,Web Framework&Serialization,Web Framework,False,False
7188,pyload/pyload,7a503302fbe6fcc23af94de2fe313298c3a6d95c,2011-02-02 20:46:15,simplejson,algoliasearch-django,"removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",algoliasearch-django simplejson,"
removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",4,Web Framework&Serialization,Web Framework,False,False
7189,tendenci/tendenci,9d7e50e6cb72fc8a0796122c0b56081b82b3d1be,2014-09-07 17:19:37,simplejson,algoliasearch-django,#706 use system simplejson instead of django,algoliasearch-django simplejson,"
#706 use system simplejson instead of django",4,Web Framework&Serialization,Web Framework,False,False
7190,getsentry/sentry,824057a4a405af2c5491d6d33ebb3f5dd85cfcdc,2013-11-30 03:55:21,simplejson,django,Use simplejson instead of Django's compat,django simplejson,"Use simplejson instead of Django's compat
",4,Web Framework&Serialization,Web Framework,False,False
7192,pyload/pyload,7a503302fbe6fcc23af94de2fe313298c3a6d95c,2011-02-02 20:46:15,simplejson,django,"removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",django simplejson,"
removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",4,Web Framework&Serialization,Web Framework,False,False
7193,tendenci/tendenci,9d7e50e6cb72fc8a0796122c0b56081b82b3d1be,2014-09-07 17:19:37,simplejson,django,#706 use system simplejson instead of django,django simplejson,"
#706 use system simplejson instead of django",4,Web Framework&Serialization,Web Framework,False,False
7194,django-tastypie/django-tastypie,bdc2327cb4aa5933689a23aca058aa1b5f15d168,2012-05-19 22:45:55,algoliasearch-django,simplejson,"Added Travis CI Support

Fixes included to make tox run green:

Updated tox to latest Django releases
Made header lines in the docs wide enough
Fixed a broken reference in the docs
Removed non-existent static folder in the docs
Made tests run under Python 2.5
Changed simplejson in test imports to Django's included simplejson",simplejson algoliasearch-django,"
Made tests run under Python 2.5
Changed simplejson in test imports to Django's included simplejson",8,Serialization&Web Framework,Serialization,False,False
7199,stephenmcd/mezzanine,f9c61965c45f225a6ebc1433b6787fad0d5fa508,2011-08-23 23:14:21,algoliasearch-django,simplejson,Use Django's simplejson.,simplejson algoliasearch-django,"
Use Django's simplejson.",8,Serialization&Web Framework,Serialization,False,False
7206,superdesk/superdesk-core,1d278d65d2044243c441b3f27215c94342d9bb75,2017-02-17 17:37:53,lxml,beautifulsoup4,"replaced BeautifulSoup by lxml

- changed bs4 imports by lxml
- adapted the code
- moved/added some useful methods to superdesk.etree (notabily sanitize_html)
- parser in superdesk.etree now make the difference between generic XML and HTML, using content argument
- changed word count algorithm. The count is different in tests due to cases were words linked by apostrophe are now counted as 2 separate words (e.g. ""it's"" counts now as 2 words, were it was counted as one before).
- fixed unescaped regex + some other issues
- removed beautifulsoup4 from dependencies
- pa_nitf: removed a decoding/encoding in get_content which may be there because of a bad encoding declaration (fixtures/pa5.xml was in unicode while declared as iso-8859-1 for instance, it is now fixed).

SDESK-505",beautifulsoup4 lxml,"
replaced BeautifulSoup by lxml",5,HTML,HTML,False,False
7212,y0ssar1an/CSS3,d47e36b9f19cacaeed97752ae7f00e508b13d1d1,2015-02-23 03:54:18,request,requests,use requests instead of urllib to call validation server. make POST requests using multipart/form-data instead of terrible method using GET requests,requests request,"
use requests instead of urllib to call validation server.
make POST requests using multipart/form-data instead of terrible method using GET requests",6,HTTP Clients,HTTP Clients,False,False
7215,exaile/exaile,85c982f4a88ccff505de557b34b2baa491b029f9,2016-03-12 07:37:45,mox3,mox,Migrate mox to mox3,mox mox3,"
Migrate mox to mox3",20,Testing,Testing,False,False
7231,slimta/python-slimta,a06b3970f57e48eaf58c2e81c70eac64ecc2cebe,2015-10-28 10:49:22,mox3,mox,"Switch mocking to mox3

mox3 is a drop-in replacement for mox library, maintained by openstack,
with recent releases (mox has no release since 2010) and python3
compatibility.",mox mox3,"
Switch mocking to mox3",20,Testing,Testing,False,False
7262,kanaka/websockify,992e09eac484f25871b7fcfc6d11b8e5beac9edb,2020-08-21 08:50:11,mock,mox3,"Convert tests from mox to mock

mox is deprecated upstream in favour of mock",mox3 mock,"
Convert tests from mox to mock",11,Testing,Testing,False,False
7291,eversum/galacteek,c7be2fc4e38f9032100ed88aad9ad8b52aaa7622,2018-10-23 22:33:18,logbook,logging,"* add galacteek.crypto package for RSA encryption
* add galacteek.ipfs.p2pservices
* remove galacteek.ipfs.ipfsd
* galacteek.ipfs.multi: for operations on multiaddrs
* we use logbook instead of python's logging now
* peers system and UI more stable
* README update",logging logbook,"
* galacteek.ipfs.multi: for operations on multiaddrs
* we use logbook instead of python's logging now
* peers system and UI more stable",4,Logging,Logging,False,False
7298,fonttools/ufoLib2,51fb2840015c451787a222ccd647563e0f02958f,2019-11-06 10:49:00,pathlib,py.test,Use pathlib in tests,py.test pathlib,"
Use pathlib in tests",3,Testing&Filesystem,Testing,False,False
7300,randovania/randovania,e3bbc3f0825ef840521d78d5b6e09cf07d1b715c,2018-12-01 18:24:22,pathlib,py.test,Use pathlib instead of py.path in tests,py.test pathlib,"
Use pathlib instead of py.path in tests",3,Testing&Filesystem,Testing,False,False
7310,frictionlessdata/datapackage-py,a606298b4239fcc1fefc03973b375f8f82e7a84f,2015-11-25 16:31:40,httpretty,mock,Use httpretty instead of mock to mock HTTP requests during tests,mock httpretty,"
Use httpretty instead of mock to mock HTTP requests during tests",3,Testing,Testing,False,False
7313,gem/oq-engine,346e91cae0fc930d3187688716f6d2a85109cfc1,2020-04-23 07:57:42,toml,pyyaml,Replaced YAML with TOML,pyyaml toml,"
Replaced YAML with TOML",5,Serialization,Serialization,False,False
7323,pywbem/pywbem,93fefa5e8c6133863e9b9d08b3ab91d0b31953b7,2019-12-28 17:43:19,requests,httpretty,"Migrated HTTP communication to use requests

This change migrates the HTTP communication of the pywbem client to use
the Python 'requests' package. This unifies the HTTP communication
again between Python 2 (where M2Crypto was used) and Python 3 (where
Python's ssl module was used).

Details:

* The coding changes are mainly in cim_http.py where the internal
  function wbem_requests() has mostly been re-written, and in
  cim_operations.py where wbem_requests() is called and the
  WBEMConnection object got a new 'session' attribute for the
  requests.Session object.

* Changed the way the 'ca_certs' parameter of 'WBEMConnection' can
  be used to select the CA certificates used to validate the
  server certificate, as follows:
  - Removed the set of hard coded certificate directories.
  - The default 'None' now causes the certificates from the certifi
    package to be used.
  - A string is interpreted as a path of a certificate file
    or certificate directory. Upon creation of the WBEMConnection
    object, the specified path name is checked for existance, and
    IOError is raised if it does not exist.

* Added concept of features in pywbem and a first PYWBEM_USES_REQUESTS
  feature which indicates a version of pywbem that uses the 'requests'
  package. This is useful for users of pywbem to write code that works
  with multiple versions of pywbem.

* Added a check for existance of the client certificate files
  specified with the 'x509' parameter of 'WBEMConnection', raising
  IOError if any of them is specified but does not exist.

* Added a 'scheme' read-only attribute to WBEMConnection that provides
  the scheme of the input URL.

* Removed support for the 'OWLocal' authentication scheme that was supported
  for the OpenWBEM server, and the 'Local' authentication scheme that was
  supported for the OpenPegasus server. Pywbem now supports only the 'Basic'
  authentication scheme.

* Removed support for communicating with WBEM servers using UNIX domain
  sockets by specifying a file-based URL. Use the standard http and https
  protocols instead.

* Changed the function tests to use requests_mock for their HTTP
  level mocking. This required adjusting the format of the CIMObject
  headers to no longer use percent-escapes.

* Removed use of x509 parameter from testcases in test_recorder.py,
  because the files are now checked for existence, and the subject of
  these tests does not justify the effort of mocking that.

* Changed the pywbem_os_setup.* scripts to no longer be used for
  installation of pywbem. They are still used for development of
  pywbem. Updated the docs accordingly.

* Note that the documentation of pywbem versions before 1.0.0 downloads
  the pywbem_os_setup.* scripts from the master branch of the pywbem repo.
  Therefore, the scripts still need to work for such earlier versions of
  pywbem. Added a bold information display explaining that the script
  no longer needs to be invoked when installing pywbem 1.0.0.

* Removed troubleshooting items that were specific to M2Crypto and
  Swig.

* Reduced the docs section about prerequisite OS packages to say
  there are no such prereqs anymore starting with 1.0.0.

* Re-established pypy support in Travis. It had to be removed because
  M2Crypto did not install on pypy. It is commented out in this change,
  but will be activated in the manual-ci-run branch.

* Clarified in the description of the ca_certs parameter of WBEMConnection
  that path names may be any type of string (byte string or unicode string).

* Made OpenSSL version info in exceptions that are raised to be conditional
  on using https, in order to avoid confusion.

Signed-off-by: Andreas Maier <andreas.r.maier@gmx.de>",httpretty requests,"
Migrated HTTP communication to use requests",3,Testing&HTTP Clients,Testing,False,False
7330,spotdl/spotify-downloader,f7e9d4b5b632c32a0896abf4401735d202a5fd2b,2020-09-30 07:55:50,requests,logging,"Restructuring Spotdl (#812)

* Restructuring Ideas I

Flesihing out the ideas behing restructuring/recoding of spot-dl

* Restructuring Ideas II

The basic Ideas behind the restructuring attempt have been put down and will hopefully be updated as and when required. Now we can get straight to the code  buisness.

* Problems & Solutions I

Starting to work of the restructuring proper. You won't find any new code here but then a little design before coding can go a long way. I do my design via markdown, you should find a lot of that here.  😁

* Problems & Solutions IV

Some messups with the last commit and me trying to revert to a previous commit. Damn it should have been named 'Problems & Solutions III' well, here is the fix.

The interface definitions have been finished. If I just figure out the code class dubbed soulOfSpotDl and the 'tools' proposed I can get down to code. Cheerio. 😁

* Problems & Solutions V (+some code)

Fixed up some inconspicious typos, ran some hacky tests, minor changes to interface definitons and some (in a way) working code.

* Basic Logging Code

Fixed some typo's, updated working docs, did some tests on logging in ./Hacks and got a working and configured heirarchal logger set up.

* Basic Authorization Code

Nothing fancy here, just some typo fixes, guideline updates, design notes and recycled code.

* Basic 'tools' Code (Not sure if it works yet)

Restructured Temp floder to resemble a python package. Minor name changes, a few edits, lots of questions and untested code. I might even have a hacky implementaion of the Metadata Search Interface.

* Problems & Solutions VI (+ code edits)

Not much code this time around, was (re)figuring out the interfaces/object ideas, still have to change the docs to mirror the changes in code.

* Problems & Solutions VII (+ hackey tests)

added the gener look up. did the doc strings...

* 'Fixing logging' (+ diagrams)

Updated logging guidelines for more clarity of the resulting logs, updated the logging messages interspersed throughout the code to match the new guidelines, updated workingDocs. Chucked in a package diagram for good measure, it forces your to take stalk and stop roming around in circles.

Put up the new stuff since 'Problems & Solutions I' under README updates.

* Basic Embedding ID3 Code

Got in fresh embedding code that should work in theory, tests not yet done.

Slight changes to the package diag.  Some more minor folder renamings and stuff. One step closer to completion (4 more steps to go, assuming someone else will write the search provider which I'm hoping will be YTmusic)

Thinking of ways to highlight the not so great function input variable 'v2_version=' used in mutagen, it tells you absolutely nothing about what the variable does.

* 'Utils' sub-package almost complete

Some typos and a lott of code...  ༼ つ ◕_◕ ༽つ (Yayy!!!)

* Updated Helpers and reference responses

Was adding fresh functionality to spotifyHelpers.py
and added a few more spotify-api responses to the REFS folder for reference

* Trying out multiprocessing

So, my ideas is to do the downloads and conversions in parrlell to speeden up things. Threading is not prrlell processing - multiprocess is. Fiddled around with multiprocessing.

Tried calculating the SHA512 checksum for 33,326 files. single process ~ 25mins, 16 process (since I use a 8core Hyper-V processor) ~ just 3 mins. Far better than I expected.

* Trials on Song download

Looking into various lobraries that can be used to download audio from YouTube and also into the speedy format conversion issue

* Updated YTM song-search code

* Added ""yt_music"" class

Copied from the code I wrote for the original library. Includes ""test"" 
code.

* Update yt_music search to specs

Also updated objects.md with additional  metadata suggestions.

* Update yt_music search to specs

Also updated objects.md with additional  metadata suggestions.

* Updated ytmusic to show all results

Also includes (commented out) code to get metadata.

* Filtering YTM Responses with a focus on song matching

YouTube Music's search response is a sprawling, over-nested JS Object. Code to filter out unnecessary data from those musked responses capable of handling all of the common response structures.

* More references for YTM, YTM data extraction fixed

* Looking around @rocketinventors YTM code

Wrote up a partial YouTube Music Based search Provider based off @roketinventors original code. I'm sure his version will be better

* cleaned up repo tree

* SearchProvider implimented (+ tweaks)

Got the search provider complete based of work done by @rocketinventor. He's the one who cracked YTM querys.

Little tweaks to interface definitions.

* DocStrings + (major) interface modification

The Metadata Search interface is no more. All completed classes have Doc Strings now.

* Fixed errors due to circular imports

* Update README.md

* Got downloads working

run dlTest if you wanna see it work, need ffmpeg on path

* Tweaked search provider for better matches (~99% accuracy now)

* Multiprocess download Complete

* mutagen issues

* A dead simple CLI

Some users might even cringe at its simplicity

* Final Push (I feelDead already)

Got the CLI up and running Updated readme and stuff... I'm up for a longgg break.

* Final

* spotDL v3 rework

* reworked search interface Complete

Much tighter, tidier search interface

* Finished Search Utils + Cleanup

I filled up PURPOSES.md for all of the code written, had to delete some very big functions (lots of erroft wasted)

and a simple cmd line utility to ensure line count doesn't excede 200 lines

* downloader fixed (i guess)

Managing to get the progress bar to sync across multiple processes was a nightmare. the download should be more reliable and less breaky now. It shill could do with a little rewriting. I'll do that asap.

* Downloaders rewritten

* overview helper scripts cleaned up and fixed

* Fixed some nitpicky error + audio normalization

There are oddball cases with inexplicable errors and fluctation (pumping) of audio loudness. All those fixed

* Fixed lethal nitpicky errors + refactors + partial docs

There were a few 1-line errors that could grind the download process to a halt. Fixed those. Refactored songObj -> SongObj across the codebase to keep in line with the naming convention. Started working on the docs.

* some more nitpicky errors + partial docs

EDM-like songs get their last 1-2 seconds clipped/cut/deleted by ffmpeg. we counter this here.

* A ad-hock CLI

* ad-hock CLI usage comments?

* CLI error fix

* Working Packaged Stuff - Finally ! ༼ つ ◕_◕ ༽つ

You can use this now.

* Create README.md

* fixed errors due to pyTube3 Patch

and also added error handling for those rare cases where you don't get a youTube match at all.

P.S. Its ironic that a 'patch' - something that fixes errors actually causes them but then, whatever...

* fixed wrong song len error

Songs used to display the wrong song length, but no more, see comment at spotdl\download\downloader.py:145 for more details.

* Created CONTRIBUTING.md

A fresh CONTRIBUTING.md and minor README changes to notify potensial contributors of the same.

* minor fix

* Update README.md

Co-authored-by: Elliot Gerchak <e@dementedlab.com>",logging requests,"Updated logging guidelines for more clarity of the resulting logs, updated the logging messages interspersed throughout the code to match the new guidelines, updated workingDocs.
Chucked in a package diagram for good measure, it forces your to take stalk and stop roming around in circles.
Fixed some typo's, updated working docs, did some tests on logging in ./Hacks and got a working and configured heirarchal logger set up.",3,Logging&HTTP Clients,Logging,False,False
7365,gwastro/pycbc,fc847c344a5bc3aed6ebec794842027a05231f28,2014-03-27 20:16:25,urllib,pycurl,Use urllib instead of pycurl,pycurl urllib,"
Use urllib instead of pycurl",4,HTTP Clients,HTTP Clients,False,False
7366,koldinger/Tardis,a1520f0604d29d8fb3eb4d98f87a87a882f10ad2,2016-02-25 06:45:58,urllib,pycurl,"Switched to using urllib instead of pycurl.  Changed to support only a
pwfile argument instead of both pwfile and pwurl.",pycurl urllib,"
Switched to using urllib instead of pycurl.
Changed to support only a",4,HTTP Clients,HTTP Clients,False,False
7367,microsoft/maro,870a4b3d69647edd472ff8ecc5dc0545501c5e53,2020-09-21 09:31:35,urllib,pycurl,"V0.1 issues installation (#38)

* replace pycurl to urllib

* rm pycurl in test requirements

* fix installation issue, update readme, speed up citibike

Co-authored-by: Arthur Jiang <sjian@microsoft.com>",pycurl urllib,"
* replace pycurl to urllib",4,HTTP Clients,HTTP Clients,False,False
7380,sns-sdks/python-youtube,335ee748d3494b216c2875296d638e13ca06eff5,2019-11-24 14:49:03,model,models,fix(name): :ambulance: modify old models name to let tests run correct.,models model,"
fix(name): :ambulance: modify old models name to let tests run correct.",5,Database,Database,False,False
7382,hyperspy/hyperspy,30b8a4d4cb80a8e5eaeb28cdb0d317b9363aedba,2011-08-31 14:13:31,scipy,numpy,Using scipy instead of numpy may improve the performance,numpy scipy,"
Using scipy instead of numpy may improve the performance",3,Codestyle&Deep Learning,Codestyle,False,False
7383,igmhub/picca,e049222fa34331e3326bbbe95ffed58ba4cb2320,2018-02-13 13:59:12,scipy,numpy,changed numpy to scipy,numpy scipy,"
changed numpy to scipy",3,Codestyle&Deep Learning,Codestyle,False,False
7387,pybamm-team/PyBaMM,a87ef3a6c234ba98eec0bdeab7683c5a241a7795,2019-06-17 11:23:31,autograd,numpy,#457 changed to autograd numpy,numpy autograd,"
#457 changed to autograd numpy",3,Codestyle&Scientific,Codestyle,False,False
7419,jazzband/django-constance,69221ba2b410f3965cb627253149bfdb1f49f817,2014-11-21 19:16:39,utils,django,"Renamed config module to base to prevent ambiguity

This should fix #80 that is triggered by Django's new strickter import time loading process.",django utils,"
This should fix #80 that is triggered by Django's new strickter import time loading process.",3,Web Framework,Web Framework,False,True
7420,pyload/pyload,7a503302fbe6fcc23af94de2fe313298c3a6d95c,2011-02-02 20:46:15,utils,django,"removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",django utils,"
removed django => now using bottle, new builtin threaded ssl server
Dont forget to install jinja and beaker !",3,Web Framework,Web Framework,False,False
7422,jazzband/django-pipeline,1d801441a0b258449e07c073c4473cc62808b72f,2012-02-02 09:57:20,algoliasearch-django,tempfile,use django tempfile implementation to provide windows support,tempfile algoliasearch-django,"
use django tempfile implementation to provide windows support",3,Web Framework,Web Framework,False,False
7424,tendenci/tendenci,a9967f63702d7dc0cb53326f351d44e331b5ddf4,2012-10-15 16:03:29,algoliasearch-django,tempfile,"Squashed commit of the following:

commit a9978c6ad82c94cf0d944e13875177900cb0cf8a
Author: Jenny Qian <jqian@schipul.com>
Date:   Sat Oct 13 18:32:46 2012 -0500

    Minor update for creator and owner assignment.

commit 3b1420f8d05c80404024afbef2943457c0fb616e
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 12 21:29:44 2012 -0500

    Include 304 to the response code.

commit 38b779c92db3abd2756d951e261cb4a155fb201e
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Fri Oct 12 18:19:40 2012 -0500

    Maybe cache the photo when we upload? It slows down uploads but speeds up the batch edit view afterwards.

commit d52f5f4ca96ddc670ce717794257f0152011b68b
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Fri Oct 12 17:47:10 2012 -0500

    Adding entity to be excluded from membership application.

commit 41547a158283856ce933aa06a3b7629bc57732c0
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 12 15:07:02 2012 -0500

    Added the option src_url.

commit 22653662e96fb2020818f7f043698fdddd1e00b1
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 12 14:51:38 2012 -0500

    Added doc extension.

commit 849d1c3a3257206427107628cdc0c5bd17125da9
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 12 12:13:22 2012 -0500

    Update management command scan_and_retrieve_files. Allow app names to be passed from command line.

commit e48fc0180473d2c605d825d8183cc282e171c088
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 12 11:46:50 2012 -0500

    Rename management command scan_and_retrieve_files.

commit b20e26ae5cee897ecb4129e2219debd18b1c765e
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 12 08:41:31 2012 -0500

    Management command to fix broken images by retrieving from its original (T4) site.

commit b5a8ca03d10b73fc6c6efbe8f476a34982f39c62
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 11 18:29:05 2012 -0500

    **Files: Adding group on file add/edit pages. Added files_list tag to be pushed out to the site. Updated files search page to include filter for Group.

commit c10cf4c3dbc759cec95149cdf1aa6143964d5115
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 11 18:27:44 2012 -0500

    Updating base template tag for lists to allow group to be passed as a kwarg.

commit bb89ec5f0f7d3c87fc466f845d12ef3c11415060
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 11 18:27:19 2012 -0500

    User groups: reorg the import for ImportFile to not conflict with File on imports.

commit 92ce6fd123c23ac1002703230c223618bade9eaf
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 11 18:26:49 2012 -0500

    **Photos: Adding group edit on bulk edit and individual photo page. Updating photos_list tag to take in group.

commit 58c15bc8f95cb094757d261a662539c4cf0ba3a7
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 11 18:25:51 2012 -0500

    **Events: Adding group to be displayed on Event add/edit. Adding group to the filters list for the list_events tag.

commit 66d69a92c93dfe75ae02920fdd119dbdb1e2dbba
Author: Jenny Qian <jqian@schipul.com>
Date:   Wed Oct 10 21:30:10 2012 -0500

    Minor update address assignment.

commit 60452d75dca89c17cf40510e5677c92f26b2afd3
Author: Ed Schipul <eschipul@schipul.com>
Date:   Wed Oct 10 18:13:56 2012 -0500

    Entity added to admin section

    Added entities and associated with groups and parent entity id

    Signed-off-by: Ed Schipul <eschipul@schipul.com>

commit 29179d7adaddefc963591e05b4a199edd231c8f9
Author: Alex <aragsdale@schipul.com>
Date:   Wed Oct 10 15:41:09 2012 -0500

    Removing duplicate forms templates.

commit fdcd7a89085a69941b7e0d5ffe1cce7b097ca2fc
Author: Alex <aragsdale@schipul.com>
Date:   Wed Oct 10 15:40:53 2012 -0500

    Custom templates for forms.

commit b4d4f7c0c83472489f77f5fde04b1730bf4f4108
Author: Alex <aragsdale@schipul.com>
Date:   Wed Oct 10 15:39:04 2012 -0500

    Pages: check for template with template_exists so that custom page templates work.

commit 4d9c40647df21d138fffbaeb8c84dcc3e031cd6a
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Wed Oct 10 12:31:48 2012 -0500

    Accountings: Add group by description in SQL.

commit eb0162f24c7992ce16573dca31e353297212e2fa
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Wed Oct 10 12:11:02 2012 -0500

    Add new management command to be run nightly that is a collection of other commands.

commit 6b54b603de45ebc44db241364b9b668654f257e0
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Tue Oct 9 18:21:38 2012 -0500

    Add en url redirect to login page for legacy site compatibility.

commit f29e264b7cae28216fad7af3a24435adc0207aad
Author: Jenny Qian <jqian@schipul.com>
Date:   Tue Oct 9 22:14:15 2012 -0500

    Rename address to address1 for paypal form.

commit 09e1ab0f2b05bc8e2f2804c1178d595a550c67f3
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Tue Oct 9 18:08:21 2012 -0500

    Updating the theme editor to allow uploaded images.

commit 5e9f345c628f434647d8a84f886812d8c73326f1
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Tue Oct 9 17:18:45 2012 -0500

    Updating events image field to save properly for S3 storage backend.

commit fb88763fa70a036eff891e67c12a000601488646
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Tue Oct 9 16:26:22 2012 -0500

    Updating index search template.

commit 078c6ceb30aeeed4d5f4f11a3d0b50fae4e5b8d2
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Tue Oct 9 16:25:57 2012 -0500

    Updating event_logs PNG generation.

commit 19f755357f53bd7199064b917cb71b68d3e31a5e
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Tue Oct 9 13:29:59 2012 -0500

    Updating split_title to check self.title before splitting.

commit 47113372b9f6b274952b5968aa1a9f859806e675
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Tue Oct 9 12:56:40 2012 -0500

    Updating user groups save to create or update the associated auth group.

commit ab3d3bba4c3dcfbf2384f558c92413f5674f3980
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Mon Oct 8 17:06:21 2012 -0500

    Updating the theme root path for a custom page template.

commit b260d242dd5b179555c307fc14f851393a7e0f93
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 5 17:40:55 2012 -0500

    Comment out the address info assignment - they are not returned by PayPal.  Update the response_reason_text.

commit 79c58577c9a5977f9adfaf6fe71ffe901d3e07f7
Merge: 6e87dac f15d9c6
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 5 17:19:44 2012 -0500

    Merge branch 'master' of github.com:tendenci/tendenci

commit 6e87dacdc61f692fb45c62fcda1e590b9f630048
Author: Jenny Qian <jqian@schipul.com>
Date:   Fri Oct 5 17:19:14 2012 -0500

    Handling payment process for papal PDT and IPN.

commit f15d9c6ff8a59672df12dabfb233503b6ec874bb
Author: Alex <aragsdale@schipul.com>
Date:   Fri Oct 5 14:14:11 2012 -0500

    Directories: added notice says Directory in the title.

commit 1ff7a3a56790b137a627d54e18a93ec0f0bf0e5f
Merge: 6e25cff 54f2ac3
Author: Jenny Qian <jqian@schipul.com>
Date:   Thu Oct 4 16:31:00 2012 -0500

    Merge branch 'master' of github.com:tendenci/tendenci

commit 6e25cff9110068280cbc5520a5da5b33d96cccdb
Author: Jenny Qian <jqian@schipul.com>
Date:   Thu Oct 4 16:30:23 2012 -0500

    Fix the get_template_list to display templates when using S3.

commit 54f2ac37f81032563389676ac199dd70802c5e2e
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 4 14:36:11 2012 -0500

    Write out the file locally and only copy to S3 if necessary. The save to S3 reads from the local file, so we need to save it first.

commit cd44a02a6797d3137f7e8997a3adabec52030f6b
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 4 14:17:19 2012 -0500

    New setting USE_S3_THEME to determine if the theme should be read and cached from S3 or read locally. Pep8 some of the files involved.

commit 82945ec4f7f8b9fa22c601a7b599ef31ac315306
Author: Jenny Qian <jqian@schipul.com>
Date:   Thu Oct 4 12:47:16 2012 -0500

    Start integrating paypal payment standard.

commit 6786c31f57f7ed3a1d79c4e8b968d39951d7e084
Author: jmoswalt <jmoswalt@gmail.com>
Date:   Thu Oct 4 10:05:08 2012 -0500

    Reactivating the REMOTE_DEPLOY_URL",tempfile algoliasearch-django,"
Added files_list tag to be pushed out to the site.
Updated files search page to include filter for Group.",3,Web Framework,Web Framework,False,False
7432,pierky/arouteserver,bef92483e671afd48085191d4b07f33c416b7016,2018-06-04 11:37:39,requests,six,Use requests instead of urllib behind six,six requests,"
Use requests instead of urllib behind six",4,HTTP Clients,HTTP Clients,False,False
7437,josephbestjames/airtable.py,3a501579094bb0fbd1cf30a48a2228eedf42914c,2021-04-02 21:19:38,requests-mock,requests,Use requests_mock to clean up tests.,requests requests-mock,"
Use requests_mock to clean up tests.",3,HTTP Clients&Testing,HTTP Clients,False,False
7438,maxmind/GeoIP2-python,fa605447bbc2665fc9e568ff870cfd2c251b6d89,2015-04-17 16:23:21,requests-mock,requests,Replace httpretty with requests_mock,requests requests-mock,"
Replace httpretty with requests_mock",3,HTTP Clients&Testing,HTTP Clients,False,False
7457,rafalp/Misago,5693d86046fa25137c6a56d157e13d9c90cffc57,2017-03-05 17:03:12,algoliasearch-django,importlib,fix #749: moved module imports from string to django util,importlib algoliasearch-django,"
fix #749: moved module imports from string to django util",3,Web Framework,Web Framework,False,False
7460,rafalp/Misago,5693d86046fa25137c6a56d157e13d9c90cffc57,2017-03-05 17:03:12,django,importlib,fix #749: moved module imports from string to django util,importlib django,"
fix #749: moved module imports from string to django util",3,Web Framework,Web Framework,False,False
7465,pytest-dev/pytest,042d12fae6e03f97ac25311504f6697154eff08e,2020-12-19 12:52:40,pathlib,py,doctest: use Path instead of py.path where possible,py pathlib,"
doctest: use Path instead of py.path where possible",3,Filesystem,Filesystem,False,True
7466,randovania/randovania,e3bbc3f0825ef840521d78d5b6e09cf07d1b715c,2018-12-01 18:24:22,pathlib,py,Use pathlib instead of py.path in tests,py pathlib,"
Use pathlib instead of py.path in tests",3,Filesystem,Filesystem,False,False
7483,mozilla/addons-server,b90bf139226651bc7bfeaa117c63726c1510dafe,2017-07-01 00:57:31,django,jingo,"Merge pull request #5791 from mozilla/1573-implement-django-jinja

Loads of clean-ups along the way.

Fixes #1573

* Moves all helpers modules to templatetags.jinja_helpers - there are a few things in there that aren't jinja related so there'll be a follow-up to split that later
* Update Jinja2 to 2.9.6
* Add django-jinja 2.3.1
* move some jingo-minify helpers to olympia.lib to avoid any jingo imports
* unified |f and |fe helpers into one |format_html helper that always escapes everything unless the input is already |safe

* Move helpers, add requirements, fix imports.
* Give backend a proper name
* Port f and fe filters from jingo
* Make start porting reviews jinja helpers module, make first test pass
* Get a handful more tests working, get rid of get_env, more and more jingo calls.
* Disable extension matching, render .txt templates too, fixes more stats tests
* Fix csv_header template to produce some reasonable and csv parsable
* Set trim_blocks to be compatible with jingo
* Unify |f and |fe into one |format that simplifies escaping rules. Update tests.

I think having one unified |format filter is beneficial, especially
given that our current escaping rules were kinda complicated and allowed
for seriously dangerous combinations even with autoescape activated.

Now everything passed as an argument to |format is explicitly escaped
unless marked as |safe, there's no way around that anymore.

* Naive first version using |format instead of |f and |fe, might need more review.
* Fix format for unicode strings
* Rename |format to |format_html
* Move nl2br_xhtml to amo.jinja_helpers, use it in all our templates.
* Move datetime filter to our code temporarily, fix mocks, fix recursive error
* Move csrf call to django_jinja csrf_token tag, fix addons templatetags
* Fix |class_selected usage, fix render_with to get registered
* Remove hack from zadmin, fix zadmin templatetags
* Fix user delete photo test, don't rely on proper context updates that happen in order.
* Fix more nl2br tests
* Fix detail page escape, django escapes differently than jinja
* Remove context from edit_review_reply_form
* Fix date created format filter usage
* Remove templates setting user, fix can_review
* Fix collect_add_widget to not inherit the global context
* Remove happy unicode client
* Cleanup can_review, add tests
* Fix tests, django use different html character for double quote escaping
* Switch to firefox latest to check ui-tests
* Cleanup and fix do_truncate
* Remove jingo, copy jingo-minify helpers that depend on jingo to our lib for now
* Rename nl2br_xhtml -> nl2br
* Jinja 2.9 compat for reviews truncate filter
* Don't use TEMPLATE_DEBUG
* Set default value for q, happens on index page.
* Fix jinja2 formatting with newstyle gettext",jingo django,"
* Give backend a proper name
* Port f and fe filters from jingo
* Make start porting reviews jinja helpers module, make first test pass",9,Web Framework,Web Framework,False,False
7600,opsdroid/opsdroid,fabe42b9e12ebe9eba2278fffa4e815ae0967b82,2021-01-17 18:11:40,typing,pytest,"Use pytest marks to add responses to the mock_api fixture (#1706)

* Implement a pytest fixture which can add responses to mock_api

* Move all fixtures to fixtures.py

* Fix the github tests

* Use Path to distinguish between response path and response

* Create a context manager for running opsdroid

* Make a fixture to get a non-running mock_api

* Document purpose of fixtures vs conftest files

* Document bound_address fixture

* Use list comprehension instead of list(filter())

* Use string constants in tests

instead of re-creating the strings over and over.

* Satisfy doc-string and PyCharm linters

* use aiohttp session fixture

* Update opsdroid/testing/external_api.py

* Update opsdroid/testing/utils.py

* Clarify docstring for mock_api_obj

Co-authored-by: Jacob Floyd <cognifloyd@gmail.com>",pytest typing,"
* Use string constants in tests",3,Testing,Testing,False,False
7602,tiangolo/meinheld-gunicorn-docker,9157f88d74b7623ce645f660cd8437a613a2e45b,2020-05-04 15:42:33,typing,pytest,":truck: Refactor build setup (#14)

* :heavy_plus_sign: Move to Poetry from Pipenv

* :truck: Centralize and reuse config and files

* :wrench: Update configs and scripts

* :construction_worker: Add GitHub Actions for CI

* :fire: Disable Travis

* :wrench: Add mypy configs

* :white_check_mark: Update tests to use new setup

* :memo: Update README",pytest typing,"
* :white_check_mark: Update tests to use new setup",3,Testing,Testing,False,False
7604,privacyidea/privacyidea,b647e63e8630189c6dc6173233903cc4ba0a60ae,2021-01-13 16:13:34,cryptography,ecdsa,"Use cryptography for ECDSA operation

The `ecdsa` package is not suitable for secure applications
(https://github.com/tlsfuzzer/python-ecdsa#security).
Even though this package is used only for verifying the U2F signature we
can utilize the `cryptography` package for ECDSA operations.
Since it already handles the DER encoding/decoding of the signatures, we
can also remove some wrapper code.

Fixes #2410",ecdsa cryptography,"
Use cryptography for ECDSA operation",3,Crypto,Crypto,False,False
7617,python-telegram-bot/python-telegram-bot,e160355190fed8f0d11561caf0d2754d37451940,2016-04-27 22:41:32,future,urllib2,"remove unused imports, use future for urllib imports",urllib2 future,"remove unused imports, use future for urllib imports
",3,HTTP Clients,HTTP Clients,False,False
